{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/google.jpeg","path":"images/google.jpeg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/xiong.png","path":"images/xiong.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/yellow.jpg","path":"images/yellow.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/one.gif","path":"images/one.gif","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/clicklove.js","path":"js/src/clicklove.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/linus.png","path":"images/linus.png","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"d139a3b623b2e40bbff5c96ad44adf7dbdbc5be1","modified":1565411746772},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1565411746772},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1565411746772},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1565411746773},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1565411746773},{"_id":"themes/next/.gitignore","hash":"3558a8b174618c7a643aceb13233edd729813f9a","modified":1565411746773},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1565411746773},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1565411746774},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1565411746774},{"_id":"themes/next/README.md","hash":"7958c3f70b2133b479ddaf525cc4b6d87a37e04a","modified":1565411746775},{"_id":"themes/next/_config.yml","hash":"8601d2d26261aee3871d688cfe0d036e49da14e2","modified":1578805457096},{"_id":"themes/next/bower.json","hash":"9bc3900396a375f817db47d147bb6d207c661678","modified":1565411746775},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1565411746776},{"_id":"themes/next/gulpfile.coffee","hash":"23bd9587807edc4dbecb5c5a29ab96ade24458b5","modified":1565411746786},{"_id":"themes/next/package.json","hash":"0284636ddd0e06ae593f4887819f3a35b08c1370","modified":1565411746824},{"_id":"source/categories/index.md","hash":"62d442f20050b81624b27437132ab750f197cbc4","modified":1565411746770},{"_id":"source/_posts/2019-05-08-01-算法.md","hash":"4891b81c72ad50b8ed00ca60bd34c3482f8bf085","modified":1565411746720},{"_id":"source/_posts/2019-05-08-使用vue-cli搭建项目.md","hash":"a7588ecf0072d27ceb755cc1b14cccae344767ad","modified":1578709268625},{"_id":"source/_posts/2019-05-10-02-软件工程-.md","hash":"5efecfc26506dfd2e06d6864762167704bfa4390","modified":1565411746721},{"_id":"source/_posts/2019-05-09-01-软件工程.md","hash":"013a6d633ca260d65d80f9879e65e88f6ceb01d6","modified":1565411746720},{"_id":"source/_posts/2019-05-13-04-软件工程.md","hash":"685c9a273fe4745e6192aaee8a8ee68adaa0e854","modified":1565411746723},{"_id":"source/_posts/2019-05-15-05-软件工程.md","hash":"e9a17ec1d4058f8cdf78e53596d7c16f1e1d87bc","modified":1565411746723},{"_id":"source/_posts/2019-05-11-03-软件工程.md","hash":"18d181142bbdabc1d0fd97b483505851f1f857b4","modified":1565411746723},{"_id":"source/_posts/2019-05-16-06-软件工程.md","hash":"a0c7f2eb1fcd704edd34cbad6d751b19aa215337","modified":1565411746724},{"_id":"source/_posts/2019-05-21-制作Windows操作系统工具盘.md","hash":"fd46dd09f785638085e20114eb7f652e95cd3f54","modified":1565411746724},{"_id":"source/_posts/2019-05-21_Vagrant.md","hash":"d2aa364563ff16f2b5418d1988f73306e6c0e359","modified":1565411746725},{"_id":"source/_posts/2019-05-22-07-软件工程.md","hash":"dfc8b46ddf4b86bec402a1bcff061b8497e73cfa","modified":1565411746725},{"_id":"source/_posts/2019-05-23-08_软件工程.md","hash":"0292173fb7d4c3fc502119430369409efeb851ae","modified":1565411746725},{"_id":"source/_posts/2019-05-25-09-软件工程.md","hash":"608728cb261fbf675a9a015d6ff5649be34279dc","modified":1565411746726},{"_id":"source/_posts/2019-06-01-Next添加分类和标签.md","hash":"a717f32e8a9df46b0b6cd7e36dd405bb6af23c91","modified":1565411746726},{"_id":"source/_posts/2019-06-01-hexo-insert-images.md","hash":"f8055ad993e47ccba23f38cabe41a87b4b907712","modified":1565411746726},{"_id":"source/_posts/2019-06-04-01-CRM资料收集.md","hash":"e89c89cf8bc9cdee6ff9105d881bb15505d70c3b","modified":1565411746727},{"_id":"source/_posts/2019-06-04-hexo添加一些小玩意.md","hash":"504a761486894380fc235e0a6518763d5f3f18a0","modified":1565411746727},{"_id":"source/_posts/2019-06-08-冒泡排序法.md","hash":"b3f796a5481580460f7c59f12207a8a1171408b1","modified":1565411746727},{"_id":"source/_posts/2019-06-08-插入排序法.md","hash":"6e897b06ef39487461204c587869497bb6156807","modified":1565411746730},{"_id":"source/_posts/2019-06-11-SSM整合配置文件.md","hash":"4ccaf8fd41066be438dca1bdabfd79142da69731","modified":1565411746732},{"_id":"source/_posts/2019-06-12-Maven.md","hash":"53fe77c78184ee81b858af6e91f246d21f8c0fda","modified":1565411746733},{"_id":"source/_posts/2019-06-12-Maven整合SSM.md","hash":"413014b2b092f76bf4404d61db83ad896d23b812","modified":1565411746734},{"_id":"source/_posts/2019-06-12-web-xml文件头声明.md","hash":"a832e3fa2690dd6fed7f6bb3ad6bea2ed2dd2e76","modified":1565411746735},{"_id":"source/_posts/2019-06-12-选择排序法.md","hash":"3606fa31fc23499b0a5ad63025f0056235288127","modified":1565411746735},{"_id":"source/_posts/2019-06-19-Shell基本命令.md","hash":"834ce664b7eabeb4cccd62534ba0dbc94d47ddc2","modified":1565411746739},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建.md","hash":"6d2e66866bf994d45e427cad796904613a90d2f1","modified":1581256490159},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行.md","hash":"d4e5649bac0e6884aea5478edd5037b61668b319","modified":1565411746751},{"_id":"source/_posts/2019-06-24-GitFlow工作流.md","hash":"ba65ca892f0f1a132b98b1b2e34a9eb72156ebb1","modified":1565411746758},{"_id":"source/_posts/2019-06-25-Git常用教程.md","hash":"b4c7ef3d7c963a4ad633df481d5730c2fe49fa1f","modified":1565411746759},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02.md","hash":"e9bd64fdd50acb4b41493426c56c7e8535ff9213","modified":1565411746760},{"_id":"source/_posts/2019-11-20-01-vue的入门.md","hash":"df3508608a599610f5ea9ca142f5bea005a5fa92","modified":1578709268625},{"_id":"source/_posts/2019-11-20-02-vue的class属性绑定.md","hash":"f0a5ad21a03c1f6a5a7da88e1faa942837ce9f47","modified":1578709268635},{"_id":"source/_posts/2019-11-20-03-vue常用属性.md","hash":"b57dd53d184067b412541961b2f6b5eb0a654197","modified":1578709268635},{"_id":"source/_posts/2019-11-20-04-vue组件和路由.md","hash":"3a66e92da3a11ba6753fb27f53a6d4b8d2790855","modified":1578709268635},{"_id":"source/_posts/2019-11-20-05-webpack.md","hash":"64bee18c9e23b8c7992482704d8edf4e9bd05352","modified":1578709268635},{"_id":"source/_posts/2019-11-20-06-vue.md","hash":"9b61881449f19cf4aff9d24472e814b9d8982fc2","modified":1578709268635},{"_id":"source/_posts/2019-11-20-07-loader加载器处理css样式.md","hash":"074f3f5e6e4eaac16a8f454740d9cfb38dd1a644","modified":1578709268635},{"_id":"source/_posts/2019-11-20-vue注意事项.md","hash":"bad404d18a0ef620681396b1092a1496b9dfb59d","modified":1578709268635},{"_id":"source/_posts/2019-12-31-activiti入门01.md","hash":"402ba6398b1d506c76c05ce5d7df7a776e52cfb2","modified":1578709268635},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量.md","hash":"c495c1849e605ac9fd2efc9e804506bff90e286d","modified":1578709268635},{"_id":"source/_posts/2020-01-02-activiti-组和网关.md","hash":"6082994d7105fe1bc26a1d64e75c53a79b9c14ae","modified":1578709268645},{"_id":"source/_posts/2020-01-02-activiti入门02.md","hash":"5adf6a1b9fcfd9a2636084ec960c0f946d0712e0","modified":1578709268655},{"_id":"source/_posts/2020-01-02-git配置多个ssh-key.md","hash":"e40e15005daf1156ae4cea5876cf997e3caf97ac","modified":1578712673274},{"_id":"source/_posts/2020-01-12-Vue中使用json-server.md","hash":"4c0f6d85450f39537d9807fddcdd1c32bd1e26f9","modified":1578803126246},{"_id":"source/_posts/2020-01-12-json-server.md","hash":"c92d811f18be31169a5d448a5e3ccfe9006529d4","modified":1578802840182},{"_id":"source/_posts/2020-02-02-01-Nginx的安装和启动.md","hash":"1d57af45baf92bb2d327fce9d401287d42f1cd98","modified":1581258036225},{"_id":"source/_posts/2020-02-02-02-Nginx做代理.md","hash":"807e84083ac0f64fd1e4b74bab8642adae884f7e","modified":1580623319850},{"_id":"source/_posts/2020-04-01-01-Mybatis逆向工程搭建.md","hash":"edced8fda7eaf7a2d3f0f76297b2b63898ca9902","modified":1585745711028},{"_id":"source/_posts/2020-04-01-01-redis搭建.md","hash":"2cb88e741ad336d78197fc51fa535ddbfd1f7065","modified":1585746322512},{"_id":"source/_posts/2020-04-01-02-Mybatis逆向工程使用.md","hash":"5b426213f3bd5cceecb4d7e85b8eae1e78ea8dfb","modified":1585745835906},{"_id":"source/_posts/2020-04-01-02-redis使用.md","hash":"5b2b8f24a97acd317f32a51339a4de354e4e919f","modified":1585746232343},{"_id":"source/_posts/2020-04-01-Pagehelper.md","hash":"61315f013231dd98ecff60bb043879172fd3e2dd","modified":1585745331495},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS.md","hash":"1105952a592b51149732383a518ab7c2d9ba66a7","modified":1594740801156},{"_id":"source/_posts/2020-07-14-02-Java操作ActiveMQ.md","hash":"d1f05ce747f4c58be6cea8c0d990ea30d4529cf3","modified":1594741109270},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解.md","hash":"a702f699fbf74ec17cd82f51231a8b5a75a2f63c","modified":1594741385457},{"_id":"source/_posts/Ubuntu-Install-Oracle.md","hash":"282658af7c226e6eec3a6777826d3f8c77b3420c","modified":1565411746764},{"_id":"source/_posts/Ubuntu18-04-VM.md","hash":"ccb4e2646b9fd6fdd84c9f113450e77219b1b4aa","modified":1586009499635},{"_id":"source/tags/index.md","hash":"c7e20401b22cf8b067dd5af95686f5d29e218d1b","modified":1565411746771},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1565411746776},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"0d2f22ea09dd1ef63c66164e048d8239d2ccb2b8","modified":1565411746777},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1565411746777},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1565411746778},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"212a36d57495990b5f56e46ca8dce1d76c199660","modified":1565411746778},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1565411746777},{"_id":"themes/next/docs/MATH.md","hash":"026d2cff73c22a30ea39c50783557ff4913aceac","modified":1565411746779},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1565411746779},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1565411746779},{"_id":"themes/next/languages/de.yml","hash":"9e524b2bdfb848504b93a51c5650e76bba5fa9e0","modified":1565411746786},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1578709268665},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1565411746787},{"_id":"themes/next/languages/es.yml","hash":"1752429687861b5cedd063c6ebe5dacefbe7e5a7","modified":1565411746788},{"_id":"themes/next/languages/fa.yml","hash":"cd41db832af5e399590b70a5227cfe0b0e98e101","modified":1565411746788},{"_id":"themes/next/languages/fr.yml","hash":"7005c2b42c2c6e82bd7a1be5cc2f443b5fc79105","modified":1565411746789},{"_id":"themes/next/languages/id.yml","hash":"1c4868837f5109f1df863b04fe627352c31d404b","modified":1565411746789},{"_id":"themes/next/languages/it.yml","hash":"b30ff77ad8044e3b021a3b09187cd377dc789fd2","modified":1565411746789},{"_id":"themes/next/languages/ko.yml","hash":"20bfaa7600d35235996c18e5c13dcef89c119626","modified":1565411746790},{"_id":"themes/next/languages/ja.yml","hash":"1dc35e436da6214cdb3c2ff44bc4a06d0be5b9a0","modified":1565411746790},{"_id":"themes/next/languages/nl.yml","hash":"1c44b3cb2f817808607f3bf6ef47f58ce7599995","modified":1565411746790},{"_id":"themes/next/languages/pt-BR.yml","hash":"08b913a5cf4cc160083069cb4dfb2d66eecd1218","modified":1565411746791},{"_id":"themes/next/languages/pt.yml","hash":"8ddac820e2c17b484b56c0da8881e142b10e221b","modified":1565411746791},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1565411746791},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1565411746792},{"_id":"themes/next/languages/uk.yml","hash":"1eb59e581568da9a81d6e20541b4ada5fc1c55c0","modified":1565411746792},{"_id":"themes/next/languages/vi.yml","hash":"ba7aff8f88e03f69a0acf7f1b90ee03e077ee88e","modified":1565411746792},{"_id":"themes/next/languages/zh-CN.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1565411746792},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1565411746793},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1565411746793},{"_id":"themes/next/layout/_layout.swig","hash":"8b3fa3e20c49f4e7fc05e6f64671fb99c998919a","modified":1565411746794},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1565411746822},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1565411746822},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1565411746823},{"_id":"themes/next/layout/page.swig","hash":"d8a6cbf6f611c5d68d5da430cb6dc7010ff2c7e0","modified":1565411746823},{"_id":"themes/next/layout/post.swig","hash":"f74929fd792541916eb25c2addfb35431be071ba","modified":1565411746823},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1565411746824},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1565411746824},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1565411746826},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1565411746826},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1565411746917},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1565411746917},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1565411746917},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746895},{"_id":"source/_posts/2019-06-11-SSM整合配置文件/ssm.png","hash":"b907806d70658a8d0fa634cedbda0af5fdb86acc","modified":1565411746733},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/01.png","hash":"0ed31593cb59b71f2644fb2bd1c56163f1114447","modified":1565411746740},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/02.png","hash":"abadcd5c8d1c0bf59ecd5471aad8acf59db56877","modified":1565411746740},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/03.png","hash":"bf259c2810488b4edfeffd1c5345be5fe0580e24","modified":1565411746741},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/04.png","hash":"f10ab705598c12c2a086bdc24e78319e2a4f42f2","modified":1565411746741},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/05.png","hash":"abd1f7b8cd562721803f796b60f32a2c4900f47a","modified":1565411746742},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/06.png","hash":"bd479648fd0cc51aa864b82cc45f4eef5a310015","modified":1565411746742},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/08.png","hash":"ddd8665b6b63c3e035cc60b058b04920e8461535","modified":1565411746743},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/07.png","hash":"999239deb6f19e80abe4ee411e9fa5349c82a560","modified":1565411746743},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/09.jpg","hash":"8497e7c392f793afd25a8566e40ddb5eba847940","modified":1565411746744},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/10.jpg","hash":"aaca1a74732afa5ab3f2851e2e40e6316391539b","modified":1565411746744},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/11.jpg","hash":"800c06029eda274c3ff48bd8185a843430da0ae3","modified":1565411746745},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/12.jpg","hash":"6f384fbd182c298e3a8ad4b918de45f97352aec4","modified":1565411746745},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/13.png","hash":"0947b6f7cd2832e689df192003a58fa2206d115a","modified":1565411746745},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/14.png","hash":"38760fdfe5f059097cbdee3b74d91937ea1f0ea7","modified":1565411746746},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/16.png","hash":"5da1b716f696b823142deaf805a8c7d3a787e25e","modified":1565411746747},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/17.png","hash":"31ad564c21a71009805abe78fc3eaac0249a3f58","modified":1565411746747},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/18.png","hash":"86575d69ecc0b9b3ef3524c570db13e68c2ce87d","modified":1565411746747},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/19.jpg","hash":"4c24f72ccdb5d24f559b4518ab87b66ac05fff67","modified":1565411746748},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/20.jpg","hash":"bc3a5f45d2a54d29d5712d4e79f50bbd33584f03","modified":1565411746748},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/21.png","hash":"a9dc1bf4b6690fdc909a6decbb7dc2371ad7e231","modified":1565411746749},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/22.png","hash":"a7b79f658a8d815cb17b7f3f308fa87933083ba6","modified":1565411746749},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/23.png","hash":"098d9e0f1f1a0edcb77cf918fe4816a8a622d017","modified":1565411746749},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/24.jpg","hash":"2c29c1cf98ec5ef14410e9e3f5cc013f9ce51956","modified":1565411746750},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/25.png","hash":"1c2ff3fc415afc7347db6bd60cd037032555c0d6","modified":1565411746750},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/26.jpg","hash":"eafe53722d9cc2b69e65b08286afb4111182161d","modified":1565411746751},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/27.png","hash":"bcdcf10a5d1988f6537d9cf207fd92933ce80e81","modified":1565411746751},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/01.png","hash":"52ef4c482bb8a9e3cff8fa697efdfbad30b1c80d","modified":1565411746752},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/02.jpg","hash":"8849f23e143c70e43bb5ff106d114162200cc47a","modified":1565411746752},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/03.png","hash":"30887d66389ed2757a36cd1fc702c9470db2ea67","modified":1565411746753},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/04.jpg","hash":"e4701122aec071c1bc87a9c270f7fabe265f17a4","modified":1565411746753},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/05.jpg","hash":"854d69ee4fb4054e9473bd0f3ecc6deef52467d4","modified":1565411746754},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/06.jpg","hash":"2c863009a121a8259cb530f0d27c729d4dba10fb","modified":1565411746754},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/07.png","hash":"14deeffd04d99c8fa7216a45dbdccfeda8f74784","modified":1565411746755},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/08.jpg","hash":"b3eeddcf4fbbc271f12321b66f3c39fb67547d23","modified":1565411746755},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/09.jpg","hash":"bf87fdceebe9b47ef04d66c21233da8b951ee9f8","modified":1565411746755},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/10.jpg","hash":"e85aed51fc19919457f322487e8f047585663fa6","modified":1565411746756},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/11.png","hash":"62f0ee993b59834f99178b4ca382f8d5692c0a3c","modified":1565411746756},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/12.jpg","hash":"4b7bf1a8c782a60df137141c1d148c4795d16706","modified":1565411746757},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/13.png","hash":"fb5759f9bac8b3375ef02e595b1ba11535c1d2dd","modified":1565411746757},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/14.png","hash":"0a4db5b8443c174b059186c23520deb3105e0109","modified":1565411746757},{"_id":"source/_posts/2019-06-24-GitFlow工作流/01.png","hash":"656034c75df7fe0e075b2951680f1848156de333","modified":1565411746758},{"_id":"source/_posts/2019-06-24-GitFlow工作流/02.png","hash":"7d4c80d91a782df530d388cfabd886bb559e2174","modified":1565411746759},{"_id":"source/_posts/2019-06-24-GitFlow工作流/03.png","hash":"c785d54d3d3d5d9e77041e1c5e9d49af0e21608b","modified":1565411746759},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/01.png","hash":"6a687fa050c93d126fd92e32265e0cf435bef929","modified":1565411746760},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/02.png","hash":"98fb1a3aad3a58bfb3caba100f269918d1b04334","modified":1565411746761},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/03.png","hash":"6e4264e184ff7548b2ffaf87368bf6818480bb7c","modified":1565411746761},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/04.png","hash":"14d7e146c8f18ea9738b364fdbe9dfc3cfd44ddb","modified":1565411746762},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/05.png","hash":"30ab587aea4f24dd249656a6899585493efa4b0f","modified":1565411746762},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/07.png","hash":"ddc54e5942bea4a7cfa14474c68e831f154df22c","modified":1565411746764},{"_id":"source/_posts/2019-11-20-05-webpack/01.png","hash":"b1e25c623c88d975efb7211b8e14a4c87b55ba86","modified":1578709268635},{"_id":"source/_posts/2019-11-20-05-webpack/02.png","hash":"634072345dbb96cda90695e668d116114d482fc9","modified":1578709268635},{"_id":"source/_posts/2019-11-20-05-webpack/03.png","hash":"67bdb14a5d598a91905beee613617967b83633b4","modified":1578709268635},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/listener.jpg","hash":"2642dae95474a641590e3eb780176344efafa3bb","modified":1578709268635},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/mylistener.jpg","hash":"8f3d54c37516370c8f5650ed9c4c43eceee81cbc","modified":1578709268635},{"_id":"source/_posts/2020-01-12-Vue中使用json-server/jsonServer.png","hash":"13b2db74af99ef33a8e4f71d604eb981834c001c","modified":1578802897434},{"_id":"source/_posts/2020-04-01-01-Mybatis逆向工程搭建/generator.png","hash":"dbc225110a709d1f9cf9da040b22923a680a1d31","modified":1581052266825},{"_id":"source/_posts/2020-04-01-01-redis搭建/rediscluster.png","hash":"c108467a913a07abaec8d959e8c13b5fb8aa659d","modified":1581844122536},{"_id":"source/_posts/2020-04-01-01-redis搭建/redisserver.png","hash":"d5fde82705836c2e8b5e5528243aa506f3e38764","modified":1581258394282},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/JMS的API图解.png","hash":"100b7ef6fd8325568e1e6135a12787271e9252d3","modified":1586006845258},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/发布-订阅模式.png","hash":"9639ca8784c174b731c4bebb401398aa5b39156d","modified":1586004236027},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/点对点模式.png","hash":"281469d58e76271c113637ad21aa2f57550e2acd","modified":1586004201029},{"_id":"source/_posts/2020-07-14-02-Java操作ActiveMQ/queue01.png","hash":"2f1ec038cdc36698c33cdffdee8eb515b283d0d4","modified":1586091766426},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解/db-activemq.png","hash":"f63ca750de4c4c62b27aa5ae3964af853f27ec68","modified":1586189049644},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-数据库连接池.png","hash":"04557da3b28d6d45e512fd091fde8b13129313a4","modified":1586188702004},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-配置.png","hash":"5f5ca3939a7e9d5c467558ebfd77fd39d8cb1fac","modified":1586188793466},{"_id":"source/_posts/Ubuntu18-04-VM/01.jpg","hash":"7b97b9361817f22ce93bc620795e35e234663fc1","modified":1565411746767},{"_id":"source/_posts/Ubuntu18-04-VM/03.jpg","hash":"87ffe7f53aa45113c389b5f0a315c37730883a2a","modified":1565411746768},{"_id":"source/_posts/Ubuntu18-04-VM/04.jpg","hash":"cd278d9ee2719bfac8cafc4438523a1cd9cd75ca","modified":1565411746768},{"_id":"source/_posts/Ubuntu18-04-VM/06.jpg","hash":"75218c59b7399a1fb3226838f61a38245b73f8af","modified":1565411746769},{"_id":"source/_posts/Ubuntu18-04-VM/05.jpg","hash":"f8c7cec025e3265c990f4b7b7bda12aa83066725","modified":1565411746769},{"_id":"source/_posts/Ubuntu18-04-VM/07.jpg","hash":"394fe6c02130f6f0d0a4eb341cf33b26a3cb04ed","modified":1565411746770},{"_id":"source/_posts/Ubuntu18-04-VM/aaa.jpg","hash":"09333d7d2d0d101ee0f32073b20e1067cde319c7","modified":1565411746770},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1565411746780},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1565411746780},{"_id":"themes/next/docs/ru/README.md","hash":"4d7ef717d0b57288e606996ee56c20ffd59d5a99","modified":1565411746781},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1565411746782},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"caa624092175d44e3d3a8c6ca23922718da2354c","modified":1565411746782},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"b218e30df4126b6adc87684775ac4c86ea7f7958","modified":1565411746782},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bc43beb3af74d64fbd3920539d08861e4cadb9a0","modified":1565411746783},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1565411746783},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1565411746784},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"115ffbde2b3ce01ef1f8c2b3833e6f6794650132","modified":1565411746784},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"83feca62190abcca0332915ffe0eefe582573085","modified":1565411746785},{"_id":"themes/next/docs/zh-CN/README.md","hash":"cdd7a8bdcf4a83ff4c74ee6c95c6bcc0b8c1831c","modified":1565411746785},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1565411746785},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1565411746794},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1565411746794},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1565411746794},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1565411746796},{"_id":"themes/next/layout/_macro/post.swig","hash":"2f07f89f935d48f177cccfe09548d32ec6e5c03f","modified":1565411746796},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"480d93619479dcfcbec6906803bb38b2dfbeae53","modified":1565411746797},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5352f96f4544c1520babf1cec7b44ddf2f8057b3","modified":1565411746797},{"_id":"themes/next/layout/_partials/footer.swig","hash":"589f545333e21a8c7823bce89ab45cf1eb7db6e2","modified":1565411746797},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1565411746798},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1565411746802},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1565411746802},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"50be1762f60222379a8bef5e42ab1a0f3872b7ff","modified":1565411746807},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1565411746807},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"012e3ece672cc3b13d5e032139f328d3426d7d65","modified":1565411746807},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1565411746808},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1565411746810},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"83470eb401f78f4683907c48ad6760b90730daa3","modified":1565411746810},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1565411746814},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1565411746814},{"_id":"themes/next/layout/_third-party/chatra.swig","hash":"eefb68b69b4b0ed558ee0324ccd711990059b20d","modified":1565411746815},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"9be7c2c9cef63006866d1232c5289901e46be7ed","modified":1565411746817},{"_id":"themes/next/layout/_third-party/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1565411746819},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1565411746819},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"c28f9dc96ab735daeb7f599f86470aa5a83c03cf","modified":1565411746819},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1565411746819},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5db80e8d7ea3f29e998320f79508f7e14342a33c","modified":1565411746820},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1565411746820},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"2398e5cd0cb466953b6e7a42c2b2caddebf3c348","modified":1565411746820},{"_id":"themes/next/layout/_third-party/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1565411746822},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1565411746825},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1565411746825},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1565411746825},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1565411746827},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1565411746827},{"_id":"themes/next/scripts/tags/exturl.js","hash":"d605918cf819887e9555212dbe12da97fd887a0b","modified":1565411746827},{"_id":"themes/next/scripts/tags/full-image.js","hash":"fcb41c1c81560ed49dc4024654388a28ee7d32b0","modified":1565411746828},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"598220fa92ff3540dcab74f633ba41523daa8364","modified":1565411746828},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1565411746829},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1565411746829},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1565411746829},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1565411746829},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1565411746830},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1565411746830},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1565411746830},{"_id":"themes/next/source/css/main.styl","hash":"e010ec8ac73268a0f137204c89e0080ab8d59b3d","modified":1565411746894},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1565411746895},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1565411746896},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1565411746896},{"_id":"themes/next/source/images/avatar.jpeg","hash":"c9194f7a4d4eac52bf5687d6a30c7591671db44e","modified":1565411746896},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1565411746897},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1565411746897},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1565411746897},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1565411746898},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1565411746898},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1565411746898},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1565411746899},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1565411746899},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1565411746899},{"_id":"themes/next/source/images/google.jpeg","hash":"3bc23e83fbb0e31298ff8cdece5b6fea0d5f8cd4","modified":1565411746900},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1565411746901},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1565411746902},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1565411746903},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1565411746903},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1565411746904},{"_id":"themes/next/source/images/xiong.png","hash":"da072df47dedd76ef8f8bde85bd6babf36d913c5","modified":1565411746905},{"_id":"themes/next/source/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1565411746904},{"_id":"themes/next/source/images/yellow.jpg","hash":"04ff801ab856aa4cebb68ea64c5c9b644f9a6afa","modified":1565411746906},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1565411746906},{"_id":"themes/next/source/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1565411746906},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1565411746907},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1565411746907},{"_id":"themes/next/source/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1565411746908},{"_id":"themes/next/source/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1565411746908},{"_id":"themes/next/source/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1565411746908},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1565411746910},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1565411746910},{"_id":"themes/next/source/js/utils.js","hash":"81913c5f75d0949443833cf4269ad63bd7f9be6f","modified":1565411746911},{"_id":"source/_posts/2019-06-12-Maven/maven.jpg","hash":"1d6cdef64233e828098f1cb5edc92105c194a162","modified":1565411746734},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/15.jpg","hash":"2f04309cd3c1c883e7117331fe2db5249d9a6659","modified":1565411746746},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/06.png","hash":"41353d229ee258bb10d92bb7632d48ee321ef0bb","modified":1565411746764},{"_id":"source/_posts/2019-12-31-activiti入门01/holiday.jpg","hash":"e5a794e1c7c9816676b1a42b092dfcbe165dfe57","modified":1578709268635},{"_id":"source/_posts/2019-12-31-activiti入门01/persion.jpg","hash":"43838069bfdad32eb6dca8086c16d816f1a2c3e2","modified":1578709268635},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/processvariable.jpg","hash":"eccf20f878648591017d5d1733be6a60d8273fbc","modified":1578709268645},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/uel.jpg","hash":"72c7fae8d2ff9e06ead3dcd7000844547a58c380","modified":1578709268645},{"_id":"source/_posts/2020-01-02-activiti-组和网关/candidate.jpg","hash":"5587e390dbf8a55fa449850f9d808c507b2a55b9","modified":1578709268645},{"_id":"source/_posts/2020-04-01-01-Mybatis逆向工程搭建/springbootgenerator.png","hash":"62209b85ea5010347d94ab6755b80246b0e88fae","modified":1583148531436},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/activemq.png","hash":"7de13b723504fa240742317189dc3beb513723f3","modified":1586016283523},{"_id":"source/_posts/Ubuntu-Install-Oracle/oracle.png","hash":"ba48bee5fdaeab798c28336431972d1481d0906e","modified":1565411746765},{"_id":"source/_posts/Ubuntu18-04-VM/02.jpg","hash":"60c1b6cd0fe6aa32371d2a2c4c2bee983cf2635c","modified":1565411746767},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746864},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746864},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746864},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746866},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746893},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565411746894},{"_id":"themes/next/source/images/wechat.png","hash":"318363f3bedd376b0d612d44f862e3b00ef7ba3d","modified":1565411746905},{"_id":"source/_posts/2020-01-02-git配置多个ssh-key/addsshkey.jpg","hash":"b6e09e5d7a81c41604af9833a11f818aeb37595e","modified":1578709268655},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1565411746795},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"fb33f499022cd02722f834fcef1a0e193362cfde","modified":1565411746795},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"fc6bafc8c633afadc538c5afa5620ea2a1cdcb84","modified":1565411746798},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1565411746799},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"36eae78a4d7160a1c5e59ca3f7333f00b43d359b","modified":1565411746799},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"648bf7eda66629592cb915c4004534b3913cbc22","modified":1565411746799},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1565411746800},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"71af31fea5913fd30c233e555ef13cf2c9768f72","modified":1565411746800},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1565411746801},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1565411746801},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1565411746801},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1565411746802},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1565411746803},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1565411746803},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1565411746803},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1565411746804},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1565411746804},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1565411746804},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a5587bd1f60d35e58618576cec45e662aa44ea1f","modified":1565411746805},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"15b542f5b06b7532234af367340b9ed9fcebb0ac","modified":1565411746805},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"6f181cc188ecbe5e607fd989756e470d4cb9765d","modified":1565411746806},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"b45e934d24d76ec6b6a790e92bdb3d56186b0e2a","modified":1565411746806},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1565411746808},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1565411746808},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1565411746809},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1565411746809},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1565411746809},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1565411746810},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1565411746811},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1565411746811},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1565411746811},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1565411746812},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"050ea01f25cfe492be9bb77b409644d623fdf2dc","modified":1565411746812},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1565411746812},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"d422beaf35a5d2646feaa098bc3e5adf691c7565","modified":1565411746812},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1565411746813},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1565411746813},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c754f699c90f6278b9159eff1855c17bc713ee96","modified":1565411746813},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1565411746813},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1565411746814},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1565411746814},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1565411746815},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"c77a2e7ef5f449a445fb4d36b055721fba4a81af","modified":1565411746816},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"3cfeafefc672d9a7704650ebfb2f9d8668b38d9a","modified":1565411746815},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"e8f91c571ceb4b80aafebc4d36b89fb41b1ae040","modified":1565411746816},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"388efc86af7f19c05ad0e26720cd24ee012d20b9","modified":1565411746816},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"2cbaae65a020bbb0e9265364488aff8bf84fa48d","modified":1565411746817},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"5856d5f701e51dfae1fd6fb486cefde67effd555","modified":1565411746817},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4a908b613518878b9b69576c5dba4a5185f552ab","modified":1565411746817},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1565411746818},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1565411746818},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"601774d8672577aefbcefac82c94b01f0338da31","modified":1565411746818},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"0a13dfd2de52a96901039098c6fc7b515edfc50b","modified":1565411746821},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"ea94aa85034c6d1b6bb865aecea55c73f8a14501","modified":1565411746821},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b3eaab6a269aa3fcbafe24fd06f0c9206dc12716","modified":1565411746822},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1565411746864},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1565411746865},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"2036bbb73afd43251982ce824f06c6e88d35a2ef","modified":1565411746866},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"a8aa41625b94cf17a7f473ed10dcbe683b1db705","modified":1565411746893},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1565411746893},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"fc15e277d1504532a09b7b1bd31f900ad95ec4b8","modified":1565411746894},{"_id":"themes/next/source/images/one.gif","hash":"ab1b89a5c53e6f50500bcecdb296e5aeb7b183a4","modified":1565411746903},{"_id":"themes/next/source/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1565411746909},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1565411746909},{"_id":"themes/next/source/js/src/clicklove.js","hash":"9a063bd1b36ce939e33d4d1352398d6490ea5eea","modified":1565411746910},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1565411746915},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1565411746915},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1565411746916},{"_id":"themes/next/source/css/_variables/base.styl","hash":"640f25a63770af5566ccc9cec79c40a4f1c0b29e","modified":1565411746894},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"fe5ff961b86004a306778c7d33a85b32e5e00e48","modified":1565411746831},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"c8b3225396cb444d8baeb94bac78e5216b992a81","modified":1565411746831},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1565411746838},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1565411746839},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1565411746839},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1565411746846},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"ce2aae8f3ed8ceac3a2417e0481044cf69c788aa","modified":1565411746851},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1565411746851},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1565411746861},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"6d900b4159eeb869196a619602578bf4d83a117b","modified":1565411746861},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"8e0740a9ad349ce5555122325da872923135a698","modified":1565411746862},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1565411746863},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a190ef2f49bdbf69604b48ad1dc7197895ee9b6","modified":1565411746863},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1565411746863},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"33456264a74d1bba38264d14713544d67d003733","modified":1565411746863},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1565411746884},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"9a2d298dbdcbfd758518fd74b63897bc80ce15a5","modified":1565411746866},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1565411746885},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"24230e46fc9fb7b8551f97bb36e9bc1f7423098e","modified":1565411746885},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"75d2d92af070eb10273558b2436972d3f12b361c","modified":1565411746886},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa33213aceed7bf4bf25437ca9c1a00f7734ae65","modified":1565411746886},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1565411746886},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a96e46a6ae86c423f932bc2bc78b9f7453e4e4e5","modified":1565411746887},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6565b4a309325596768d0d32e022c80ef23066cb","modified":1565411746888},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"fc160583f742c94316a0fee05c18468033173534","modified":1565411746889},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"1edf4e69d0ec0dc9cefed6c35d3e803e0da4093d","modified":1565411746889},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"7359880e8d85312861fe0871f58b662e627dae0c","modified":1565411746889},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1565411746890},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"57044a6d19eb418c1c3d28787e82c69efa9e0ca6","modified":1565411746891},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1565411746891},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"b6dac5bbf20f090cf4b67d156f030d7170dfb39c","modified":1565411746891},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"6400c98a9fd2b9a8502269f33355bd7ab3ff793b","modified":1565411746892},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b5b936dddb7b4de4720cd1e8428b30a2f06d63fb","modified":1565411746892},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1565411746892},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1565411746913},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1565411746914},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4cfeec9434a72d5efc6ca225d3445d084d4590f7","modified":1565411746840},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1565411746841},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1565411746840},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1565411746841},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"a410ed529afd46ddf4a96ecf0de6599488716887","modified":1565411746842},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"c0d9e18a9210fdcaf33e488518b3b288eb58c0a1","modified":1565411746842},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"71d8d1cc22a2a7627a6db7240f0c4902a14f9bea","modified":1565411746843},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"cc6ee18f47f2e1e06df6fa0eadb37079e580fd11","modified":1565411746842},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"e9dd8de7d98f1478ac7d351624fffd3d8738c905","modified":1565411746843},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1565411746843},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"6904fd7ea6455e008d9884558b68254608af9a3c","modified":1565411746844},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2d142c6f39853916256ad8fc79eb6b85f4001ae8","modified":1565411746844},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1565411746844},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f1d52954b9a5d1ca8e224382349f525e598dd923","modified":1565411746845},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1565411746845},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"80addb9b725e329915c05c27b9fadaf56457a9b3","modified":1565411746845},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1565411746846},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1565411746846},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"6a75bb1f2435f4e895cbbb5abbddf6e8f7257804","modified":1565411746847},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1565411746847},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"1385862a5c0bd845015d165aadbd1a6add7b72d7","modified":1565411746848},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1565411746848},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1565411746848},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b082d07b13a3d55b4c032fd351dfa9a4fd74edec","modified":1565411746848},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"496f931e3a7e313ba8088fb91bb20789cace72c9","modified":1565411746849},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1565411746849},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"5440013a081201ca791582db98159dce93ea9e75","modified":1565411746849},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1565411746849},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1565411746850},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1565411746850},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1565411746850},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"a6c24393dffbdd94dd5c01cdbec5e180b0bfbbbd","modified":1565411746850},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"e6c44af294de04c739eb5313ec6cfc9e934d6af6","modified":1565411746851},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"9224b566cd2632f64c1a964e2c786cee93b93286","modified":1565411746852},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"cc83816614f21c7e1d8d3f867d547ff7c658cec4","modified":1565411746852},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"449a2e76af82584a2086e17295dac7a890539725","modified":1565411746852},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"517d541a80d59ad99a3f648be74891e0c7bc72a8","modified":1565411746853},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"c2d9c3b6fbfa65544e6b5a55d3cb2149df04a8a9","modified":1565411746853},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"9a3bfc878ca797946815bed23cd6f92b24a16358","modified":1565411746853},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"8a24b56524a388fbabd408ffc8ba9b56eb9e01ce","modified":1565411746853},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c01609176929590f8f347075a9a12b661acd661e","modified":1565411746854},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e5c884fb950937afa350c608545455c87aa6129","modified":1565411746854},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1565411746854},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1565411746855},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1565411746855},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1565411746855},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1565411746856},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"21b32840d8b3a14b10770153114778304ba6d1b0","modified":1565411746856},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"da8d34729fb6eb0fcb8ee81e67d2be3c02bc1bc4","modified":1565411746856},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"fcda60fecff1479adaf6521cf629cda2506337a8","modified":1565411746857},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1565411746857},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1565411746857},{"_id":"themes/next/source/css/_common/components/third-party/copy-code.styl","hash":"688ca3eccc26727d050ad098b32b40934719588a","modified":1565411746858},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"ac7753d536341aa824d7bce0332735e838916995","modified":1565411746859},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"f1d9ee1f86a179741f2478f8c70ca11ab578810e","modified":1565411746859},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"7059e24235b7c57a07f3f8abaa06b0bd6a7eda2f","modified":1565411746859},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1565411746859},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1565411746860},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"61466e3e5459960b5802a267751a0c8018918b0b","modified":1565411746860},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"3ae3f3c276d444862033fd3434c632ad0d2f84e6","modified":1565411746860},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"03c4fa9573fddd930552784cf484fd2ee7825323","modified":1565411746860},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1565411746888},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1565411746888},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1565411746890},{"_id":"source/_posts/2019-06-08-冒泡排序法/BubbleSort.gif","hash":"fd6590aecff7c33327ce82b348004d88d56c6a84","modified":1565411746730},{"_id":"source/_posts/2019-06-08-插入排序法/InsertSort.gif","hash":"ca62c4dc80eac486ff5ab2807f76e825228b6951","modified":1565411746732},{"_id":"source/_posts/2019-06-12-选择排序法/SelectSort.gif","hash":"a52157c0615c58066467795c4cd29b6b55a367dc","modified":1565411746738},{"_id":"source/_posts/2019-11-20-01-vue的入门/01.png","hash":"c24fbd61f6178a42cd8a5283c6cc154f30056b60","modified":1578709268635},{"_id":"themes/next/source/images/linus.png","hash":"80f8c859299f93029dad92885fdbd84199d74077","modified":1565411746901},{"_id":"source/_posts/2020-01-02-activiti-组和网关/parallel.png","hash":"82b676f78a0a5a9920246e4a4840bd22e96d74bf","modified":1578709268655},{"_id":"source/_posts/2020-01-02-activiti-组和网关/inclusive.png","hash":"1a0e03639df277f9099b97d4164dbefaee4d00c6","modified":1578709268645},{"_id":"source/_posts/2020-01-02-activiti-组和网关/exclusive.png","hash":"48837d647cc5e0f3ee545083e185a5276d87333e","modified":1578709268645},{"_id":"public/search.xml","hash":"7e7890927922a9bcd4335c8abbefbef26031cbce","modified":1594743059446},{"_id":"public/categories/index.html","hash":"a4c0a63765e2d7496e271e39fe895f2b8733d114","modified":1594743062315},{"_id":"public/tags/index.html","hash":"93bb0bfced2d3cef92ba8ae608ca01b91b187ead","modified":1594743062316},{"_id":"public/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/index.html","hash":"4eb62cfaf319b27335a67b417e5f7a13d22db380","modified":1594743062333},{"_id":"public/2020/07/15/2020-07-14-02-Java操作ActiveMQ/index.html","hash":"151314f1b4ae6d9a3b9b349e8313abe6c60ebdc8","modified":1594743062334},{"_id":"public/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/index.html","hash":"76ef3345bd9946603d3e7321d9940e9d9bcdd23e","modified":1594743062334},{"_id":"public/2020/04/02/2020-04-01-02-redis使用/index.html","hash":"130eb3f5d801a4af78eb196d6aae6a7ad2ee057a","modified":1594743062334},{"_id":"public/2020/04/02/2020-04-01-01-redis搭建/index.html","hash":"5f729454d17317701a2326315b5b5c686e0314f1","modified":1594743062334},{"_id":"public/2020/04/02/2020-04-01-02-Mybatis逆向工程使用/index.html","hash":"fc5c4303eeeb212bcd05cc781824d95a416273fe","modified":1594743062334},{"_id":"public/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/index.html","hash":"0a152e51ff61440cc0806e83fbe2584fcdbe53e5","modified":1594743062334},{"_id":"public/2020/04/02/2020-04-01-Pagehelper/index.html","hash":"44c786e83f0d00b5755a371388429b362c00d376","modified":1594743062334},{"_id":"public/2020/02/02/2020-02-02-02-Nginx做代理/index.html","hash":"1d0a921ebecab982d96f034237d46a10a3d093cf","modified":1594743062334},{"_id":"public/2020/02/02/2020-02-02-01-Nginx的安装和启动/index.html","hash":"fe5c15404742143d0085d902f6c31518addc0e86","modified":1594743062334},{"_id":"public/2020/01/12/2020-01-12-Vue中使用json-server/index.html","hash":"4eac96db0474e11572f8d6f0f3ff77e91b285835","modified":1594743062334},{"_id":"public/2020/01/12/2020-01-12-json-server/index.html","hash":"06571c7928e9700a973e63657f2687f477449112","modified":1594743062334},{"_id":"public/2020/01/03/2020-01-02-git配置多个ssh-key/index.html","hash":"affb2e4b14b4aedcd433e21c4e032e85296b9ff2","modified":1594743062334},{"_id":"public/2020/01/03/2020-01-02-activiti-组和网关/index.html","hash":"9123a9415640a582875b687907655bc9e8db36a9","modified":1594743062335},{"_id":"public/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/index.html","hash":"c4a83602ca1032815f49b133076467922826e06a","modified":1594743062335},{"_id":"public/2020/01/02/2020-01-02-activiti入门02/index.html","hash":"9dbdc1f2a4c6013d0533205b2d95ce9844b52454","modified":1594743062335},{"_id":"public/2019/12/31/2019-12-31-activiti入门01/index.html","hash":"727afda1d8b6c72e478ba8380708a41d15159921","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-vue注意事项/index.html","hash":"f0aaba63dd132973d923b7d12df540742f065cf7","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-07-loader加载器处理css样式/index.html","hash":"8761b60bfa5e2bc45eeb9580a8e6a710cb028f60","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-06-vue/index.html","hash":"e913c832dd26db46dc1bb91437040827ba051711","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-05-webpack/index.html","hash":"b464134594a8061b2f6e9f3ff30a6a4893ecb2bc","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-04-vue组件和路由/index.html","hash":"949fc9144aa429ad0c75eaa127aedf54d8dbdaf4","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-03-vue常用属性/index.html","hash":"0fa3de495a83e350034e146ffa6ca2e4653fa18e","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-02-vue的class属性绑定/index.html","hash":"5456bddd16bb06a2a198d1fc27fc683309d83404","modified":1594743062335},{"_id":"public/2019/11/21/2019-11-20-01-vue的入门/index.html","hash":"3a561637b8c2e1c7d5d2521b0774ed60deb30e7e","modified":1594743062335},{"_id":"public/2019/09/04/2019-05-08-使用vue-cli搭建项目/index.html","hash":"9a601f5e225ca5da0e2a1313ad33315ed6db1af8","modified":1594743062335},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/index.html","hash":"5dfe8a657c8f8720c2cee754f14c9c84d28f4bb9","modified":1594743062335},{"_id":"public/2019/06/26/2019-06-25-Git常用教程/index.html","hash":"3b08355707d9e9a68cfb1c2f413501e34e793b0b","modified":1594743062335},{"_id":"public/2019/06/25/2019-06-24-GitFlow工作流/index.html","hash":"a4ec0ac2d0483a7ae5bc1de4a138c66f6833dc5a","modified":1594743062335},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/index.html","hash":"e6a62ec87de044d1664664d8e21b7c27f979fd6e","modified":1594743062336},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/index.html","hash":"08d23aaa7a513716871507dc3aa099ce3deaad20","modified":1594743062336},{"_id":"public/2019/06/19/2019-06-19-Shell基本命令/index.html","hash":"7d6a3b1cd42dc462805d7519fdf9cbb2d11432d3","modified":1594743062336},{"_id":"public/2019/06/13/2019-06-12-选择排序法/index.html","hash":"ea2bd373908501b1973988daf51453abbd36a07b","modified":1594743062336},{"_id":"public/2019/06/12/2019-06-12-web-xml文件头声明/index.html","hash":"762e3e347b0919b3f8576cd0a48cb216ddbc95d3","modified":1594743062336},{"_id":"public/2019/06/12/2019-06-12-Maven整合SSM/index.html","hash":"f45c5429f5cfe4270efeb8f8b4cbe84b03b2a897","modified":1594743062336},{"_id":"public/2019/06/12/2019-06-12-Maven/index.html","hash":"d0778065ed1e2b2dd59ed05a39bbb390664bf917","modified":1594743062336},{"_id":"public/2019/06/11/2019-06-11-SSM整合配置文件/index.html","hash":"231b36cea1abb8f22273d414dd637db187ab2d6b","modified":1594743062336},{"_id":"public/2019/06/09/2019-06-08-插入排序法/index.html","hash":"e0bdf2668afb66b5c036fdeda5d49f6dda315a01","modified":1594743062336},{"_id":"public/2019/06/09/2019-06-08-冒泡排序法/index.html","hash":"9d01d1baea4bd3396b58a1594f93f87fd8bba279","modified":1594743062336},{"_id":"public/2019/06/04/2019-06-04-01-CRM资料收集/index.html","hash":"a8a06b8e855519b69b2522077d24509421c1ded9","modified":1594743062336},{"_id":"public/2019/06/04/2019-06-04-hexo添加一些小玩意/index.html","hash":"cbc3498bea2894045aa78c1ec16bbc7d1a370b82","modified":1594743062336},{"_id":"public/2019/06/02/2019-06-01-Next添加分类和标签/index.html","hash":"97c85b7f17ade6c2827a2ea75d55541de8e89b1f","modified":1594743062336},{"_id":"public/2019/06/01/2019-06-01-hexo-insert-images/index.html","hash":"6f31a07c9e858e226dfb071494409b5124c90ac9","modified":1594743062336},{"_id":"public/2019/05/30/Ubuntu-Install-Oracle/index.html","hash":"ba43f4334967157d8b4cfbeb33a8b80345256120","modified":1594743062336},{"_id":"public/2019/05/28/Ubuntu18-04-VM/index.html","hash":"6a25fe39ed173456158c312edd6ab587f2215a18","modified":1594743062337},{"_id":"public/2019/05/25/2019-05-25-09-软件工程/index.html","hash":"98550b062f284cd7a9abf1cb9ea7323d93c5dd64","modified":1594743062337},{"_id":"public/2019/05/24/2019-05-23-08_软件工程/index.html","hash":"5d6640bcd0eb172ede7ce03014e01daf1c7d8c7b","modified":1594743062337},{"_id":"public/2019/05/22/2019-05-22-07-软件工程/index.html","hash":"ae7d4fc8cf55cf60d97d92e9804da60475642d59","modified":1594743062337},{"_id":"public/2019/05/22/2019-05-21-制作Windows操作系统工具盘/index.html","hash":"394ea849e84c00a591697f624f2cdbb26575d668","modified":1594743062337},{"_id":"public/2019/05/22/2019-05-21_Vagrant/index.html","hash":"83aef6a9e8efa0f336f6f5cd90deea46cc329305","modified":1594743062337},{"_id":"public/2019/05/16/2019-05-16-06-软件工程/index.html","hash":"708ec764f5870f6ee78cd60c320d6c092a74e155","modified":1594743062337},{"_id":"public/2019/05/15/2019-05-15-05-软件工程/index.html","hash":"e5ec15fe668823a0e3863e44433b746c022561d7","modified":1594743062337},{"_id":"public/2019/05/13/2019-05-13-04-软件工程/index.html","hash":"2cafaf761f019d41bac18821daa73878f9146d5a","modified":1594743062337},{"_id":"public/2019/05/12/2019-05-11-03-软件工程/index.html","hash":"80c70a5e580b97895ff96ce6e728e38012b193a5","modified":1594743062337},{"_id":"public/2019/05/11/2019-05-10-02-软件工程-/index.html","hash":"a619ca9e1c9997909e26fb2ca30d501b215d9751","modified":1594743062337},{"_id":"public/2019/05/09/2019-05-09-01-软件工程/index.html","hash":"4328f4926911f97aca0aa693da7e34ddee084c93","modified":1594743062337},{"_id":"public/2019/05/08/2019-05-08-01-算法/index.html","hash":"9f1c041b4a1aac92729d66d0f4123481382403e7","modified":1594743062337},{"_id":"public/categories/算法/index.html","hash":"7a50fba74a5b68106633ba8742595742422d4dd9","modified":1594743062337},{"_id":"public/categories/软件工程/index.html","hash":"9e238064fda01c34734008bd7306f7ba22d87440","modified":1594743062337},{"_id":"public/categories/Vue/index.html","hash":"82a6f591f447f727dc57a7db382abea3f8897b81","modified":1594743062337},{"_id":"public/categories/操作系统/index.html","hash":"b33c24289b1d7adfa4885d93cada3183a5ea8265","modified":1594743062338},{"_id":"public/categories/Vargrant/index.html","hash":"61ae8c5870e76c7c9f52485ff2e11fa90b569675","modified":1594743062338},{"_id":"public/categories/Hexo博客/index.html","hash":"24cff6ba52d647e16defafb90475f2a4791602f6","modified":1594743062338},{"_id":"public/categories/CRM/index.html","hash":"d416805c3b405d33ab26fba4d8b1c1af5a3e8ddd","modified":1594743062338},{"_id":"public/categories/SSM/index.html","hash":"08617869e1fa772dba5c895114108484489d5780","modified":1594743062338},{"_id":"public/categories/Maven/index.html","hash":"26e32c6458afaba2eabcd8a59a8e166215e041a6","modified":1594743062338},{"_id":"public/categories/web-xml/index.html","hash":"b70b87c7a9fbdfd164fcad432ebf017079dd0a42","modified":1594743062338},{"_id":"public/categories/shell/index.html","hash":"1b3a8a75295cd9b1eecca1d28a628bce7ae1c12f","modified":1594743062338},{"_id":"public/categories/Jenkins/index.html","hash":"17ab7d7a5ac993e68cc5fdc952b92abeb7186c63","modified":1594743062338},{"_id":"public/categories/git/index.html","hash":"44e65df0641d67bc484cd763788c2a5fe99a4aba","modified":1594743062338},{"_id":"public/categories/activiti/index.html","hash":"a0e079083bd3770ba3aa44cf7b30efbfe9b37b0f","modified":1594743062338},{"_id":"public/categories/json-server/index.html","hash":"75be1cb2d2abe45baf2eb485f8acd41c7deaa7f1","modified":1594743062338},{"_id":"public/categories/Nginx/index.html","hash":"0b46bb924db725ddb48e1a100ee026ae6e5ceec0","modified":1594743062338},{"_id":"public/categories/逆向工程/index.html","hash":"a1f6f3b4b5f3148bfce25e9068f6bc7915058ca9","modified":1594743062338},{"_id":"public/categories/redis/index.html","hash":"a9c9c00c859eaf4f8a8f1b36e88981278e7d50d1","modified":1594743062338},{"_id":"public/categories/Pagehelper/index.html","hash":"814aff96922d40f6ed7459cb794977fa6b9bb0b2","modified":1594743062338},{"_id":"public/categories/ActiveMQ/index.html","hash":"e381d464be50815ff4db5272ee678ba22ab56702","modified":1594743062338},{"_id":"public/categories/Oracle/index.html","hash":"9cef9a7702fb12f3e3163762d92395846bdf94c4","modified":1594743062339},{"_id":"public/categories/虚拟机/index.html","hash":"666f7a7fa4cf34eb7b12bc11290c839f59407749","modified":1594743062339},{"_id":"public/categories/ActiveMQ/JMS-API/index.html","hash":"52aea9ba12bf47256860edbf583b4a0dc84ad133","modified":1594743062339},{"_id":"public/categories/ActiveMQ/JMS-API/Spring/index.html","hash":"2f72ca8c8dd58a566318bc3696f644e41ffe9bab","modified":1594743062339},{"_id":"public/archives/index.html","hash":"df882e789ccdde0b3503237a111cc18737f1e8c8","modified":1594743062339},{"_id":"public/archives/page/2/index.html","hash":"8f7b73a078fbfa5355ba297155770c5578aa6c68","modified":1594743062339},{"_id":"public/archives/page/3/index.html","hash":"f05be114eb51176ffd60a59a970fecc2c608fe93","modified":1594743062339},{"_id":"public/archives/page/4/index.html","hash":"d78a3b78aad293185f8d37f150e7f206619ad53f","modified":1594743062339},{"_id":"public/archives/page/5/index.html","hash":"d97a3f166e64c8008d6f8629ff0a9a26838dfe27","modified":1594743062339},{"_id":"public/archives/page/6/index.html","hash":"10c900b1f7c256af1398048abe45d6f5118fe720","modified":1594743062339},{"_id":"public/archives/2019/index.html","hash":"fe795e87d4c477d811064ddc05aefc133799f436","modified":1594743062339},{"_id":"public/archives/2019/page/2/index.html","hash":"451919cd046bb7c8e75a0380b614c7f2aa7da262","modified":1594743062339},{"_id":"public/archives/2019/page/3/index.html","hash":"2305271feb0a60539e1bb6e8ccb30eb7f8d6dedc","modified":1594743062339},{"_id":"public/archives/2019/page/4/index.html","hash":"9e6ff8dea9193433b8e257f37dfe7ca4411d94cc","modified":1594743062339},{"_id":"public/archives/2019/page/5/index.html","hash":"76064c203280c31b2f06211c265cb9a5e5f834fc","modified":1594743062339},{"_id":"public/archives/2019/05/index.html","hash":"5a2e3e79b2b83f64da0d43761fa9cbe0aa04798a","modified":1594743062339},{"_id":"public/archives/2019/05/page/2/index.html","hash":"81af3e05b639b67131cfb88bcefec827ee5e5c00","modified":1594743062339},{"_id":"public/archives/2019/06/index.html","hash":"e29870ac89b83ad2c3e152ebc224fe9ddbc40172","modified":1594743062339},{"_id":"public/archives/2019/06/page/2/index.html","hash":"ad7671c85bb3c4b532b1ae18d21070afc9d6f1dc","modified":1594743062340},{"_id":"public/archives/2019/09/index.html","hash":"0b405b0eba0bfad0a76d651993d7ef5fca495092","modified":1594743062340},{"_id":"public/archives/2019/11/index.html","hash":"125f357f189cf8af4661578f6cc202e2aeed59c1","modified":1594743062340},{"_id":"public/archives/2019/12/index.html","hash":"5d4df38bee7c26e60ccfb7990492ee1ec8fb121d","modified":1594743062340},{"_id":"public/archives/2020/index.html","hash":"2747ced284f0ccdfe4498cbf23fe4dfec6821f32","modified":1594743062340},{"_id":"public/archives/2020/page/2/index.html","hash":"891a7c2adbd56ce8521ad71b20d35a7860f36810","modified":1594743062340},{"_id":"public/archives/2020/01/index.html","hash":"d55d22d118117628107fb1f63e43ec1b8aacf0e5","modified":1594743062340},{"_id":"public/archives/2020/02/index.html","hash":"3652606a94aa71a933efd58975b386836f84334c","modified":1594743062340},{"_id":"public/archives/2020/07/index.html","hash":"1cf4c7a657806d142a4f333c1323dc056cefbddf","modified":1594743062340},{"_id":"public/archives/2020/04/index.html","hash":"35c8453d23dee80674f381540b99e9c29315eefe","modified":1594743062340},{"_id":"public/index.html","hash":"0dba015874c57ee3c2fe0cd83239405b0223f4a3","modified":1594743062340},{"_id":"public/page/2/index.html","hash":"5dd63681d16929bf194af1d6595608f3c3a6f443","modified":1594743062341},{"_id":"public/page/3/index.html","hash":"5e6556429e054ebefbe070ebc7981b5bcd01de76","modified":1594743062341},{"_id":"public/page/5/index.html","hash":"264b956d6f08ccd8e43bbd95d9fe5edb300b2ad0","modified":1594743062341},{"_id":"public/page/4/index.html","hash":"f12cd9ac1aa560925e9dafec9ffcb091adf396a2","modified":1594743062341},{"_id":"public/page/6/index.html","hash":"7f74579e1a6c9cf6620a4ca8462c5af554167962","modified":1594743062341},{"_id":"public/tags/算法/index.html","hash":"e062d4386c90be58c6c42b8ffbf5f9c983fcc34b","modified":1594743062341},{"_id":"public/tags/练习/index.html","hash":"ce59c1d3f1f66bd0e01154bf4075ceca9ce731ed","modified":1594743062341},{"_id":"public/tags/分值/index.html","hash":"08e0f6bc817e6b1d55efa5b942fa12fad464b35a","modified":1594743062341},{"_id":"public/tags/软件/index.html","hash":"6da39e2b1f0bbdcbb33310e3af77365cc90134df","modified":1594743062341},{"_id":"public/tags/软件工程/index.html","hash":"91996e423f3c2f9c4d8f3c62c500a9d1f59346a2","modified":1594743062341},{"_id":"public/tags/过程模型/index.html","hash":"80164f61171dc1f96607a35a79b957caf1316c02","modified":1594743062341},{"_id":"public/tags/webpack/index.html","hash":"de26e51136cd3f5905d865f637a700b2350ef3f1","modified":1594743062341},{"_id":"public/tags/vue/index.html","hash":"91b7878ac38da010a83840560f94a472c8361d02","modified":1594743062341},{"_id":"public/tags/指导实践/index.html","hash":"72df275ac2285427eb6afc72ca74cef92f1764f1","modified":1594743062341},{"_id":"public/tags/需求/index.html","hash":"73b826f11e85ff7e4c33c0ae59cd3ff233c10998","modified":1594743062341},{"_id":"public/tags/Windows/index.html","hash":"be637453f0cb25a0391bff35fa4abf8c819bc4bc","modified":1594743062341},{"_id":"public/tags/工具盘/index.html","hash":"607eb90fdb126709c940288df9c7e0422315c74c","modified":1594743062342},{"_id":"public/tags/镜像/index.html","hash":"4eac323a884315842bef6f9d225a78f5434d5a7e","modified":1594743062342},{"_id":"public/tags/需求建模/index.html","hash":"0340076139259c034990805e3c63c642a30ed2a4","modified":1594743062342},{"_id":"public/tags/场景/index.html","hash":"cb64d9c3f8b24a5bc0e672b997edcb39c0d8774f","modified":1594743062357},{"_id":"public/tags/信息/index.html","hash":"f6109f1381d152fa62823d6ef19dff24b9c8fdc4","modified":1594743062357},{"_id":"public/tags/类/index.html","hash":"690737eb74eaac1578d212abfbca66757efb15f4","modified":1594743062357},{"_id":"public/tags/敏捷开发/index.html","hash":"8ed40ad3b77fbf2db18bc380e17d2c7154316e59","modified":1594743062357},{"_id":"public/tags/自动部署/index.html","hash":"75aea27dde40f00be02c9367a29050d88efdbaa3","modified":1594743062357},{"_id":"public/tags/JDK/index.html","hash":"6a6713f428d839aeb9018e53b06a8d045215d3b1","modified":1594743062357},{"_id":"public/tags/虚拟机/index.html","hash":"b5fd58ed61cd3b069ad11ef7e286d37199ea43e3","modified":1594743062358},{"_id":"public/tags/Mysql/index.html","hash":"bfc6bc49abfeebc963f63dfa521f04594cba1f3a","modified":1594743062358},{"_id":"public/tags/流程/index.html","hash":"c3662180bf228d0e65b3cbb6a0dc274835f9877f","modified":1594743062358},{"_id":"public/tags/行为/index.html","hash":"e665fb5565db38486c614b4db92d373d6d53299e","modified":1594743062358},{"_id":"public/tags/模式/index.html","hash":"e86037875baf03ad014199c69dd57c0a43cdf852","modified":1594743062358},{"_id":"public/tags/Web应用/index.html","hash":"da2e592083fefc525c7e6e6445101ac2ed0f82f2","modified":1594743062358},{"_id":"public/tags/hexo/index.html","hash":"bca9c4c334c695bf3a97caec2be0594a8fa21b2d","modified":1594743062358},{"_id":"public/tags/设计/index.html","hash":"e8ef7da4f5a5792eac5efe6ba48543d8d1276d1e","modified":1594743062358},{"_id":"public/tags/next/index.html","hash":"deac400f5490c5da2cf06532e7bca645c8a55c8f","modified":1594743062358},{"_id":"public/tags/分类/index.html","hash":"18f4644ad801f7215f6fe5354b6d0a002abd9f76","modified":1594743062358},{"_id":"public/tags/标签/index.html","hash":"419d1b015586a9878c8db0fc4c3cf8813a338afb","modified":1594743062358},{"_id":"public/tags/生成/index.html","hash":"0ef30c57e85caf2d0dcd0a2c739b4e6cb68abeb7","modified":1594743062358},{"_id":"public/tags/本地图片/index.html","hash":"ed0da126aa819f62079ea42cc31940f6cd6c0e4d","modified":1594743062358},{"_id":"public/tags/体系结构/index.html","hash":"dd6baf5521ea0e3af567672df19fd8abcb80eaa1","modified":1594743062358},{"_id":"public/tags/CRM/index.html","hash":"798d0bceb65bb75e99fde6725ebaa44394199ee5","modified":1594743062358},{"_id":"public/tags/初始资料/index.html","hash":"a38f2d81c3ceeb492aeeb931a532e0fcd3a5f49e","modified":1594743062358},{"_id":"public/tags/小玩意/index.html","hash":"568eaff89bacc6439e1f03fc71e2dd8e30801fdb","modified":1594743062358},{"_id":"public/tags/冒泡/index.html","hash":"b0393d23c275b6494b33ee98d79b3112f5b3c5df","modified":1594743062358},{"_id":"public/tags/排序/index.html","hash":"4f96c797ae041a74c43cd775e886674659831c22","modified":1594743062359},{"_id":"public/tags/插入/index.html","hash":"bc64fa415cc6921dc0d0177c258b3987de9a7492","modified":1594743062359},{"_id":"public/tags/SSM/index.html","hash":"922575e03c1fd4365c595ae89f0983a56b11e036","modified":1594743062359},{"_id":"public/tags/整合/index.html","hash":"79a3cf34edf9024eccaf578299d38bdaa391dd81","modified":1594743062359},{"_id":"public/tags/安装/index.html","hash":"4bdd2d944d3b1f3ced712e451d5b567d306d2bfe","modified":1594743062359},{"_id":"public/tags/配置/index.html","hash":"22c80101ef648c66f2f34f3ca8bc19d3bbe01ac3","modified":1594743062359},{"_id":"public/tags/maven/index.html","hash":"0e14116301e95a49cfc2a75e9c9f74a99450aab1","modified":1594743062359},{"_id":"public/tags/文件头/index.html","hash":"07d6e480a85c81887a3b931c20160025b248ef8b","modified":1594743062359},{"_id":"public/tags/版本/index.html","hash":"1c18587c3aac7e52bc64d1908f0a70f10adb326f","modified":1594743062359},{"_id":"public/tags/shell/index.html","hash":"7ea90a258524f3636b14bdba44ec64afb27603f9","modified":1594743062359},{"_id":"public/tags/基础/index.html","hash":"3708a1d0e0206e35fd4cd7b2a4b7e831f2e605c0","modified":1594743062359},{"_id":"public/tags/gitlab/index.html","hash":"6a62f4d747c638f0982ee6007846573bf5d74c67","modified":1594743062359},{"_id":"public/tags/mysql/index.html","hash":"4199e13aac36fb8057c96439db5c8850fa549887","modified":1594743062359},{"_id":"public/tags/redis/index.html","hash":"d1636becebc1712aca88b6a626e046caf95cbc0f","modified":1594743062359},{"_id":"public/tags/nexus/index.html","hash":"466e6597956e355dc76ee9a794c0dcfe8d29b9c7","modified":1594743062359},{"_id":"public/tags/jekins/index.html","hash":"9cd454f643470f9049075dd3d48262cf4fba18da","modified":1594743062359},{"_id":"public/tags/kubernetes/index.html","hash":"8993ecbe03100fd02558fbcfaf568f3c36ea8d9c","modified":1594743062359},{"_id":"public/tags/git/index.html","hash":"4963211826068943aefb9e32355c0cc576690488","modified":1594743062359},{"_id":"public/tags/git-flow/index.html","hash":"9dc00488e6fb781b3a1f196850442798cc08dd8c","modified":1594743062359},{"_id":"public/tags/commit/index.html","hash":"8843570a5cfee7caabe9acbf0451801656b51f26","modified":1594743062359},{"_id":"public/tags/图标/index.html","hash":"495dab734e5bc73ba0c44201dfe4454cd2340629","modified":1594743062359},{"_id":"public/tags/ssh/index.html","hash":"3bc18cd0af0a51138e5a91fc4d94b0c6eed174db","modified":1594743062359},{"_id":"public/tags/MVVM/index.html","hash":"8ddfa1db733102e059a0fe05b00b7a41b1ab5751","modified":1594743062359},{"_id":"public/tags/vue-base/index.html","hash":"76d4354c00a86642edd8785b9baaa928ae355ff9","modified":1594743062359},{"_id":"public/tags/css/index.html","hash":"bf8ff25c34480942f8b1ae0f534aaff768d88290","modified":1594743062359},{"_id":"public/tags/过滤器/index.html","hash":"6d5070a6de185fa4f6f9f601811f85949eac5f8e","modified":1594743062359},{"_id":"public/tags/计算属性/index.html","hash":"0c5739a1b4303bf8966e568129e973bf1dd994b8","modified":1594743062359},{"_id":"public/tags/监听/index.html","hash":"e8f35057883a34d24cd0d08c707a9f60ccf51338","modified":1594743062360},{"_id":"public/tags/方法/index.html","hash":"4d4d15a7b0b28f42a82a09386dc0028d5de7f913","modified":1594743062360},{"_id":"public/tags/组件/index.html","hash":"a3b67163162e82ffc652877fad3344ae4d0536a3","modified":1594743062360},{"_id":"public/tags/路由/index.html","hash":"8a4d3218585738ab4f3f5e2247c8c33a8e3d3ee1","modified":1594743062360},{"_id":"public/tags/webpack-dev-server/index.html","hash":"5bb182f61feda1309b860c26ad44e00b8ea99c9e","modified":1594743062360},{"_id":"public/tags/html-webpack-plugin/index.html","hash":"59280ed13d56001cdf1e2f1776a84cb680413226","modified":1594743062360},{"_id":"public/tags/less/index.html","hash":"05afb127b5b645220d1c29f4da95f3eea25d464f","modified":1594743062360},{"_id":"public/tags/scss/index.html","hash":"fc9137f0f1f38ae20a38313be5d94062650b9a6e","modified":1594743062360},{"_id":"public/tags/符号/index.html","hash":"d1fada82d7b532dca73dab12429c85af5eb2564f","modified":1594743062360},{"_id":"public/tags/render/index.html","hash":"b6834e38b9f0af5bb64a057a21d4b0417f971156","modified":1594743062360},{"_id":"public/tags/工作流/index.html","hash":"5ec2d510fdbfde89362cb020cb014f49c6b2586f","modified":1594743062360},{"_id":"public/tags/activiti/index.html","hash":"9760bc8c1c51cfeb32c31e99b4a046d167bcf7bf","modified":1594743062360},{"_id":"public/tags/任务分配/index.html","hash":"63c07eca48485c7f58e169b519bca5ee71deb3db","modified":1594743062360},{"_id":"public/tags/流程变量/index.html","hash":"4e6aae065a93fe8e757a7f41204ee7dce4826b5a","modified":1594743062360},{"_id":"public/tags/组任务/index.html","hash":"7219681b4ffb082e384778fba3c3de17611eac35","modified":1594743062360},{"_id":"public/tags/网关/index.html","hash":"cf4689a53d9b3a2c5eda1624c1002fb4347c2bdc","modified":1594743062360},{"_id":"public/tags/ssh-key/index.html","hash":"3f9cf0bc1fcc4f03a91944bd221e8b8de12149f9","modified":1594743062360},{"_id":"public/tags/json-server/index.html","hash":"d0b530abe7b675ce75cd5b207afca95f1f52e468","modified":1594743062360},{"_id":"public/tags/Vue/index.html","hash":"74173a43322391b729e75878cb5e22265c135f62","modified":1594743062360},{"_id":"public/tags/Nginx/index.html","hash":"22851e4f9509eb2c81f68823413300f936988d63","modified":1594743062360},{"_id":"public/tags/反向代理/index.html","hash":"7597d7501663cb11b6ed5dad7600dbb5302ffe5c","modified":1594743062361},{"_id":"public/tags/负载均衡/index.html","hash":"8bb55a01c0d81f0b3e11da10ffc71671bce9784e","modified":1594743062361},{"_id":"public/tags/Mybatis/index.html","hash":"4df076e454292a589b0b7206e0a3a0ce7f44d2ec","modified":1594743062361},{"_id":"public/tags/逆向工程/index.html","hash":"867239576cf635b097eeb14d21619c512901787d","modified":1594743062361},{"_id":"public/tags/分布式案例/index.html","hash":"1944221519d98b99814837dd41c3350299c34742","modified":1594743062361},{"_id":"public/tags/Pagehelper/index.html","hash":"62f4144ab3f29cae53aafc9628c2a5bfe49b09b3","modified":1594743062361},{"_id":"public/tags/ActiveMQ/index.html","hash":"04059d5a314ef490816054bccad725c479971e62","modified":1594743062361},{"_id":"public/tags/JMS/index.html","hash":"0f7cf80d52fa2a7ed814755df6e52403a3e0b029","modified":1594743062361},{"_id":"public/tags/消息持久化/index.html","hash":"716f852bd73bef965e7487c845f671ab22cc1c6d","modified":1594743062362},{"_id":"public/tags/消息事务/index.html","hash":"211c9b22387673432c10e4a0a6f8a2f0ee80ff80","modified":1594743062362},{"_id":"public/tags/ubuntu/index.html","hash":"acc8cb4b9319b02d2519381e9ad6586a26f16c9f","modified":1594743062362},{"_id":"public/tags/install/index.html","hash":"916efb0fa68813eccfa4f9901c94096311af77f6","modified":1594743062362},{"_id":"public/tags/oracle/index.html","hash":"4c5e9b995cda4ff697df009020ad84382fcebc97","modified":1594743062362},{"_id":"public/tags/ubuntu18-04/index.html","hash":"8f90f3c417efb24f0aed76b1416afd639b0cac38","modified":1594743062362},{"_id":"public/tags/VM/index.html","hash":"37a13371315550d563ec07dfc25a08848aeba5e7","modified":1594743062362},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1594743062362},{"_id":"public/images/avatar.jpeg","hash":"c9194f7a4d4eac52bf5687d6a30c7591671db44e","modified":1594743062362},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1594743062362},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1594743062362},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1594743062362},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1594743062362},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1594743062363},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1594743062363},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1594743062363},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1594743062363},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1594743062363},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1594743062363},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1594743062363},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1594743062363},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1594743062363},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1594743062363},{"_id":"public/images/google.jpeg","hash":"3bc23e83fbb0e31298ff8cdece5b6fea0d5f8cd4","modified":1594743062363},{"_id":"public/images/searchicon.png","hash":"025d64ba0160a3a2257dd2b3032b5f7c9dd9b82b","modified":1594743062363},{"_id":"public/images/yellow.jpg","hash":"04ff801ab856aa4cebb68ea64c5c9b644f9a6afa","modified":1594743062363},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1594743062363},{"_id":"public/images/xiong.png","hash":"da072df47dedd76ef8f8bde85bd6babf36d913c5","modified":1594743062363},{"_id":"public/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/generator.png","hash":"dbc225110a709d1f9cf9da040b22923a680a1d31","modified":1594743062363},{"_id":"public/2020/04/02/2020-04-01-01-redis搭建/rediscluster.png","hash":"c108467a913a07abaec8d959e8c13b5fb8aa659d","modified":1594743062363},{"_id":"public/2019/06/25/2019-06-24-GitFlow工作流/01.png","hash":"656034c75df7fe0e075b2951680f1848156de333","modified":1594743062363},{"_id":"public/2020/04/02/2020-04-01-01-redis搭建/redisserver.png","hash":"d5fde82705836c2e8b5e5528243aa506f3e38764","modified":1594743062363},{"_id":"public/2019/06/25/2019-06-24-GitFlow工作流/02.png","hash":"7d4c80d91a782df530d388cfabd886bb559e2174","modified":1594743062363},{"_id":"public/2019/06/25/2019-06-24-GitFlow工作流/03.png","hash":"c785d54d3d3d5d9e77041e1c5e9d49af0e21608b","modified":1594743062363},{"_id":"public/2019/11/21/2019-11-20-05-webpack/01.png","hash":"b1e25c623c88d975efb7211b8e14a4c87b55ba86","modified":1594743062363},{"_id":"public/2019/11/21/2019-11-20-05-webpack/02.png","hash":"634072345dbb96cda90695e668d116114d482fc9","modified":1594743062363},{"_id":"public/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/db-activemq.png","hash":"f63ca750de4c4c62b27aa5ae3964af853f27ec68","modified":1594743062363},{"_id":"public/2019/11/21/2019-11-20-05-webpack/03.png","hash":"67bdb14a5d598a91905beee613617967b83633b4","modified":1594743062363},{"_id":"public/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-配置.png","hash":"5f5ca3939a7e9d5c467558ebfd77fd39d8cb1fac","modified":1594743062363},{"_id":"public/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-数据库连接池.png","hash":"04557da3b28d6d45e512fd091fde8b13129313a4","modified":1594743062363},{"_id":"public/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/mylistener.jpg","hash":"8f3d54c37516370c8f5650ed9c4c43eceee81cbc","modified":1594743062363},{"_id":"public/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/JMS的API图解.png","hash":"100b7ef6fd8325568e1e6135a12787271e9252d3","modified":1594743062364},{"_id":"public/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/点对点模式.png","hash":"281469d58e76271c113637ad21aa2f57550e2acd","modified":1594743062364},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/02.png","hash":"98fb1a3aad3a58bfb3caba100f269918d1b04334","modified":1594743062364},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/03.png","hash":"6e4264e184ff7548b2ffaf87368bf6818480bb7c","modified":1594743062364},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/04.png","hash":"14d7e146c8f18ea9738b364fdbe9dfc3cfd44ddb","modified":1594743062364},{"_id":"public/2019/05/28/Ubuntu18-04-VM/01.jpg","hash":"7b97b9361817f22ce93bc620795e35e234663fc1","modified":1594743062364},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/07.png","hash":"ddc54e5942bea4a7cfa14474c68e831f154df22c","modified":1594743062364},{"_id":"public/2019/05/28/Ubuntu18-04-VM/04.jpg","hash":"cd278d9ee2719bfac8cafc4438523a1cd9cd75ca","modified":1594743062364},{"_id":"public/2019/05/28/Ubuntu18-04-VM/06.jpg","hash":"75218c59b7399a1fb3226838f61a38245b73f8af","modified":1594743062364},{"_id":"public/2019/05/28/Ubuntu18-04-VM/05.jpg","hash":"f8c7cec025e3265c990f4b7b7bda12aa83066725","modified":1594743062364},{"_id":"public/2019/05/28/Ubuntu18-04-VM/07.jpg","hash":"394fe6c02130f6f0d0a4eb341cf33b26a3cb04ed","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/01.png","hash":"52ef4c482bb8a9e3cff8fa697efdfbad30b1c80d","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/03.png","hash":"30887d66389ed2757a36cd1fc702c9470db2ea67","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/02.jpg","hash":"8849f23e143c70e43bb5ff106d114162200cc47a","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/04.jpg","hash":"e4701122aec071c1bc87a9c270f7fabe265f17a4","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/05.jpg","hash":"854d69ee4fb4054e9473bd0f3ecc6deef52467d4","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/06.jpg","hash":"2c863009a121a8259cb530f0d27c729d4dba10fb","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/07.png","hash":"14deeffd04d99c8fa7216a45dbdccfeda8f74784","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/08.jpg","hash":"b3eeddcf4fbbc271f12321b66f3c39fb67547d23","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/09.jpg","hash":"bf87fdceebe9b47ef04d66c21233da8b951ee9f8","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/10.jpg","hash":"e85aed51fc19919457f322487e8f047585663fa6","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/11.png","hash":"62f0ee993b59834f99178b4ca382f8d5692c0a3c","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/12.jpg","hash":"4b7bf1a8c782a60df137141c1d148c4795d16706","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/13.png","hash":"fb5759f9bac8b3375ef02e595b1ba11535c1d2dd","modified":1594743062364},{"_id":"public/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/14.png","hash":"0a4db5b8443c174b059186c23520deb3105e0109","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/03.png","hash":"bf259c2810488b4edfeffd1c5345be5fe0580e24","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/01.png","hash":"0ed31593cb59b71f2644fb2bd1c56163f1114447","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/02.png","hash":"abadcd5c8d1c0bf59ecd5471aad8acf59db56877","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/04.png","hash":"f10ab705598c12c2a086bdc24e78319e2a4f42f2","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/05.png","hash":"abd1f7b8cd562721803f796b60f32a2c4900f47a","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/06.png","hash":"bd479648fd0cc51aa864b82cc45f4eef5a310015","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/07.png","hash":"999239deb6f19e80abe4ee411e9fa5349c82a560","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/08.png","hash":"ddd8665b6b63c3e035cc60b058b04920e8461535","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/09.jpg","hash":"8497e7c392f793afd25a8566e40ddb5eba847940","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/10.jpg","hash":"aaca1a74732afa5ab3f2851e2e40e6316391539b","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/11.jpg","hash":"800c06029eda274c3ff48bd8185a843430da0ae3","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/12.jpg","hash":"6f384fbd182c298e3a8ad4b918de45f97352aec4","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/13.png","hash":"0947b6f7cd2832e689df192003a58fa2206d115a","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/14.png","hash":"38760fdfe5f059097cbdee3b74d91937ea1f0ea7","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/15.jpg","hash":"2f04309cd3c1c883e7117331fe2db5249d9a6659","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/16.png","hash":"5da1b716f696b823142deaf805a8c7d3a787e25e","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/17.png","hash":"31ad564c21a71009805abe78fc3eaac0249a3f58","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/18.png","hash":"86575d69ecc0b9b3ef3524c570db13e68c2ce87d","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/19.jpg","hash":"4c24f72ccdb5d24f559b4518ab87b66ac05fff67","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/20.jpg","hash":"bc3a5f45d2a54d29d5712d4e79f50bbd33584f03","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/21.png","hash":"a9dc1bf4b6690fdc909a6decbb7dc2371ad7e231","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/22.png","hash":"a7b79f658a8d815cb17b7f3f308fa87933083ba6","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/23.png","hash":"098d9e0f1f1a0edcb77cf918fe4816a8a622d017","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/24.jpg","hash":"2c29c1cf98ec5ef14410e9e3f5cc013f9ce51956","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/25.png","hash":"1c2ff3fc415afc7347db6bd60cd037032555c0d6","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/26.jpg","hash":"eafe53722d9cc2b69e65b08286afb4111182161d","modified":1594743062365},{"_id":"public/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/27.png","hash":"bcdcf10a5d1988f6537d9cf207fd92933ce80e81","modified":1594743062366},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1594743062694},{"_id":"public/2019/06/11/2019-06-11-SSM整合配置文件/ssm.png","hash":"b907806d70658a8d0fa634cedbda0af5fdb86acc","modified":1594743062695},{"_id":"public/2019/06/12/2019-06-12-Maven/maven.jpg","hash":"1d6cdef64233e828098f1cb5edc92105c194a162","modified":1594743062696},{"_id":"public/2020/01/12/2020-01-12-Vue中使用json-server/jsonServer.png","hash":"13b2db74af99ef33a8e4f71d604eb981834c001c","modified":1594743062696},{"_id":"public/2020/07/15/2020-07-14-02-Java操作ActiveMQ/queue01.png","hash":"2f1ec038cdc36698c33cdffdee8eb515b283d0d4","modified":1594743062696},{"_id":"public/2019/05/30/Ubuntu-Install-Oracle/oracle.png","hash":"ba48bee5fdaeab798c28336431972d1481d0906e","modified":1594743062696},{"_id":"public/2019/12/31/2019-12-31-activiti入门01/holiday.jpg","hash":"e5a794e1c7c9816676b1a42b092dfcbe165dfe57","modified":1594743062696},{"_id":"public/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/springbootgenerator.png","hash":"62209b85ea5010347d94ab6755b80246b0e88fae","modified":1594743062696},{"_id":"public/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/listener.jpg","hash":"2642dae95474a641590e3eb780176344efafa3bb","modified":1594743062696},{"_id":"public/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/processvariable.jpg","hash":"eccf20f878648591017d5d1733be6a60d8273fbc","modified":1594743062696},{"_id":"public/2020/01/03/2020-01-02-activiti-组和网关/candidate.jpg","hash":"5587e390dbf8a55fa449850f9d808c507b2a55b9","modified":1594743062696},{"_id":"public/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/发布-订阅模式.png","hash":"9639ca8784c174b731c4bebb401398aa5b39156d","modified":1594743062696},{"_id":"public/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/uel.jpg","hash":"72c7fae8d2ff9e06ead3dcd7000844547a58c380","modified":1594743062696},{"_id":"public/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/activemq.png","hash":"7de13b723504fa240742317189dc3beb513723f3","modified":1594743062697},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/01.png","hash":"6a687fa050c93d126fd92e32265e0cf435bef929","modified":1594743062697},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/05.png","hash":"30ab587aea4f24dd249656a6899585493efa4b0f","modified":1594743062697},{"_id":"public/2019/05/28/Ubuntu18-04-VM/02.jpg","hash":"60c1b6cd0fe6aa32371d2a2c4c2bee983cf2635c","modified":1594743062697},{"_id":"public/2019/05/28/Ubuntu18-04-VM/03.jpg","hash":"87ffe7f53aa45113c389b5f0a315c37730883a2a","modified":1594743062697},{"_id":"public/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/06.png","hash":"41353d229ee258bb10d92bb7632d48ee321ef0bb","modified":1594743062697},{"_id":"public/2019/05/28/Ubuntu18-04-VM/aaa.jpg","hash":"09333d7d2d0d101ee0f32073b20e1067cde319c7","modified":1594743062697},{"_id":"public/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1594743062709},{"_id":"public/js/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1594743062709},{"_id":"public/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1594743062709},{"_id":"public/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1594743062709},{"_id":"public/js/motion.js","hash":"a16bc0b701646bf6653484675f4d5dc0f892d184","modified":1594743062709},{"_id":"public/js/next-boot.js","hash":"e0615efab5f81ba0fd39c0527eac31144deac7ce","modified":1594743062709},{"_id":"public/js/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1594743062709},{"_id":"public/js/utils.js","hash":"81913c5f75d0949443833cf4269ad63bd7f9be6f","modified":1594743062709},{"_id":"public/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1594743062709},{"_id":"public/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1594743062709},{"_id":"public/js/schemes/muse.js","hash":"e9bfa6b343b67625f58757efce46ccdaac8f308c","modified":1594743062709},{"_id":"public/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1594743062709},{"_id":"public/js/src/clicklove.js","hash":"9a063bd1b36ce939e33d4d1352398d6490ea5eea","modified":1594743062709},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1594743062709},{"_id":"public/css/main.css","hash":"be05386a4847c0bff7f3739652527a5ee62aa69c","modified":1594743062709},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1594743062709},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1594743062710},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1594743062710},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1594743062710},{"_id":"public/images/wechat.png","hash":"318363f3bedd376b0d612d44f862e3b00ef7ba3d","modified":1594743062710},{"_id":"public/images/one.gif","hash":"ab1b89a5c53e6f50500bcecdb296e5aeb7b183a4","modified":1594743062710},{"_id":"public/2020/01/03/2020-01-02-git配置多个ssh-key/addsshkey.jpg","hash":"b6e09e5d7a81c41604af9833a11f818aeb37595e","modified":1594743062710},{"_id":"public/2019/12/31/2019-12-31-activiti入门01/persion.jpg","hash":"43838069bfdad32eb6dca8086c16d816f1a2c3e2","modified":1594743062710},{"_id":"public/2019/06/09/2019-06-08-插入排序法/InsertSort.gif","hash":"ca62c4dc80eac486ff5ab2807f76e825228b6951","modified":1594743063238},{"_id":"public/2019/06/09/2019-06-08-冒泡排序法/BubbleSort.gif","hash":"fd6590aecff7c33327ce82b348004d88d56c6a84","modified":1594743063581},{"_id":"public/2019/11/21/2019-11-20-01-vue的入门/01.png","hash":"c24fbd61f6178a42cd8a5283c6cc154f30056b60","modified":1594743064075},{"_id":"public/2019/06/13/2019-06-12-选择排序法/SelectSort.gif","hash":"a52157c0615c58066467795c4cd29b6b55a367dc","modified":1594743064078},{"_id":"public/images/linus.png","hash":"80f8c859299f93029dad92885fdbd84199d74077","modified":1594743064080},{"_id":"public/2020/01/03/2020-01-02-activiti-组和网关/parallel.png","hash":"82b676f78a0a5a9920246e4a4840bd22e96d74bf","modified":1594743064082},{"_id":"public/2020/01/03/2020-01-02-activiti-组和网关/inclusive.png","hash":"1a0e03639df277f9099b97d4164dbefaee4d00c6","modified":1594743064084},{"_id":"public/2020/01/03/2020-01-02-activiti-组和网关/exclusive.png","hash":"48837d647cc5e0f3ee545083e185a5276d87333e","modified":1594743064085}],"Category":[{"name":"算法","_id":"ckcm4u6ui000454tng7z9lf3q"},{"name":"软件工程","_id":"ckcm4u6um000954tnmy8ey6zn"},{"name":"Vue","_id":"ckcm4u6up000e54tn3yss0htm"},{"name":"操作系统","_id":"ckcm4u6v2000y54tn6xjmj6zv"},{"name":"Vargrant","_id":"ckcm4u6v4001454tnaqcunp0a"},{"name":"Hexo博客","_id":"ckcm4u6v8001d54tnactji3xn"},{"name":"CRM","_id":"ckcm4u6vf001s54tno4nw0wo0"},{"name":"SSM","_id":"ckcm4u6vl002454tnu2x3tn41"},{"name":"Maven","_id":"ckcm4u6vo002b54tn374eqsnf"},{"name":"web.xml","_id":"ckcm4u6vu002n54tn7blk4tns"},{"name":"shell","_id":"ckcm4u6vx002w54tnxfp31dv9"},{"name":"Jenkins","_id":"ckcm4u6w0003254tn7x3t4na7"},{"name":"git","_id":"ckcm4u6w3003b54tnb4lxj2wz"},{"name":"activiti","_id":"ckcm4u6wi004354tnl6bk0hjc"},{"name":"json-server","_id":"ckcm4u6wu004r54tnli2lojt9"},{"name":"Nginx","_id":"ckcm4u6ww005054tnlz8phh1x"},{"name":"逆向工程","_id":"ckcm4u6wz005854tnl7xqqtib"},{"name":"redis","_id":"ckcm4u6wz005c54tntt4v6q8v"},{"name":"Pagehelper","_id":"ckcm4u6x1005k54tnwf2lhy3z"},{"name":"ActiveMQ","_id":"ckcm4u6x3005r54tnazeply42"},{"name":"Oracle","_id":"ckcm4u6x5006254tny9ck2pry"},{"name":"虚拟机","_id":"ckcm4u6x6006754tnckq7sz1a"},{"name":"JMS API","parent":"ckcm4u6x3005r54tnazeply42","_id":"ckcm4u6x7006d54tn0cgo1bve"},{"name":"Spring","parent":"ckcm4u6x7006d54tn0cgo1bve","_id":"ckcm4u6x8006g54tnebek4bn3"}],"Data":[],"Page":[{"title":"分类","date":"2019-06-01T16:40:52.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-06-01 16:40:52\ntype: \"categories\"\n---\n","updated":"2019-08-10T04:35:46.770Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckcm4u6ua000054tnogy48sbj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-06-01T16:44:52.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-06-01 16:44:52\ntype: \"tags\"\n---\n","updated":"2019-08-10T04:35:46.771Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckcm4u6uf000254tng3jc4htm","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"算法与数据结构","date":"2019-05-08T14:40:43.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于一个算法的分值记录练习</font></center>\n\n<!--more-->\n\n## 以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\n\n```java\npackage com.hui.scoregame;\n\npublic class ScoreObject {\n    private String name;\n    private double score;\n\n    public ScoreObject(String name,double score){\n        this.name=name;\n        this.score=score;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public double getScore() {\n        return score;\n    }\n\n    @Override\n    public String toString() {\n        return \"ScoreObject{\" +\n                \"name='\" + name + '\\'' +\n                \", score=\" + score +\n                '}';\n    }\n}\n\n```\n\n\n```java\npackage com.hui.scoregame;\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n/*\n该类的作用：\n在一个数组里记录成绩，如果数组元素未满，就将新的元素添加进去，并排好序\n如果数组已经满了，就将大的元素插入，排好序\n */\npublic class ScoreGame {\n    //数组的大小\n    int capacity=3;\n    ScoreObject[] arrScore=new ScoreObject[capacity];\n    int space;   //记录此时数组中存在对象的数量\n    public ScoreObject[] game(String name,int score){\n        //arrScore=new ScoreObject[capacity];\n        //System.out.println(Arrays.toString(arrScore));\n        ScoreObject scoreObject=new ScoreObject(name,score);\n        if (arrScore[0]==null){\n            arrScore[0]=scoreObject;\n        }\n        //获取space,先将space重新置为0；\n        space=0;\n        for (int i=0;i<arrScore.length;i++){\n            if (arrScore[i]!=null){\n                ++space;\n            }\n        }\n\n        //判断数组内的元素是否已经满\n        if (space==capacity){\n            //其比第一个元素小吗\n            if (scoreObject.getScore()<arrScore[0].getScore()){\n                return arrScore;\n            }else {\n                arrScore[0]=scoreObject;\n                //for (int i=1;i<capacity;i++){\n                int i=1;\n                    while (scoreObject.getScore()>arrScore[i].getScore()){\n                        //交换位置\n                        arrScore[i-1]=arrScore[i];\n                        //将新的数值插入\n                        arrScore[i]=scoreObject;\n                        ++i;\n                        //防止索引越界\n                        if (i==capacity){\n                            return arrScore;\n                        }\n                    }\n                    return arrScore;\n                //}\n            }\n        }else {\n            //判断新加入的分数是否比最后一个数组元素的分数大\n            if (arrScore[space-1].getScore()<scoreObject.getScore()){\n                //如果是，就在该元素后面再添加一个元素\n                arrScore[space]=scoreObject;\n                return arrScore;\n            }\n            //如果新添加的元素比最后一个元素小\n            while (scoreObject.getScore()<arrScore[space-1].getScore()){\n                //将最后一个元素右移\n                arrScore[space]=arrScore[space-1];\n                //将新添加的元素放到后移后剩下的空格处\n                arrScore[space-1]=scoreObject;\n                //递归\n                --space;\n                //如果到达了最后一个元素，直接返回，防止越界\n                if (space==0){\n                    return arrScore;\n                }\n            }\n        }\n\n\n        return arrScore;\n    }\n\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        ScoreGame scoreGame=new ScoreGame();\n\n        while(true){\n            System.out.println(\"请输入一个姓名：\");\n            String name=sc.next();\n            System.out.println(\"请输入一个分数：\");\n            int score=sc.nextInt();\n            ScoreObject[] s = scoreGame.game(name, score);\n            System.out.println(Arrays.toString(s));\n        }\n    }\n}\n```\n\n\n","source":"_posts/2019-05-08-01-算法.md","raw":"---\ntitle: 算法与数据结构\ndate: 2019-05-08 14:40:43\ncategories: \n- 算法\ntags: \n- 算法\n- 练习\n- 分值\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于一个算法的分值记录练习</font></center>\n\n<!--more-->\n\n## 以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\n\n```java\npackage com.hui.scoregame;\n\npublic class ScoreObject {\n    private String name;\n    private double score;\n\n    public ScoreObject(String name,double score){\n        this.name=name;\n        this.score=score;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public double getScore() {\n        return score;\n    }\n\n    @Override\n    public String toString() {\n        return \"ScoreObject{\" +\n                \"name='\" + name + '\\'' +\n                \", score=\" + score +\n                '}';\n    }\n}\n\n```\n\n\n```java\npackage com.hui.scoregame;\n\nimport java.util.Arrays;\nimport java.util.Scanner;\n/*\n该类的作用：\n在一个数组里记录成绩，如果数组元素未满，就将新的元素添加进去，并排好序\n如果数组已经满了，就将大的元素插入，排好序\n */\npublic class ScoreGame {\n    //数组的大小\n    int capacity=3;\n    ScoreObject[] arrScore=new ScoreObject[capacity];\n    int space;   //记录此时数组中存在对象的数量\n    public ScoreObject[] game(String name,int score){\n        //arrScore=new ScoreObject[capacity];\n        //System.out.println(Arrays.toString(arrScore));\n        ScoreObject scoreObject=new ScoreObject(name,score);\n        if (arrScore[0]==null){\n            arrScore[0]=scoreObject;\n        }\n        //获取space,先将space重新置为0；\n        space=0;\n        for (int i=0;i<arrScore.length;i++){\n            if (arrScore[i]!=null){\n                ++space;\n            }\n        }\n\n        //判断数组内的元素是否已经满\n        if (space==capacity){\n            //其比第一个元素小吗\n            if (scoreObject.getScore()<arrScore[0].getScore()){\n                return arrScore;\n            }else {\n                arrScore[0]=scoreObject;\n                //for (int i=1;i<capacity;i++){\n                int i=1;\n                    while (scoreObject.getScore()>arrScore[i].getScore()){\n                        //交换位置\n                        arrScore[i-1]=arrScore[i];\n                        //将新的数值插入\n                        arrScore[i]=scoreObject;\n                        ++i;\n                        //防止索引越界\n                        if (i==capacity){\n                            return arrScore;\n                        }\n                    }\n                    return arrScore;\n                //}\n            }\n        }else {\n            //判断新加入的分数是否比最后一个数组元素的分数大\n            if (arrScore[space-1].getScore()<scoreObject.getScore()){\n                //如果是，就在该元素后面再添加一个元素\n                arrScore[space]=scoreObject;\n                return arrScore;\n            }\n            //如果新添加的元素比最后一个元素小\n            while (scoreObject.getScore()<arrScore[space-1].getScore()){\n                //将最后一个元素右移\n                arrScore[space]=arrScore[space-1];\n                //将新添加的元素放到后移后剩下的空格处\n                arrScore[space-1]=scoreObject;\n                //递归\n                --space;\n                //如果到达了最后一个元素，直接返回，防止越界\n                if (space==0){\n                    return arrScore;\n                }\n            }\n        }\n\n\n        return arrScore;\n    }\n\n\n    public static void main(String[] args) {\n        Scanner sc=new Scanner(System.in);\n        ScoreGame scoreGame=new ScoreGame();\n\n        while(true){\n            System.out.println(\"请输入一个姓名：\");\n            String name=sc.next();\n            System.out.println(\"请输入一个分数：\");\n            int score=sc.nextInt();\n            ScoreObject[] s = scoreGame.game(name, score);\n            System.out.println(Arrays.toString(s));\n        }\n    }\n}\n```\n\n\n","slug":"2019-05-08-01-算法","published":1,"updated":"2019-08-10T04:35:46.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6uc000154tnssgzh6d8","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于一个算法的分值记录练习</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\"><a href=\"#以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\" class=\"headerlink\" title=\"以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\"></a>以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.scoregame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ScoreObject</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> score;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ScoreObject</span><span class=\"params\">(String name,<span class=\"keyword\">double</span> score)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.score=score;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getScore</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> score;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"ScoreObject&#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"name='\"</span> + name + <span class=\"string\">'\\''</span> +</span><br><span class=\"line\">                <span class=\"string\">\", score=\"</span> + score +</span><br><span class=\"line\">                <span class=\"string\">'&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.scoregame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">该类的作用：</span></span><br><span class=\"line\"><span class=\"comment\">在一个数组里记录成绩，如果数组元素未满，就将新的元素添加进去，并排好序</span></span><br><span class=\"line\"><span class=\"comment\">如果数组已经满了，就将大的元素插入，排好序</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ScoreGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//数组的大小</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> capacity=<span class=\"number\">3</span>;</span><br><span class=\"line\">    ScoreObject[] arrScore=<span class=\"keyword\">new</span> ScoreObject[capacity];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> space;   <span class=\"comment\">//记录此时数组中存在对象的数量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ScoreObject[] game(String name,<span class=\"keyword\">int</span> score)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//arrScore=new ScoreObject[capacity];</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(Arrays.toString(arrScore));</span></span><br><span class=\"line\">        ScoreObject scoreObject=<span class=\"keyword\">new</span> ScoreObject(name,score);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arrScore[<span class=\"number\">0</span>]==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            arrScore[<span class=\"number\">0</span>]=scoreObject;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//获取space,先将space重新置为0；</span></span><br><span class=\"line\">        space=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;arrScore.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrScore[i]!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                ++space;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断数组内的元素是否已经满</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (space==capacity)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//其比第一个元素小吗</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (scoreObject.getScore()&lt;arrScore[<span class=\"number\">0</span>].getScore())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                arrScore[<span class=\"number\">0</span>]=scoreObject;</span><br><span class=\"line\">                <span class=\"comment\">//for (int i=1;i&lt;capacity;i++)&#123;</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (scoreObject.getScore()&gt;arrScore[i].getScore())&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//交换位置</span></span><br><span class=\"line\">                        arrScore[i-<span class=\"number\">1</span>]=arrScore[i];</span><br><span class=\"line\">                        <span class=\"comment\">//将新的数值插入</span></span><br><span class=\"line\">                        arrScore[i]=scoreObject;</span><br><span class=\"line\">                        ++i;</span><br><span class=\"line\">                        <span class=\"comment\">//防止索引越界</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (i==capacity)&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">                <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断新加入的分数是否比最后一个数组元素的分数大</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrScore[space-<span class=\"number\">1</span>].getScore()&lt;scoreObject.getScore())&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果是，就在该元素后面再添加一个元素</span></span><br><span class=\"line\">                arrScore[space]=scoreObject;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果新添加的元素比最后一个元素小</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (scoreObject.getScore()&lt;arrScore[space-<span class=\"number\">1</span>].getScore())&#123;</span><br><span class=\"line\">                <span class=\"comment\">//将最后一个元素右移</span></span><br><span class=\"line\">                arrScore[space]=arrScore[space-<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"comment\">//将新添加的元素放到后移后剩下的空格处</span></span><br><span class=\"line\">                arrScore[space-<span class=\"number\">1</span>]=scoreObject;</span><br><span class=\"line\">                <span class=\"comment\">//递归</span></span><br><span class=\"line\">                --space;</span><br><span class=\"line\">                <span class=\"comment\">//如果到达了最后一个元素，直接返回，防止越界</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (space==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        ScoreGame scoreGame=<span class=\"keyword\">new</span> ScoreGame();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"请输入一个姓名：\"</span>);</span><br><span class=\"line\">            String name=sc.next();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"请输入一个分数：\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> score=sc.nextInt();</span><br><span class=\"line\">            ScoreObject[] s = scoreGame.game(name, score);</span><br><span class=\"line\">            System.out.println(Arrays.toString(s));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于一个算法的分值记录练习</font></center>","more":"<h2 id=\"以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\"><a href=\"#以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\" class=\"headerlink\" title=\"以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤\"></a>以下代码是一个分值记录的，第一个java是一个记分对象，第二个java是实现的步骤</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.scoregame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ScoreObject</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">double</span> score;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ScoreObject</span><span class=\"params\">(String name,<span class=\"keyword\">double</span> score)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.name=name;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.score=score;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">getScore</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> score;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"ScoreObject&#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"name='\"</span> + name + <span class=\"string\">'\\''</span> +</span><br><span class=\"line\">                <span class=\"string\">\", score=\"</span> + score +</span><br><span class=\"line\">                <span class=\"string\">'&#125;'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.scoregame;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">该类的作用：</span></span><br><span class=\"line\"><span class=\"comment\">在一个数组里记录成绩，如果数组元素未满，就将新的元素添加进去，并排好序</span></span><br><span class=\"line\"><span class=\"comment\">如果数组已经满了，就将大的元素插入，排好序</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ScoreGame</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//数组的大小</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> capacity=<span class=\"number\">3</span>;</span><br><span class=\"line\">    ScoreObject[] arrScore=<span class=\"keyword\">new</span> ScoreObject[capacity];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> space;   <span class=\"comment\">//记录此时数组中存在对象的数量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ScoreObject[] game(String name,<span class=\"keyword\">int</span> score)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//arrScore=new ScoreObject[capacity];</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(Arrays.toString(arrScore));</span></span><br><span class=\"line\">        ScoreObject scoreObject=<span class=\"keyword\">new</span> ScoreObject(name,score);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (arrScore[<span class=\"number\">0</span>]==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            arrScore[<span class=\"number\">0</span>]=scoreObject;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//获取space,先将space重新置为0；</span></span><br><span class=\"line\">        space=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;arrScore.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrScore[i]!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                ++space;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//判断数组内的元素是否已经满</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (space==capacity)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//其比第一个元素小吗</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (scoreObject.getScore()&lt;arrScore[<span class=\"number\">0</span>].getScore())&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                arrScore[<span class=\"number\">0</span>]=scoreObject;</span><br><span class=\"line\">                <span class=\"comment\">//for (int i=1;i&lt;capacity;i++)&#123;</span></span><br><span class=\"line\">                <span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">while</span> (scoreObject.getScore()&gt;arrScore[i].getScore())&#123;</span><br><span class=\"line\">                        <span class=\"comment\">//交换位置</span></span><br><span class=\"line\">                        arrScore[i-<span class=\"number\">1</span>]=arrScore[i];</span><br><span class=\"line\">                        <span class=\"comment\">//将新的数值插入</span></span><br><span class=\"line\">                        arrScore[i]=scoreObject;</span><br><span class=\"line\">                        ++i;</span><br><span class=\"line\">                        <span class=\"comment\">//防止索引越界</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (i==capacity)&#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">                <span class=\"comment\">//&#125;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//判断新加入的分数是否比最后一个数组元素的分数大</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrScore[space-<span class=\"number\">1</span>].getScore()&lt;scoreObject.getScore())&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果是，就在该元素后面再添加一个元素</span></span><br><span class=\"line\">                arrScore[space]=scoreObject;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//如果新添加的元素比最后一个元素小</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (scoreObject.getScore()&lt;arrScore[space-<span class=\"number\">1</span>].getScore())&#123;</span><br><span class=\"line\">                <span class=\"comment\">//将最后一个元素右移</span></span><br><span class=\"line\">                arrScore[space]=arrScore[space-<span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"comment\">//将新添加的元素放到后移后剩下的空格处</span></span><br><span class=\"line\">                arrScore[space-<span class=\"number\">1</span>]=scoreObject;</span><br><span class=\"line\">                <span class=\"comment\">//递归</span></span><br><span class=\"line\">                --space;</span><br><span class=\"line\">                <span class=\"comment\">//如果到达了最后一个元素，直接返回，防止越界</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (space==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arrScore;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        Scanner sc=<span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">        ScoreGame scoreGame=<span class=\"keyword\">new</span> ScoreGame();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"请输入一个姓名：\"</span>);</span><br><span class=\"line\">            String name=sc.next();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"请输入一个分数：\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> score=sc.nextInt();</span><br><span class=\"line\">            ScoreObject[] s = scoreGame.game(name, score);</span><br><span class=\"line\">            System.out.println(Arrays.toString(s));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"软件工程-02_过程模型","date":"2019-05-10T17:29:39.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于软件中过程模型的分析</font></center>\n\n<!--more-->\n\n# 过程模型\n\n## 通用过程模型\n\n* 沟通\n\n* 策划\n\n* 建模\n\n* 构建\n\n* 部署\n\n## 过程流\n\n* 描述通用过程模型在执行顺序和执行时间中的活动，动作和任务。\n\n过程流的分类\n\n* 线性过程流\n\n![](https://i.loli.net/2019/05/10/5cd546fe3ab79.png)\n\n* 迭代过程流\n\n![](https://i.loli.net/2019/05/10/5cd5471cb9584.png)\n\n* 演化过程流\n\n![](https://i.loli.net/2019/05/10/5cd54734d67d7.png)\n\n* 并行过程流\n\n![](https://i.loli.net/2019/05/10/5cd547447d68a.png)\n\n明确任务集\n\n* 小型，相对简单的项目\n\n```test\n1.执行项目的利益相关者列表\n2.邀请所有的利益相关者参加一个非正式会议\n3.征询每一个人对于软件特性和功能的需求\n4.讨论需求，并确定最终的需求列表\n5.划定需求优先级\n6.标出不确定领域\n```\n\n* 大型，复杂的软件工程项目\n\n```test\n1.制定项目的利益相关者列表\n2.和利益相关者的每一个成员分别单独讨论，获取所有的要求\n3.基于任务集2中的调查，建立初步的功能和特征列表\n4.安排一系列促进需求获取的会议\n5.组织会议\n6.在每次会议上建立非正式的用户场景\n7.根据利益相关者的反馈，进一步细化用户场景\n8.建立一个修正的需求列表\n9.使用质量功能部署技术，划分需求优先级\n10.将需求打包以便软件可以增量交付\n11.标志系统的约束和限制\n12.讨论系统验证方法\n```\n\n## 惯用过程模型\n\n#### 瀑布模型\n\n* 就是严格按照通用过程模型进行，沟通-->策划-->建模-->构建-->部署\n\n* 使用于开发小型项目，因为大型项目需求变化快，如果后期需求发生变化，采用这种模型需求推倒重来，代价太大。\n\n由瀑布模型演化的一个变题----V模型\n\n* 如下图，V模型下左边向下执行，然后接着右边向上执行。比着瀑布模型只是过了过程中的验证而已\n\n![](https://i.loli.net/2019/05/10/5cd547564ea1c.png)\n\n#### 增量过程模型\n\n* 简单易通的增量过程模型理解\n\n```test\n首先明确：每一个阶段都是一个增量\n第一阶段：整出一个具有核心功能的产品，交由客户评价，有问题就修改，没问题就进行下一个阶段\n第二阶段：开始整其它的附属功能，按功能的需求要求程度以及项目的情况划分该增量，做好后继续交给客户评价，有问题改，没问题进行下一个阶段\n......\n如此的反复解决每一个增量，最终设计出让客户满意的产品\n```\n\n![](https://i.loli.net/2019/05/10/5cd54765b137b.png)\n\n* 该模型的好处，可以避免后期需求的变动而造成整个项目被大改的情况，因为每次增量结束都可以与客户交流增加和修改需求，所以需求的改动每次都是在每个增量上改动。还有个好处是，开发人员数量不够时，可以采用这种模型。\n\n#### 演化过程模型\n\n* 先说该模型要处理的情况：需求变化太快\n\n* 该模型核心：迭代\n\n* 该模型主要分两类：原型模型和螺旋模型\n\n原型开发\n\n  原型开发使用情况：1.客户只能提出软件的基本功能，但是没有详细定义功能和特性需求。2，开发人员对算法的效率，操作系统的兼容性和人机交互的形式不确定\n  \n  方式：在原型的基础上不断迭代，即是对通用过程模型的不断循环\n  \n  ![](https://i.loli.net/2019/05/10/5cd5479155aec.jpg)\n\n螺旋模型\n\n  主要思想依然是迭代\n  \n  ```test\n  螺旋的第一圈：开发产品的规格说明\n  接下来开发产品的原型系统\n  每次迭代逐步完善，开发不同的软件版本\n  即使是软件交付后，螺旋依然继续\n  ```\n\n![](https://i.loli.net/2019/05/10/5cd54782d1cc0.jpg)\n\n\n\n#### 协同模型\n\n* 完全没看懂？？？？？？？\n\n演化模型的最终评述\n\n* 市场情况：一个产品，两家都在做，你做的慢了，然后上线晚了，可以很明确的确定，也许你的产品就没有了市场，此时可以关注一下演化模型\n\n#### 专用过程模型\n\n* 只适用于特定的软件工程方法\n\n分类\n\n* 基于构件的开发\n\n* 形式化方法模型\n\n* 面向方面的软件开发\n\n#### 统一过程(UP,Unified Precess)\n\n* UP的起始阶段\n\n* UP的细化阶段\n\n  ```test\n  扩展体系结构以包括软件的五种视图：\n  用例模型\n  需求模型\n  设计模型\n  实现模型\n  部署模型\n  ```\n\n* UP的构建阶段\n\n* UP的转换阶段\n\n* UP的生产阶段\n\n![](https://i.loli.net/2019/05/10/5cd547b939c55.jpg)\n\n几种过程建模工具\n\nLgrafx\n\nAdeptia BPM Server:    `https://adeptia.com/`\n\nSpeedDev Suite","source":"_posts/2019-05-10-02-软件工程-.md","raw":"---\ntitle: 软件工程-02_过程模型\ndate: 2019-05-10 17:29:39\ncategories: \n- 软件工程\ntags: \n- 软件\n- 软件工程\n- 过程模型\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于软件中过程模型的分析</font></center>\n\n<!--more-->\n\n# 过程模型\n\n## 通用过程模型\n\n* 沟通\n\n* 策划\n\n* 建模\n\n* 构建\n\n* 部署\n\n## 过程流\n\n* 描述通用过程模型在执行顺序和执行时间中的活动，动作和任务。\n\n过程流的分类\n\n* 线性过程流\n\n![](https://i.loli.net/2019/05/10/5cd546fe3ab79.png)\n\n* 迭代过程流\n\n![](https://i.loli.net/2019/05/10/5cd5471cb9584.png)\n\n* 演化过程流\n\n![](https://i.loli.net/2019/05/10/5cd54734d67d7.png)\n\n* 并行过程流\n\n![](https://i.loli.net/2019/05/10/5cd547447d68a.png)\n\n明确任务集\n\n* 小型，相对简单的项目\n\n```test\n1.执行项目的利益相关者列表\n2.邀请所有的利益相关者参加一个非正式会议\n3.征询每一个人对于软件特性和功能的需求\n4.讨论需求，并确定最终的需求列表\n5.划定需求优先级\n6.标出不确定领域\n```\n\n* 大型，复杂的软件工程项目\n\n```test\n1.制定项目的利益相关者列表\n2.和利益相关者的每一个成员分别单独讨论，获取所有的要求\n3.基于任务集2中的调查，建立初步的功能和特征列表\n4.安排一系列促进需求获取的会议\n5.组织会议\n6.在每次会议上建立非正式的用户场景\n7.根据利益相关者的反馈，进一步细化用户场景\n8.建立一个修正的需求列表\n9.使用质量功能部署技术，划分需求优先级\n10.将需求打包以便软件可以增量交付\n11.标志系统的约束和限制\n12.讨论系统验证方法\n```\n\n## 惯用过程模型\n\n#### 瀑布模型\n\n* 就是严格按照通用过程模型进行，沟通-->策划-->建模-->构建-->部署\n\n* 使用于开发小型项目，因为大型项目需求变化快，如果后期需求发生变化，采用这种模型需求推倒重来，代价太大。\n\n由瀑布模型演化的一个变题----V模型\n\n* 如下图，V模型下左边向下执行，然后接着右边向上执行。比着瀑布模型只是过了过程中的验证而已\n\n![](https://i.loli.net/2019/05/10/5cd547564ea1c.png)\n\n#### 增量过程模型\n\n* 简单易通的增量过程模型理解\n\n```test\n首先明确：每一个阶段都是一个增量\n第一阶段：整出一个具有核心功能的产品，交由客户评价，有问题就修改，没问题就进行下一个阶段\n第二阶段：开始整其它的附属功能，按功能的需求要求程度以及项目的情况划分该增量，做好后继续交给客户评价，有问题改，没问题进行下一个阶段\n......\n如此的反复解决每一个增量，最终设计出让客户满意的产品\n```\n\n![](https://i.loli.net/2019/05/10/5cd54765b137b.png)\n\n* 该模型的好处，可以避免后期需求的变动而造成整个项目被大改的情况，因为每次增量结束都可以与客户交流增加和修改需求，所以需求的改动每次都是在每个增量上改动。还有个好处是，开发人员数量不够时，可以采用这种模型。\n\n#### 演化过程模型\n\n* 先说该模型要处理的情况：需求变化太快\n\n* 该模型核心：迭代\n\n* 该模型主要分两类：原型模型和螺旋模型\n\n原型开发\n\n  原型开发使用情况：1.客户只能提出软件的基本功能，但是没有详细定义功能和特性需求。2，开发人员对算法的效率，操作系统的兼容性和人机交互的形式不确定\n  \n  方式：在原型的基础上不断迭代，即是对通用过程模型的不断循环\n  \n  ![](https://i.loli.net/2019/05/10/5cd5479155aec.jpg)\n\n螺旋模型\n\n  主要思想依然是迭代\n  \n  ```test\n  螺旋的第一圈：开发产品的规格说明\n  接下来开发产品的原型系统\n  每次迭代逐步完善，开发不同的软件版本\n  即使是软件交付后，螺旋依然继续\n  ```\n\n![](https://i.loli.net/2019/05/10/5cd54782d1cc0.jpg)\n\n\n\n#### 协同模型\n\n* 完全没看懂？？？？？？？\n\n演化模型的最终评述\n\n* 市场情况：一个产品，两家都在做，你做的慢了，然后上线晚了，可以很明确的确定，也许你的产品就没有了市场，此时可以关注一下演化模型\n\n#### 专用过程模型\n\n* 只适用于特定的软件工程方法\n\n分类\n\n* 基于构件的开发\n\n* 形式化方法模型\n\n* 面向方面的软件开发\n\n#### 统一过程(UP,Unified Precess)\n\n* UP的起始阶段\n\n* UP的细化阶段\n\n  ```test\n  扩展体系结构以包括软件的五种视图：\n  用例模型\n  需求模型\n  设计模型\n  实现模型\n  部署模型\n  ```\n\n* UP的构建阶段\n\n* UP的转换阶段\n\n* UP的生产阶段\n\n![](https://i.loli.net/2019/05/10/5cd547b939c55.jpg)\n\n几种过程建模工具\n\nLgrafx\n\nAdeptia BPM Server:    `https://adeptia.com/`\n\nSpeedDev Suite","slug":"2019-05-10-02-软件工程-","published":1,"updated":"2019-08-10T04:35:46.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6ug000354tn5egbtzk5","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件中过程模型的分析</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"过程模型\"><a href=\"#过程模型\" class=\"headerlink\" title=\"过程模型\"></a>过程模型</h1><h2 id=\"通用过程模型\"><a href=\"#通用过程模型\" class=\"headerlink\" title=\"通用过程模型\"></a>通用过程模型</h2><ul>\n<li><p>沟通</p>\n</li>\n<li><p>策划</p>\n</li>\n<li><p>建模</p>\n</li>\n<li><p>构建</p>\n</li>\n<li><p>部署</p>\n</li>\n</ul>\n<h2 id=\"过程流\"><a href=\"#过程流\" class=\"headerlink\" title=\"过程流\"></a>过程流</h2><ul>\n<li>描述通用过程模型在执行顺序和执行时间中的活动，动作和任务。</li>\n</ul>\n<p>过程流的分类</p>\n<ul>\n<li>线性过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd546fe3ab79.png\" alt></p>\n<ul>\n<li>迭代过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd5471cb9584.png\" alt></p>\n<ul>\n<li>演化过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd54734d67d7.png\" alt></p>\n<ul>\n<li>并行过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd547447d68a.png\" alt></p>\n<p>明确任务集</p>\n<ul>\n<li>小型，相对简单的项目</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.执行项目的利益相关者列表</span><br><span class=\"line\">2.邀请所有的利益相关者参加一个非正式会议</span><br><span class=\"line\">3.征询每一个人对于软件特性和功能的需求</span><br><span class=\"line\">4.讨论需求，并确定最终的需求列表</span><br><span class=\"line\">5.划定需求优先级</span><br><span class=\"line\">6.标出不确定领域</span><br></pre></td></tr></table></figure>\n<ul>\n<li>大型，复杂的软件工程项目</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.制定项目的利益相关者列表</span><br><span class=\"line\">2.和利益相关者的每一个成员分别单独讨论，获取所有的要求</span><br><span class=\"line\">3.基于任务集2中的调查，建立初步的功能和特征列表</span><br><span class=\"line\">4.安排一系列促进需求获取的会议</span><br><span class=\"line\">5.组织会议</span><br><span class=\"line\">6.在每次会议上建立非正式的用户场景</span><br><span class=\"line\">7.根据利益相关者的反馈，进一步细化用户场景</span><br><span class=\"line\">8.建立一个修正的需求列表</span><br><span class=\"line\">9.使用质量功能部署技术，划分需求优先级</span><br><span class=\"line\">10.将需求打包以便软件可以增量交付</span><br><span class=\"line\">11.标志系统的约束和限制</span><br><span class=\"line\">12.讨论系统验证方法</span><br></pre></td></tr></table></figure>\n<h2 id=\"惯用过程模型\"><a href=\"#惯用过程模型\" class=\"headerlink\" title=\"惯用过程模型\"></a>惯用过程模型</h2><h4 id=\"瀑布模型\"><a href=\"#瀑布模型\" class=\"headerlink\" title=\"瀑布模型\"></a>瀑布模型</h4><ul>\n<li><p>就是严格按照通用过程模型进行，沟通–&gt;策划–&gt;建模–&gt;构建–&gt;部署</p>\n</li>\n<li><p>使用于开发小型项目，因为大型项目需求变化快，如果后期需求发生变化，采用这种模型需求推倒重来，代价太大。</p>\n</li>\n</ul>\n<p>由瀑布模型演化的一个变题—-V模型</p>\n<ul>\n<li>如下图，V模型下左边向下执行，然后接着右边向上执行。比着瀑布模型只是过了过程中的验证而已</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd547564ea1c.png\" alt></p>\n<h4 id=\"增量过程模型\"><a href=\"#增量过程模型\" class=\"headerlink\" title=\"增量过程模型\"></a>增量过程模型</h4><ul>\n<li>简单易通的增量过程模型理解</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先明确：每一个阶段都是一个增量</span><br><span class=\"line\">第一阶段：整出一个具有核心功能的产品，交由客户评价，有问题就修改，没问题就进行下一个阶段</span><br><span class=\"line\">第二阶段：开始整其它的附属功能，按功能的需求要求程度以及项目的情况划分该增量，做好后继续交给客户评价，有问题改，没问题进行下一个阶段</span><br><span class=\"line\">......</span><br><span class=\"line\">如此的反复解决每一个增量，最终设计出让客户满意的产品</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd54765b137b.png\" alt></p>\n<ul>\n<li>该模型的好处，可以避免后期需求的变动而造成整个项目被大改的情况，因为每次增量结束都可以与客户交流增加和修改需求，所以需求的改动每次都是在每个增量上改动。还有个好处是，开发人员数量不够时，可以采用这种模型。</li>\n</ul>\n<h4 id=\"演化过程模型\"><a href=\"#演化过程模型\" class=\"headerlink\" title=\"演化过程模型\"></a>演化过程模型</h4><ul>\n<li><p>先说该模型要处理的情况：需求变化太快</p>\n</li>\n<li><p>该模型核心：迭代</p>\n</li>\n<li><p>该模型主要分两类：原型模型和螺旋模型</p>\n</li>\n</ul>\n<p>原型开发</p>\n<p>  原型开发使用情况：1.客户只能提出软件的基本功能，但是没有详细定义功能和特性需求。2，开发人员对算法的效率，操作系统的兼容性和人机交互的形式不确定</p>\n<p>  方式：在原型的基础上不断迭代，即是对通用过程模型的不断循环</p>\n<p>  <img src=\"https://i.loli.net/2019/05/10/5cd5479155aec.jpg\" alt></p>\n<p>螺旋模型</p>\n<p>  主要思想依然是迭代</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">螺旋的第一圈：开发产品的规格说明</span><br><span class=\"line\">接下来开发产品的原型系统</span><br><span class=\"line\">每次迭代逐步完善，开发不同的软件版本</span><br><span class=\"line\">即使是软件交付后，螺旋依然继续</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd54782d1cc0.jpg\" alt></p>\n<h4 id=\"协同模型\"><a href=\"#协同模型\" class=\"headerlink\" title=\"协同模型\"></a>协同模型</h4><ul>\n<li>完全没看懂？？？？？？？</li>\n</ul>\n<p>演化模型的最终评述</p>\n<ul>\n<li>市场情况：一个产品，两家都在做，你做的慢了，然后上线晚了，可以很明确的确定，也许你的产品就没有了市场，此时可以关注一下演化模型</li>\n</ul>\n<h4 id=\"专用过程模型\"><a href=\"#专用过程模型\" class=\"headerlink\" title=\"专用过程模型\"></a>专用过程模型</h4><ul>\n<li>只适用于特定的软件工程方法</li>\n</ul>\n<p>分类</p>\n<ul>\n<li><p>基于构件的开发</p>\n</li>\n<li><p>形式化方法模型</p>\n</li>\n<li><p>面向方面的软件开发</p>\n</li>\n</ul>\n<h4 id=\"统一过程-UP-Unified-Precess\"><a href=\"#统一过程-UP-Unified-Precess\" class=\"headerlink\" title=\"统一过程(UP,Unified Precess)\"></a>统一过程(UP,Unified Precess)</h4><ul>\n<li><p>UP的起始阶段</p>\n</li>\n<li><p>UP的细化阶段</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">扩展体系结构以包括软件的五种视图：</span><br><span class=\"line\">用例模型</span><br><span class=\"line\">需求模型</span><br><span class=\"line\">设计模型</span><br><span class=\"line\">实现模型</span><br><span class=\"line\">部署模型</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>UP的构建阶段</p>\n</li>\n<li><p>UP的转换阶段</p>\n</li>\n<li><p>UP的生产阶段</p>\n</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd547b939c55.jpg\" alt></p>\n<p>几种过程建模工具</p>\n<p>Lgrafx</p>\n<p>Adeptia BPM Server:    <code>https://adeptia.com/</code></p>\n<p>SpeedDev Suite</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件中过程模型的分析</font></center>","more":"<h1 id=\"过程模型\"><a href=\"#过程模型\" class=\"headerlink\" title=\"过程模型\"></a>过程模型</h1><h2 id=\"通用过程模型\"><a href=\"#通用过程模型\" class=\"headerlink\" title=\"通用过程模型\"></a>通用过程模型</h2><ul>\n<li><p>沟通</p>\n</li>\n<li><p>策划</p>\n</li>\n<li><p>建模</p>\n</li>\n<li><p>构建</p>\n</li>\n<li><p>部署</p>\n</li>\n</ul>\n<h2 id=\"过程流\"><a href=\"#过程流\" class=\"headerlink\" title=\"过程流\"></a>过程流</h2><ul>\n<li>描述通用过程模型在执行顺序和执行时间中的活动，动作和任务。</li>\n</ul>\n<p>过程流的分类</p>\n<ul>\n<li>线性过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd546fe3ab79.png\" alt></p>\n<ul>\n<li>迭代过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd5471cb9584.png\" alt></p>\n<ul>\n<li>演化过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd54734d67d7.png\" alt></p>\n<ul>\n<li>并行过程流</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd547447d68a.png\" alt></p>\n<p>明确任务集</p>\n<ul>\n<li>小型，相对简单的项目</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.执行项目的利益相关者列表</span><br><span class=\"line\">2.邀请所有的利益相关者参加一个非正式会议</span><br><span class=\"line\">3.征询每一个人对于软件特性和功能的需求</span><br><span class=\"line\">4.讨论需求，并确定最终的需求列表</span><br><span class=\"line\">5.划定需求优先级</span><br><span class=\"line\">6.标出不确定领域</span><br></pre></td></tr></table></figure>\n<ul>\n<li>大型，复杂的软件工程项目</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.制定项目的利益相关者列表</span><br><span class=\"line\">2.和利益相关者的每一个成员分别单独讨论，获取所有的要求</span><br><span class=\"line\">3.基于任务集2中的调查，建立初步的功能和特征列表</span><br><span class=\"line\">4.安排一系列促进需求获取的会议</span><br><span class=\"line\">5.组织会议</span><br><span class=\"line\">6.在每次会议上建立非正式的用户场景</span><br><span class=\"line\">7.根据利益相关者的反馈，进一步细化用户场景</span><br><span class=\"line\">8.建立一个修正的需求列表</span><br><span class=\"line\">9.使用质量功能部署技术，划分需求优先级</span><br><span class=\"line\">10.将需求打包以便软件可以增量交付</span><br><span class=\"line\">11.标志系统的约束和限制</span><br><span class=\"line\">12.讨论系统验证方法</span><br></pre></td></tr></table></figure>\n<h2 id=\"惯用过程模型\"><a href=\"#惯用过程模型\" class=\"headerlink\" title=\"惯用过程模型\"></a>惯用过程模型</h2><h4 id=\"瀑布模型\"><a href=\"#瀑布模型\" class=\"headerlink\" title=\"瀑布模型\"></a>瀑布模型</h4><ul>\n<li><p>就是严格按照通用过程模型进行，沟通–&gt;策划–&gt;建模–&gt;构建–&gt;部署</p>\n</li>\n<li><p>使用于开发小型项目，因为大型项目需求变化快，如果后期需求发生变化，采用这种模型需求推倒重来，代价太大。</p>\n</li>\n</ul>\n<p>由瀑布模型演化的一个变题—-V模型</p>\n<ul>\n<li>如下图，V模型下左边向下执行，然后接着右边向上执行。比着瀑布模型只是过了过程中的验证而已</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd547564ea1c.png\" alt></p>\n<h4 id=\"增量过程模型\"><a href=\"#增量过程模型\" class=\"headerlink\" title=\"增量过程模型\"></a>增量过程模型</h4><ul>\n<li>简单易通的增量过程模型理解</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">首先明确：每一个阶段都是一个增量</span><br><span class=\"line\">第一阶段：整出一个具有核心功能的产品，交由客户评价，有问题就修改，没问题就进行下一个阶段</span><br><span class=\"line\">第二阶段：开始整其它的附属功能，按功能的需求要求程度以及项目的情况划分该增量，做好后继续交给客户评价，有问题改，没问题进行下一个阶段</span><br><span class=\"line\">......</span><br><span class=\"line\">如此的反复解决每一个增量，最终设计出让客户满意的产品</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd54765b137b.png\" alt></p>\n<ul>\n<li>该模型的好处，可以避免后期需求的变动而造成整个项目被大改的情况，因为每次增量结束都可以与客户交流增加和修改需求，所以需求的改动每次都是在每个增量上改动。还有个好处是，开发人员数量不够时，可以采用这种模型。</li>\n</ul>\n<h4 id=\"演化过程模型\"><a href=\"#演化过程模型\" class=\"headerlink\" title=\"演化过程模型\"></a>演化过程模型</h4><ul>\n<li><p>先说该模型要处理的情况：需求变化太快</p>\n</li>\n<li><p>该模型核心：迭代</p>\n</li>\n<li><p>该模型主要分两类：原型模型和螺旋模型</p>\n</li>\n</ul>\n<p>原型开发</p>\n<p>  原型开发使用情况：1.客户只能提出软件的基本功能，但是没有详细定义功能和特性需求。2，开发人员对算法的效率，操作系统的兼容性和人机交互的形式不确定</p>\n<p>  方式：在原型的基础上不断迭代，即是对通用过程模型的不断循环</p>\n<p>  <img src=\"https://i.loli.net/2019/05/10/5cd5479155aec.jpg\" alt></p>\n<p>螺旋模型</p>\n<p>  主要思想依然是迭代</p>\n  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">螺旋的第一圈：开发产品的规格说明</span><br><span class=\"line\">接下来开发产品的原型系统</span><br><span class=\"line\">每次迭代逐步完善，开发不同的软件版本</span><br><span class=\"line\">即使是软件交付后，螺旋依然继续</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd54782d1cc0.jpg\" alt></p>\n<h4 id=\"协同模型\"><a href=\"#协同模型\" class=\"headerlink\" title=\"协同模型\"></a>协同模型</h4><ul>\n<li>完全没看懂？？？？？？？</li>\n</ul>\n<p>演化模型的最终评述</p>\n<ul>\n<li>市场情况：一个产品，两家都在做，你做的慢了，然后上线晚了，可以很明确的确定，也许你的产品就没有了市场，此时可以关注一下演化模型</li>\n</ul>\n<h4 id=\"专用过程模型\"><a href=\"#专用过程模型\" class=\"headerlink\" title=\"专用过程模型\"></a>专用过程模型</h4><ul>\n<li>只适用于特定的软件工程方法</li>\n</ul>\n<p>分类</p>\n<ul>\n<li><p>基于构件的开发</p>\n</li>\n<li><p>形式化方法模型</p>\n</li>\n<li><p>面向方面的软件开发</p>\n</li>\n</ul>\n<h4 id=\"统一过程-UP-Unified-Precess\"><a href=\"#统一过程-UP-Unified-Precess\" class=\"headerlink\" title=\"统一过程(UP,Unified Precess)\"></a>统一过程(UP,Unified Precess)</h4><ul>\n<li><p>UP的起始阶段</p>\n</li>\n<li><p>UP的细化阶段</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">扩展体系结构以包括软件的五种视图：</span><br><span class=\"line\">用例模型</span><br><span class=\"line\">需求模型</span><br><span class=\"line\">设计模型</span><br><span class=\"line\">实现模型</span><br><span class=\"line\">部署模型</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>UP的构建阶段</p>\n</li>\n<li><p>UP的转换阶段</p>\n</li>\n<li><p>UP的生产阶段</p>\n</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/10/5cd547b939c55.jpg\" alt></p>\n<p>几种过程建模工具</p>\n<p>Lgrafx</p>\n<p>Adeptia BPM Server:    <code>https://adeptia.com/</code></p>\n<p>SpeedDev Suite</p>"},{"title":"使用vue-cli搭建项目","date":"2019-09-03T16:05:19.000Z","_content":"\n<center><font size=4 color=\"red\">使用vue-cli搭建项目</font></center>\n\n<!--more-->\n\n## 使用vue-cli搭建项目\n\n####  安装node.js\n\n首先需要安装node环境\n\n1、这是node.js最新固定版本下载地址：http://nodejs.cn\n\n2、这是多版本的node.js的下载地址：https://blog.csdn.net/s8460049/article/details/52396399\n\n安装完成后，可以在该文件夹下打开cmd命令工具输入node -v和npm -v，如果能显示出版本号，就说明安装成功。\n\n#### 安装vue-cli\n\n1、先安装cnpm，因为npm执行速度比较慢\n\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n\n2、安装vue-cli和webpack\n\n```\ncnpm install -g vue-cli\n```\n\n最新的vue项目模板中，都有webpack插件，所以这里可以不安装\n\n3、执行`vue -V`查看是否安装成功，可能会出现以下错误\n\n```\nvue : 无法加载文件 C:\\Users\\wanghui\\AppData\\Roaming\\npm\\vue.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135\n170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ vue -V\n+ ~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\n```\n\n解决方案：\n\n`1. 以管理员身份运行PowerShell`\n\n`2. 执行：get-ExecutionPolicy，回复Restricted，表示状态是禁止的`\n\n`3.执行：set-ExecutionPolicy RemoteSigned`\n\n`4.选择Y`\n\n> 注意：一定要以管理员的身份运行PowerShell，不是cmd窗口\n\n#### 生成项目\n\n首先需要在命令行中进入到项目目录，然后输入：\n\n```\nvue init webpack Vue-Project\n```\n\n其中webpack是模板名称，可以到vue.js的GitHub上查看很多的模板https://github.com/vuejs-templates\n\nVue-Project是自定义的项目名称，命令执行之后，会在当前目录生成一个以该名称命名的项目文件夹\n\n由于webpack是托管在github上的，因此直接执行`vue init webpack Vue-Project`会连接不上主机，可以在https://gitlab.com/wanghui20192/webpack； 将webpack下载到本地，然后执行：\n\n```\n#这里会有一些配置，默认回车即可\nvue init C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack Vue-Project\n```\n\n其中的C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack为我本机下载下来的webpack位置。\n\n## 进入项目，安装并运行\n\n```\n$ cd vue-project\n$ cnpm install\n$ cnpm run dev\n```\n\n访问：http://localhost:8080； 页面正常访问，即成功了\n\n## 项目目录介绍\n\n| 目录/文件    | 说明                                                         |\n| ------------ | ------------------------------------------------------------ |\n| build        | 项目构建(webpack)相关代码                                    |\n| config       | 配置目录，包括端口号等。我们初学可以使用默认的。             |\n| node_modules | npm 加载的项目依赖模块                                       |\n| src          | 这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：1.assets：存图片，如logo  2.components：存组件，可以不用   3.App.vue：项目的入口，我们也可以直接将组件写这里，而不使用 components 目录 4.main.js：项目的核心文件 |\n| static       | 静态资源目录，如图片、字体等。                               |\n| test         | 初始测试目录，可删除                                         |\n| .xxxx文件    | 这些是一些配置文件，包括语法配置，git配置等。                |\n| index.html   | 首页入口文件，你可以添加一些 meta 信息或统计代码啥的。       |\n| package.json | 项目配置文件。                                               |\n| README.md    | 项目的说明文档，markdown 格式                                |\n\n\n\n\n\n\n","source":"_posts/2019-05-08-使用vue-cli搭建项目.md","raw":"---\ntitle: 使用vue-cli搭建项目\ndate: 2019-09-03 16:05:19\ncategories:\n- Vue\ntags:\n- webpack\n- vue\n---\n\n<center><font size=4 color=\"red\">使用vue-cli搭建项目</font></center>\n\n<!--more-->\n\n## 使用vue-cli搭建项目\n\n####  安装node.js\n\n首先需要安装node环境\n\n1、这是node.js最新固定版本下载地址：http://nodejs.cn\n\n2、这是多版本的node.js的下载地址：https://blog.csdn.net/s8460049/article/details/52396399\n\n安装完成后，可以在该文件夹下打开cmd命令工具输入node -v和npm -v，如果能显示出版本号，就说明安装成功。\n\n#### 安装vue-cli\n\n1、先安装cnpm，因为npm执行速度比较慢\n\n```\nnpm install -g cnpm --registry=https://registry.npm.taobao.org\n```\n\n2、安装vue-cli和webpack\n\n```\ncnpm install -g vue-cli\n```\n\n最新的vue项目模板中，都有webpack插件，所以这里可以不安装\n\n3、执行`vue -V`查看是否安装成功，可能会出现以下错误\n\n```\nvue : 无法加载文件 C:\\Users\\wanghui\\AppData\\Roaming\\npm\\vue.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135\n170 中的 about_Execution_Policies。\n所在位置 行:1 字符: 1\n+ vue -V\n+ ~~~\n    + CategoryInfo          : SecurityError: (:) []，PSSecurityException\n    + FullyQualifiedErrorId : UnauthorizedAccess\n```\n\n解决方案：\n\n`1. 以管理员身份运行PowerShell`\n\n`2. 执行：get-ExecutionPolicy，回复Restricted，表示状态是禁止的`\n\n`3.执行：set-ExecutionPolicy RemoteSigned`\n\n`4.选择Y`\n\n> 注意：一定要以管理员的身份运行PowerShell，不是cmd窗口\n\n#### 生成项目\n\n首先需要在命令行中进入到项目目录，然后输入：\n\n```\nvue init webpack Vue-Project\n```\n\n其中webpack是模板名称，可以到vue.js的GitHub上查看很多的模板https://github.com/vuejs-templates\n\nVue-Project是自定义的项目名称，命令执行之后，会在当前目录生成一个以该名称命名的项目文件夹\n\n由于webpack是托管在github上的，因此直接执行`vue init webpack Vue-Project`会连接不上主机，可以在https://gitlab.com/wanghui20192/webpack； 将webpack下载到本地，然后执行：\n\n```\n#这里会有一些配置，默认回车即可\nvue init C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack Vue-Project\n```\n\n其中的C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack为我本机下载下来的webpack位置。\n\n## 进入项目，安装并运行\n\n```\n$ cd vue-project\n$ cnpm install\n$ cnpm run dev\n```\n\n访问：http://localhost:8080； 页面正常访问，即成功了\n\n## 项目目录介绍\n\n| 目录/文件    | 说明                                                         |\n| ------------ | ------------------------------------------------------------ |\n| build        | 项目构建(webpack)相关代码                                    |\n| config       | 配置目录，包括端口号等。我们初学可以使用默认的。             |\n| node_modules | npm 加载的项目依赖模块                                       |\n| src          | 这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：1.assets：存图片，如logo  2.components：存组件，可以不用   3.App.vue：项目的入口，我们也可以直接将组件写这里，而不使用 components 目录 4.main.js：项目的核心文件 |\n| static       | 静态资源目录，如图片、字体等。                               |\n| test         | 初始测试目录，可删除                                         |\n| .xxxx文件    | 这些是一些配置文件，包括语法配置，git配置等。                |\n| index.html   | 首页入口文件，你可以添加一些 meta 信息或统计代码啥的。       |\n| package.json | 项目配置文件。                                               |\n| README.md    | 项目的说明文档，markdown 格式                                |\n\n\n\n\n\n\n","slug":"2019-05-08-使用vue-cli搭建项目","published":1,"updated":"2020-01-11T02:21:08.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6uj000654tn8plo083l","content":"<center><font size=\"4\" color=\"red\">使用vue-cli搭建项目</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"使用vue-cli搭建项目\"><a href=\"#使用vue-cli搭建项目\" class=\"headerlink\" title=\"使用vue-cli搭建项目\"></a>使用vue-cli搭建项目</h2><h4 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h4><p>首先需要安装node环境</p>\n<p>1、这是node.js最新固定版本下载地址：<a href=\"http://nodejs.cn\" target=\"_blank\" rel=\"noopener\">http://nodejs.cn</a></p>\n<p>2、这是多版本的node.js的下载地址：<a href=\"https://blog.csdn.net/s8460049/article/details/52396399\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/s8460049/article/details/52396399</a></p>\n<p>安装完成后，可以在该文件夹下打开cmd命令工具输入node -v和npm -v，如果能显示出版本号，就说明安装成功。</p>\n<h4 id=\"安装vue-cli\"><a href=\"#安装vue-cli\" class=\"headerlink\" title=\"安装vue-cli\"></a>安装vue-cli</h4><p>1、先安装cnpm，因为npm执行速度比较慢</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>2、安装vue-cli和webpack</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install -g vue-cli</span><br></pre></td></tr></table></figure>\n<p>最新的vue项目模板中，都有webpack插件，所以这里可以不安装</p>\n<p>3、执行<code>vue -V</code>查看是否安装成功，可能会出现以下错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue : 无法加载文件 C:\\Users\\wanghui\\AppData\\Roaming\\npm\\vue.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135</span><br><span class=\"line\">170 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:1 字符: 1</span><br><span class=\"line\">+ vue -V</span><br><span class=\"line\">+ ~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure>\n<p>解决方案：</p>\n<p><code>1. 以管理员身份运行PowerShell</code></p>\n<p><code>2. 执行：get-ExecutionPolicy，回复Restricted，表示状态是禁止的</code></p>\n<p><code>3.执行：set-ExecutionPolicy RemoteSigned</code></p>\n<p><code>4.选择Y</code></p>\n<blockquote>\n<p>注意：一定要以管理员的身份运行PowerShell，不是cmd窗口</p>\n</blockquote>\n<h4 id=\"生成项目\"><a href=\"#生成项目\" class=\"headerlink\" title=\"生成项目\"></a>生成项目</h4><p>首先需要在命令行中进入到项目目录，然后输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack Vue-Project</span><br></pre></td></tr></table></figure>\n<p>其中webpack是模板名称，可以到vue.js的GitHub上查看很多的模板<a href=\"https://github.com/vuejs-templates\" target=\"_blank\" rel=\"noopener\">https://github.com/vuejs-templates</a></p>\n<p>Vue-Project是自定义的项目名称，命令执行之后，会在当前目录生成一个以该名称命名的项目文件夹</p>\n<p>由于webpack是托管在github上的，因此直接执行<code>vue init webpack Vue-Project</code>会连接不上主机，可以在<a href=\"https://gitlab.com/wanghui20192/webpack；\" target=\"_blank\" rel=\"noopener\">https://gitlab.com/wanghui20192/webpack；</a> 将webpack下载到本地，然后执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#这里会有一些配置，默认回车即可</span><br><span class=\"line\">vue init C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack Vue-Project</span><br></pre></td></tr></table></figure>\n<p>其中的C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack为我本机下载下来的webpack位置。</p>\n<h2 id=\"进入项目，安装并运行\"><a href=\"#进入项目，安装并运行\" class=\"headerlink\" title=\"进入项目，安装并运行\"></a>进入项目，安装并运行</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd vue-project</span><br><span class=\"line\">$ cnpm install</span><br><span class=\"line\">$ cnpm run dev</span><br></pre></td></tr></table></figure>\n<p>访问：<a href=\"http://localhost:8080；\" target=\"_blank\" rel=\"noopener\">http://localhost:8080；</a> 页面正常访问，即成功了</p>\n<h2 id=\"项目目录介绍\"><a href=\"#项目目录介绍\" class=\"headerlink\" title=\"项目目录介绍\"></a>项目目录介绍</h2><table>\n<thead>\n<tr>\n<th>目录/文件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>build</td>\n<td>项目构建(webpack)相关代码</td>\n</tr>\n<tr>\n<td>config</td>\n<td>配置目录，包括端口号等。我们初学可以使用默认的。</td>\n</tr>\n<tr>\n<td>node_modules</td>\n<td>npm 加载的项目依赖模块</td>\n</tr>\n<tr>\n<td>src</td>\n<td>这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：1.assets：存图片，如logo  2.components：存组件，可以不用   3.App.vue：项目的入口，我们也可以直接将组件写这里，而不使用 components 目录 4.main.js：项目的核心文件</td>\n</tr>\n<tr>\n<td>static</td>\n<td>静态资源目录，如图片、字体等。</td>\n</tr>\n<tr>\n<td>test</td>\n<td>初始测试目录，可删除</td>\n</tr>\n<tr>\n<td>.xxxx文件</td>\n<td>这些是一些配置文件，包括语法配置，git配置等。</td>\n</tr>\n<tr>\n<td>index.html</td>\n<td>首页入口文件，你可以添加一些 meta 信息或统计代码啥的。</td>\n</tr>\n<tr>\n<td>package.json</td>\n<td>项目配置文件。</td>\n</tr>\n<tr>\n<td>README.md</td>\n<td>项目的说明文档，markdown 格式</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">使用vue-cli搭建项目</font></center>","more":"<h2 id=\"使用vue-cli搭建项目\"><a href=\"#使用vue-cli搭建项目\" class=\"headerlink\" title=\"使用vue-cli搭建项目\"></a>使用vue-cli搭建项目</h2><h4 id=\"安装node-js\"><a href=\"#安装node-js\" class=\"headerlink\" title=\"安装node.js\"></a>安装node.js</h4><p>首先需要安装node环境</p>\n<p>1、这是node.js最新固定版本下载地址：<a href=\"http://nodejs.cn\" target=\"_blank\" rel=\"noopener\">http://nodejs.cn</a></p>\n<p>2、这是多版本的node.js的下载地址：<a href=\"https://blog.csdn.net/s8460049/article/details/52396399\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/s8460049/article/details/52396399</a></p>\n<p>安装完成后，可以在该文件夹下打开cmd命令工具输入node -v和npm -v，如果能显示出版本号，就说明安装成功。</p>\n<h4 id=\"安装vue-cli\"><a href=\"#安装vue-cli\" class=\"headerlink\" title=\"安装vue-cli\"></a>安装vue-cli</h4><p>1、先安装cnpm，因为npm执行速度比较慢</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>2、安装vue-cli和webpack</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install -g vue-cli</span><br></pre></td></tr></table></figure>\n<p>最新的vue项目模板中，都有webpack插件，所以这里可以不安装</p>\n<p>3、执行<code>vue -V</code>查看是否安装成功，可能会出现以下错误</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue : 无法加载文件 C:\\Users\\wanghui\\AppData\\Roaming\\npm\\vue.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135</span><br><span class=\"line\">170 中的 about_Execution_Policies。</span><br><span class=\"line\">所在位置 行:1 字符: 1</span><br><span class=\"line\">+ vue -V</span><br><span class=\"line\">+ ~~~</span><br><span class=\"line\">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class=\"line\">    + FullyQualifiedErrorId : UnauthorizedAccess</span><br></pre></td></tr></table></figure>\n<p>解决方案：</p>\n<p><code>1. 以管理员身份运行PowerShell</code></p>\n<p><code>2. 执行：get-ExecutionPolicy，回复Restricted，表示状态是禁止的</code></p>\n<p><code>3.执行：set-ExecutionPolicy RemoteSigned</code></p>\n<p><code>4.选择Y</code></p>\n<blockquote>\n<p>注意：一定要以管理员的身份运行PowerShell，不是cmd窗口</p>\n</blockquote>\n<h4 id=\"生成项目\"><a href=\"#生成项目\" class=\"headerlink\" title=\"生成项目\"></a>生成项目</h4><p>首先需要在命令行中进入到项目目录，然后输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vue init webpack Vue-Project</span><br></pre></td></tr></table></figure>\n<p>其中webpack是模板名称，可以到vue.js的GitHub上查看很多的模板<a href=\"https://github.com/vuejs-templates\" target=\"_blank\" rel=\"noopener\">https://github.com/vuejs-templates</a></p>\n<p>Vue-Project是自定义的项目名称，命令执行之后，会在当前目录生成一个以该名称命名的项目文件夹</p>\n<p>由于webpack是托管在github上的，因此直接执行<code>vue init webpack Vue-Project</code>会连接不上主机，可以在<a href=\"https://gitlab.com/wanghui20192/webpack；\" target=\"_blank\" rel=\"noopener\">https://gitlab.com/wanghui20192/webpack；</a> 将webpack下载到本地，然后执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#这里会有一些配置，默认回车即可</span><br><span class=\"line\">vue init C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack Vue-Project</span><br></pre></td></tr></table></figure>\n<p>其中的C:\\wanghui\\persion\\docs\\01_javaEE\\vue\\code\\webpack为我本机下载下来的webpack位置。</p>\n<h2 id=\"进入项目，安装并运行\"><a href=\"#进入项目，安装并运行\" class=\"headerlink\" title=\"进入项目，安装并运行\"></a>进入项目，安装并运行</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd vue-project</span><br><span class=\"line\">$ cnpm install</span><br><span class=\"line\">$ cnpm run dev</span><br></pre></td></tr></table></figure>\n<p>访问：<a href=\"http://localhost:8080；\" target=\"_blank\" rel=\"noopener\">http://localhost:8080；</a> 页面正常访问，即成功了</p>\n<h2 id=\"项目目录介绍\"><a href=\"#项目目录介绍\" class=\"headerlink\" title=\"项目目录介绍\"></a>项目目录介绍</h2><table>\n<thead>\n<tr>\n<th>目录/文件</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>build</td>\n<td>项目构建(webpack)相关代码</td>\n</tr>\n<tr>\n<td>config</td>\n<td>配置目录，包括端口号等。我们初学可以使用默认的。</td>\n</tr>\n<tr>\n<td>node_modules</td>\n<td>npm 加载的项目依赖模块</td>\n</tr>\n<tr>\n<td>src</td>\n<td>这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：1.assets：存图片，如logo  2.components：存组件，可以不用   3.App.vue：项目的入口，我们也可以直接将组件写这里，而不使用 components 目录 4.main.js：项目的核心文件</td>\n</tr>\n<tr>\n<td>static</td>\n<td>静态资源目录，如图片、字体等。</td>\n</tr>\n<tr>\n<td>test</td>\n<td>初始测试目录，可删除</td>\n</tr>\n<tr>\n<td>.xxxx文件</td>\n<td>这些是一些配置文件，包括语法配置，git配置等。</td>\n</tr>\n<tr>\n<td>index.html</td>\n<td>首页入口文件，你可以添加一些 meta 信息或统计代码啥的。</td>\n</tr>\n<tr>\n<td>package.json</td>\n<td>项目配置文件。</td>\n</tr>\n<tr>\n<td>README.md</td>\n<td>项目的说明文档，markdown 格式</td>\n</tr>\n</tbody>\n</table>"},{"title":"软件工程-01_软件和软件工程","date":"2019-05-09T11:36:56.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于软件和软件工程的分析文章</font></center>\n\n<!--more-->\n\n# 软件和软件工程\n\n## 软件的本质\n\n软件主要是为了处理信息的，但我们要面临软件设计中的一些问题\n\n* 1.开发周期问题/时间问题\n\n* 2.开发成本问题\n\n* 3.交付之前存在的Bug问题\n\n* 4.维护软件的成本问题\n\n* 5.维护软件的过程问题\n\n软件定义：指令集合，数据结构，信息描述\n\n* 1.首先区别与软件和硬件，软件是设计开发的，不是生产制造的\n    \n* 2.软件不会存在“磨损”现象，但却存在着软件维护变更现象，这会使软件出现接近线性的失效果\n    \n* 3.要清楚，目前市场上虽然有些软件构造模式，但用户需求始终是第一位\n\n软件分类\n\n* 系统软件\n\n* 应用软件\n\n* 工程/科学软件\n\n* 嵌入式软件\n\n* 产品线软件\n\n* Web应用软件\n\n* 人工智能软件\n\n> 意外效应法则：某些新科技的发明创造会给其他一些看似无关的技术领域，商业企业，公众甚至整个社会文化带来深远而出人意料的影响和作用。\n    \n## WebApp的特性\n\nWebApp所具有的属性，也是软件开发必须关注的重点\n\n* 网络密集性：开发网络和受限网络\n\n* 并发性：高用户\n\n* 无法预知的负载量：出现不同时期不同数量用户的访问\n\n* 性能：可访问速度要快\n\n* 可用性：需要全天候不崩溃\n\n* 数据驱动：databases，数据的访问\n\n* 内容敏感性：过滤敏感内容\n\n* 持续演化：软件要持续更新\n\n* 即时性：软件的交付推广\n\n* 安全性：要有限制用户数量和用户的能力\n\n* 美观性：UI\n\n## 软件工程\n\n软件工程分为3层\n\n* 软件过程：是基础层，这个是有框架的。主要是建立工作环境便于应用技术方法，提交工作产品(模型，文档，数据，表格等)，建立里程碑，保证质量以及正确管理变更。\n\n* 软件工程方法：“如何做”的一个解决方案，主要包括：沟通，需求分析，设计建模，编程，测试和技术支持。这个有一套原则。\n\n* 软件工程工具：也是计算机辅助软件工程。\n    \n## <font color=\"red\">软件过程</font>\n\n软件过程\n\n* 活动：实现宽泛目标，例如与利益相关者进行沟通\n\n* 动作：工作产品生产过程中的一系列任务，如体系结构设计模式\n\n* 任务：关注小而明确的目标，例如构建一个单元测试。\n\n通用过程框架具备的5个活动\n\n* 沟通：和用户沟通找需求\n\n* 策划：策划项目执行过程中出现的所有情况。风险，进度等\n\n* 建模：\n\n* 构建：编码和测试\n\n* 部署：交由客户评测\n\n> 以上5个活动是可以迭代进行的，每次迭代都是一个软件增量\n    \n当然除了上述5种活动外，还有一些普适性活动来补充\n\n* 1.风险管理\n\n* 2.软件质量保证\n\n* 3.技术评审\n\n* 4.测量\n\n* 5.软件配置管理\n\n* 6.可复用管理\n\n* 7.工作产品的准备和生产\n\n## 软件工程实践\n\n实践者的精髓\n\n* 1.理解问题(沟通和分析)\n\n```test\n1.谁是利益相关者？\n2.哪些未知？哪些数据，功能，特征和行为是解决问题必须的？\n3.问题可以划分吗？\n4.问题可以图形化描述吗？可以建立分析模型吗？\n```\n\n* 2.计划解决方案(建模和软件设计)\n\n```test\n1.以前遇到过类似问题吗？能否识别一些模式？是否有一些软件已经实现了一些数据，功能，特征和行为\n2.能重用遇到过的解决方案所包含的元素吗？\n3.是否可以定义子问题？子问题可以解决吗？\n4.能否构建出设计模型？\n```\n\n* 3.实施计划(代码生成)\n\n```test\n1.算法是否验证？\n2.解决方案和计划是否一致？\n```\n\n* 4.检查结果的正确性(测试和质量保证)\n\n软件设计的一般原则\n\n* 1.存在价值\n\n* 2.保持简洁\n\n* 3，保持愿景\n\n* 4.关注使用者\n\n* 5.面向未来\n\n* 6.计划复用\n\n* 7.认真思考\n    \n\n","source":"_posts/2019-05-09-01-软件工程.md","raw":"---\ntitle: 软件工程-01_软件和软件工程\ndate: 2019-05-09 11:36:56\ncategories: \n- 软件工程\ntags: \n- 软件\n- 软件工程\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于软件和软件工程的分析文章</font></center>\n\n<!--more-->\n\n# 软件和软件工程\n\n## 软件的本质\n\n软件主要是为了处理信息的，但我们要面临软件设计中的一些问题\n\n* 1.开发周期问题/时间问题\n\n* 2.开发成本问题\n\n* 3.交付之前存在的Bug问题\n\n* 4.维护软件的成本问题\n\n* 5.维护软件的过程问题\n\n软件定义：指令集合，数据结构，信息描述\n\n* 1.首先区别与软件和硬件，软件是设计开发的，不是生产制造的\n    \n* 2.软件不会存在“磨损”现象，但却存在着软件维护变更现象，这会使软件出现接近线性的失效果\n    \n* 3.要清楚，目前市场上虽然有些软件构造模式，但用户需求始终是第一位\n\n软件分类\n\n* 系统软件\n\n* 应用软件\n\n* 工程/科学软件\n\n* 嵌入式软件\n\n* 产品线软件\n\n* Web应用软件\n\n* 人工智能软件\n\n> 意外效应法则：某些新科技的发明创造会给其他一些看似无关的技术领域，商业企业，公众甚至整个社会文化带来深远而出人意料的影响和作用。\n    \n## WebApp的特性\n\nWebApp所具有的属性，也是软件开发必须关注的重点\n\n* 网络密集性：开发网络和受限网络\n\n* 并发性：高用户\n\n* 无法预知的负载量：出现不同时期不同数量用户的访问\n\n* 性能：可访问速度要快\n\n* 可用性：需要全天候不崩溃\n\n* 数据驱动：databases，数据的访问\n\n* 内容敏感性：过滤敏感内容\n\n* 持续演化：软件要持续更新\n\n* 即时性：软件的交付推广\n\n* 安全性：要有限制用户数量和用户的能力\n\n* 美观性：UI\n\n## 软件工程\n\n软件工程分为3层\n\n* 软件过程：是基础层，这个是有框架的。主要是建立工作环境便于应用技术方法，提交工作产品(模型，文档，数据，表格等)，建立里程碑，保证质量以及正确管理变更。\n\n* 软件工程方法：“如何做”的一个解决方案，主要包括：沟通，需求分析，设计建模，编程，测试和技术支持。这个有一套原则。\n\n* 软件工程工具：也是计算机辅助软件工程。\n    \n## <font color=\"red\">软件过程</font>\n\n软件过程\n\n* 活动：实现宽泛目标，例如与利益相关者进行沟通\n\n* 动作：工作产品生产过程中的一系列任务，如体系结构设计模式\n\n* 任务：关注小而明确的目标，例如构建一个单元测试。\n\n通用过程框架具备的5个活动\n\n* 沟通：和用户沟通找需求\n\n* 策划：策划项目执行过程中出现的所有情况。风险，进度等\n\n* 建模：\n\n* 构建：编码和测试\n\n* 部署：交由客户评测\n\n> 以上5个活动是可以迭代进行的，每次迭代都是一个软件增量\n    \n当然除了上述5种活动外，还有一些普适性活动来补充\n\n* 1.风险管理\n\n* 2.软件质量保证\n\n* 3.技术评审\n\n* 4.测量\n\n* 5.软件配置管理\n\n* 6.可复用管理\n\n* 7.工作产品的准备和生产\n\n## 软件工程实践\n\n实践者的精髓\n\n* 1.理解问题(沟通和分析)\n\n```test\n1.谁是利益相关者？\n2.哪些未知？哪些数据，功能，特征和行为是解决问题必须的？\n3.问题可以划分吗？\n4.问题可以图形化描述吗？可以建立分析模型吗？\n```\n\n* 2.计划解决方案(建模和软件设计)\n\n```test\n1.以前遇到过类似问题吗？能否识别一些模式？是否有一些软件已经实现了一些数据，功能，特征和行为\n2.能重用遇到过的解决方案所包含的元素吗？\n3.是否可以定义子问题？子问题可以解决吗？\n4.能否构建出设计模型？\n```\n\n* 3.实施计划(代码生成)\n\n```test\n1.算法是否验证？\n2.解决方案和计划是否一致？\n```\n\n* 4.检查结果的正确性(测试和质量保证)\n\n软件设计的一般原则\n\n* 1.存在价值\n\n* 2.保持简洁\n\n* 3，保持愿景\n\n* 4.关注使用者\n\n* 5.面向未来\n\n* 6.计划复用\n\n* 7.认真思考\n    \n\n","slug":"2019-05-09-01-软件工程","published":1,"updated":"2019-08-10T04:35:46.720Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6uk000754tne50a34z7","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件和软件工程的分析文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"软件和软件工程\"><a href=\"#软件和软件工程\" class=\"headerlink\" title=\"软件和软件工程\"></a>软件和软件工程</h1><h2 id=\"软件的本质\"><a href=\"#软件的本质\" class=\"headerlink\" title=\"软件的本质\"></a>软件的本质</h2><p>软件主要是为了处理信息的，但我们要面临软件设计中的一些问题</p>\n<ul>\n<li><p>1.开发周期问题/时间问题</p>\n</li>\n<li><p>2.开发成本问题</p>\n</li>\n<li><p>3.交付之前存在的Bug问题</p>\n</li>\n<li><p>4.维护软件的成本问题</p>\n</li>\n<li><p>5.维护软件的过程问题</p>\n</li>\n</ul>\n<p>软件定义：指令集合，数据结构，信息描述</p>\n<ul>\n<li><p>1.首先区别与软件和硬件，软件是设计开发的，不是生产制造的</p>\n</li>\n<li><p>2.软件不会存在“磨损”现象，但却存在着软件维护变更现象，这会使软件出现接近线性的失效果</p>\n</li>\n<li><p>3.要清楚，目前市场上虽然有些软件构造模式，但用户需求始终是第一位</p>\n</li>\n</ul>\n<p>软件分类</p>\n<ul>\n<li><p>系统软件</p>\n</li>\n<li><p>应用软件</p>\n</li>\n<li><p>工程/科学软件</p>\n</li>\n<li><p>嵌入式软件</p>\n</li>\n<li><p>产品线软件</p>\n</li>\n<li><p>Web应用软件</p>\n</li>\n<li><p>人工智能软件</p>\n</li>\n</ul>\n<blockquote>\n<p>意外效应法则：某些新科技的发明创造会给其他一些看似无关的技术领域，商业企业，公众甚至整个社会文化带来深远而出人意料的影响和作用。</p>\n</blockquote>\n<h2 id=\"WebApp的特性\"><a href=\"#WebApp的特性\" class=\"headerlink\" title=\"WebApp的特性\"></a>WebApp的特性</h2><p>WebApp所具有的属性，也是软件开发必须关注的重点</p>\n<ul>\n<li><p>网络密集性：开发网络和受限网络</p>\n</li>\n<li><p>并发性：高用户</p>\n</li>\n<li><p>无法预知的负载量：出现不同时期不同数量用户的访问</p>\n</li>\n<li><p>性能：可访问速度要快</p>\n</li>\n<li><p>可用性：需要全天候不崩溃</p>\n</li>\n<li><p>数据驱动：databases，数据的访问</p>\n</li>\n<li><p>内容敏感性：过滤敏感内容</p>\n</li>\n<li><p>持续演化：软件要持续更新</p>\n</li>\n<li><p>即时性：软件的交付推广</p>\n</li>\n<li><p>安全性：要有限制用户数量和用户的能力</p>\n</li>\n<li><p>美观性：UI</p>\n</li>\n</ul>\n<h2 id=\"软件工程\"><a href=\"#软件工程\" class=\"headerlink\" title=\"软件工程\"></a>软件工程</h2><p>软件工程分为3层</p>\n<ul>\n<li><p>软件过程：是基础层，这个是有框架的。主要是建立工作环境便于应用技术方法，提交工作产品(模型，文档，数据，表格等)，建立里程碑，保证质量以及正确管理变更。</p>\n</li>\n<li><p>软件工程方法：“如何做”的一个解决方案，主要包括：沟通，需求分析，设计建模，编程，测试和技术支持。这个有一套原则。</p>\n</li>\n<li><p>软件工程工具：也是计算机辅助软件工程。</p>\n</li>\n</ul>\n<h2 id=\"软件过程\"><a href=\"#软件过程\" class=\"headerlink\" title=\"软件过程\"></a><font color=\"red\">软件过程</font></h2><p>软件过程</p>\n<ul>\n<li><p>活动：实现宽泛目标，例如与利益相关者进行沟通</p>\n</li>\n<li><p>动作：工作产品生产过程中的一系列任务，如体系结构设计模式</p>\n</li>\n<li><p>任务：关注小而明确的目标，例如构建一个单元测试。</p>\n</li>\n</ul>\n<p>通用过程框架具备的5个活动</p>\n<ul>\n<li><p>沟通：和用户沟通找需求</p>\n</li>\n<li><p>策划：策划项目执行过程中出现的所有情况。风险，进度等</p>\n</li>\n<li><p>建模：</p>\n</li>\n<li><p>构建：编码和测试</p>\n</li>\n<li><p>部署：交由客户评测</p>\n</li>\n</ul>\n<blockquote>\n<p>以上5个活动是可以迭代进行的，每次迭代都是一个软件增量</p>\n</blockquote>\n<p>当然除了上述5种活动外，还有一些普适性活动来补充</p>\n<ul>\n<li><p>1.风险管理</p>\n</li>\n<li><p>2.软件质量保证</p>\n</li>\n<li><p>3.技术评审</p>\n</li>\n<li><p>4.测量</p>\n</li>\n<li><p>5.软件配置管理</p>\n</li>\n<li><p>6.可复用管理</p>\n</li>\n<li><p>7.工作产品的准备和生产</p>\n</li>\n</ul>\n<h2 id=\"软件工程实践\"><a href=\"#软件工程实践\" class=\"headerlink\" title=\"软件工程实践\"></a>软件工程实践</h2><p>实践者的精髓</p>\n<ul>\n<li>1.理解问题(沟通和分析)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.谁是利益相关者？</span><br><span class=\"line\">2.哪些未知？哪些数据，功能，特征和行为是解决问题必须的？</span><br><span class=\"line\">3.问题可以划分吗？</span><br><span class=\"line\">4.问题可以图形化描述吗？可以建立分析模型吗？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.计划解决方案(建模和软件设计)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.以前遇到过类似问题吗？能否识别一些模式？是否有一些软件已经实现了一些数据，功能，特征和行为</span><br><span class=\"line\">2.能重用遇到过的解决方案所包含的元素吗？</span><br><span class=\"line\">3.是否可以定义子问题？子问题可以解决吗？</span><br><span class=\"line\">4.能否构建出设计模型？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3.实施计划(代码生成)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.算法是否验证？</span><br><span class=\"line\">2.解决方案和计划是否一致？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>4.检查结果的正确性(测试和质量保证)</li>\n</ul>\n<p>软件设计的一般原则</p>\n<ul>\n<li><p>1.存在价值</p>\n</li>\n<li><p>2.保持简洁</p>\n</li>\n<li><p>3，保持愿景</p>\n</li>\n<li><p>4.关注使用者</p>\n</li>\n<li><p>5.面向未来</p>\n</li>\n<li><p>6.计划复用</p>\n</li>\n<li><p>7.认真思考</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件和软件工程的分析文章</font></center>","more":"<h1 id=\"软件和软件工程\"><a href=\"#软件和软件工程\" class=\"headerlink\" title=\"软件和软件工程\"></a>软件和软件工程</h1><h2 id=\"软件的本质\"><a href=\"#软件的本质\" class=\"headerlink\" title=\"软件的本质\"></a>软件的本质</h2><p>软件主要是为了处理信息的，但我们要面临软件设计中的一些问题</p>\n<ul>\n<li><p>1.开发周期问题/时间问题</p>\n</li>\n<li><p>2.开发成本问题</p>\n</li>\n<li><p>3.交付之前存在的Bug问题</p>\n</li>\n<li><p>4.维护软件的成本问题</p>\n</li>\n<li><p>5.维护软件的过程问题</p>\n</li>\n</ul>\n<p>软件定义：指令集合，数据结构，信息描述</p>\n<ul>\n<li><p>1.首先区别与软件和硬件，软件是设计开发的，不是生产制造的</p>\n</li>\n<li><p>2.软件不会存在“磨损”现象，但却存在着软件维护变更现象，这会使软件出现接近线性的失效果</p>\n</li>\n<li><p>3.要清楚，目前市场上虽然有些软件构造模式，但用户需求始终是第一位</p>\n</li>\n</ul>\n<p>软件分类</p>\n<ul>\n<li><p>系统软件</p>\n</li>\n<li><p>应用软件</p>\n</li>\n<li><p>工程/科学软件</p>\n</li>\n<li><p>嵌入式软件</p>\n</li>\n<li><p>产品线软件</p>\n</li>\n<li><p>Web应用软件</p>\n</li>\n<li><p>人工智能软件</p>\n</li>\n</ul>\n<blockquote>\n<p>意外效应法则：某些新科技的发明创造会给其他一些看似无关的技术领域，商业企业，公众甚至整个社会文化带来深远而出人意料的影响和作用。</p>\n</blockquote>\n<h2 id=\"WebApp的特性\"><a href=\"#WebApp的特性\" class=\"headerlink\" title=\"WebApp的特性\"></a>WebApp的特性</h2><p>WebApp所具有的属性，也是软件开发必须关注的重点</p>\n<ul>\n<li><p>网络密集性：开发网络和受限网络</p>\n</li>\n<li><p>并发性：高用户</p>\n</li>\n<li><p>无法预知的负载量：出现不同时期不同数量用户的访问</p>\n</li>\n<li><p>性能：可访问速度要快</p>\n</li>\n<li><p>可用性：需要全天候不崩溃</p>\n</li>\n<li><p>数据驱动：databases，数据的访问</p>\n</li>\n<li><p>内容敏感性：过滤敏感内容</p>\n</li>\n<li><p>持续演化：软件要持续更新</p>\n</li>\n<li><p>即时性：软件的交付推广</p>\n</li>\n<li><p>安全性：要有限制用户数量和用户的能力</p>\n</li>\n<li><p>美观性：UI</p>\n</li>\n</ul>\n<h2 id=\"软件工程\"><a href=\"#软件工程\" class=\"headerlink\" title=\"软件工程\"></a>软件工程</h2><p>软件工程分为3层</p>\n<ul>\n<li><p>软件过程：是基础层，这个是有框架的。主要是建立工作环境便于应用技术方法，提交工作产品(模型，文档，数据，表格等)，建立里程碑，保证质量以及正确管理变更。</p>\n</li>\n<li><p>软件工程方法：“如何做”的一个解决方案，主要包括：沟通，需求分析，设计建模，编程，测试和技术支持。这个有一套原则。</p>\n</li>\n<li><p>软件工程工具：也是计算机辅助软件工程。</p>\n</li>\n</ul>\n<h2 id=\"软件过程\"><a href=\"#软件过程\" class=\"headerlink\" title=\"软件过程\"></a><font color=\"red\">软件过程</font></h2><p>软件过程</p>\n<ul>\n<li><p>活动：实现宽泛目标，例如与利益相关者进行沟通</p>\n</li>\n<li><p>动作：工作产品生产过程中的一系列任务，如体系结构设计模式</p>\n</li>\n<li><p>任务：关注小而明确的目标，例如构建一个单元测试。</p>\n</li>\n</ul>\n<p>通用过程框架具备的5个活动</p>\n<ul>\n<li><p>沟通：和用户沟通找需求</p>\n</li>\n<li><p>策划：策划项目执行过程中出现的所有情况。风险，进度等</p>\n</li>\n<li><p>建模：</p>\n</li>\n<li><p>构建：编码和测试</p>\n</li>\n<li><p>部署：交由客户评测</p>\n</li>\n</ul>\n<blockquote>\n<p>以上5个活动是可以迭代进行的，每次迭代都是一个软件增量</p>\n</blockquote>\n<p>当然除了上述5种活动外，还有一些普适性活动来补充</p>\n<ul>\n<li><p>1.风险管理</p>\n</li>\n<li><p>2.软件质量保证</p>\n</li>\n<li><p>3.技术评审</p>\n</li>\n<li><p>4.测量</p>\n</li>\n<li><p>5.软件配置管理</p>\n</li>\n<li><p>6.可复用管理</p>\n</li>\n<li><p>7.工作产品的准备和生产</p>\n</li>\n</ul>\n<h2 id=\"软件工程实践\"><a href=\"#软件工程实践\" class=\"headerlink\" title=\"软件工程实践\"></a>软件工程实践</h2><p>实践者的精髓</p>\n<ul>\n<li>1.理解问题(沟通和分析)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.谁是利益相关者？</span><br><span class=\"line\">2.哪些未知？哪些数据，功能，特征和行为是解决问题必须的？</span><br><span class=\"line\">3.问题可以划分吗？</span><br><span class=\"line\">4.问题可以图形化描述吗？可以建立分析模型吗？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.计划解决方案(建模和软件设计)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.以前遇到过类似问题吗？能否识别一些模式？是否有一些软件已经实现了一些数据，功能，特征和行为</span><br><span class=\"line\">2.能重用遇到过的解决方案所包含的元素吗？</span><br><span class=\"line\">3.是否可以定义子问题？子问题可以解决吗？</span><br><span class=\"line\">4.能否构建出设计模型？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>3.实施计划(代码生成)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.算法是否验证？</span><br><span class=\"line\">2.解决方案和计划是否一致？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>4.检查结果的正确性(测试和质量保证)</li>\n</ul>\n<p>软件设计的一般原则</p>\n<ul>\n<li><p>1.存在价值</p>\n</li>\n<li><p>2.保持简洁</p>\n</li>\n<li><p>3，保持愿景</p>\n</li>\n<li><p>4.关注使用者</p>\n</li>\n<li><p>5.面向未来</p>\n</li>\n<li><p>6.计划复用</p>\n</li>\n<li><p>7.认真思考</p>\n</li>\n</ul>"},{"title":"软件工程-04_指导实践的原则","date":"2019-05-13T15:50:01.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于软件中如何进行实践的知道文章</font></center>\n\n<!--more-->\n\n# 指导实践的原则\n\n## 核心原则\n\n#### 指导过程的原则\n\n* 原则1:敏捷\n\n* 原则2:每一步都关注质量\n\n* 原则3:做好适应的准备\n\n* 原则4:建立一个有效的团队\n\n* 原则5:建立沟通和协调机制\n\n* 原则6:管理变更\n\n* 原则7:评估风险\n\n* 原则8；创造能给别人带来价值的工作产品\n\n#### 指导实践的原则\n\n目标：按时交付包含满足所有利益相关者要求的功能和特性的高质量，可运行软件\n\n* 原则1:分治策略，将大问题划分为小问题来解决\n\n* 原则2:理解抽象的使用，将复杂元素以抽象的形式简单化\n\n* 原则3:力求一致性，方便理解，给人看一眼就知道你弄的是个啥\n\n* 原则4:关注信息传送，MVC设计过程中多注意\n\n* 原则5:构建能展示有效模块化的软件。模块要做到有效，低耦合\n\n* 原则6:寻找模式，模块可以做到让软件开发有一种共同语言\n\n* 原则7:在可能的时候，用大量不同的观点描述问题及其解决方法\n\n* 原则8:记住：有人将要对软件进行维护\n\n## 指导每个框架活动的原则\n\n#### 沟通原则\n\n* 原则1:倾听，有不懂的要及时澄清\n\n* 原则2:有准备的沟通，花时间去理解问题，调查一些专业术语，做一个议事日程\n\n* 原则3:沟通活动需要有人推动，主持人\n\n* 原则4:最好当面沟通\n\n* 原则5:记笔记并且记录所有决定\n\n* 原则6:保持通力协作\n\n* 原则7:把讨论集中在限定范围内\n\n* 原则8:如果有些东西很难表述清楚，采用图形表示\n\n* 原则9:(a)一旦认可某件事情，转换话题,(b)如果不认可某件事情，转换话题,(c)如果某项特性或者功能不清晰，当时无法澄清，转换话题\n\n* 原则10:协商不是一场竞赛或者一场游戏，协商双赢时才发挥了协商的最大价值\n\n#### 策划原则\n\n目的：让项目有一个好的舒服的计划进行\n\n* 原则1:理解项目范围，项目的目的地\n\n* 原则2:吸收利益相关者参与策划，商谈交付顺序及相关问题\n\n* 原则3:要认识到计划的制定应按照迭代方式进行，迭代说增量交付\n\n* 原则4:基于已知的估计\n\n* 原则5:计划时考虑风险\n\n* 原则6:保持脚踏实地\n\n* 原则7:调整计划粒度。粒度：项目计划细节中的精细程度\n\n* 原则8:制定计划确保质量\n\n* 原则9:描述如何适应变化\n\n* 原则10:经常跟踪并根据需要调整计划\n\n#### 建模原则\n\n目的：获取良好的设计方案\n\n* 原则1:设计可追溯到需求模型\n\n* 原则2:始终关注待建系统的架构，先架构，在构件的设计\n\n* 原则3:数据设计与功能设计同等重要\n\n* 原则4:必须精心设计接口\n\n* 原则5:用户界面设计必须符合最终用户要求\n\n* 原则6:构件设计应是功能独立的\n\n* 原则7:构件之间以及构件与外部环境之间松散耦合，要低耦合\n\n* 原则8:设计表述(模型)应该做到尽可能易于理解\n\n* 原则9:设计应该迭代式进行\n\n#### 构造原则\n\n目的：1.编码生成源代码 2.测试，包括(a)单元测试，(b)集成测试，(c)确认测试，(d)验收测试\n\n编码原则\n\n* 准备原则。在写下每行代码之前，要确保：\n\n```test\n理解所要解决的问题\n理解基本的设计原则和概念\n选择一种能够满足构建软件以及运行环境要求的编程语言\n选择一种能提供工具以简化工作的编程环境\n构件级编码完成后进行单元测试\n```\n\n* 编程原则。在开始编码时，要确保：\n\n```test\n遵循结构化编程方法来约束算法\n考虑使用结对编程\n选择能满足设计要求的数据结构\n理解软件架构并开发出与其相符的接口\n尽可能保持条件逻辑简单\n开发的嵌套循环应使其易于测试\n选择有意义的变量名并符合相关编码标准\n编写注释，湿代码具有说明性\n增强代码的可读性(例如：缩进和空行)\n```\n\n* 确认原则。在完成每一阶段的编码之后，要确保：\n\n```test\n适当进行代码走查\n进行单元测试并改正所发现的错误\n重构代码\n```\n\n测试原则\n\n* 原则1:所有的测试都应该追溯到用户需求\n\n* 原则2:测试计划应该远在测试之前就开始着手\n\n* 原则3：将Pareto原则应用于软件测试。Pareto原则认为在软件测试过程中80%的错误都可以在大概20%的程序构件中找到根源\n\n* 原则4:测试应该从“微观”开始，逐步转向宏观。单个程序模块-->集成构件-->整个系统\n\n* 原则5:穷举测试是不可能的\n\n#### 部署原则\n\n交付，支持和反馈\n\n* 原则1:客户对于软件的期望必须得到管理\n\n* 原则2:完整的交付包应该经过安装和测试。交付至少是Beta测试版\n\n* 原则3:技术支持必须在软件交付前就确定下来\n\n* 原则4:必须为用户提供适当的说明材料\n\n* 原则5；有缺陷的软件应该先改正再交付\n","source":"_posts/2019-05-13-04-软件工程.md","raw":"---\ntitle: 软件工程-04_指导实践的原则\ndate: 2019-05-13 15:50:01\ncategories: \n- 软件工程\ntags: \n- 软件\n- 软件工程\n- 指导实践\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于软件中如何进行实践的知道文章</font></center>\n\n<!--more-->\n\n# 指导实践的原则\n\n## 核心原则\n\n#### 指导过程的原则\n\n* 原则1:敏捷\n\n* 原则2:每一步都关注质量\n\n* 原则3:做好适应的准备\n\n* 原则4:建立一个有效的团队\n\n* 原则5:建立沟通和协调机制\n\n* 原则6:管理变更\n\n* 原则7:评估风险\n\n* 原则8；创造能给别人带来价值的工作产品\n\n#### 指导实践的原则\n\n目标：按时交付包含满足所有利益相关者要求的功能和特性的高质量，可运行软件\n\n* 原则1:分治策略，将大问题划分为小问题来解决\n\n* 原则2:理解抽象的使用，将复杂元素以抽象的形式简单化\n\n* 原则3:力求一致性，方便理解，给人看一眼就知道你弄的是个啥\n\n* 原则4:关注信息传送，MVC设计过程中多注意\n\n* 原则5:构建能展示有效模块化的软件。模块要做到有效，低耦合\n\n* 原则6:寻找模式，模块可以做到让软件开发有一种共同语言\n\n* 原则7:在可能的时候，用大量不同的观点描述问题及其解决方法\n\n* 原则8:记住：有人将要对软件进行维护\n\n## 指导每个框架活动的原则\n\n#### 沟通原则\n\n* 原则1:倾听，有不懂的要及时澄清\n\n* 原则2:有准备的沟通，花时间去理解问题，调查一些专业术语，做一个议事日程\n\n* 原则3:沟通活动需要有人推动，主持人\n\n* 原则4:最好当面沟通\n\n* 原则5:记笔记并且记录所有决定\n\n* 原则6:保持通力协作\n\n* 原则7:把讨论集中在限定范围内\n\n* 原则8:如果有些东西很难表述清楚，采用图形表示\n\n* 原则9:(a)一旦认可某件事情，转换话题,(b)如果不认可某件事情，转换话题,(c)如果某项特性或者功能不清晰，当时无法澄清，转换话题\n\n* 原则10:协商不是一场竞赛或者一场游戏，协商双赢时才发挥了协商的最大价值\n\n#### 策划原则\n\n目的：让项目有一个好的舒服的计划进行\n\n* 原则1:理解项目范围，项目的目的地\n\n* 原则2:吸收利益相关者参与策划，商谈交付顺序及相关问题\n\n* 原则3:要认识到计划的制定应按照迭代方式进行，迭代说增量交付\n\n* 原则4:基于已知的估计\n\n* 原则5:计划时考虑风险\n\n* 原则6:保持脚踏实地\n\n* 原则7:调整计划粒度。粒度：项目计划细节中的精细程度\n\n* 原则8:制定计划确保质量\n\n* 原则9:描述如何适应变化\n\n* 原则10:经常跟踪并根据需要调整计划\n\n#### 建模原则\n\n目的：获取良好的设计方案\n\n* 原则1:设计可追溯到需求模型\n\n* 原则2:始终关注待建系统的架构，先架构，在构件的设计\n\n* 原则3:数据设计与功能设计同等重要\n\n* 原则4:必须精心设计接口\n\n* 原则5:用户界面设计必须符合最终用户要求\n\n* 原则6:构件设计应是功能独立的\n\n* 原则7:构件之间以及构件与外部环境之间松散耦合，要低耦合\n\n* 原则8:设计表述(模型)应该做到尽可能易于理解\n\n* 原则9:设计应该迭代式进行\n\n#### 构造原则\n\n目的：1.编码生成源代码 2.测试，包括(a)单元测试，(b)集成测试，(c)确认测试，(d)验收测试\n\n编码原则\n\n* 准备原则。在写下每行代码之前，要确保：\n\n```test\n理解所要解决的问题\n理解基本的设计原则和概念\n选择一种能够满足构建软件以及运行环境要求的编程语言\n选择一种能提供工具以简化工作的编程环境\n构件级编码完成后进行单元测试\n```\n\n* 编程原则。在开始编码时，要确保：\n\n```test\n遵循结构化编程方法来约束算法\n考虑使用结对编程\n选择能满足设计要求的数据结构\n理解软件架构并开发出与其相符的接口\n尽可能保持条件逻辑简单\n开发的嵌套循环应使其易于测试\n选择有意义的变量名并符合相关编码标准\n编写注释，湿代码具有说明性\n增强代码的可读性(例如：缩进和空行)\n```\n\n* 确认原则。在完成每一阶段的编码之后，要确保：\n\n```test\n适当进行代码走查\n进行单元测试并改正所发现的错误\n重构代码\n```\n\n测试原则\n\n* 原则1:所有的测试都应该追溯到用户需求\n\n* 原则2:测试计划应该远在测试之前就开始着手\n\n* 原则3：将Pareto原则应用于软件测试。Pareto原则认为在软件测试过程中80%的错误都可以在大概20%的程序构件中找到根源\n\n* 原则4:测试应该从“微观”开始，逐步转向宏观。单个程序模块-->集成构件-->整个系统\n\n* 原则5:穷举测试是不可能的\n\n#### 部署原则\n\n交付，支持和反馈\n\n* 原则1:客户对于软件的期望必须得到管理\n\n* 原则2:完整的交付包应该经过安装和测试。交付至少是Beta测试版\n\n* 原则3:技术支持必须在软件交付前就确定下来\n\n* 原则4:必须为用户提供适当的说明材料\n\n* 原则5；有缺陷的软件应该先改正再交付\n","slug":"2019-05-13-04-软件工程","published":1,"updated":"2019-08-10T04:35:46.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6ul000854tnrwywcca5","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件中如何进行实践的知道文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"指导实践的原则\"><a href=\"#指导实践的原则\" class=\"headerlink\" title=\"指导实践的原则\"></a>指导实践的原则</h1><h2 id=\"核心原则\"><a href=\"#核心原则\" class=\"headerlink\" title=\"核心原则\"></a>核心原则</h2><h4 id=\"指导过程的原则\"><a href=\"#指导过程的原则\" class=\"headerlink\" title=\"指导过程的原则\"></a>指导过程的原则</h4><ul>\n<li><p>原则1:敏捷</p>\n</li>\n<li><p>原则2:每一步都关注质量</p>\n</li>\n<li><p>原则3:做好适应的准备</p>\n</li>\n<li><p>原则4:建立一个有效的团队</p>\n</li>\n<li><p>原则5:建立沟通和协调机制</p>\n</li>\n<li><p>原则6:管理变更</p>\n</li>\n<li><p>原则7:评估风险</p>\n</li>\n<li><p>原则8；创造能给别人带来价值的工作产品</p>\n</li>\n</ul>\n<h4 id=\"指导实践的原则-1\"><a href=\"#指导实践的原则-1\" class=\"headerlink\" title=\"指导实践的原则\"></a>指导实践的原则</h4><p>目标：按时交付包含满足所有利益相关者要求的功能和特性的高质量，可运行软件</p>\n<ul>\n<li><p>原则1:分治策略，将大问题划分为小问题来解决</p>\n</li>\n<li><p>原则2:理解抽象的使用，将复杂元素以抽象的形式简单化</p>\n</li>\n<li><p>原则3:力求一致性，方便理解，给人看一眼就知道你弄的是个啥</p>\n</li>\n<li><p>原则4:关注信息传送，MVC设计过程中多注意</p>\n</li>\n<li><p>原则5:构建能展示有效模块化的软件。模块要做到有效，低耦合</p>\n</li>\n<li><p>原则6:寻找模式，模块可以做到让软件开发有一种共同语言</p>\n</li>\n<li><p>原则7:在可能的时候，用大量不同的观点描述问题及其解决方法</p>\n</li>\n<li><p>原则8:记住：有人将要对软件进行维护</p>\n</li>\n</ul>\n<h2 id=\"指导每个框架活动的原则\"><a href=\"#指导每个框架活动的原则\" class=\"headerlink\" title=\"指导每个框架活动的原则\"></a>指导每个框架活动的原则</h2><h4 id=\"沟通原则\"><a href=\"#沟通原则\" class=\"headerlink\" title=\"沟通原则\"></a>沟通原则</h4><ul>\n<li><p>原则1:倾听，有不懂的要及时澄清</p>\n</li>\n<li><p>原则2:有准备的沟通，花时间去理解问题，调查一些专业术语，做一个议事日程</p>\n</li>\n<li><p>原则3:沟通活动需要有人推动，主持人</p>\n</li>\n<li><p>原则4:最好当面沟通</p>\n</li>\n<li><p>原则5:记笔记并且记录所有决定</p>\n</li>\n<li><p>原则6:保持通力协作</p>\n</li>\n<li><p>原则7:把讨论集中在限定范围内</p>\n</li>\n<li><p>原则8:如果有些东西很难表述清楚，采用图形表示</p>\n</li>\n<li><p>原则9:(a)一旦认可某件事情，转换话题,(b)如果不认可某件事情，转换话题,(c)如果某项特性或者功能不清晰，当时无法澄清，转换话题</p>\n</li>\n<li><p>原则10:协商不是一场竞赛或者一场游戏，协商双赢时才发挥了协商的最大价值</p>\n</li>\n</ul>\n<h4 id=\"策划原则\"><a href=\"#策划原则\" class=\"headerlink\" title=\"策划原则\"></a>策划原则</h4><p>目的：让项目有一个好的舒服的计划进行</p>\n<ul>\n<li><p>原则1:理解项目范围，项目的目的地</p>\n</li>\n<li><p>原则2:吸收利益相关者参与策划，商谈交付顺序及相关问题</p>\n</li>\n<li><p>原则3:要认识到计划的制定应按照迭代方式进行，迭代说增量交付</p>\n</li>\n<li><p>原则4:基于已知的估计</p>\n</li>\n<li><p>原则5:计划时考虑风险</p>\n</li>\n<li><p>原则6:保持脚踏实地</p>\n</li>\n<li><p>原则7:调整计划粒度。粒度：项目计划细节中的精细程度</p>\n</li>\n<li><p>原则8:制定计划确保质量</p>\n</li>\n<li><p>原则9:描述如何适应变化</p>\n</li>\n<li><p>原则10:经常跟踪并根据需要调整计划</p>\n</li>\n</ul>\n<h4 id=\"建模原则\"><a href=\"#建模原则\" class=\"headerlink\" title=\"建模原则\"></a>建模原则</h4><p>目的：获取良好的设计方案</p>\n<ul>\n<li><p>原则1:设计可追溯到需求模型</p>\n</li>\n<li><p>原则2:始终关注待建系统的架构，先架构，在构件的设计</p>\n</li>\n<li><p>原则3:数据设计与功能设计同等重要</p>\n</li>\n<li><p>原则4:必须精心设计接口</p>\n</li>\n<li><p>原则5:用户界面设计必须符合最终用户要求</p>\n</li>\n<li><p>原则6:构件设计应是功能独立的</p>\n</li>\n<li><p>原则7:构件之间以及构件与外部环境之间松散耦合，要低耦合</p>\n</li>\n<li><p>原则8:设计表述(模型)应该做到尽可能易于理解</p>\n</li>\n<li><p>原则9:设计应该迭代式进行</p>\n</li>\n</ul>\n<h4 id=\"构造原则\"><a href=\"#构造原则\" class=\"headerlink\" title=\"构造原则\"></a>构造原则</h4><p>目的：1.编码生成源代码 2.测试，包括(a)单元测试，(b)集成测试，(c)确认测试，(d)验收测试</p>\n<p>编码原则</p>\n<ul>\n<li>准备原则。在写下每行代码之前，要确保：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">理解所要解决的问题</span><br><span class=\"line\">理解基本的设计原则和概念</span><br><span class=\"line\">选择一种能够满足构建软件以及运行环境要求的编程语言</span><br><span class=\"line\">选择一种能提供工具以简化工作的编程环境</span><br><span class=\"line\">构件级编码完成后进行单元测试</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编程原则。在开始编码时，要确保：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">遵循结构化编程方法来约束算法</span><br><span class=\"line\">考虑使用结对编程</span><br><span class=\"line\">选择能满足设计要求的数据结构</span><br><span class=\"line\">理解软件架构并开发出与其相符的接口</span><br><span class=\"line\">尽可能保持条件逻辑简单</span><br><span class=\"line\">开发的嵌套循环应使其易于测试</span><br><span class=\"line\">选择有意义的变量名并符合相关编码标准</span><br><span class=\"line\">编写注释，湿代码具有说明性</span><br><span class=\"line\">增强代码的可读性(例如：缩进和空行)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认原则。在完成每一阶段的编码之后，要确保：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">适当进行代码走查</span><br><span class=\"line\">进行单元测试并改正所发现的错误</span><br><span class=\"line\">重构代码</span><br></pre></td></tr></table></figure>\n<p>测试原则</p>\n<ul>\n<li><p>原则1:所有的测试都应该追溯到用户需求</p>\n</li>\n<li><p>原则2:测试计划应该远在测试之前就开始着手</p>\n</li>\n<li><p>原则3：将Pareto原则应用于软件测试。Pareto原则认为在软件测试过程中80%的错误都可以在大概20%的程序构件中找到根源</p>\n</li>\n<li><p>原则4:测试应该从“微观”开始，逐步转向宏观。单个程序模块–&gt;集成构件–&gt;整个系统</p>\n</li>\n<li><p>原则5:穷举测试是不可能的</p>\n</li>\n</ul>\n<h4 id=\"部署原则\"><a href=\"#部署原则\" class=\"headerlink\" title=\"部署原则\"></a>部署原则</h4><p>交付，支持和反馈</p>\n<ul>\n<li><p>原则1:客户对于软件的期望必须得到管理</p>\n</li>\n<li><p>原则2:完整的交付包应该经过安装和测试。交付至少是Beta测试版</p>\n</li>\n<li><p>原则3:技术支持必须在软件交付前就确定下来</p>\n</li>\n<li><p>原则4:必须为用户提供适当的说明材料</p>\n</li>\n<li><p>原则5；有缺陷的软件应该先改正再交付</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件中如何进行实践的知道文章</font></center>","more":"<h1 id=\"指导实践的原则\"><a href=\"#指导实践的原则\" class=\"headerlink\" title=\"指导实践的原则\"></a>指导实践的原则</h1><h2 id=\"核心原则\"><a href=\"#核心原则\" class=\"headerlink\" title=\"核心原则\"></a>核心原则</h2><h4 id=\"指导过程的原则\"><a href=\"#指导过程的原则\" class=\"headerlink\" title=\"指导过程的原则\"></a>指导过程的原则</h4><ul>\n<li><p>原则1:敏捷</p>\n</li>\n<li><p>原则2:每一步都关注质量</p>\n</li>\n<li><p>原则3:做好适应的准备</p>\n</li>\n<li><p>原则4:建立一个有效的团队</p>\n</li>\n<li><p>原则5:建立沟通和协调机制</p>\n</li>\n<li><p>原则6:管理变更</p>\n</li>\n<li><p>原则7:评估风险</p>\n</li>\n<li><p>原则8；创造能给别人带来价值的工作产品</p>\n</li>\n</ul>\n<h4 id=\"指导实践的原则-1\"><a href=\"#指导实践的原则-1\" class=\"headerlink\" title=\"指导实践的原则\"></a>指导实践的原则</h4><p>目标：按时交付包含满足所有利益相关者要求的功能和特性的高质量，可运行软件</p>\n<ul>\n<li><p>原则1:分治策略，将大问题划分为小问题来解决</p>\n</li>\n<li><p>原则2:理解抽象的使用，将复杂元素以抽象的形式简单化</p>\n</li>\n<li><p>原则3:力求一致性，方便理解，给人看一眼就知道你弄的是个啥</p>\n</li>\n<li><p>原则4:关注信息传送，MVC设计过程中多注意</p>\n</li>\n<li><p>原则5:构建能展示有效模块化的软件。模块要做到有效，低耦合</p>\n</li>\n<li><p>原则6:寻找模式，模块可以做到让软件开发有一种共同语言</p>\n</li>\n<li><p>原则7:在可能的时候，用大量不同的观点描述问题及其解决方法</p>\n</li>\n<li><p>原则8:记住：有人将要对软件进行维护</p>\n</li>\n</ul>\n<h2 id=\"指导每个框架活动的原则\"><a href=\"#指导每个框架活动的原则\" class=\"headerlink\" title=\"指导每个框架活动的原则\"></a>指导每个框架活动的原则</h2><h4 id=\"沟通原则\"><a href=\"#沟通原则\" class=\"headerlink\" title=\"沟通原则\"></a>沟通原则</h4><ul>\n<li><p>原则1:倾听，有不懂的要及时澄清</p>\n</li>\n<li><p>原则2:有准备的沟通，花时间去理解问题，调查一些专业术语，做一个议事日程</p>\n</li>\n<li><p>原则3:沟通活动需要有人推动，主持人</p>\n</li>\n<li><p>原则4:最好当面沟通</p>\n</li>\n<li><p>原则5:记笔记并且记录所有决定</p>\n</li>\n<li><p>原则6:保持通力协作</p>\n</li>\n<li><p>原则7:把讨论集中在限定范围内</p>\n</li>\n<li><p>原则8:如果有些东西很难表述清楚，采用图形表示</p>\n</li>\n<li><p>原则9:(a)一旦认可某件事情，转换话题,(b)如果不认可某件事情，转换话题,(c)如果某项特性或者功能不清晰，当时无法澄清，转换话题</p>\n</li>\n<li><p>原则10:协商不是一场竞赛或者一场游戏，协商双赢时才发挥了协商的最大价值</p>\n</li>\n</ul>\n<h4 id=\"策划原则\"><a href=\"#策划原则\" class=\"headerlink\" title=\"策划原则\"></a>策划原则</h4><p>目的：让项目有一个好的舒服的计划进行</p>\n<ul>\n<li><p>原则1:理解项目范围，项目的目的地</p>\n</li>\n<li><p>原则2:吸收利益相关者参与策划，商谈交付顺序及相关问题</p>\n</li>\n<li><p>原则3:要认识到计划的制定应按照迭代方式进行，迭代说增量交付</p>\n</li>\n<li><p>原则4:基于已知的估计</p>\n</li>\n<li><p>原则5:计划时考虑风险</p>\n</li>\n<li><p>原则6:保持脚踏实地</p>\n</li>\n<li><p>原则7:调整计划粒度。粒度：项目计划细节中的精细程度</p>\n</li>\n<li><p>原则8:制定计划确保质量</p>\n</li>\n<li><p>原则9:描述如何适应变化</p>\n</li>\n<li><p>原则10:经常跟踪并根据需要调整计划</p>\n</li>\n</ul>\n<h4 id=\"建模原则\"><a href=\"#建模原则\" class=\"headerlink\" title=\"建模原则\"></a>建模原则</h4><p>目的：获取良好的设计方案</p>\n<ul>\n<li><p>原则1:设计可追溯到需求模型</p>\n</li>\n<li><p>原则2:始终关注待建系统的架构，先架构，在构件的设计</p>\n</li>\n<li><p>原则3:数据设计与功能设计同等重要</p>\n</li>\n<li><p>原则4:必须精心设计接口</p>\n</li>\n<li><p>原则5:用户界面设计必须符合最终用户要求</p>\n</li>\n<li><p>原则6:构件设计应是功能独立的</p>\n</li>\n<li><p>原则7:构件之间以及构件与外部环境之间松散耦合，要低耦合</p>\n</li>\n<li><p>原则8:设计表述(模型)应该做到尽可能易于理解</p>\n</li>\n<li><p>原则9:设计应该迭代式进行</p>\n</li>\n</ul>\n<h4 id=\"构造原则\"><a href=\"#构造原则\" class=\"headerlink\" title=\"构造原则\"></a>构造原则</h4><p>目的：1.编码生成源代码 2.测试，包括(a)单元测试，(b)集成测试，(c)确认测试，(d)验收测试</p>\n<p>编码原则</p>\n<ul>\n<li>准备原则。在写下每行代码之前，要确保：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">理解所要解决的问题</span><br><span class=\"line\">理解基本的设计原则和概念</span><br><span class=\"line\">选择一种能够满足构建软件以及运行环境要求的编程语言</span><br><span class=\"line\">选择一种能提供工具以简化工作的编程环境</span><br><span class=\"line\">构件级编码完成后进行单元测试</span><br></pre></td></tr></table></figure>\n<ul>\n<li>编程原则。在开始编码时，要确保：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">遵循结构化编程方法来约束算法</span><br><span class=\"line\">考虑使用结对编程</span><br><span class=\"line\">选择能满足设计要求的数据结构</span><br><span class=\"line\">理解软件架构并开发出与其相符的接口</span><br><span class=\"line\">尽可能保持条件逻辑简单</span><br><span class=\"line\">开发的嵌套循环应使其易于测试</span><br><span class=\"line\">选择有意义的变量名并符合相关编码标准</span><br><span class=\"line\">编写注释，湿代码具有说明性</span><br><span class=\"line\">增强代码的可读性(例如：缩进和空行)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>确认原则。在完成每一阶段的编码之后，要确保：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">适当进行代码走查</span><br><span class=\"line\">进行单元测试并改正所发现的错误</span><br><span class=\"line\">重构代码</span><br></pre></td></tr></table></figure>\n<p>测试原则</p>\n<ul>\n<li><p>原则1:所有的测试都应该追溯到用户需求</p>\n</li>\n<li><p>原则2:测试计划应该远在测试之前就开始着手</p>\n</li>\n<li><p>原则3：将Pareto原则应用于软件测试。Pareto原则认为在软件测试过程中80%的错误都可以在大概20%的程序构件中找到根源</p>\n</li>\n<li><p>原则4:测试应该从“微观”开始，逐步转向宏观。单个程序模块–&gt;集成构件–&gt;整个系统</p>\n</li>\n<li><p>原则5:穷举测试是不可能的</p>\n</li>\n</ul>\n<h4 id=\"部署原则\"><a href=\"#部署原则\" class=\"headerlink\" title=\"部署原则\"></a>部署原则</h4><p>交付，支持和反馈</p>\n<ul>\n<li><p>原则1:客户对于软件的期望必须得到管理</p>\n</li>\n<li><p>原则2:完整的交付包应该经过安装和测试。交付至少是Beta测试版</p>\n</li>\n<li><p>原则3:技术支持必须在软件交付前就确定下来</p>\n</li>\n<li><p>原则4:必须为用户提供适当的说明材料</p>\n</li>\n<li><p>原则5；有缺陷的软件应该先改正再交付</p>\n</li>\n</ul>"},{"title":"软件工程-05_理解需求","date":"2019-05-15T11:31:45.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于进行需求分析的文章</font></center>\n\n<!--more-->\n\n# 理解需求\n\n## 需求工程\n\n需求工程致力于不断理解需求的大量任务和技术\n\n* 起始：建立基本的理解，包括对问题，谁需要解决方案，所期望解决方案的性质，与利益相关者和开发人员之间达成初步交流合作的效果。\n\n* 导出\n\n```md\n问题：\n系统或者产品目标是什么？\n想要实现什么？\n系统和产品如何满足业务的要求？\n最终系统或产品如何用于日常工作？\n\n需求导出困难的原因：\n范围问题\n理解问题\n易变问题\n```\n\n* 精化：集中开发一个精确的需求模型，用以说明软件的功能，特征和信息\n\n* 协商：调节冲突\n\n* 规格说明：图形，文档，模型，只要是易于表达意思的都行，另外这个是有模版的,模版参考Process Impact公司的需求规格说明书\n\n* 确认\n\n```md\n需求确认检查表：\n需求说明清晰吗？有没有可能造成误解？\n需求的来源弄清楚了吗？需求的最终说明是否已经根据或对照最初来源检查过？\n需求是否用定量的术语界定？\n其它哪些需求和此需求相关？是否已经使用交叉索引矩阵或其它机制弄清楚加以说明？\n需求是否违背某个系统领域的约束？\n需求是否可测试？如果可以，能否说明检测需求的测试？\n对已经创建的任何系统模型，需求是否可跟踪？\n对整体系统/产品目标，需求是否可跟踪？\n规格说明的构造方式是否有助于理解，轻松引用和翻译成更技术型的工作产品？\n对已创建的规格说明是否建立了索引？\n与系统性能，行为及运行特征相关需求的说明是否清楚？哪些需求是隐含出现的？\n```\n\n* 管理:追踪需求的变更\n\n```md\n需求工具：\n全面的需求工具列表：https://www.volere.org/requirements-tools/\n需求管理工具：\nwww-306.ibm.com/software/awdtools/reqpro/\n```\n\n## 建立根基\n\n#### 确认利益相关者\n\n* 业务运行管理人员\n\n* 产品管理人员\n\n* 市场销售人员\n\n* 内部和外部客户\n\n* 最终用户\n\n* 顾问\n\n* 产品工程师\n\n* 支持和维护工程师\n\n* 其它人员\n\n#### 识别多重观点\n\n* 不同的利益相关者会从他们自己的角度来寻找需求，需求工程师应该把所有人的需求进行分类整理。\n\n#### 协同合作\n\n如何协作\n\n* 需求工程师将工作标识为公共区域，矛盾区域和不一致区域。不一致区域，也是各利益相关者需求出现冲突的区域是最具有挑战性的。\n\n方法\n\n* 使用“优先点”，利益相关者投票决定，确定需求优先点\n\n#### 首次提问\n\n需求导出前应该问一些与环境无关的问题，以下问题有助于识别所有对构建软件感兴趣的利益相关者：\n\n* 谁是这项工作的最初请求者？\n\n* 谁将使用该方案？\n\n* 成功的解决方案能带来什么样的经济效益？\n\n以下问题有助于软件开发组更好的理解问题：\n\n* 如何描述由成功的解决方案产生的“良好”输出的特征？\n\n* 该解决方案强调解决了什么问题？\n\n* 能向我们展示解决方案使用的商业环境吗？\n\n* 存在将影响解决方案中特殊的性能问题或约束吗？\n\n以下问题关注与沟通活动本身的效率，也叫“元问题”\n\n* 你是回答这些问题的合适人选吗？你的回答是“正式的”吗？\n\n* 我的提问和你想解决的问题相关吗？\n\n* 我的问题是否太多了？\n\n* 还有其他人员可以提供更多的信息吗？\n\n* 还有我应该问的问题吗？\n\n## 导出需求\n\n#### 协作收集需求\n\n步骤：\n\n* 1.有了基本问题和答案，并确定了问题的范围和对解决方案的整体理解\n\n* 2.拟定会议地点，会议“调解人”，采用“方案论证手段“(工作表，活动挂图，电子公告牌，聊天室或者虚拟论坛)。开发人员和客户写1～2页的“产品要求”。\n\n* 3.启会前，将“产品要求”分发给所有参会者\n\n* 4.参会者讨论，并制定项目对象，服务列表，约束列表，性能标准列表\n\n```md\n项目对象:使用的具体对象\n服务列表：该项目所应该具有的服务\n约束列表：考虑软件所面临和会出现的意外情况，然后提前由解决方案解决\n性能标准列表：页面的响应速度，以及一些优先级事件\n```\n\n* 5.该专题的各个列表被提出后，生成组合列表，删除冗余项，可添加新的想法\n\n* 注意点：对象和服务，这需要更多的解释，利益相关者需要为列表的条目编写规格说明。该规格要说明到对象的具体情况，例如对页面的具体要求，多高，多宽。服务要非常清晰。\n\n* 保留那些还不能解决的问题\n\n#### 质量功能部署\n\n质量功能部署(Quality Function Deployment QFD)：将用户要求转换为软件技术需求的质量管理技术。QDF确认了三类需求：\n\n* 正常需求：必须为客户实现的需求\n\n* 期望需求：如果不实现，客户可能不满的一些需求\n\n* 令人兴奋的需求：如果实现了，客户会非常兴奋的一些需求\n\n#### 用户场景\n\n用户场景就是在研究用户使用某个功能时的场景，我们必须知道用户使用某项功能的具体场景，需要什么东西，打开什么样的页面，页面上都有什么，用户是点击按钮还是做些其它动作。用户场景也叫“用例场景”。\n\n#### 导出工作产品\n\n工作产品包括：\n\n```md\n要求和可行性陈述\n系统或产品范围的界限说明\n参与需求导出的客户，用户和其他利益相关者的名单\n系统技术环境的说明\n需求列表(最好按功能组织)以及每个需求使用的领域限制\n一系列使用场景，有助于深入了解系统或产品在不同运行环境下的使用\n任何能够更好地定义需求的原型\n```\n所有参与需求导出的人员需要评审以上的每一个工作产品\n\n## 开发用例\n\n开发用例\n\n* 1.确定参与者\n\n* 2.有了参与者后，才能开发用例，以下是开发用例应该回答的问题\n\n```md\n谁是主要参与者，次要参与者？\n参与者的目标是什么？\n故事开始前有什么前提条件？\n参与者完成的主要工作或功能是什么？\n按照故事所描述的还可能需要考虑什么异常？\n参与者的交互中有什么可能的变化？\n参与者将获得，产生或改变哪些系统信息？\n参与者必须通知系统有关外部环境的改变吗？\n参与者希望从系统获取什么信息？\n参与者希望得知会有意料之外的变更吗？\n```\n\n## 构建需求模型\n\n#### 需求模型的元素\n\n基于场景的元素\n\n* 从用户的视角描述系统\n\n* 详情参考：https://www.cnblogs.com/xiaolongbao-lzh/p/4590897.html\n\n基于类的元素\n\n* UML类图，第7天时具体分析\n\n行为元素\n\n* UML状态图，第7天时具体分析\n\n面向数据流的元素\n\n* 数据流模型，第7天时具体分析\n\n#### 分析需求\n\n分析需求的目的是因为在特定的应用领域内某些事情在所有的项目中重复发生，这些分析模式在许多应用项目建模时可以重复使用。\n\n## 协商需求\n\n协商需求要做的一系列活动\n\n* 1.识别系统或子系统关键的利益相关者\n\n* 2.确认利益相关者“赢”的条件\n\n* 3.就利益相关者“赢”的条件进行协商，以便使其与所有涉及人的一些双赢条件一致\n\n## 确认需求\n\n确认需求时应该提出以下问题：\n\n* 1.每项需求都和系统或产品的整体目标一致吗？\n\n* 2.需求是真正必须的吗？\n\n* 3.每项需求都有界定且无歧义的吗？\n\n* 4.每项需求都标记了来源吗？\n\n* 5.有需求发生冲突吗？\n\n* 6.需求能保证一定可以实现吗？\n\n* 7.实现的需求是可测试的吗？\n\n* 8.需求模型有恰当的反映将要构建系统的信息，功能和行为吗？\n\n* 9.需求模型有详细分割，能逐步揭示详细的系统信息吗？\n\n* 10.每项需求模式都符合客户要求吗？","source":"_posts/2019-05-15-05-软件工程.md","raw":"---\ntitle: 软件工程-05_理解需求\ndate: 2019-05-15 11:31:45\ncategories: \n- 软件工程\ntags: \n- 软件\n- 软件工程\n- 需求\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于进行需求分析的文章</font></center>\n\n<!--more-->\n\n# 理解需求\n\n## 需求工程\n\n需求工程致力于不断理解需求的大量任务和技术\n\n* 起始：建立基本的理解，包括对问题，谁需要解决方案，所期望解决方案的性质，与利益相关者和开发人员之间达成初步交流合作的效果。\n\n* 导出\n\n```md\n问题：\n系统或者产品目标是什么？\n想要实现什么？\n系统和产品如何满足业务的要求？\n最终系统或产品如何用于日常工作？\n\n需求导出困难的原因：\n范围问题\n理解问题\n易变问题\n```\n\n* 精化：集中开发一个精确的需求模型，用以说明软件的功能，特征和信息\n\n* 协商：调节冲突\n\n* 规格说明：图形，文档，模型，只要是易于表达意思的都行，另外这个是有模版的,模版参考Process Impact公司的需求规格说明书\n\n* 确认\n\n```md\n需求确认检查表：\n需求说明清晰吗？有没有可能造成误解？\n需求的来源弄清楚了吗？需求的最终说明是否已经根据或对照最初来源检查过？\n需求是否用定量的术语界定？\n其它哪些需求和此需求相关？是否已经使用交叉索引矩阵或其它机制弄清楚加以说明？\n需求是否违背某个系统领域的约束？\n需求是否可测试？如果可以，能否说明检测需求的测试？\n对已经创建的任何系统模型，需求是否可跟踪？\n对整体系统/产品目标，需求是否可跟踪？\n规格说明的构造方式是否有助于理解，轻松引用和翻译成更技术型的工作产品？\n对已创建的规格说明是否建立了索引？\n与系统性能，行为及运行特征相关需求的说明是否清楚？哪些需求是隐含出现的？\n```\n\n* 管理:追踪需求的变更\n\n```md\n需求工具：\n全面的需求工具列表：https://www.volere.org/requirements-tools/\n需求管理工具：\nwww-306.ibm.com/software/awdtools/reqpro/\n```\n\n## 建立根基\n\n#### 确认利益相关者\n\n* 业务运行管理人员\n\n* 产品管理人员\n\n* 市场销售人员\n\n* 内部和外部客户\n\n* 最终用户\n\n* 顾问\n\n* 产品工程师\n\n* 支持和维护工程师\n\n* 其它人员\n\n#### 识别多重观点\n\n* 不同的利益相关者会从他们自己的角度来寻找需求，需求工程师应该把所有人的需求进行分类整理。\n\n#### 协同合作\n\n如何协作\n\n* 需求工程师将工作标识为公共区域，矛盾区域和不一致区域。不一致区域，也是各利益相关者需求出现冲突的区域是最具有挑战性的。\n\n方法\n\n* 使用“优先点”，利益相关者投票决定，确定需求优先点\n\n#### 首次提问\n\n需求导出前应该问一些与环境无关的问题，以下问题有助于识别所有对构建软件感兴趣的利益相关者：\n\n* 谁是这项工作的最初请求者？\n\n* 谁将使用该方案？\n\n* 成功的解决方案能带来什么样的经济效益？\n\n以下问题有助于软件开发组更好的理解问题：\n\n* 如何描述由成功的解决方案产生的“良好”输出的特征？\n\n* 该解决方案强调解决了什么问题？\n\n* 能向我们展示解决方案使用的商业环境吗？\n\n* 存在将影响解决方案中特殊的性能问题或约束吗？\n\n以下问题关注与沟通活动本身的效率，也叫“元问题”\n\n* 你是回答这些问题的合适人选吗？你的回答是“正式的”吗？\n\n* 我的提问和你想解决的问题相关吗？\n\n* 我的问题是否太多了？\n\n* 还有其他人员可以提供更多的信息吗？\n\n* 还有我应该问的问题吗？\n\n## 导出需求\n\n#### 协作收集需求\n\n步骤：\n\n* 1.有了基本问题和答案，并确定了问题的范围和对解决方案的整体理解\n\n* 2.拟定会议地点，会议“调解人”，采用“方案论证手段“(工作表，活动挂图，电子公告牌，聊天室或者虚拟论坛)。开发人员和客户写1～2页的“产品要求”。\n\n* 3.启会前，将“产品要求”分发给所有参会者\n\n* 4.参会者讨论，并制定项目对象，服务列表，约束列表，性能标准列表\n\n```md\n项目对象:使用的具体对象\n服务列表：该项目所应该具有的服务\n约束列表：考虑软件所面临和会出现的意外情况，然后提前由解决方案解决\n性能标准列表：页面的响应速度，以及一些优先级事件\n```\n\n* 5.该专题的各个列表被提出后，生成组合列表，删除冗余项，可添加新的想法\n\n* 注意点：对象和服务，这需要更多的解释，利益相关者需要为列表的条目编写规格说明。该规格要说明到对象的具体情况，例如对页面的具体要求，多高，多宽。服务要非常清晰。\n\n* 保留那些还不能解决的问题\n\n#### 质量功能部署\n\n质量功能部署(Quality Function Deployment QFD)：将用户要求转换为软件技术需求的质量管理技术。QDF确认了三类需求：\n\n* 正常需求：必须为客户实现的需求\n\n* 期望需求：如果不实现，客户可能不满的一些需求\n\n* 令人兴奋的需求：如果实现了，客户会非常兴奋的一些需求\n\n#### 用户场景\n\n用户场景就是在研究用户使用某个功能时的场景，我们必须知道用户使用某项功能的具体场景，需要什么东西，打开什么样的页面，页面上都有什么，用户是点击按钮还是做些其它动作。用户场景也叫“用例场景”。\n\n#### 导出工作产品\n\n工作产品包括：\n\n```md\n要求和可行性陈述\n系统或产品范围的界限说明\n参与需求导出的客户，用户和其他利益相关者的名单\n系统技术环境的说明\n需求列表(最好按功能组织)以及每个需求使用的领域限制\n一系列使用场景，有助于深入了解系统或产品在不同运行环境下的使用\n任何能够更好地定义需求的原型\n```\n所有参与需求导出的人员需要评审以上的每一个工作产品\n\n## 开发用例\n\n开发用例\n\n* 1.确定参与者\n\n* 2.有了参与者后，才能开发用例，以下是开发用例应该回答的问题\n\n```md\n谁是主要参与者，次要参与者？\n参与者的目标是什么？\n故事开始前有什么前提条件？\n参与者完成的主要工作或功能是什么？\n按照故事所描述的还可能需要考虑什么异常？\n参与者的交互中有什么可能的变化？\n参与者将获得，产生或改变哪些系统信息？\n参与者必须通知系统有关外部环境的改变吗？\n参与者希望从系统获取什么信息？\n参与者希望得知会有意料之外的变更吗？\n```\n\n## 构建需求模型\n\n#### 需求模型的元素\n\n基于场景的元素\n\n* 从用户的视角描述系统\n\n* 详情参考：https://www.cnblogs.com/xiaolongbao-lzh/p/4590897.html\n\n基于类的元素\n\n* UML类图，第7天时具体分析\n\n行为元素\n\n* UML状态图，第7天时具体分析\n\n面向数据流的元素\n\n* 数据流模型，第7天时具体分析\n\n#### 分析需求\n\n分析需求的目的是因为在特定的应用领域内某些事情在所有的项目中重复发生，这些分析模式在许多应用项目建模时可以重复使用。\n\n## 协商需求\n\n协商需求要做的一系列活动\n\n* 1.识别系统或子系统关键的利益相关者\n\n* 2.确认利益相关者“赢”的条件\n\n* 3.就利益相关者“赢”的条件进行协商，以便使其与所有涉及人的一些双赢条件一致\n\n## 确认需求\n\n确认需求时应该提出以下问题：\n\n* 1.每项需求都和系统或产品的整体目标一致吗？\n\n* 2.需求是真正必须的吗？\n\n* 3.每项需求都有界定且无歧义的吗？\n\n* 4.每项需求都标记了来源吗？\n\n* 5.有需求发生冲突吗？\n\n* 6.需求能保证一定可以实现吗？\n\n* 7.实现的需求是可测试的吗？\n\n* 8.需求模型有恰当的反映将要构建系统的信息，功能和行为吗？\n\n* 9.需求模型有详细分割，能逐步揭示详细的系统信息吗？\n\n* 10.每项需求模式都符合客户要求吗？","slug":"2019-05-15-05-软件工程","published":1,"updated":"2019-08-10T04:35:46.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6um000b54tnxz2hfh1o","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于进行需求分析的文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"理解需求\"><a href=\"#理解需求\" class=\"headerlink\" title=\"理解需求\"></a>理解需求</h1><h2 id=\"需求工程\"><a href=\"#需求工程\" class=\"headerlink\" title=\"需求工程\"></a>需求工程</h2><p>需求工程致力于不断理解需求的大量任务和技术</p>\n<ul>\n<li><p>起始：建立基本的理解，包括对问题，谁需要解决方案，所期望解决方案的性质，与利益相关者和开发人员之间达成初步交流合作的效果。</p>\n</li>\n<li><p>导出</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">问题：</span><br><span class=\"line\">系统或者产品目标是什么？</span><br><span class=\"line\">想要实现什么？</span><br><span class=\"line\">系统和产品如何满足业务的要求？</span><br><span class=\"line\">最终系统或产品如何用于日常工作？</span><br><span class=\"line\"></span><br><span class=\"line\">需求导出困难的原因：</span><br><span class=\"line\">范围问题</span><br><span class=\"line\">理解问题</span><br><span class=\"line\">易变问题</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>精化：集中开发一个精确的需求模型，用以说明软件的功能，特征和信息</p>\n</li>\n<li><p>协商：调节冲突</p>\n</li>\n<li><p>规格说明：图形，文档，模型，只要是易于表达意思的都行，另外这个是有模版的,模版参考Process Impact公司的需求规格说明书</p>\n</li>\n<li><p>确认</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需求确认检查表：</span><br><span class=\"line\">需求说明清晰吗？有没有可能造成误解？</span><br><span class=\"line\">需求的来源弄清楚了吗？需求的最终说明是否已经根据或对照最初来源检查过？</span><br><span class=\"line\">需求是否用定量的术语界定？</span><br><span class=\"line\">其它哪些需求和此需求相关？是否已经使用交叉索引矩阵或其它机制弄清楚加以说明？</span><br><span class=\"line\">需求是否违背某个系统领域的约束？</span><br><span class=\"line\">需求是否可测试？如果可以，能否说明检测需求的测试？</span><br><span class=\"line\">对已经创建的任何系统模型，需求是否可跟踪？</span><br><span class=\"line\">对整体系统/产品目标，需求是否可跟踪？</span><br><span class=\"line\">规格说明的构造方式是否有助于理解，轻松引用和翻译成更技术型的工作产品？</span><br><span class=\"line\">对已创建的规格说明是否建立了索引？</span><br><span class=\"line\">与系统性能，行为及运行特征相关需求的说明是否清楚？哪些需求是隐含出现的？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>管理:追踪需求的变更</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需求工具：</span><br><span class=\"line\">全面的需求工具列表：https://www.volere.org/requirements-tools/</span><br><span class=\"line\">需求管理工具：</span><br><span class=\"line\">www-306.ibm.com/software/awdtools/reqpro/</span><br></pre></td></tr></table></figure>\n<h2 id=\"建立根基\"><a href=\"#建立根基\" class=\"headerlink\" title=\"建立根基\"></a>建立根基</h2><h4 id=\"确认利益相关者\"><a href=\"#确认利益相关者\" class=\"headerlink\" title=\"确认利益相关者\"></a>确认利益相关者</h4><ul>\n<li><p>业务运行管理人员</p>\n</li>\n<li><p>产品管理人员</p>\n</li>\n<li><p>市场销售人员</p>\n</li>\n<li><p>内部和外部客户</p>\n</li>\n<li><p>最终用户</p>\n</li>\n<li><p>顾问</p>\n</li>\n<li><p>产品工程师</p>\n</li>\n<li><p>支持和维护工程师</p>\n</li>\n<li><p>其它人员</p>\n</li>\n</ul>\n<h4 id=\"识别多重观点\"><a href=\"#识别多重观点\" class=\"headerlink\" title=\"识别多重观点\"></a>识别多重观点</h4><ul>\n<li>不同的利益相关者会从他们自己的角度来寻找需求，需求工程师应该把所有人的需求进行分类整理。</li>\n</ul>\n<h4 id=\"协同合作\"><a href=\"#协同合作\" class=\"headerlink\" title=\"协同合作\"></a>协同合作</h4><p>如何协作</p>\n<ul>\n<li>需求工程师将工作标识为公共区域，矛盾区域和不一致区域。不一致区域，也是各利益相关者需求出现冲突的区域是最具有挑战性的。</li>\n</ul>\n<p>方法</p>\n<ul>\n<li>使用“优先点”，利益相关者投票决定，确定需求优先点</li>\n</ul>\n<h4 id=\"首次提问\"><a href=\"#首次提问\" class=\"headerlink\" title=\"首次提问\"></a>首次提问</h4><p>需求导出前应该问一些与环境无关的问题，以下问题有助于识别所有对构建软件感兴趣的利益相关者：</p>\n<ul>\n<li><p>谁是这项工作的最初请求者？</p>\n</li>\n<li><p>谁将使用该方案？</p>\n</li>\n<li><p>成功的解决方案能带来什么样的经济效益？</p>\n</li>\n</ul>\n<p>以下问题有助于软件开发组更好的理解问题：</p>\n<ul>\n<li><p>如何描述由成功的解决方案产生的“良好”输出的特征？</p>\n</li>\n<li><p>该解决方案强调解决了什么问题？</p>\n</li>\n<li><p>能向我们展示解决方案使用的商业环境吗？</p>\n</li>\n<li><p>存在将影响解决方案中特殊的性能问题或约束吗？</p>\n</li>\n</ul>\n<p>以下问题关注与沟通活动本身的效率，也叫“元问题”</p>\n<ul>\n<li><p>你是回答这些问题的合适人选吗？你的回答是“正式的”吗？</p>\n</li>\n<li><p>我的提问和你想解决的问题相关吗？</p>\n</li>\n<li><p>我的问题是否太多了？</p>\n</li>\n<li><p>还有其他人员可以提供更多的信息吗？</p>\n</li>\n<li><p>还有我应该问的问题吗？</p>\n</li>\n</ul>\n<h2 id=\"导出需求\"><a href=\"#导出需求\" class=\"headerlink\" title=\"导出需求\"></a>导出需求</h2><h4 id=\"协作收集需求\"><a href=\"#协作收集需求\" class=\"headerlink\" title=\"协作收集需求\"></a>协作收集需求</h4><p>步骤：</p>\n<ul>\n<li><p>1.有了基本问题和答案，并确定了问题的范围和对解决方案的整体理解</p>\n</li>\n<li><p>2.拟定会议地点，会议“调解人”，采用“方案论证手段“(工作表，活动挂图，电子公告牌，聊天室或者虚拟论坛)。开发人员和客户写1～2页的“产品要求”。</p>\n</li>\n<li><p>3.启会前，将“产品要求”分发给所有参会者</p>\n</li>\n<li><p>4.参会者讨论，并制定项目对象，服务列表，约束列表，性能标准列表</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">项目对象:使用的具体对象</span><br><span class=\"line\">服务列表：该项目所应该具有的服务</span><br><span class=\"line\">约束列表：考虑软件所面临和会出现的意外情况，然后提前由解决方案解决</span><br><span class=\"line\">性能标准列表：页面的响应速度，以及一些优先级事件</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>5.该专题的各个列表被提出后，生成组合列表，删除冗余项，可添加新的想法</p>\n</li>\n<li><p>注意点：对象和服务，这需要更多的解释，利益相关者需要为列表的条目编写规格说明。该规格要说明到对象的具体情况，例如对页面的具体要求，多高，多宽。服务要非常清晰。</p>\n</li>\n<li><p>保留那些还不能解决的问题</p>\n</li>\n</ul>\n<h4 id=\"质量功能部署\"><a href=\"#质量功能部署\" class=\"headerlink\" title=\"质量功能部署\"></a>质量功能部署</h4><p>质量功能部署(Quality Function Deployment QFD)：将用户要求转换为软件技术需求的质量管理技术。QDF确认了三类需求：</p>\n<ul>\n<li><p>正常需求：必须为客户实现的需求</p>\n</li>\n<li><p>期望需求：如果不实现，客户可能不满的一些需求</p>\n</li>\n<li><p>令人兴奋的需求：如果实现了，客户会非常兴奋的一些需求</p>\n</li>\n</ul>\n<h4 id=\"用户场景\"><a href=\"#用户场景\" class=\"headerlink\" title=\"用户场景\"></a>用户场景</h4><p>用户场景就是在研究用户使用某个功能时的场景，我们必须知道用户使用某项功能的具体场景，需要什么东西，打开什么样的页面，页面上都有什么，用户是点击按钮还是做些其它动作。用户场景也叫“用例场景”。</p>\n<h4 id=\"导出工作产品\"><a href=\"#导出工作产品\" class=\"headerlink\" title=\"导出工作产品\"></a>导出工作产品</h4><p>工作产品包括：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">要求和可行性陈述</span><br><span class=\"line\">系统或产品范围的界限说明</span><br><span class=\"line\">参与需求导出的客户，用户和其他利益相关者的名单</span><br><span class=\"line\">系统技术环境的说明</span><br><span class=\"line\">需求列表(最好按功能组织)以及每个需求使用的领域限制</span><br><span class=\"line\">一系列使用场景，有助于深入了解系统或产品在不同运行环境下的使用</span><br><span class=\"line\">任何能够更好地定义需求的原型</span><br></pre></td></tr></table></figure>\n<p>所有参与需求导出的人员需要评审以上的每一个工作产品</p>\n<h2 id=\"开发用例\"><a href=\"#开发用例\" class=\"headerlink\" title=\"开发用例\"></a>开发用例</h2><p>开发用例</p>\n<ul>\n<li><p>1.确定参与者</p>\n</li>\n<li><p>2.有了参与者后，才能开发用例，以下是开发用例应该回答的问题</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">谁是主要参与者，次要参与者？</span><br><span class=\"line\">参与者的目标是什么？</span><br><span class=\"line\">故事开始前有什么前提条件？</span><br><span class=\"line\">参与者完成的主要工作或功能是什么？</span><br><span class=\"line\">按照故事所描述的还可能需要考虑什么异常？</span><br><span class=\"line\">参与者的交互中有什么可能的变化？</span><br><span class=\"line\">参与者将获得，产生或改变哪些系统信息？</span><br><span class=\"line\">参与者必须通知系统有关外部环境的改变吗？</span><br><span class=\"line\">参与者希望从系统获取什么信息？</span><br><span class=\"line\">参与者希望得知会有意料之外的变更吗？</span><br></pre></td></tr></table></figure>\n<h2 id=\"构建需求模型\"><a href=\"#构建需求模型\" class=\"headerlink\" title=\"构建需求模型\"></a>构建需求模型</h2><h4 id=\"需求模型的元素\"><a href=\"#需求模型的元素\" class=\"headerlink\" title=\"需求模型的元素\"></a>需求模型的元素</h4><p>基于场景的元素</p>\n<ul>\n<li><p>从用户的视角描述系统</p>\n</li>\n<li><p>详情参考：<a href=\"https://www.cnblogs.com/xiaolongbao-lzh/p/4590897.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/xiaolongbao-lzh/p/4590897.html</a></p>\n</li>\n</ul>\n<p>基于类的元素</p>\n<ul>\n<li>UML类图，第7天时具体分析</li>\n</ul>\n<p>行为元素</p>\n<ul>\n<li>UML状态图，第7天时具体分析</li>\n</ul>\n<p>面向数据流的元素</p>\n<ul>\n<li>数据流模型，第7天时具体分析</li>\n</ul>\n<h4 id=\"分析需求\"><a href=\"#分析需求\" class=\"headerlink\" title=\"分析需求\"></a>分析需求</h4><p>分析需求的目的是因为在特定的应用领域内某些事情在所有的项目中重复发生，这些分析模式在许多应用项目建模时可以重复使用。</p>\n<h2 id=\"协商需求\"><a href=\"#协商需求\" class=\"headerlink\" title=\"协商需求\"></a>协商需求</h2><p>协商需求要做的一系列活动</p>\n<ul>\n<li><p>1.识别系统或子系统关键的利益相关者</p>\n</li>\n<li><p>2.确认利益相关者“赢”的条件</p>\n</li>\n<li><p>3.就利益相关者“赢”的条件进行协商，以便使其与所有涉及人的一些双赢条件一致</p>\n</li>\n</ul>\n<h2 id=\"确认需求\"><a href=\"#确认需求\" class=\"headerlink\" title=\"确认需求\"></a>确认需求</h2><p>确认需求时应该提出以下问题：</p>\n<ul>\n<li><p>1.每项需求都和系统或产品的整体目标一致吗？</p>\n</li>\n<li><p>2.需求是真正必须的吗？</p>\n</li>\n<li><p>3.每项需求都有界定且无歧义的吗？</p>\n</li>\n<li><p>4.每项需求都标记了来源吗？</p>\n</li>\n<li><p>5.有需求发生冲突吗？</p>\n</li>\n<li><p>6.需求能保证一定可以实现吗？</p>\n</li>\n<li><p>7.实现的需求是可测试的吗？</p>\n</li>\n<li><p>8.需求模型有恰当的反映将要构建系统的信息，功能和行为吗？</p>\n</li>\n<li><p>9.需求模型有详细分割，能逐步揭示详细的系统信息吗？</p>\n</li>\n<li><p>10.每项需求模式都符合客户要求吗？</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于进行需求分析的文章</font></center>","more":"<h1 id=\"理解需求\"><a href=\"#理解需求\" class=\"headerlink\" title=\"理解需求\"></a>理解需求</h1><h2 id=\"需求工程\"><a href=\"#需求工程\" class=\"headerlink\" title=\"需求工程\"></a>需求工程</h2><p>需求工程致力于不断理解需求的大量任务和技术</p>\n<ul>\n<li><p>起始：建立基本的理解，包括对问题，谁需要解决方案，所期望解决方案的性质，与利益相关者和开发人员之间达成初步交流合作的效果。</p>\n</li>\n<li><p>导出</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">问题：</span><br><span class=\"line\">系统或者产品目标是什么？</span><br><span class=\"line\">想要实现什么？</span><br><span class=\"line\">系统和产品如何满足业务的要求？</span><br><span class=\"line\">最终系统或产品如何用于日常工作？</span><br><span class=\"line\"></span><br><span class=\"line\">需求导出困难的原因：</span><br><span class=\"line\">范围问题</span><br><span class=\"line\">理解问题</span><br><span class=\"line\">易变问题</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>精化：集中开发一个精确的需求模型，用以说明软件的功能，特征和信息</p>\n</li>\n<li><p>协商：调节冲突</p>\n</li>\n<li><p>规格说明：图形，文档，模型，只要是易于表达意思的都行，另外这个是有模版的,模版参考Process Impact公司的需求规格说明书</p>\n</li>\n<li><p>确认</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需求确认检查表：</span><br><span class=\"line\">需求说明清晰吗？有没有可能造成误解？</span><br><span class=\"line\">需求的来源弄清楚了吗？需求的最终说明是否已经根据或对照最初来源检查过？</span><br><span class=\"line\">需求是否用定量的术语界定？</span><br><span class=\"line\">其它哪些需求和此需求相关？是否已经使用交叉索引矩阵或其它机制弄清楚加以说明？</span><br><span class=\"line\">需求是否违背某个系统领域的约束？</span><br><span class=\"line\">需求是否可测试？如果可以，能否说明检测需求的测试？</span><br><span class=\"line\">对已经创建的任何系统模型，需求是否可跟踪？</span><br><span class=\"line\">对整体系统/产品目标，需求是否可跟踪？</span><br><span class=\"line\">规格说明的构造方式是否有助于理解，轻松引用和翻译成更技术型的工作产品？</span><br><span class=\"line\">对已创建的规格说明是否建立了索引？</span><br><span class=\"line\">与系统性能，行为及运行特征相关需求的说明是否清楚？哪些需求是隐含出现的？</span><br></pre></td></tr></table></figure>\n<ul>\n<li>管理:追踪需求的变更</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">需求工具：</span><br><span class=\"line\">全面的需求工具列表：https://www.volere.org/requirements-tools/</span><br><span class=\"line\">需求管理工具：</span><br><span class=\"line\">www-306.ibm.com/software/awdtools/reqpro/</span><br></pre></td></tr></table></figure>\n<h2 id=\"建立根基\"><a href=\"#建立根基\" class=\"headerlink\" title=\"建立根基\"></a>建立根基</h2><h4 id=\"确认利益相关者\"><a href=\"#确认利益相关者\" class=\"headerlink\" title=\"确认利益相关者\"></a>确认利益相关者</h4><ul>\n<li><p>业务运行管理人员</p>\n</li>\n<li><p>产品管理人员</p>\n</li>\n<li><p>市场销售人员</p>\n</li>\n<li><p>内部和外部客户</p>\n</li>\n<li><p>最终用户</p>\n</li>\n<li><p>顾问</p>\n</li>\n<li><p>产品工程师</p>\n</li>\n<li><p>支持和维护工程师</p>\n</li>\n<li><p>其它人员</p>\n</li>\n</ul>\n<h4 id=\"识别多重观点\"><a href=\"#识别多重观点\" class=\"headerlink\" title=\"识别多重观点\"></a>识别多重观点</h4><ul>\n<li>不同的利益相关者会从他们自己的角度来寻找需求，需求工程师应该把所有人的需求进行分类整理。</li>\n</ul>\n<h4 id=\"协同合作\"><a href=\"#协同合作\" class=\"headerlink\" title=\"协同合作\"></a>协同合作</h4><p>如何协作</p>\n<ul>\n<li>需求工程师将工作标识为公共区域，矛盾区域和不一致区域。不一致区域，也是各利益相关者需求出现冲突的区域是最具有挑战性的。</li>\n</ul>\n<p>方法</p>\n<ul>\n<li>使用“优先点”，利益相关者投票决定，确定需求优先点</li>\n</ul>\n<h4 id=\"首次提问\"><a href=\"#首次提问\" class=\"headerlink\" title=\"首次提问\"></a>首次提问</h4><p>需求导出前应该问一些与环境无关的问题，以下问题有助于识别所有对构建软件感兴趣的利益相关者：</p>\n<ul>\n<li><p>谁是这项工作的最初请求者？</p>\n</li>\n<li><p>谁将使用该方案？</p>\n</li>\n<li><p>成功的解决方案能带来什么样的经济效益？</p>\n</li>\n</ul>\n<p>以下问题有助于软件开发组更好的理解问题：</p>\n<ul>\n<li><p>如何描述由成功的解决方案产生的“良好”输出的特征？</p>\n</li>\n<li><p>该解决方案强调解决了什么问题？</p>\n</li>\n<li><p>能向我们展示解决方案使用的商业环境吗？</p>\n</li>\n<li><p>存在将影响解决方案中特殊的性能问题或约束吗？</p>\n</li>\n</ul>\n<p>以下问题关注与沟通活动本身的效率，也叫“元问题”</p>\n<ul>\n<li><p>你是回答这些问题的合适人选吗？你的回答是“正式的”吗？</p>\n</li>\n<li><p>我的提问和你想解决的问题相关吗？</p>\n</li>\n<li><p>我的问题是否太多了？</p>\n</li>\n<li><p>还有其他人员可以提供更多的信息吗？</p>\n</li>\n<li><p>还有我应该问的问题吗？</p>\n</li>\n</ul>\n<h2 id=\"导出需求\"><a href=\"#导出需求\" class=\"headerlink\" title=\"导出需求\"></a>导出需求</h2><h4 id=\"协作收集需求\"><a href=\"#协作收集需求\" class=\"headerlink\" title=\"协作收集需求\"></a>协作收集需求</h4><p>步骤：</p>\n<ul>\n<li><p>1.有了基本问题和答案，并确定了问题的范围和对解决方案的整体理解</p>\n</li>\n<li><p>2.拟定会议地点，会议“调解人”，采用“方案论证手段“(工作表，活动挂图，电子公告牌，聊天室或者虚拟论坛)。开发人员和客户写1～2页的“产品要求”。</p>\n</li>\n<li><p>3.启会前，将“产品要求”分发给所有参会者</p>\n</li>\n<li><p>4.参会者讨论，并制定项目对象，服务列表，约束列表，性能标准列表</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">项目对象:使用的具体对象</span><br><span class=\"line\">服务列表：该项目所应该具有的服务</span><br><span class=\"line\">约束列表：考虑软件所面临和会出现的意外情况，然后提前由解决方案解决</span><br><span class=\"line\">性能标准列表：页面的响应速度，以及一些优先级事件</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>5.该专题的各个列表被提出后，生成组合列表，删除冗余项，可添加新的想法</p>\n</li>\n<li><p>注意点：对象和服务，这需要更多的解释，利益相关者需要为列表的条目编写规格说明。该规格要说明到对象的具体情况，例如对页面的具体要求，多高，多宽。服务要非常清晰。</p>\n</li>\n<li><p>保留那些还不能解决的问题</p>\n</li>\n</ul>\n<h4 id=\"质量功能部署\"><a href=\"#质量功能部署\" class=\"headerlink\" title=\"质量功能部署\"></a>质量功能部署</h4><p>质量功能部署(Quality Function Deployment QFD)：将用户要求转换为软件技术需求的质量管理技术。QDF确认了三类需求：</p>\n<ul>\n<li><p>正常需求：必须为客户实现的需求</p>\n</li>\n<li><p>期望需求：如果不实现，客户可能不满的一些需求</p>\n</li>\n<li><p>令人兴奋的需求：如果实现了，客户会非常兴奋的一些需求</p>\n</li>\n</ul>\n<h4 id=\"用户场景\"><a href=\"#用户场景\" class=\"headerlink\" title=\"用户场景\"></a>用户场景</h4><p>用户场景就是在研究用户使用某个功能时的场景，我们必须知道用户使用某项功能的具体场景，需要什么东西，打开什么样的页面，页面上都有什么，用户是点击按钮还是做些其它动作。用户场景也叫“用例场景”。</p>\n<h4 id=\"导出工作产品\"><a href=\"#导出工作产品\" class=\"headerlink\" title=\"导出工作产品\"></a>导出工作产品</h4><p>工作产品包括：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">要求和可行性陈述</span><br><span class=\"line\">系统或产品范围的界限说明</span><br><span class=\"line\">参与需求导出的客户，用户和其他利益相关者的名单</span><br><span class=\"line\">系统技术环境的说明</span><br><span class=\"line\">需求列表(最好按功能组织)以及每个需求使用的领域限制</span><br><span class=\"line\">一系列使用场景，有助于深入了解系统或产品在不同运行环境下的使用</span><br><span class=\"line\">任何能够更好地定义需求的原型</span><br></pre></td></tr></table></figure>\n<p>所有参与需求导出的人员需要评审以上的每一个工作产品</p>\n<h2 id=\"开发用例\"><a href=\"#开发用例\" class=\"headerlink\" title=\"开发用例\"></a>开发用例</h2><p>开发用例</p>\n<ul>\n<li><p>1.确定参与者</p>\n</li>\n<li><p>2.有了参与者后，才能开发用例，以下是开发用例应该回答的问题</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">谁是主要参与者，次要参与者？</span><br><span class=\"line\">参与者的目标是什么？</span><br><span class=\"line\">故事开始前有什么前提条件？</span><br><span class=\"line\">参与者完成的主要工作或功能是什么？</span><br><span class=\"line\">按照故事所描述的还可能需要考虑什么异常？</span><br><span class=\"line\">参与者的交互中有什么可能的变化？</span><br><span class=\"line\">参与者将获得，产生或改变哪些系统信息？</span><br><span class=\"line\">参与者必须通知系统有关外部环境的改变吗？</span><br><span class=\"line\">参与者希望从系统获取什么信息？</span><br><span class=\"line\">参与者希望得知会有意料之外的变更吗？</span><br></pre></td></tr></table></figure>\n<h2 id=\"构建需求模型\"><a href=\"#构建需求模型\" class=\"headerlink\" title=\"构建需求模型\"></a>构建需求模型</h2><h4 id=\"需求模型的元素\"><a href=\"#需求模型的元素\" class=\"headerlink\" title=\"需求模型的元素\"></a>需求模型的元素</h4><p>基于场景的元素</p>\n<ul>\n<li><p>从用户的视角描述系统</p>\n</li>\n<li><p>详情参考：<a href=\"https://www.cnblogs.com/xiaolongbao-lzh/p/4590897.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/xiaolongbao-lzh/p/4590897.html</a></p>\n</li>\n</ul>\n<p>基于类的元素</p>\n<ul>\n<li>UML类图，第7天时具体分析</li>\n</ul>\n<p>行为元素</p>\n<ul>\n<li>UML状态图，第7天时具体分析</li>\n</ul>\n<p>面向数据流的元素</p>\n<ul>\n<li>数据流模型，第7天时具体分析</li>\n</ul>\n<h4 id=\"分析需求\"><a href=\"#分析需求\" class=\"headerlink\" title=\"分析需求\"></a>分析需求</h4><p>分析需求的目的是因为在特定的应用领域内某些事情在所有的项目中重复发生，这些分析模式在许多应用项目建模时可以重复使用。</p>\n<h2 id=\"协商需求\"><a href=\"#协商需求\" class=\"headerlink\" title=\"协商需求\"></a>协商需求</h2><p>协商需求要做的一系列活动</p>\n<ul>\n<li><p>1.识别系统或子系统关键的利益相关者</p>\n</li>\n<li><p>2.确认利益相关者“赢”的条件</p>\n</li>\n<li><p>3.就利益相关者“赢”的条件进行协商，以便使其与所有涉及人的一些双赢条件一致</p>\n</li>\n</ul>\n<h2 id=\"确认需求\"><a href=\"#确认需求\" class=\"headerlink\" title=\"确认需求\"></a>确认需求</h2><p>确认需求时应该提出以下问题：</p>\n<ul>\n<li><p>1.每项需求都和系统或产品的整体目标一致吗？</p>\n</li>\n<li><p>2.需求是真正必须的吗？</p>\n</li>\n<li><p>3.每项需求都有界定且无歧义的吗？</p>\n</li>\n<li><p>4.每项需求都标记了来源吗？</p>\n</li>\n<li><p>5.有需求发生冲突吗？</p>\n</li>\n<li><p>6.需求能保证一定可以实现吗？</p>\n</li>\n<li><p>7.实现的需求是可测试的吗？</p>\n</li>\n<li><p>8.需求模型有恰当的反映将要构建系统的信息，功能和行为吗？</p>\n</li>\n<li><p>9.需求模型有详细分割，能逐步揭示详细的系统信息吗？</p>\n</li>\n<li><p>10.每项需求模式都符合客户要求吗？</p>\n</li>\n</ul>"},{"title":"制作Windows操作系统工具盘","date":"2019-05-21T20:51:29.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于制作Windows工具盘的文章</font></center>\n\n<!--more-->\n\n# Windows操作系统工具盘制作流程\n\n## 下载Windows镜像\n\n下载地址\n\n* https://msdn.itellyou.cn/\n\n路径\n\n* 选择**操作系统**，然后选择要下载的Windows镜像，我这里选择的是W10 1089Version 4月更新的，然后选择企业版的，比较稳定\n\n下载\n\n* 复制ed2k的下载连接，然后在下载工具里下载，例如使用迅雷下载\n\n## 导入工具盘\n\n我这里使用rufus导入工具盘，因为rufus操作简单，没其它原因，就喜欢它这点,ubuntu也能使用这个工具\n\n下载rufus，这里提供两种方式\n\n* 1.网站下载：http://rufus.ie/\n\n* 2.命令行下载\n\n```shell\n下载之前要要安装好git，openSSH，scoop\n$ scoop bucket add extras\n$ scoop install rufus\n```\n\n制作工具盘，相信我，它简单的像个咦......\n\n* 插入工具盘，打开rufus，rufus一般会自动检索到你的U盘，你只需要在Boot selection里选择你下载好的镜像，然后点击START\n\n好了，你没有看错，就只需要选择一个镜像路径就行了，于是工具盘制作完成，接下来愉快的安装操作系统去吧\n\n\n","source":"_posts/2019-05-21-制作Windows操作系统工具盘.md","raw":"---\ntitle: 制作Windows操作系统工具盘\ndate: 2019-05-21 20:51:29\ncategories: \n- 操作系统\ntags: \n- Windows\n- 工具盘\n- 镜像\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于制作Windows工具盘的文章</font></center>\n\n<!--more-->\n\n# Windows操作系统工具盘制作流程\n\n## 下载Windows镜像\n\n下载地址\n\n* https://msdn.itellyou.cn/\n\n路径\n\n* 选择**操作系统**，然后选择要下载的Windows镜像，我这里选择的是W10 1089Version 4月更新的，然后选择企业版的，比较稳定\n\n下载\n\n* 复制ed2k的下载连接，然后在下载工具里下载，例如使用迅雷下载\n\n## 导入工具盘\n\n我这里使用rufus导入工具盘，因为rufus操作简单，没其它原因，就喜欢它这点,ubuntu也能使用这个工具\n\n下载rufus，这里提供两种方式\n\n* 1.网站下载：http://rufus.ie/\n\n* 2.命令行下载\n\n```shell\n下载之前要要安装好git，openSSH，scoop\n$ scoop bucket add extras\n$ scoop install rufus\n```\n\n制作工具盘，相信我，它简单的像个咦......\n\n* 插入工具盘，打开rufus，rufus一般会自动检索到你的U盘，你只需要在Boot selection里选择你下载好的镜像，然后点击START\n\n好了，你没有看错，就只需要选择一个镜像路径就行了，于是工具盘制作完成，接下来愉快的安装操作系统去吧\n\n\n","slug":"2019-05-21-制作Windows操作系统工具盘","published":1,"updated":"2019-08-10T04:35:46.724Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6uo000c54tn22ycx0pb","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于制作Windows工具盘的文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Windows操作系统工具盘制作流程\"><a href=\"#Windows操作系统工具盘制作流程\" class=\"headerlink\" title=\"Windows操作系统工具盘制作流程\"></a>Windows操作系统工具盘制作流程</h1><h2 id=\"下载Windows镜像\"><a href=\"#下载Windows镜像\" class=\"headerlink\" title=\"下载Windows镜像\"></a>下载Windows镜像</h2><p>下载地址</p>\n<ul>\n<li><a href=\"https://msdn.itellyou.cn/\" target=\"_blank\" rel=\"noopener\">https://msdn.itellyou.cn/</a></li>\n</ul>\n<p>路径</p>\n<ul>\n<li>选择<strong>操作系统</strong>，然后选择要下载的Windows镜像，我这里选择的是W10 1089Version 4月更新的，然后选择企业版的，比较稳定</li>\n</ul>\n<p>下载</p>\n<ul>\n<li>复制ed2k的下载连接，然后在下载工具里下载，例如使用迅雷下载</li>\n</ul>\n<h2 id=\"导入工具盘\"><a href=\"#导入工具盘\" class=\"headerlink\" title=\"导入工具盘\"></a>导入工具盘</h2><p>我这里使用rufus导入工具盘，因为rufus操作简单，没其它原因，就喜欢它这点,ubuntu也能使用这个工具</p>\n<p>下载rufus，这里提供两种方式</p>\n<ul>\n<li><p>1.网站下载：<a href=\"http://rufus.ie/\" target=\"_blank\" rel=\"noopener\">http://rufus.ie/</a></p>\n</li>\n<li><p>2.命令行下载</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下载之前要要安装好git，openSSH，scoop</span><br><span class=\"line\"><span class=\"meta\">$</span> scoop bucket add extras</span><br><span class=\"line\"><span class=\"meta\">$</span> scoop install rufus</span><br></pre></td></tr></table></figure>\n<p>制作工具盘，相信我，它简单的像个咦……</p>\n<ul>\n<li>插入工具盘，打开rufus，rufus一般会自动检索到你的U盘，你只需要在Boot selection里选择你下载好的镜像，然后点击START</li>\n</ul>\n<p>好了，你没有看错，就只需要选择一个镜像路径就行了，于是工具盘制作完成，接下来愉快的安装操作系统去吧</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于制作Windows工具盘的文章</font></center>","more":"<h1 id=\"Windows操作系统工具盘制作流程\"><a href=\"#Windows操作系统工具盘制作流程\" class=\"headerlink\" title=\"Windows操作系统工具盘制作流程\"></a>Windows操作系统工具盘制作流程</h1><h2 id=\"下载Windows镜像\"><a href=\"#下载Windows镜像\" class=\"headerlink\" title=\"下载Windows镜像\"></a>下载Windows镜像</h2><p>下载地址</p>\n<ul>\n<li><a href=\"https://msdn.itellyou.cn/\" target=\"_blank\" rel=\"noopener\">https://msdn.itellyou.cn/</a></li>\n</ul>\n<p>路径</p>\n<ul>\n<li>选择<strong>操作系统</strong>，然后选择要下载的Windows镜像，我这里选择的是W10 1089Version 4月更新的，然后选择企业版的，比较稳定</li>\n</ul>\n<p>下载</p>\n<ul>\n<li>复制ed2k的下载连接，然后在下载工具里下载，例如使用迅雷下载</li>\n</ul>\n<h2 id=\"导入工具盘\"><a href=\"#导入工具盘\" class=\"headerlink\" title=\"导入工具盘\"></a>导入工具盘</h2><p>我这里使用rufus导入工具盘，因为rufus操作简单，没其它原因，就喜欢它这点,ubuntu也能使用这个工具</p>\n<p>下载rufus，这里提供两种方式</p>\n<ul>\n<li><p>1.网站下载：<a href=\"http://rufus.ie/\" target=\"_blank\" rel=\"noopener\">http://rufus.ie/</a></p>\n</li>\n<li><p>2.命令行下载</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">下载之前要要安装好git，openSSH，scoop</span><br><span class=\"line\"><span class=\"meta\">$</span> scoop bucket add extras</span><br><span class=\"line\"><span class=\"meta\">$</span> scoop install rufus</span><br></pre></td></tr></table></figure>\n<p>制作工具盘，相信我，它简单的像个咦……</p>\n<ul>\n<li>插入工具盘，打开rufus，rufus一般会自动检索到你的U盘，你只需要在Boot selection里选择你下载好的镜像，然后点击START</li>\n</ul>\n<p>好了，你没有看错，就只需要选择一个镜像路径就行了，于是工具盘制作完成，接下来愉快的安装操作系统去吧</p>"},{"title":"软件工程-06_需求建模：场景、信息、与类分析","date":"2019-05-16T10:09:22.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于需求建模的文章</font></center>\n\n<!--more-->\n\n# 需求建模：场景、信息、与类分析\n\n## 需求分析\n\n需求建模：\n\n* 1.场景建模\n\n* 2.数据建模\n\n* 3.面向类的模型\n\n* 4.面向流程的模型\n\n* 5.行为模型\n\n#### 总体目标和原理\n\n需求建模必须实现3个主要目标：\n\n* 1.描述客户需要什么\n\n* 2.为软件设计奠定基础\n\n* 3.定义在软件完成后可以被确认的一组需求\n\n#### 分析的经验原则\n\n模型的经验原则\n\n* 1.模型应关注在问题域或业务域内可见的需求，不要陷入细节\n\n* 2.每个元素都应该增加对软件需求的整体理解，以及对信息域、功能和系统行为的深入理解\n\n* 3.基础结构和其它非功能的模型应推延到设计阶段再考虑\n\n* 4.最小化整个系统内的关联\n\n* 5.确认需求模型为整个利益相关者都带来价值\n\n* 6.尽可能保持模型简洁\n\n#### 域分析\n\n域分析师：发现和定义可复用的分析模式，分析类和相关的信息\n\n![](https://i.loli.net/2019/05/15/5cdbd6454448646866.jpg)\n\n#### 建立模型的方法\n\n结构化分析\n\n* 将数据对象抽取为一个Model，由该Model来对数据结果进行分析\n\n面向对象的分析\n\n* 定义类和影响客户需求的类之间的协作关系\n\n目的：\n\n* 不管采用什么分析方法，我们最终都是为了为利益相关者提供最好的软件需求模型和过渡到软件设计的最有效方法。\n\n需求模型的元素：\n\n![](https://i.loli.net/2019/05/15/5cdbe5172a8f195961.jpg)\n\n## 基于场景的建模\n\n#### 新建初始用例\n\n开发用例问题：\n\n* 1.编写什么？\n\n* 2.写多少？\n\n* 3.编写说明应该多详细？\n\n* 4.如何组织说明？\n\n```md\n编写：\n1.起始和导出\n2.定义问题范围\n3.说明整体的运行目标\n4.建立优先级顺序\n5.概述所有已知的功能需求\n6.描述系统将处理的信息\n```\n\n对用例的分析可以采用两种形式，一种是模拟利益相关者来陈述用例故事，另外一种是以列表的形式逐条列出执行的步骤。\n\n\n#### 细化初始用例\n\n细化问题：\n\n* 1.在这一状态点上，参与者能进行一些其它的动作吗？\n\n* 2.在这一状态点上，参与者有没有可能遇到一些错误的条件？如果有可能，这些错误会是什么？\n\n* 3.在这一状态点上，参与者有没有可能遇到一些其他的行为？是什么？\n\n还应该考虑的问题：\n\n* 1.应答失败，如用户是等待一个应答，但应答超时了\n\n* 2.性能差，如页面渲染速度贼慢\n\n如何解决：\n\n* 看下一小节，编写正规的用例\n\n#### 编写正规的用例\n\n**干货：规范的用例模版**\n\n```md\n用例：购买零食\n迭代：2，最新更新记录：hui XXXX年YY月RR日\n主演参与者：顾客\n情景目标：任何时候，任何地点用户通过互联网购买零食\n前提条件：客户已经申请了一个会员号，并且用户已经使用正确的会员号登陆\n起动：客户在想买零食的时候，打开电脑买零食\n场景：\n1.客户登陆零食网站\n2.客户输入他的会员号  \n3.客户输入他的密码     \n4.系统显示网站的零食首页信息\n5.客户选择零食加入购物车或者直接购买 \n6.客户选择完后开始点击“购买”\n7.系统显示出客户所购买零食的清单以及零食总价\n8.客户选择付款方式，然后点击“支付”\n9.系统提示付款成功     \n异常：\n1.会员号或者密码不正确——————参看用例：“确认用户名和密码”\n2.客户忘记了密码——————参看用例：“找回密码”\n3.还没有购物车——————参看用例：“购物车”\n4.支付失败——————参考用例：“支付”\n优先级：属于基础功能，高优先级\n何时可用：第X个增量，因为增量没有完全的设计，所以这里用X代替\n使用频率：高等频率\n使用方式：通过基于个人计算机的浏览器和互联网连接到零食网站\n次要参与者：系统管理员，客服\n次要参与者使用方式：\n1.系统管理员：基于个人计算机的系统\n2.客服：客服页面系统\n未解决的问题：\n1.有其他的登陆方式吗？如手机扫码登陆，手机短信登陆\n2.当购买人数出现高峰期时，怎样才能保证系统不崩溃？\n3.网络崩溃时，用户刷新后继续显示当前页面吗？\n```\n\n下一节结束用例的UML图，为了应对较复杂的用例情况\n\n## 补充用例的UML模型\n\n购买零食功能活动图\n\n![](https://i.loli.net/2019/05/15/5cdbfc49be07082712.jpg)\n\n泳道图\n\n* 参考一下blog学习：https://blog.csdn.net/fly_zxy/article/details/80939806\n\n## 数据建模概念\n\n#### 数据对象\n\n数据对象由复合信息表示。\n\n* 复合信息：具有若干不同的特征或属性的事物\n\n* 数据对象只封装数据\n\n#### 数据属性\n\n数据属性定义了数据对象的性质，有三个不同的特征\n\n* 1.为数据对象实例命名\n\n* 2.描述这个实例\n\n* 3.建立对另一个表中的另一个实例的引用\n\n区别于数据属性：\n\n* 数据对象与数据属性的区别？car是一个数据对象，里面封装的颜色，大小，价格等是数据属性\n\n#### 关系\n\n有些数据对象之间是有关系的，E-R关系\n\n```md\n一些常用的数据建模工具：\nAllFusion ERWin : https://erwin.com/?gclid=EAIaIQobChMI2-fG9ted4gIVmCCtBh0GoQBMEAAYASAAEgK8ePD_BwE\nER/Studio : https://www.embarcadero.com/er-studio-editions\nOracle Designer : https://www.oracle.com/technetwork/developer-tools/designer/overview/index-082236.html\nVisible Analyst : http://www.visiblesystemscorp.com/Products/Analyst/index.htm\n```\n\n## 基于类的建模\n\n#### 识别分析类\n\n分析过程，寻找名词和动词，分析类表现为以下方式之一：\n\n* 1.外部实体，产生或使用基于计算机系统的信息\n\n* 2.事物，问题信息域的一部分\n\n* 3.偶尔事件或事件，在系统操作环境内发生\n\n* 4.角色，由和系统交互的人员扮演\n\n* 5.组织单元，和某个应用系统相关\n\n* 6.场地，建立问题的环境和系统的整体功能\n\n* 7.结构，定义了对象的类或与对象相关的类\n\n最初找出的有用的名词或者动词只能称为潜在类，还需要考虑这些潜在类是否有以下特性\n\n* 1.保留信息：只有记录潜在类的信息，系统才能正常工作，这类潜在类是有用的\n\n* 2.所需服务：潜在类必须具有一组可确认的操作，这组操作能用某种方式改变类的属性值\n\n* 3.多个属性：需求分析过程中，焦点应在于“主”信息，事实上，只有一个属性的类可能在设计中有用，但在分析活动阶段，最好把它作为另一个类的某个属性.意思是如果是单一属性，就没必须为这个属性创建类，而是考虑其是不是其他类的属性。\n\n* 4.公共属性：可以为潜在类定义一组属性，这些属性适用于类的所有实例\n\n* 5.公共操作：可以为潜在类定义一组操作，这些操作使用与类的所有实例\n\n* 6.必要需求：在问题空间中出现的外部实体，和任何系统解决方案运行时所必须的生产或消费信息，几乎都被定义为需求模型中的类\n\n#### 描述属性\n\n属性描述了已经包含在需求模型中的类。实质上，属性是定义类以澄清类在问题空间的环境下意味着什么\n\n可以采用一些组合项来描述数据：\n\n* 用户登陆=登陆账号+登陆密码\n\n#### 定义操作\n\n操作定义了某个对象的行为，粗略的划分为4种：\n\n* 1. 以某种方式操作数据(例如：添加，删除，重新格式化，选择)\n\n* 2.执行计算的操作\n\n* 3.请求某个对象的状态的操作\n\n* 4.监视某个对象发生某个控制事件的操作\n\n#### 类-职责-协作者建模\n\nClass-Responsibility-Collaborator,CRC卡\n\n![](https://i.loli.net/2019/05/16/5cdcc06adb2ef45071.jpg)\n\n类：\n\n* 1.实体类\n\n* 2.边界类\n\n* 3.控制类\n\n职责：\n\n* 1.智能系统应分布在所有类中以求最佳地满足问题的需求\n\n* 2.每个职责的说明应尽可能具有普遍性\n\n* 3.信息和与之相关的行为应放在同一个类中\n\n* 4.某个事物的信息应局限于一个类中而不要分布在多个类中\n\n* 5.适合时，职责应由相关类分享\n\n协作：\n\n* 是客户和服务器之间契约的具体实现，识别协作的方法是通过确认类本身是否实现自身的每个职责，如果不能，就需要和其他类协作\n\nCRC的使用：\n\n* CRC的使用很简单，就是先有一种主CRC卡，然后到达相应的职责时会有对应的协作者，然后再由这个协作者的类进行分析，依次类推。\n\n#### 关联和依赖\n\n这个关联说的有些想数据库中的E-R关系图，就一对一，一对多，多对多的关系\n\n依赖，依赖是一个类获得另外一个类的请求后才能执行其对应的功能\n\n#### 分析包\n\n类似于java中的“package”\n","source":"_posts/2019-05-16-06-软件工程.md","raw":"---\ntitle: 软件工程-06_需求建模：场景、信息、与类分析\ndate: 2019-05-16 10:09:22\ncategories: \n- 软件工程\ntags: \n- 需求建模\n- 场景\n- 信息\n- 类\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于需求建模的文章</font></center>\n\n<!--more-->\n\n# 需求建模：场景、信息、与类分析\n\n## 需求分析\n\n需求建模：\n\n* 1.场景建模\n\n* 2.数据建模\n\n* 3.面向类的模型\n\n* 4.面向流程的模型\n\n* 5.行为模型\n\n#### 总体目标和原理\n\n需求建模必须实现3个主要目标：\n\n* 1.描述客户需要什么\n\n* 2.为软件设计奠定基础\n\n* 3.定义在软件完成后可以被确认的一组需求\n\n#### 分析的经验原则\n\n模型的经验原则\n\n* 1.模型应关注在问题域或业务域内可见的需求，不要陷入细节\n\n* 2.每个元素都应该增加对软件需求的整体理解，以及对信息域、功能和系统行为的深入理解\n\n* 3.基础结构和其它非功能的模型应推延到设计阶段再考虑\n\n* 4.最小化整个系统内的关联\n\n* 5.确认需求模型为整个利益相关者都带来价值\n\n* 6.尽可能保持模型简洁\n\n#### 域分析\n\n域分析师：发现和定义可复用的分析模式，分析类和相关的信息\n\n![](https://i.loli.net/2019/05/15/5cdbd6454448646866.jpg)\n\n#### 建立模型的方法\n\n结构化分析\n\n* 将数据对象抽取为一个Model，由该Model来对数据结果进行分析\n\n面向对象的分析\n\n* 定义类和影响客户需求的类之间的协作关系\n\n目的：\n\n* 不管采用什么分析方法，我们最终都是为了为利益相关者提供最好的软件需求模型和过渡到软件设计的最有效方法。\n\n需求模型的元素：\n\n![](https://i.loli.net/2019/05/15/5cdbe5172a8f195961.jpg)\n\n## 基于场景的建模\n\n#### 新建初始用例\n\n开发用例问题：\n\n* 1.编写什么？\n\n* 2.写多少？\n\n* 3.编写说明应该多详细？\n\n* 4.如何组织说明？\n\n```md\n编写：\n1.起始和导出\n2.定义问题范围\n3.说明整体的运行目标\n4.建立优先级顺序\n5.概述所有已知的功能需求\n6.描述系统将处理的信息\n```\n\n对用例的分析可以采用两种形式，一种是模拟利益相关者来陈述用例故事，另外一种是以列表的形式逐条列出执行的步骤。\n\n\n#### 细化初始用例\n\n细化问题：\n\n* 1.在这一状态点上，参与者能进行一些其它的动作吗？\n\n* 2.在这一状态点上，参与者有没有可能遇到一些错误的条件？如果有可能，这些错误会是什么？\n\n* 3.在这一状态点上，参与者有没有可能遇到一些其他的行为？是什么？\n\n还应该考虑的问题：\n\n* 1.应答失败，如用户是等待一个应答，但应答超时了\n\n* 2.性能差，如页面渲染速度贼慢\n\n如何解决：\n\n* 看下一小节，编写正规的用例\n\n#### 编写正规的用例\n\n**干货：规范的用例模版**\n\n```md\n用例：购买零食\n迭代：2，最新更新记录：hui XXXX年YY月RR日\n主演参与者：顾客\n情景目标：任何时候，任何地点用户通过互联网购买零食\n前提条件：客户已经申请了一个会员号，并且用户已经使用正确的会员号登陆\n起动：客户在想买零食的时候，打开电脑买零食\n场景：\n1.客户登陆零食网站\n2.客户输入他的会员号  \n3.客户输入他的密码     \n4.系统显示网站的零食首页信息\n5.客户选择零食加入购物车或者直接购买 \n6.客户选择完后开始点击“购买”\n7.系统显示出客户所购买零食的清单以及零食总价\n8.客户选择付款方式，然后点击“支付”\n9.系统提示付款成功     \n异常：\n1.会员号或者密码不正确——————参看用例：“确认用户名和密码”\n2.客户忘记了密码——————参看用例：“找回密码”\n3.还没有购物车——————参看用例：“购物车”\n4.支付失败——————参考用例：“支付”\n优先级：属于基础功能，高优先级\n何时可用：第X个增量，因为增量没有完全的设计，所以这里用X代替\n使用频率：高等频率\n使用方式：通过基于个人计算机的浏览器和互联网连接到零食网站\n次要参与者：系统管理员，客服\n次要参与者使用方式：\n1.系统管理员：基于个人计算机的系统\n2.客服：客服页面系统\n未解决的问题：\n1.有其他的登陆方式吗？如手机扫码登陆，手机短信登陆\n2.当购买人数出现高峰期时，怎样才能保证系统不崩溃？\n3.网络崩溃时，用户刷新后继续显示当前页面吗？\n```\n\n下一节结束用例的UML图，为了应对较复杂的用例情况\n\n## 补充用例的UML模型\n\n购买零食功能活动图\n\n![](https://i.loli.net/2019/05/15/5cdbfc49be07082712.jpg)\n\n泳道图\n\n* 参考一下blog学习：https://blog.csdn.net/fly_zxy/article/details/80939806\n\n## 数据建模概念\n\n#### 数据对象\n\n数据对象由复合信息表示。\n\n* 复合信息：具有若干不同的特征或属性的事物\n\n* 数据对象只封装数据\n\n#### 数据属性\n\n数据属性定义了数据对象的性质，有三个不同的特征\n\n* 1.为数据对象实例命名\n\n* 2.描述这个实例\n\n* 3.建立对另一个表中的另一个实例的引用\n\n区别于数据属性：\n\n* 数据对象与数据属性的区别？car是一个数据对象，里面封装的颜色，大小，价格等是数据属性\n\n#### 关系\n\n有些数据对象之间是有关系的，E-R关系\n\n```md\n一些常用的数据建模工具：\nAllFusion ERWin : https://erwin.com/?gclid=EAIaIQobChMI2-fG9ted4gIVmCCtBh0GoQBMEAAYASAAEgK8ePD_BwE\nER/Studio : https://www.embarcadero.com/er-studio-editions\nOracle Designer : https://www.oracle.com/technetwork/developer-tools/designer/overview/index-082236.html\nVisible Analyst : http://www.visiblesystemscorp.com/Products/Analyst/index.htm\n```\n\n## 基于类的建模\n\n#### 识别分析类\n\n分析过程，寻找名词和动词，分析类表现为以下方式之一：\n\n* 1.外部实体，产生或使用基于计算机系统的信息\n\n* 2.事物，问题信息域的一部分\n\n* 3.偶尔事件或事件，在系统操作环境内发生\n\n* 4.角色，由和系统交互的人员扮演\n\n* 5.组织单元，和某个应用系统相关\n\n* 6.场地，建立问题的环境和系统的整体功能\n\n* 7.结构，定义了对象的类或与对象相关的类\n\n最初找出的有用的名词或者动词只能称为潜在类，还需要考虑这些潜在类是否有以下特性\n\n* 1.保留信息：只有记录潜在类的信息，系统才能正常工作，这类潜在类是有用的\n\n* 2.所需服务：潜在类必须具有一组可确认的操作，这组操作能用某种方式改变类的属性值\n\n* 3.多个属性：需求分析过程中，焦点应在于“主”信息，事实上，只有一个属性的类可能在设计中有用，但在分析活动阶段，最好把它作为另一个类的某个属性.意思是如果是单一属性，就没必须为这个属性创建类，而是考虑其是不是其他类的属性。\n\n* 4.公共属性：可以为潜在类定义一组属性，这些属性适用于类的所有实例\n\n* 5.公共操作：可以为潜在类定义一组操作，这些操作使用与类的所有实例\n\n* 6.必要需求：在问题空间中出现的外部实体，和任何系统解决方案运行时所必须的生产或消费信息，几乎都被定义为需求模型中的类\n\n#### 描述属性\n\n属性描述了已经包含在需求模型中的类。实质上，属性是定义类以澄清类在问题空间的环境下意味着什么\n\n可以采用一些组合项来描述数据：\n\n* 用户登陆=登陆账号+登陆密码\n\n#### 定义操作\n\n操作定义了某个对象的行为，粗略的划分为4种：\n\n* 1. 以某种方式操作数据(例如：添加，删除，重新格式化，选择)\n\n* 2.执行计算的操作\n\n* 3.请求某个对象的状态的操作\n\n* 4.监视某个对象发生某个控制事件的操作\n\n#### 类-职责-协作者建模\n\nClass-Responsibility-Collaborator,CRC卡\n\n![](https://i.loli.net/2019/05/16/5cdcc06adb2ef45071.jpg)\n\n类：\n\n* 1.实体类\n\n* 2.边界类\n\n* 3.控制类\n\n职责：\n\n* 1.智能系统应分布在所有类中以求最佳地满足问题的需求\n\n* 2.每个职责的说明应尽可能具有普遍性\n\n* 3.信息和与之相关的行为应放在同一个类中\n\n* 4.某个事物的信息应局限于一个类中而不要分布在多个类中\n\n* 5.适合时，职责应由相关类分享\n\n协作：\n\n* 是客户和服务器之间契约的具体实现，识别协作的方法是通过确认类本身是否实现自身的每个职责，如果不能，就需要和其他类协作\n\nCRC的使用：\n\n* CRC的使用很简单，就是先有一种主CRC卡，然后到达相应的职责时会有对应的协作者，然后再由这个协作者的类进行分析，依次类推。\n\n#### 关联和依赖\n\n这个关联说的有些想数据库中的E-R关系图，就一对一，一对多，多对多的关系\n\n依赖，依赖是一个类获得另外一个类的请求后才能执行其对应的功能\n\n#### 分析包\n\n类似于java中的“package”\n","slug":"2019-05-16-06-软件工程","published":1,"updated":"2019-08-10T04:35:46.724Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6up000g54tnfedabc2h","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于需求建模的文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"需求建模：场景、信息、与类分析\"><a href=\"#需求建模：场景、信息、与类分析\" class=\"headerlink\" title=\"需求建模：场景、信息、与类分析\"></a>需求建模：场景、信息、与类分析</h1><h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><p>需求建模：</p>\n<ul>\n<li><p>1.场景建模</p>\n</li>\n<li><p>2.数据建模</p>\n</li>\n<li><p>3.面向类的模型</p>\n</li>\n<li><p>4.面向流程的模型</p>\n</li>\n<li><p>5.行为模型</p>\n</li>\n</ul>\n<h4 id=\"总体目标和原理\"><a href=\"#总体目标和原理\" class=\"headerlink\" title=\"总体目标和原理\"></a>总体目标和原理</h4><p>需求建模必须实现3个主要目标：</p>\n<ul>\n<li><p>1.描述客户需要什么</p>\n</li>\n<li><p>2.为软件设计奠定基础</p>\n</li>\n<li><p>3.定义在软件完成后可以被确认的一组需求</p>\n</li>\n</ul>\n<h4 id=\"分析的经验原则\"><a href=\"#分析的经验原则\" class=\"headerlink\" title=\"分析的经验原则\"></a>分析的经验原则</h4><p>模型的经验原则</p>\n<ul>\n<li><p>1.模型应关注在问题域或业务域内可见的需求，不要陷入细节</p>\n</li>\n<li><p>2.每个元素都应该增加对软件需求的整体理解，以及对信息域、功能和系统行为的深入理解</p>\n</li>\n<li><p>3.基础结构和其它非功能的模型应推延到设计阶段再考虑</p>\n</li>\n<li><p>4.最小化整个系统内的关联</p>\n</li>\n<li><p>5.确认需求模型为整个利益相关者都带来价值</p>\n</li>\n<li><p>6.尽可能保持模型简洁</p>\n</li>\n</ul>\n<h4 id=\"域分析\"><a href=\"#域分析\" class=\"headerlink\" title=\"域分析\"></a>域分析</h4><p>域分析师：发现和定义可复用的分析模式，分析类和相关的信息</p>\n<p><img src=\"https://i.loli.net/2019/05/15/5cdbd6454448646866.jpg\" alt></p>\n<h4 id=\"建立模型的方法\"><a href=\"#建立模型的方法\" class=\"headerlink\" title=\"建立模型的方法\"></a>建立模型的方法</h4><p>结构化分析</p>\n<ul>\n<li>将数据对象抽取为一个Model，由该Model来对数据结果进行分析</li>\n</ul>\n<p>面向对象的分析</p>\n<ul>\n<li>定义类和影响客户需求的类之间的协作关系</li>\n</ul>\n<p>目的：</p>\n<ul>\n<li>不管采用什么分析方法，我们最终都是为了为利益相关者提供最好的软件需求模型和过渡到软件设计的最有效方法。</li>\n</ul>\n<p>需求模型的元素：</p>\n<p><img src=\"https://i.loli.net/2019/05/15/5cdbe5172a8f195961.jpg\" alt></p>\n<h2 id=\"基于场景的建模\"><a href=\"#基于场景的建模\" class=\"headerlink\" title=\"基于场景的建模\"></a>基于场景的建模</h2><h4 id=\"新建初始用例\"><a href=\"#新建初始用例\" class=\"headerlink\" title=\"新建初始用例\"></a>新建初始用例</h4><p>开发用例问题：</p>\n<ul>\n<li><p>1.编写什么？</p>\n</li>\n<li><p>2.写多少？</p>\n</li>\n<li><p>3.编写说明应该多详细？</p>\n</li>\n<li><p>4.如何组织说明？</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编写：</span><br><span class=\"line\">1.起始和导出</span><br><span class=\"line\">2.定义问题范围</span><br><span class=\"line\">3.说明整体的运行目标</span><br><span class=\"line\">4.建立优先级顺序</span><br><span class=\"line\">5.概述所有已知的功能需求</span><br><span class=\"line\">6.描述系统将处理的信息</span><br></pre></td></tr></table></figure>\n<p>对用例的分析可以采用两种形式，一种是模拟利益相关者来陈述用例故事，另外一种是以列表的形式逐条列出执行的步骤。</p>\n<h4 id=\"细化初始用例\"><a href=\"#细化初始用例\" class=\"headerlink\" title=\"细化初始用例\"></a>细化初始用例</h4><p>细化问题：</p>\n<ul>\n<li><p>1.在这一状态点上，参与者能进行一些其它的动作吗？</p>\n</li>\n<li><p>2.在这一状态点上，参与者有没有可能遇到一些错误的条件？如果有可能，这些错误会是什么？</p>\n</li>\n<li><p>3.在这一状态点上，参与者有没有可能遇到一些其他的行为？是什么？</p>\n</li>\n</ul>\n<p>还应该考虑的问题：</p>\n<ul>\n<li><p>1.应答失败，如用户是等待一个应答，但应答超时了</p>\n</li>\n<li><p>2.性能差，如页面渲染速度贼慢</p>\n</li>\n</ul>\n<p>如何解决：</p>\n<ul>\n<li>看下一小节，编写正规的用例</li>\n</ul>\n<h4 id=\"编写正规的用例\"><a href=\"#编写正规的用例\" class=\"headerlink\" title=\"编写正规的用例\"></a>编写正规的用例</h4><p><strong>干货：规范的用例模版</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用例：购买零食</span><br><span class=\"line\">迭代：2，最新更新记录：hui XXXX年YY月RR日</span><br><span class=\"line\">主演参与者：顾客</span><br><span class=\"line\">情景目标：任何时候，任何地点用户通过互联网购买零食</span><br><span class=\"line\">前提条件：客户已经申请了一个会员号，并且用户已经使用正确的会员号登陆</span><br><span class=\"line\">起动：客户在想买零食的时候，打开电脑买零食</span><br><span class=\"line\">场景：</span><br><span class=\"line\">1.客户登陆零食网站</span><br><span class=\"line\">2.客户输入他的会员号  </span><br><span class=\"line\">3.客户输入他的密码     </span><br><span class=\"line\">4.系统显示网站的零食首页信息</span><br><span class=\"line\">5.客户选择零食加入购物车或者直接购买 </span><br><span class=\"line\">6.客户选择完后开始点击“购买”</span><br><span class=\"line\">7.系统显示出客户所购买零食的清单以及零食总价</span><br><span class=\"line\">8.客户选择付款方式，然后点击“支付”</span><br><span class=\"line\">9.系统提示付款成功     </span><br><span class=\"line\">异常：</span><br><span class=\"line\">1.会员号或者密码不正确——————参看用例：“确认用户名和密码”</span><br><span class=\"line\">2.客户忘记了密码——————参看用例：“找回密码”</span><br><span class=\"line\">3.还没有购物车——————参看用例：“购物车”</span><br><span class=\"line\">4.支付失败——————参考用例：“支付”</span><br><span class=\"line\">优先级：属于基础功能，高优先级</span><br><span class=\"line\">何时可用：第X个增量，因为增量没有完全的设计，所以这里用X代替</span><br><span class=\"line\">使用频率：高等频率</span><br><span class=\"line\">使用方式：通过基于个人计算机的浏览器和互联网连接到零食网站</span><br><span class=\"line\">次要参与者：系统管理员，客服</span><br><span class=\"line\">次要参与者使用方式：</span><br><span class=\"line\">1.系统管理员：基于个人计算机的系统</span><br><span class=\"line\">2.客服：客服页面系统</span><br><span class=\"line\">未解决的问题：</span><br><span class=\"line\">1.有其他的登陆方式吗？如手机扫码登陆，手机短信登陆</span><br><span class=\"line\">2.当购买人数出现高峰期时，怎样才能保证系统不崩溃？</span><br><span class=\"line\">3.网络崩溃时，用户刷新后继续显示当前页面吗？</span><br></pre></td></tr></table></figure>\n<p>下一节结束用例的UML图，为了应对较复杂的用例情况</p>\n<h2 id=\"补充用例的UML模型\"><a href=\"#补充用例的UML模型\" class=\"headerlink\" title=\"补充用例的UML模型\"></a>补充用例的UML模型</h2><p>购买零食功能活动图</p>\n<p><img src=\"https://i.loli.net/2019/05/15/5cdbfc49be07082712.jpg\" alt></p>\n<p>泳道图</p>\n<ul>\n<li>参考一下blog学习：<a href=\"https://blog.csdn.net/fly_zxy/article/details/80939806\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/fly_zxy/article/details/80939806</a></li>\n</ul>\n<h2 id=\"数据建模概念\"><a href=\"#数据建模概念\" class=\"headerlink\" title=\"数据建模概念\"></a>数据建模概念</h2><h4 id=\"数据对象\"><a href=\"#数据对象\" class=\"headerlink\" title=\"数据对象\"></a>数据对象</h4><p>数据对象由复合信息表示。</p>\n<ul>\n<li><p>复合信息：具有若干不同的特征或属性的事物</p>\n</li>\n<li><p>数据对象只封装数据</p>\n</li>\n</ul>\n<h4 id=\"数据属性\"><a href=\"#数据属性\" class=\"headerlink\" title=\"数据属性\"></a>数据属性</h4><p>数据属性定义了数据对象的性质，有三个不同的特征</p>\n<ul>\n<li><p>1.为数据对象实例命名</p>\n</li>\n<li><p>2.描述这个实例</p>\n</li>\n<li><p>3.建立对另一个表中的另一个实例的引用</p>\n</li>\n</ul>\n<p>区别于数据属性：</p>\n<ul>\n<li>数据对象与数据属性的区别？car是一个数据对象，里面封装的颜色，大小，价格等是数据属性</li>\n</ul>\n<h4 id=\"关系\"><a href=\"#关系\" class=\"headerlink\" title=\"关系\"></a>关系</h4><p>有些数据对象之间是有关系的，E-R关系</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一些常用的数据建模工具：</span><br><span class=\"line\">AllFusion ERWin : https://erwin.com/?gclid=EAIaIQobChMI2-fG9ted4gIVmCCtBh0GoQBMEAAYASAAEgK8ePD_BwE</span><br><span class=\"line\">ER/Studio : https://www.embarcadero.com/er-studio-editions</span><br><span class=\"line\">Oracle Designer : https://www.oracle.com/technetwork/developer-tools/designer/overview/index-082236.html</span><br><span class=\"line\">Visible Analyst : http://www.visiblesystemscorp.com/Products/Analyst/index.htm</span><br></pre></td></tr></table></figure>\n<h2 id=\"基于类的建模\"><a href=\"#基于类的建模\" class=\"headerlink\" title=\"基于类的建模\"></a>基于类的建模</h2><h4 id=\"识别分析类\"><a href=\"#识别分析类\" class=\"headerlink\" title=\"识别分析类\"></a>识别分析类</h4><p>分析过程，寻找名词和动词，分析类表现为以下方式之一：</p>\n<ul>\n<li><p>1.外部实体，产生或使用基于计算机系统的信息</p>\n</li>\n<li><p>2.事物，问题信息域的一部分</p>\n</li>\n<li><p>3.偶尔事件或事件，在系统操作环境内发生</p>\n</li>\n<li><p>4.角色，由和系统交互的人员扮演</p>\n</li>\n<li><p>5.组织单元，和某个应用系统相关</p>\n</li>\n<li><p>6.场地，建立问题的环境和系统的整体功能</p>\n</li>\n<li><p>7.结构，定义了对象的类或与对象相关的类</p>\n</li>\n</ul>\n<p>最初找出的有用的名词或者动词只能称为潜在类，还需要考虑这些潜在类是否有以下特性</p>\n<ul>\n<li><p>1.保留信息：只有记录潜在类的信息，系统才能正常工作，这类潜在类是有用的</p>\n</li>\n<li><p>2.所需服务：潜在类必须具有一组可确认的操作，这组操作能用某种方式改变类的属性值</p>\n</li>\n<li><p>3.多个属性：需求分析过程中，焦点应在于“主”信息，事实上，只有一个属性的类可能在设计中有用，但在分析活动阶段，最好把它作为另一个类的某个属性.意思是如果是单一属性，就没必须为这个属性创建类，而是考虑其是不是其他类的属性。</p>\n</li>\n<li><p>4.公共属性：可以为潜在类定义一组属性，这些属性适用于类的所有实例</p>\n</li>\n<li><p>5.公共操作：可以为潜在类定义一组操作，这些操作使用与类的所有实例</p>\n</li>\n<li><p>6.必要需求：在问题空间中出现的外部实体，和任何系统解决方案运行时所必须的生产或消费信息，几乎都被定义为需求模型中的类</p>\n</li>\n</ul>\n<h4 id=\"描述属性\"><a href=\"#描述属性\" class=\"headerlink\" title=\"描述属性\"></a>描述属性</h4><p>属性描述了已经包含在需求模型中的类。实质上，属性是定义类以澄清类在问题空间的环境下意味着什么</p>\n<p>可以采用一些组合项来描述数据：</p>\n<ul>\n<li>用户登陆=登陆账号+登陆密码</li>\n</ul>\n<h4 id=\"定义操作\"><a href=\"#定义操作\" class=\"headerlink\" title=\"定义操作\"></a>定义操作</h4><p>操作定义了某个对象的行为，粗略的划分为4种：</p>\n<ul>\n<li><ol>\n<li>以某种方式操作数据(例如：添加，删除，重新格式化，选择)</li>\n</ol>\n</li>\n<li><p>2.执行计算的操作</p>\n</li>\n<li><p>3.请求某个对象的状态的操作</p>\n</li>\n<li><p>4.监视某个对象发生某个控制事件的操作</p>\n</li>\n</ul>\n<h4 id=\"类-职责-协作者建模\"><a href=\"#类-职责-协作者建模\" class=\"headerlink\" title=\"类-职责-协作者建模\"></a>类-职责-协作者建模</h4><p>Class-Responsibility-Collaborator,CRC卡</p>\n<p><img src=\"https://i.loli.net/2019/05/16/5cdcc06adb2ef45071.jpg\" alt></p>\n<p>类：</p>\n<ul>\n<li><p>1.实体类</p>\n</li>\n<li><p>2.边界类</p>\n</li>\n<li><p>3.控制类</p>\n</li>\n</ul>\n<p>职责：</p>\n<ul>\n<li><p>1.智能系统应分布在所有类中以求最佳地满足问题的需求</p>\n</li>\n<li><p>2.每个职责的说明应尽可能具有普遍性</p>\n</li>\n<li><p>3.信息和与之相关的行为应放在同一个类中</p>\n</li>\n<li><p>4.某个事物的信息应局限于一个类中而不要分布在多个类中</p>\n</li>\n<li><p>5.适合时，职责应由相关类分享</p>\n</li>\n</ul>\n<p>协作：</p>\n<ul>\n<li>是客户和服务器之间契约的具体实现，识别协作的方法是通过确认类本身是否实现自身的每个职责，如果不能，就需要和其他类协作</li>\n</ul>\n<p>CRC的使用：</p>\n<ul>\n<li>CRC的使用很简单，就是先有一种主CRC卡，然后到达相应的职责时会有对应的协作者，然后再由这个协作者的类进行分析，依次类推。</li>\n</ul>\n<h4 id=\"关联和依赖\"><a href=\"#关联和依赖\" class=\"headerlink\" title=\"关联和依赖\"></a>关联和依赖</h4><p>这个关联说的有些想数据库中的E-R关系图，就一对一，一对多，多对多的关系</p>\n<p>依赖，依赖是一个类获得另外一个类的请求后才能执行其对应的功能</p>\n<h4 id=\"分析包\"><a href=\"#分析包\" class=\"headerlink\" title=\"分析包\"></a>分析包</h4><p>类似于java中的“package”</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于需求建模的文章</font></center>","more":"<h1 id=\"需求建模：场景、信息、与类分析\"><a href=\"#需求建模：场景、信息、与类分析\" class=\"headerlink\" title=\"需求建模：场景、信息、与类分析\"></a>需求建模：场景、信息、与类分析</h1><h2 id=\"需求分析\"><a href=\"#需求分析\" class=\"headerlink\" title=\"需求分析\"></a>需求分析</h2><p>需求建模：</p>\n<ul>\n<li><p>1.场景建模</p>\n</li>\n<li><p>2.数据建模</p>\n</li>\n<li><p>3.面向类的模型</p>\n</li>\n<li><p>4.面向流程的模型</p>\n</li>\n<li><p>5.行为模型</p>\n</li>\n</ul>\n<h4 id=\"总体目标和原理\"><a href=\"#总体目标和原理\" class=\"headerlink\" title=\"总体目标和原理\"></a>总体目标和原理</h4><p>需求建模必须实现3个主要目标：</p>\n<ul>\n<li><p>1.描述客户需要什么</p>\n</li>\n<li><p>2.为软件设计奠定基础</p>\n</li>\n<li><p>3.定义在软件完成后可以被确认的一组需求</p>\n</li>\n</ul>\n<h4 id=\"分析的经验原则\"><a href=\"#分析的经验原则\" class=\"headerlink\" title=\"分析的经验原则\"></a>分析的经验原则</h4><p>模型的经验原则</p>\n<ul>\n<li><p>1.模型应关注在问题域或业务域内可见的需求，不要陷入细节</p>\n</li>\n<li><p>2.每个元素都应该增加对软件需求的整体理解，以及对信息域、功能和系统行为的深入理解</p>\n</li>\n<li><p>3.基础结构和其它非功能的模型应推延到设计阶段再考虑</p>\n</li>\n<li><p>4.最小化整个系统内的关联</p>\n</li>\n<li><p>5.确认需求模型为整个利益相关者都带来价值</p>\n</li>\n<li><p>6.尽可能保持模型简洁</p>\n</li>\n</ul>\n<h4 id=\"域分析\"><a href=\"#域分析\" class=\"headerlink\" title=\"域分析\"></a>域分析</h4><p>域分析师：发现和定义可复用的分析模式，分析类和相关的信息</p>\n<p><img src=\"https://i.loli.net/2019/05/15/5cdbd6454448646866.jpg\" alt></p>\n<h4 id=\"建立模型的方法\"><a href=\"#建立模型的方法\" class=\"headerlink\" title=\"建立模型的方法\"></a>建立模型的方法</h4><p>结构化分析</p>\n<ul>\n<li>将数据对象抽取为一个Model，由该Model来对数据结果进行分析</li>\n</ul>\n<p>面向对象的分析</p>\n<ul>\n<li>定义类和影响客户需求的类之间的协作关系</li>\n</ul>\n<p>目的：</p>\n<ul>\n<li>不管采用什么分析方法，我们最终都是为了为利益相关者提供最好的软件需求模型和过渡到软件设计的最有效方法。</li>\n</ul>\n<p>需求模型的元素：</p>\n<p><img src=\"https://i.loli.net/2019/05/15/5cdbe5172a8f195961.jpg\" alt></p>\n<h2 id=\"基于场景的建模\"><a href=\"#基于场景的建模\" class=\"headerlink\" title=\"基于场景的建模\"></a>基于场景的建模</h2><h4 id=\"新建初始用例\"><a href=\"#新建初始用例\" class=\"headerlink\" title=\"新建初始用例\"></a>新建初始用例</h4><p>开发用例问题：</p>\n<ul>\n<li><p>1.编写什么？</p>\n</li>\n<li><p>2.写多少？</p>\n</li>\n<li><p>3.编写说明应该多详细？</p>\n</li>\n<li><p>4.如何组织说明？</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编写：</span><br><span class=\"line\">1.起始和导出</span><br><span class=\"line\">2.定义问题范围</span><br><span class=\"line\">3.说明整体的运行目标</span><br><span class=\"line\">4.建立优先级顺序</span><br><span class=\"line\">5.概述所有已知的功能需求</span><br><span class=\"line\">6.描述系统将处理的信息</span><br></pre></td></tr></table></figure>\n<p>对用例的分析可以采用两种形式，一种是模拟利益相关者来陈述用例故事，另外一种是以列表的形式逐条列出执行的步骤。</p>\n<h4 id=\"细化初始用例\"><a href=\"#细化初始用例\" class=\"headerlink\" title=\"细化初始用例\"></a>细化初始用例</h4><p>细化问题：</p>\n<ul>\n<li><p>1.在这一状态点上，参与者能进行一些其它的动作吗？</p>\n</li>\n<li><p>2.在这一状态点上，参与者有没有可能遇到一些错误的条件？如果有可能，这些错误会是什么？</p>\n</li>\n<li><p>3.在这一状态点上，参与者有没有可能遇到一些其他的行为？是什么？</p>\n</li>\n</ul>\n<p>还应该考虑的问题：</p>\n<ul>\n<li><p>1.应答失败，如用户是等待一个应答，但应答超时了</p>\n</li>\n<li><p>2.性能差，如页面渲染速度贼慢</p>\n</li>\n</ul>\n<p>如何解决：</p>\n<ul>\n<li>看下一小节，编写正规的用例</li>\n</ul>\n<h4 id=\"编写正规的用例\"><a href=\"#编写正规的用例\" class=\"headerlink\" title=\"编写正规的用例\"></a>编写正规的用例</h4><p><strong>干货：规范的用例模版</strong></p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用例：购买零食</span><br><span class=\"line\">迭代：2，最新更新记录：hui XXXX年YY月RR日</span><br><span class=\"line\">主演参与者：顾客</span><br><span class=\"line\">情景目标：任何时候，任何地点用户通过互联网购买零食</span><br><span class=\"line\">前提条件：客户已经申请了一个会员号，并且用户已经使用正确的会员号登陆</span><br><span class=\"line\">起动：客户在想买零食的时候，打开电脑买零食</span><br><span class=\"line\">场景：</span><br><span class=\"line\">1.客户登陆零食网站</span><br><span class=\"line\">2.客户输入他的会员号  </span><br><span class=\"line\">3.客户输入他的密码     </span><br><span class=\"line\">4.系统显示网站的零食首页信息</span><br><span class=\"line\">5.客户选择零食加入购物车或者直接购买 </span><br><span class=\"line\">6.客户选择完后开始点击“购买”</span><br><span class=\"line\">7.系统显示出客户所购买零食的清单以及零食总价</span><br><span class=\"line\">8.客户选择付款方式，然后点击“支付”</span><br><span class=\"line\">9.系统提示付款成功     </span><br><span class=\"line\">异常：</span><br><span class=\"line\">1.会员号或者密码不正确——————参看用例：“确认用户名和密码”</span><br><span class=\"line\">2.客户忘记了密码——————参看用例：“找回密码”</span><br><span class=\"line\">3.还没有购物车——————参看用例：“购物车”</span><br><span class=\"line\">4.支付失败——————参考用例：“支付”</span><br><span class=\"line\">优先级：属于基础功能，高优先级</span><br><span class=\"line\">何时可用：第X个增量，因为增量没有完全的设计，所以这里用X代替</span><br><span class=\"line\">使用频率：高等频率</span><br><span class=\"line\">使用方式：通过基于个人计算机的浏览器和互联网连接到零食网站</span><br><span class=\"line\">次要参与者：系统管理员，客服</span><br><span class=\"line\">次要参与者使用方式：</span><br><span class=\"line\">1.系统管理员：基于个人计算机的系统</span><br><span class=\"line\">2.客服：客服页面系统</span><br><span class=\"line\">未解决的问题：</span><br><span class=\"line\">1.有其他的登陆方式吗？如手机扫码登陆，手机短信登陆</span><br><span class=\"line\">2.当购买人数出现高峰期时，怎样才能保证系统不崩溃？</span><br><span class=\"line\">3.网络崩溃时，用户刷新后继续显示当前页面吗？</span><br></pre></td></tr></table></figure>\n<p>下一节结束用例的UML图，为了应对较复杂的用例情况</p>\n<h2 id=\"补充用例的UML模型\"><a href=\"#补充用例的UML模型\" class=\"headerlink\" title=\"补充用例的UML模型\"></a>补充用例的UML模型</h2><p>购买零食功能活动图</p>\n<p><img src=\"https://i.loli.net/2019/05/15/5cdbfc49be07082712.jpg\" alt></p>\n<p>泳道图</p>\n<ul>\n<li>参考一下blog学习：<a href=\"https://blog.csdn.net/fly_zxy/article/details/80939806\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/fly_zxy/article/details/80939806</a></li>\n</ul>\n<h2 id=\"数据建模概念\"><a href=\"#数据建模概念\" class=\"headerlink\" title=\"数据建模概念\"></a>数据建模概念</h2><h4 id=\"数据对象\"><a href=\"#数据对象\" class=\"headerlink\" title=\"数据对象\"></a>数据对象</h4><p>数据对象由复合信息表示。</p>\n<ul>\n<li><p>复合信息：具有若干不同的特征或属性的事物</p>\n</li>\n<li><p>数据对象只封装数据</p>\n</li>\n</ul>\n<h4 id=\"数据属性\"><a href=\"#数据属性\" class=\"headerlink\" title=\"数据属性\"></a>数据属性</h4><p>数据属性定义了数据对象的性质，有三个不同的特征</p>\n<ul>\n<li><p>1.为数据对象实例命名</p>\n</li>\n<li><p>2.描述这个实例</p>\n</li>\n<li><p>3.建立对另一个表中的另一个实例的引用</p>\n</li>\n</ul>\n<p>区别于数据属性：</p>\n<ul>\n<li>数据对象与数据属性的区别？car是一个数据对象，里面封装的颜色，大小，价格等是数据属性</li>\n</ul>\n<h4 id=\"关系\"><a href=\"#关系\" class=\"headerlink\" title=\"关系\"></a>关系</h4><p>有些数据对象之间是有关系的，E-R关系</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一些常用的数据建模工具：</span><br><span class=\"line\">AllFusion ERWin : https://erwin.com/?gclid=EAIaIQobChMI2-fG9ted4gIVmCCtBh0GoQBMEAAYASAAEgK8ePD_BwE</span><br><span class=\"line\">ER/Studio : https://www.embarcadero.com/er-studio-editions</span><br><span class=\"line\">Oracle Designer : https://www.oracle.com/technetwork/developer-tools/designer/overview/index-082236.html</span><br><span class=\"line\">Visible Analyst : http://www.visiblesystemscorp.com/Products/Analyst/index.htm</span><br></pre></td></tr></table></figure>\n<h2 id=\"基于类的建模\"><a href=\"#基于类的建模\" class=\"headerlink\" title=\"基于类的建模\"></a>基于类的建模</h2><h4 id=\"识别分析类\"><a href=\"#识别分析类\" class=\"headerlink\" title=\"识别分析类\"></a>识别分析类</h4><p>分析过程，寻找名词和动词，分析类表现为以下方式之一：</p>\n<ul>\n<li><p>1.外部实体，产生或使用基于计算机系统的信息</p>\n</li>\n<li><p>2.事物，问题信息域的一部分</p>\n</li>\n<li><p>3.偶尔事件或事件，在系统操作环境内发生</p>\n</li>\n<li><p>4.角色，由和系统交互的人员扮演</p>\n</li>\n<li><p>5.组织单元，和某个应用系统相关</p>\n</li>\n<li><p>6.场地，建立问题的环境和系统的整体功能</p>\n</li>\n<li><p>7.结构，定义了对象的类或与对象相关的类</p>\n</li>\n</ul>\n<p>最初找出的有用的名词或者动词只能称为潜在类，还需要考虑这些潜在类是否有以下特性</p>\n<ul>\n<li><p>1.保留信息：只有记录潜在类的信息，系统才能正常工作，这类潜在类是有用的</p>\n</li>\n<li><p>2.所需服务：潜在类必须具有一组可确认的操作，这组操作能用某种方式改变类的属性值</p>\n</li>\n<li><p>3.多个属性：需求分析过程中，焦点应在于“主”信息，事实上，只有一个属性的类可能在设计中有用，但在分析活动阶段，最好把它作为另一个类的某个属性.意思是如果是单一属性，就没必须为这个属性创建类，而是考虑其是不是其他类的属性。</p>\n</li>\n<li><p>4.公共属性：可以为潜在类定义一组属性，这些属性适用于类的所有实例</p>\n</li>\n<li><p>5.公共操作：可以为潜在类定义一组操作，这些操作使用与类的所有实例</p>\n</li>\n<li><p>6.必要需求：在问题空间中出现的外部实体，和任何系统解决方案运行时所必须的生产或消费信息，几乎都被定义为需求模型中的类</p>\n</li>\n</ul>\n<h4 id=\"描述属性\"><a href=\"#描述属性\" class=\"headerlink\" title=\"描述属性\"></a>描述属性</h4><p>属性描述了已经包含在需求模型中的类。实质上，属性是定义类以澄清类在问题空间的环境下意味着什么</p>\n<p>可以采用一些组合项来描述数据：</p>\n<ul>\n<li>用户登陆=登陆账号+登陆密码</li>\n</ul>\n<h4 id=\"定义操作\"><a href=\"#定义操作\" class=\"headerlink\" title=\"定义操作\"></a>定义操作</h4><p>操作定义了某个对象的行为，粗略的划分为4种：</p>\n<ul>\n<li><ol>\n<li>以某种方式操作数据(例如：添加，删除，重新格式化，选择)</li>\n</ol>\n</li>\n<li><p>2.执行计算的操作</p>\n</li>\n<li><p>3.请求某个对象的状态的操作</p>\n</li>\n<li><p>4.监视某个对象发生某个控制事件的操作</p>\n</li>\n</ul>\n<h4 id=\"类-职责-协作者建模\"><a href=\"#类-职责-协作者建模\" class=\"headerlink\" title=\"类-职责-协作者建模\"></a>类-职责-协作者建模</h4><p>Class-Responsibility-Collaborator,CRC卡</p>\n<p><img src=\"https://i.loli.net/2019/05/16/5cdcc06adb2ef45071.jpg\" alt></p>\n<p>类：</p>\n<ul>\n<li><p>1.实体类</p>\n</li>\n<li><p>2.边界类</p>\n</li>\n<li><p>3.控制类</p>\n</li>\n</ul>\n<p>职责：</p>\n<ul>\n<li><p>1.智能系统应分布在所有类中以求最佳地满足问题的需求</p>\n</li>\n<li><p>2.每个职责的说明应尽可能具有普遍性</p>\n</li>\n<li><p>3.信息和与之相关的行为应放在同一个类中</p>\n</li>\n<li><p>4.某个事物的信息应局限于一个类中而不要分布在多个类中</p>\n</li>\n<li><p>5.适合时，职责应由相关类分享</p>\n</li>\n</ul>\n<p>协作：</p>\n<ul>\n<li>是客户和服务器之间契约的具体实现，识别协作的方法是通过确认类本身是否实现自身的每个职责，如果不能，就需要和其他类协作</li>\n</ul>\n<p>CRC的使用：</p>\n<ul>\n<li>CRC的使用很简单，就是先有一种主CRC卡，然后到达相应的职责时会有对应的协作者，然后再由这个协作者的类进行分析，依次类推。</li>\n</ul>\n<h4 id=\"关联和依赖\"><a href=\"#关联和依赖\" class=\"headerlink\" title=\"关联和依赖\"></a>关联和依赖</h4><p>这个关联说的有些想数据库中的E-R关系图，就一对一，一对多，多对多的关系</p>\n<p>依赖，依赖是一个类获得另外一个类的请求后才能执行其对应的功能</p>\n<h4 id=\"分析包\"><a href=\"#分析包\" class=\"headerlink\" title=\"分析包\"></a>分析包</h4><p>类似于java中的“package”</p>"},{"title":"软件工程-03_敏捷开发","date":"2019-05-11T16:15:54.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于敏捷开发的教程</font></center>\n\n<!--more-->\n\n# 敏捷开发\n\n## 什么是敏捷\n\n* 1.<font color=blue>自组织</font>和<font color=blue>跨职能</font>团队\n\n* 2.与<font color=blue>客户/最终用户</font>协作努力\n\n* 3.适用性计划，进化发展，早期交付，*持续改进*，对变化作出快速且灵活的反应\n\n> continual improvement process(CIP) & continuous improvement process(CI):持续改进\n\n## 敏捷及变更的成本费用\n\n这个费用比着采用传统软件的好处在于后期。传统在后期需求变更中变动太大\n\n## 敏捷过程\n\n3个关键假设\n\n* 预测哪些需求是稳定的，哪些需求变更会非常困难\n\n* 难于预测在构建验证之前应该设计到什么程度\n\n* 计划并不像我们预测的那样容易\n\n敏捷过程\n\n* 采用增量的迭代方式\n\n#### 如何做到敏捷开发\n\n* 早期和持续交付有价值的软件实现客户满意度\n\n* 要欢迎不断变化的需求，即使在后期开发  \n\n* 经常提供工作软件（数周而不是数月），其实进步的衡量标准   ----什么是工作软件\n\n* 商务人士和开发人员之间的密切，日常合作\n\n* 项目围绕有动力的人进行\n\n* 尽量面对面交谈\n\n* 关注卓越的良好的设计\n\n```test\n1.更快，更小。传统的软件开发依赖于概述需求，规划，设计，构建，测试和交付等阶段。相比之下，敏捷方法试图在几个星期内部署第一个增量，并在几个月内部署整个软件。\n2.沟通。业务中的敏捷团队通过面对面会议每天在项目的每个阶段协同工作。这种协作和沟通确保即使条件发生变化，流程也会保持正常。\n3.反馈。而不是等到交付阶段来衡量成功，团队利用敏捷方法定期跟踪开发过程的成功和速度。在递送每个增量后测量速度。\n4.信任。敏捷团队和员工是自我组织的。他们不是遵循管理层旨在产生预期结果的规则宣言，而是了解目标并创建自己的目标。\n5.调整。参与者按照KIS或Keep It Simple原则不断调整和调整过程。\n```\n\n## 极限编程\n\n#### 极限编程的权值\n\n* 沟通：反复沟通，紧密交流\n\n* 简明：只对即时需求做设计，不考虑长远需求\n\n* 反馈：软件测试反馈，客户反馈，团队成员反馈\n\n* 鼓励：有为今天做设计的纪律\n\n* 尊重：尊重队友，尊重客户，尊重软件\n\n#### 极限编程的过程\n\n* 策划:开始于聆听，倾听用户故事(需求)，放到索引卡上(CRC),如果这个用户古寺开发周期超过3个星期，进一步细分故事\n\n* 设计：遵循KIS(Keep it Simple),不鼓励设计中为故事额外添加功能\n\n* 编码：不直接编码，先对故事写单元测试\n\n* 测试：一个是单元测试。另一个是验收测试，也是客户测试\n\n![](https://i.loli.net/2019/05/11/5cd67ab32c19d.png)\n\n## 其他敏捷过程模型\n\n```test\n自适应软件开发\nScrum\n动态系统开发方法\nCrystal\n特征驱动开发\n精益软件开发\n敏捷建模\n敏捷统一过程\n```\n\n这里只讨论Scrum\n\n* Scrum：sprint计划，每日scrum，sprint审查和回顾\n\n* Product Backlog<产品积压>：是产品中已知所需的所有内容的有序列表。它是对产品进行任何更改的唯一要求来源。该产品负责人负责产品Backlog，包括它的内容，可用性和排序。     --什么是它的内容？需求\n        \n* Sprint Backlog<冲刺积压>：产品积压最优先要做的\n        \n* Increment:是Sprint期间完成的所有Product Backlog项目的总和\n       \n* 在每日Scrum期间，每个团队成员通常会回答三个问题：\n\n```test\n昨天我完成了什么，为团队实现我们的冲刺目标做出了贡献？\n我计划今天完成什么来为团队实现我们的冲刺目标做出贡献？\n我是否看到任何障碍可能阻止我或团队实现我们的冲刺目标？\n```\n        \n> 我对Scrum的理解:先是PM拿到需求，把需求做成Product Backlog，然后制作Sprint Backlog，Sprint Backlog是要优先解决的一部分Product Backlog。已经完成的Sprint Backlog叫Increment，当一个冲刺完成后，开始准备下一个冲刺\n\n## 敏捷开发工具\n\n* OnTime:敏捷时间管理  https://www.axosoft.com/\n\n* Ideogramic UML：UML工具\n\n* Together Tool Set：工具包  https://www.microfocus.com\n\n","source":"_posts/2019-05-11-03-软件工程.md","raw":"---\ntitle: 软件工程-03_敏捷开发\ndate: 2019-05-11 16:15:54\ncategories: \n- 软件工程\ntags: \n- 软件\n- 软件工程\n- 敏捷开发\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于敏捷开发的教程</font></center>\n\n<!--more-->\n\n# 敏捷开发\n\n## 什么是敏捷\n\n* 1.<font color=blue>自组织</font>和<font color=blue>跨职能</font>团队\n\n* 2.与<font color=blue>客户/最终用户</font>协作努力\n\n* 3.适用性计划，进化发展，早期交付，*持续改进*，对变化作出快速且灵活的反应\n\n> continual improvement process(CIP) & continuous improvement process(CI):持续改进\n\n## 敏捷及变更的成本费用\n\n这个费用比着采用传统软件的好处在于后期。传统在后期需求变更中变动太大\n\n## 敏捷过程\n\n3个关键假设\n\n* 预测哪些需求是稳定的，哪些需求变更会非常困难\n\n* 难于预测在构建验证之前应该设计到什么程度\n\n* 计划并不像我们预测的那样容易\n\n敏捷过程\n\n* 采用增量的迭代方式\n\n#### 如何做到敏捷开发\n\n* 早期和持续交付有价值的软件实现客户满意度\n\n* 要欢迎不断变化的需求，即使在后期开发  \n\n* 经常提供工作软件（数周而不是数月），其实进步的衡量标准   ----什么是工作软件\n\n* 商务人士和开发人员之间的密切，日常合作\n\n* 项目围绕有动力的人进行\n\n* 尽量面对面交谈\n\n* 关注卓越的良好的设计\n\n```test\n1.更快，更小。传统的软件开发依赖于概述需求，规划，设计，构建，测试和交付等阶段。相比之下，敏捷方法试图在几个星期内部署第一个增量，并在几个月内部署整个软件。\n2.沟通。业务中的敏捷团队通过面对面会议每天在项目的每个阶段协同工作。这种协作和沟通确保即使条件发生变化，流程也会保持正常。\n3.反馈。而不是等到交付阶段来衡量成功，团队利用敏捷方法定期跟踪开发过程的成功和速度。在递送每个增量后测量速度。\n4.信任。敏捷团队和员工是自我组织的。他们不是遵循管理层旨在产生预期结果的规则宣言，而是了解目标并创建自己的目标。\n5.调整。参与者按照KIS或Keep It Simple原则不断调整和调整过程。\n```\n\n## 极限编程\n\n#### 极限编程的权值\n\n* 沟通：反复沟通，紧密交流\n\n* 简明：只对即时需求做设计，不考虑长远需求\n\n* 反馈：软件测试反馈，客户反馈，团队成员反馈\n\n* 鼓励：有为今天做设计的纪律\n\n* 尊重：尊重队友，尊重客户，尊重软件\n\n#### 极限编程的过程\n\n* 策划:开始于聆听，倾听用户故事(需求)，放到索引卡上(CRC),如果这个用户古寺开发周期超过3个星期，进一步细分故事\n\n* 设计：遵循KIS(Keep it Simple),不鼓励设计中为故事额外添加功能\n\n* 编码：不直接编码，先对故事写单元测试\n\n* 测试：一个是单元测试。另一个是验收测试，也是客户测试\n\n![](https://i.loli.net/2019/05/11/5cd67ab32c19d.png)\n\n## 其他敏捷过程模型\n\n```test\n自适应软件开发\nScrum\n动态系统开发方法\nCrystal\n特征驱动开发\n精益软件开发\n敏捷建模\n敏捷统一过程\n```\n\n这里只讨论Scrum\n\n* Scrum：sprint计划，每日scrum，sprint审查和回顾\n\n* Product Backlog<产品积压>：是产品中已知所需的所有内容的有序列表。它是对产品进行任何更改的唯一要求来源。该产品负责人负责产品Backlog，包括它的内容，可用性和排序。     --什么是它的内容？需求\n        \n* Sprint Backlog<冲刺积压>：产品积压最优先要做的\n        \n* Increment:是Sprint期间完成的所有Product Backlog项目的总和\n       \n* 在每日Scrum期间，每个团队成员通常会回答三个问题：\n\n```test\n昨天我完成了什么，为团队实现我们的冲刺目标做出了贡献？\n我计划今天完成什么来为团队实现我们的冲刺目标做出贡献？\n我是否看到任何障碍可能阻止我或团队实现我们的冲刺目标？\n```\n        \n> 我对Scrum的理解:先是PM拿到需求，把需求做成Product Backlog，然后制作Sprint Backlog，Sprint Backlog是要优先解决的一部分Product Backlog。已经完成的Sprint Backlog叫Increment，当一个冲刺完成后，开始准备下一个冲刺\n\n## 敏捷开发工具\n\n* OnTime:敏捷时间管理  https://www.axosoft.com/\n\n* Ideogramic UML：UML工具\n\n* Together Tool Set：工具包  https://www.microfocus.com\n\n","slug":"2019-05-11-03-软件工程","published":1,"updated":"2019-08-10T04:35:46.723Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6ur000h54tngnqevmoy","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于敏捷开发的教程</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"敏捷开发\"><a href=\"#敏捷开发\" class=\"headerlink\" title=\"敏捷开发\"></a>敏捷开发</h1><h2 id=\"什么是敏捷\"><a href=\"#什么是敏捷\" class=\"headerlink\" title=\"什么是敏捷\"></a>什么是敏捷</h2><ul>\n<li><p>1.<font color=\"blue\">自组织</font>和<font color=\"blue\">跨职能</font>团队</p>\n</li>\n<li><p>2.与<font color=\"blue\">客户/最终用户</font>协作努力</p>\n</li>\n<li><p>3.适用性计划，进化发展，早期交付，<em>持续改进</em>，对变化作出快速且灵活的反应</p>\n</li>\n</ul>\n<blockquote>\n<p>continual improvement process(CIP) &amp; continuous improvement process(CI):持续改进</p>\n</blockquote>\n<h2 id=\"敏捷及变更的成本费用\"><a href=\"#敏捷及变更的成本费用\" class=\"headerlink\" title=\"敏捷及变更的成本费用\"></a>敏捷及变更的成本费用</h2><p>这个费用比着采用传统软件的好处在于后期。传统在后期需求变更中变动太大</p>\n<h2 id=\"敏捷过程\"><a href=\"#敏捷过程\" class=\"headerlink\" title=\"敏捷过程\"></a>敏捷过程</h2><p>3个关键假设</p>\n<ul>\n<li><p>预测哪些需求是稳定的，哪些需求变更会非常困难</p>\n</li>\n<li><p>难于预测在构建验证之前应该设计到什么程度</p>\n</li>\n<li><p>计划并不像我们预测的那样容易</p>\n</li>\n</ul>\n<p>敏捷过程</p>\n<ul>\n<li>采用增量的迭代方式</li>\n</ul>\n<h4 id=\"如何做到敏捷开发\"><a href=\"#如何做到敏捷开发\" class=\"headerlink\" title=\"如何做到敏捷开发\"></a>如何做到敏捷开发</h4><ul>\n<li><p>早期和持续交付有价值的软件实现客户满意度</p>\n</li>\n<li><p>要欢迎不断变化的需求，即使在后期开发  </p>\n</li>\n<li><p>经常提供工作软件（数周而不是数月），其实进步的衡量标准   —-什么是工作软件</p>\n</li>\n<li><p>商务人士和开发人员之间的密切，日常合作</p>\n</li>\n<li><p>项目围绕有动力的人进行</p>\n</li>\n<li><p>尽量面对面交谈</p>\n</li>\n<li><p>关注卓越的良好的设计</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.更快，更小。传统的软件开发依赖于概述需求，规划，设计，构建，测试和交付等阶段。相比之下，敏捷方法试图在几个星期内部署第一个增量，并在几个月内部署整个软件。</span><br><span class=\"line\">2.沟通。业务中的敏捷团队通过面对面会议每天在项目的每个阶段协同工作。这种协作和沟通确保即使条件发生变化，流程也会保持正常。</span><br><span class=\"line\">3.反馈。而不是等到交付阶段来衡量成功，团队利用敏捷方法定期跟踪开发过程的成功和速度。在递送每个增量后测量速度。</span><br><span class=\"line\">4.信任。敏捷团队和员工是自我组织的。他们不是遵循管理层旨在产生预期结果的规则宣言，而是了解目标并创建自己的目标。</span><br><span class=\"line\">5.调整。参与者按照KIS或Keep It Simple原则不断调整和调整过程。</span><br></pre></td></tr></table></figure>\n<h2 id=\"极限编程\"><a href=\"#极限编程\" class=\"headerlink\" title=\"极限编程\"></a>极限编程</h2><h4 id=\"极限编程的权值\"><a href=\"#极限编程的权值\" class=\"headerlink\" title=\"极限编程的权值\"></a>极限编程的权值</h4><ul>\n<li><p>沟通：反复沟通，紧密交流</p>\n</li>\n<li><p>简明：只对即时需求做设计，不考虑长远需求</p>\n</li>\n<li><p>反馈：软件测试反馈，客户反馈，团队成员反馈</p>\n</li>\n<li><p>鼓励：有为今天做设计的纪律</p>\n</li>\n<li><p>尊重：尊重队友，尊重客户，尊重软件</p>\n</li>\n</ul>\n<h4 id=\"极限编程的过程\"><a href=\"#极限编程的过程\" class=\"headerlink\" title=\"极限编程的过程\"></a>极限编程的过程</h4><ul>\n<li><p>策划:开始于聆听，倾听用户故事(需求)，放到索引卡上(CRC),如果这个用户古寺开发周期超过3个星期，进一步细分故事</p>\n</li>\n<li><p>设计：遵循KIS(Keep it Simple),不鼓励设计中为故事额外添加功能</p>\n</li>\n<li><p>编码：不直接编码，先对故事写单元测试</p>\n</li>\n<li><p>测试：一个是单元测试。另一个是验收测试，也是客户测试</p>\n</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/11/5cd67ab32c19d.png\" alt></p>\n<h2 id=\"其他敏捷过程模型\"><a href=\"#其他敏捷过程模型\" class=\"headerlink\" title=\"其他敏捷过程模型\"></a>其他敏捷过程模型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自适应软件开发</span><br><span class=\"line\">Scrum</span><br><span class=\"line\">动态系统开发方法</span><br><span class=\"line\">Crystal</span><br><span class=\"line\">特征驱动开发</span><br><span class=\"line\">精益软件开发</span><br><span class=\"line\">敏捷建模</span><br><span class=\"line\">敏捷统一过程</span><br></pre></td></tr></table></figure>\n<p>这里只讨论Scrum</p>\n<ul>\n<li><p>Scrum：sprint计划，每日scrum，sprint审查和回顾</p>\n</li>\n<li><p>Product Backlog&lt;产品积压&gt;：是产品中已知所需的所有内容的有序列表。它是对产品进行任何更改的唯一要求来源。该产品负责人负责产品Backlog，包括它的内容，可用性和排序。     –什么是它的内容？需求</p>\n</li>\n<li><p>Sprint Backlog&lt;冲刺积压&gt;：产品积压最优先要做的</p>\n</li>\n<li><p>Increment:是Sprint期间完成的所有Product Backlog项目的总和</p>\n</li>\n<li><p>在每日Scrum期间，每个团队成员通常会回答三个问题：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">昨天我完成了什么，为团队实现我们的冲刺目标做出了贡献？</span><br><span class=\"line\">我计划今天完成什么来为团队实现我们的冲刺目标做出贡献？</span><br><span class=\"line\">我是否看到任何障碍可能阻止我或团队实现我们的冲刺目标？</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>我对Scrum的理解:先是PM拿到需求，把需求做成Product Backlog，然后制作Sprint Backlog，Sprint Backlog是要优先解决的一部分Product Backlog。已经完成的Sprint Backlog叫Increment，当一个冲刺完成后，开始准备下一个冲刺</p>\n</blockquote>\n<h2 id=\"敏捷开发工具\"><a href=\"#敏捷开发工具\" class=\"headerlink\" title=\"敏捷开发工具\"></a>敏捷开发工具</h2><ul>\n<li><p>OnTime:敏捷时间管理  <a href=\"https://www.axosoft.com/\" target=\"_blank\" rel=\"noopener\">https://www.axosoft.com/</a></p>\n</li>\n<li><p>Ideogramic UML：UML工具</p>\n</li>\n<li><p>Together Tool Set：工具包  <a href=\"https://www.microfocus.com\" target=\"_blank\" rel=\"noopener\">https://www.microfocus.com</a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于敏捷开发的教程</font></center>","more":"<h1 id=\"敏捷开发\"><a href=\"#敏捷开发\" class=\"headerlink\" title=\"敏捷开发\"></a>敏捷开发</h1><h2 id=\"什么是敏捷\"><a href=\"#什么是敏捷\" class=\"headerlink\" title=\"什么是敏捷\"></a>什么是敏捷</h2><ul>\n<li><p>1.<font color=\"blue\">自组织</font>和<font color=\"blue\">跨职能</font>团队</p>\n</li>\n<li><p>2.与<font color=\"blue\">客户/最终用户</font>协作努力</p>\n</li>\n<li><p>3.适用性计划，进化发展，早期交付，<em>持续改进</em>，对变化作出快速且灵活的反应</p>\n</li>\n</ul>\n<blockquote>\n<p>continual improvement process(CIP) &amp; continuous improvement process(CI):持续改进</p>\n</blockquote>\n<h2 id=\"敏捷及变更的成本费用\"><a href=\"#敏捷及变更的成本费用\" class=\"headerlink\" title=\"敏捷及变更的成本费用\"></a>敏捷及变更的成本费用</h2><p>这个费用比着采用传统软件的好处在于后期。传统在后期需求变更中变动太大</p>\n<h2 id=\"敏捷过程\"><a href=\"#敏捷过程\" class=\"headerlink\" title=\"敏捷过程\"></a>敏捷过程</h2><p>3个关键假设</p>\n<ul>\n<li><p>预测哪些需求是稳定的，哪些需求变更会非常困难</p>\n</li>\n<li><p>难于预测在构建验证之前应该设计到什么程度</p>\n</li>\n<li><p>计划并不像我们预测的那样容易</p>\n</li>\n</ul>\n<p>敏捷过程</p>\n<ul>\n<li>采用增量的迭代方式</li>\n</ul>\n<h4 id=\"如何做到敏捷开发\"><a href=\"#如何做到敏捷开发\" class=\"headerlink\" title=\"如何做到敏捷开发\"></a>如何做到敏捷开发</h4><ul>\n<li><p>早期和持续交付有价值的软件实现客户满意度</p>\n</li>\n<li><p>要欢迎不断变化的需求，即使在后期开发  </p>\n</li>\n<li><p>经常提供工作软件（数周而不是数月），其实进步的衡量标准   —-什么是工作软件</p>\n</li>\n<li><p>商务人士和开发人员之间的密切，日常合作</p>\n</li>\n<li><p>项目围绕有动力的人进行</p>\n</li>\n<li><p>尽量面对面交谈</p>\n</li>\n<li><p>关注卓越的良好的设计</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.更快，更小。传统的软件开发依赖于概述需求，规划，设计，构建，测试和交付等阶段。相比之下，敏捷方法试图在几个星期内部署第一个增量，并在几个月内部署整个软件。</span><br><span class=\"line\">2.沟通。业务中的敏捷团队通过面对面会议每天在项目的每个阶段协同工作。这种协作和沟通确保即使条件发生变化，流程也会保持正常。</span><br><span class=\"line\">3.反馈。而不是等到交付阶段来衡量成功，团队利用敏捷方法定期跟踪开发过程的成功和速度。在递送每个增量后测量速度。</span><br><span class=\"line\">4.信任。敏捷团队和员工是自我组织的。他们不是遵循管理层旨在产生预期结果的规则宣言，而是了解目标并创建自己的目标。</span><br><span class=\"line\">5.调整。参与者按照KIS或Keep It Simple原则不断调整和调整过程。</span><br></pre></td></tr></table></figure>\n<h2 id=\"极限编程\"><a href=\"#极限编程\" class=\"headerlink\" title=\"极限编程\"></a>极限编程</h2><h4 id=\"极限编程的权值\"><a href=\"#极限编程的权值\" class=\"headerlink\" title=\"极限编程的权值\"></a>极限编程的权值</h4><ul>\n<li><p>沟通：反复沟通，紧密交流</p>\n</li>\n<li><p>简明：只对即时需求做设计，不考虑长远需求</p>\n</li>\n<li><p>反馈：软件测试反馈，客户反馈，团队成员反馈</p>\n</li>\n<li><p>鼓励：有为今天做设计的纪律</p>\n</li>\n<li><p>尊重：尊重队友，尊重客户，尊重软件</p>\n</li>\n</ul>\n<h4 id=\"极限编程的过程\"><a href=\"#极限编程的过程\" class=\"headerlink\" title=\"极限编程的过程\"></a>极限编程的过程</h4><ul>\n<li><p>策划:开始于聆听，倾听用户故事(需求)，放到索引卡上(CRC),如果这个用户古寺开发周期超过3个星期，进一步细分故事</p>\n</li>\n<li><p>设计：遵循KIS(Keep it Simple),不鼓励设计中为故事额外添加功能</p>\n</li>\n<li><p>编码：不直接编码，先对故事写单元测试</p>\n</li>\n<li><p>测试：一个是单元测试。另一个是验收测试，也是客户测试</p>\n</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/11/5cd67ab32c19d.png\" alt></p>\n<h2 id=\"其他敏捷过程模型\"><a href=\"#其他敏捷过程模型\" class=\"headerlink\" title=\"其他敏捷过程模型\"></a>其他敏捷过程模型</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">自适应软件开发</span><br><span class=\"line\">Scrum</span><br><span class=\"line\">动态系统开发方法</span><br><span class=\"line\">Crystal</span><br><span class=\"line\">特征驱动开发</span><br><span class=\"line\">精益软件开发</span><br><span class=\"line\">敏捷建模</span><br><span class=\"line\">敏捷统一过程</span><br></pre></td></tr></table></figure>\n<p>这里只讨论Scrum</p>\n<ul>\n<li><p>Scrum：sprint计划，每日scrum，sprint审查和回顾</p>\n</li>\n<li><p>Product Backlog&lt;产品积压&gt;：是产品中已知所需的所有内容的有序列表。它是对产品进行任何更改的唯一要求来源。该产品负责人负责产品Backlog，包括它的内容，可用性和排序。     –什么是它的内容？需求</p>\n</li>\n<li><p>Sprint Backlog&lt;冲刺积压&gt;：产品积压最优先要做的</p>\n</li>\n<li><p>Increment:是Sprint期间完成的所有Product Backlog项目的总和</p>\n</li>\n<li><p>在每日Scrum期间，每个团队成员通常会回答三个问题：</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">昨天我完成了什么，为团队实现我们的冲刺目标做出了贡献？</span><br><span class=\"line\">我计划今天完成什么来为团队实现我们的冲刺目标做出贡献？</span><br><span class=\"line\">我是否看到任何障碍可能阻止我或团队实现我们的冲刺目标？</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>我对Scrum的理解:先是PM拿到需求，把需求做成Product Backlog，然后制作Sprint Backlog，Sprint Backlog是要优先解决的一部分Product Backlog。已经完成的Sprint Backlog叫Increment，当一个冲刺完成后，开始准备下一个冲刺</p>\n</blockquote>\n<h2 id=\"敏捷开发工具\"><a href=\"#敏捷开发工具\" class=\"headerlink\" title=\"敏捷开发工具\"></a>敏捷开发工具</h2><ul>\n<li><p>OnTime:敏捷时间管理  <a href=\"https://www.axosoft.com/\" target=\"_blank\" rel=\"noopener\">https://www.axosoft.com/</a></p>\n</li>\n<li><p>Ideogramic UML：UML工具</p>\n</li>\n<li><p>Together Tool Set：工具包  <a href=\"https://www.microfocus.com\" target=\"_blank\" rel=\"noopener\">https://www.microfocus.com</a></p>\n</li>\n</ul>"},{"title":"Vagrant-自动部署虚拟机、JDK、Mysql","date":"2019-05-21T17:16:23.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于使用vagrant自动部署虚拟机、JDK、Mysql</font></center>\n\n<!--more-->\n\n# 使用vagrant自动部署虚拟机、JDK、Mysql\n\n## 这里主要介绍Vagrantfile的配置文件\n\n* Vagrantfile文件配置\n\n```shell\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The \"2\" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don't change it unless you know what\n# you're doing.\nVagrant.configure(\"2\") do |config|\n  # The most common configuration options are documented and commented below.\n  # For a complete reference, please see the online documentation at\n  # https://docs.vagrantup.com.\n\n  # Every Vagrant development environment requires a box. You can search for\n  # boxes at https://vagrantcloud.com/search.\n  #config.vm.box = \"centos7\"\n\n  #config.vm.hostname = \"host1\"\n\n  # Disable automatic box update checking. If you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. This is not recommended.\n  # config.vm.box_check_update = false\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing \"localhost:8080\" will access port 80 on the guest machine.\n  # NOTE: This will enable public access to the opened port\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine and only allow access\n  # via 127.0.0.1 to disable public access\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"\n\n  # Create a private network, which allows host-only access to the machine\n  # using a specific IP.\n  #config.vm.network \"private_network\", ip: \"192.168.31.10\"\n\n  # Create a public network, which generally matched to bridged network.\n  # Bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network \"public_network\"\n\n  # Share an additional folder to the guest VM. The first argument is\n  # the path on the host to the actual folder. The second argument is\n  # the path on the guest to mount the folder. And the optional third\n  # argument is a set of non-required options.\n  # config.vm.synced_folder \"../data\", \"/vagrant_data\"\n\n  # Provider-specific configuration so you can fine-tune various\n  # backing providers for Vagrant. These expose provider-specific options.\n  # Example for VirtualBox:\n  #\n  # config.vm.provider \"virtualbox\" do |vb|\n  #   # Display the VirtualBox GUI when booting the machine\n  #   vb.gui = true\n  #\n  #   # Customize the amount of memory on the VM:\n  #   vb.memory = \"1024\"\n  # end\n  #\n  # View the documentation for the provider you are using for more\n  # information on available options.\n\n  # Enable provisioning with a shell script. Additional provisioners such as\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\n  # documentation for more information about their specific syntax and use.\n\n  # 定义应用服务器\n  config.vm.define :web do |web|\n    web.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]\n    end\n    web.vm.box = \"centos7\"\n    web.vm.hostname = \"web\"\n    web.vm.network :private_network, ip: \"10.0.2.19\"\n\n\n    config.vm.provision \"shell\", inline: <<-SHELL\n\nend\n\n```\n\n* JDK的shell脚本配置\n\n```shell\n#!/bin/bash\n\n  echo \"================= START install-jdk.sh $(date +\"%r\") =================\"\n  echo \" \"\n  echo \"BEGIN installing JDK\"\n\n  #################################################################\n  ## JDK Installation\n  #################################################################\n  JDK_VERSION=\"8u51\"\n  JDK_LONGVERSION=\"1.8.0_51\"\n  JDK_FILE=\"jdk-$JDK_VERSION-linux-x64.gz\"\n  JDK_FORCE=0\n\n  # Check if we have this JDK installed\n  if [ ! -d \"/usr/lib/jvm/jdk1.8.0_51\" ] || [ $JDK_FORCE -eq 1 ]; then\n    \n    # Don't download if we've already got it locally\n    if [ ! -f \"/vagrant/artifacts/$JDK_FILE\" ]; then\n      echo \"... Downloading JDK: $JDK_VERSION, standby ...\"\n      wget -O /vagrant/artifacts/$JDK_FILE http://downloads.ortussolutions.com/oracle/jdk/$JDK_VERSION/$JDK_FILE &>> /vagrant/log/install.sh\n    fi\n\n    # Install JDK\n    sudo gunzip -c /vagrant/artifacts/$JDK_FILE > jdk-$JDK_VERSION-linux-x64.tar\n    sudo tar -xvf jdk-$JDK_VERSION-linux-x64.tar &>> /vagrant/log/install.txt\n    #sudo gzip /vagrant/artifacts/jdk-$JDK_VERSION-linux-x64.tar &>> /vagrant/log/install.sh\n    \n    # Move to install directory\n    echo \"Moving JDK to installation directory at /usr/lib/jvm/jdk$JDK_LONGVERSION\"\n    sudo mkdir -p /usr/lib/jvm/jdk$JDK_LONGVERSION\n    sudo mv jdk$JDK_LONGVERSION/* /usr/lib/jvm/jdk$JDK_LONGVERSION/\n\n    echo \"Linking JDK to 'current' JDK\"\n    cd /usr/lib/jvm\n    sudo ln -s /usr/lib/jvm/jdk$JDK_LONGVERSION/ current\n\n    sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/java\" 1\n    sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javac\" 1 \n    sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javaws\" 1\n    #sudo update-alternatives --config java\n    \n    echo \"Updated java locations successfully\"\n    \n  else\n    echo \"JDK is already installed, skipping\"\n  fi\n\n  # Move in environment\n  sudo /bin/cp -f /vagrant/configs/.bash_profile /etc/environment\n\n  echo \"... END installing JDK.\"\n  echo \" \"\n  echo \"================= FINISH install-jdk.sh $(date +\"%r\") =================\"\n  echo \" \"\n  SHELL\n  end\n```\n\n* Mysql的脚本配置\n\n```shell\n  # 定义DB服务器\n  config.vm.define :db do |db|\n    db.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]\n    end\n    db.vm.box = \"mysqlVM\"\n    db.vm.hostname = \"db\"\n    db.vm.network :private_network, ip: \"10.0.2.20\"\n\n\n    config.vm.provision \"shell\", inline: <<-SHELL\n     \n     #!/bin/bash\n    echo \"-----------update system--------\"\n    #sudo yum -y update\n    # y   y\n    echo \"-------install wget---------\"\n    sudo yum -y install wget &>> /vagrant/log/install.sh\n    # y\n    echo \"------install mysql--------\"\n    wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm &>> /vagrant/log/install.sh\n    sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n    sudo yum -y update &>> /vagrant/log/install.sh\n\n    echo \"------search expect-------\"\n    rpm -qa | grep expect\n    echo \"--------install expect-------\"\n    sudo yum -y install expect &>> /vagrant/log/install.sh\n    # which expect    --->/usr/bin/expect  \n\n\n    echo \"-------install mysql-server-------\"\n    sudo yum -y install mysql-server &>> /vagrant/log/install.sh\n    sudo systemctl start mysqld\n\n    #sudo mysql_secure_installation\n    #1.输入当前密码：enter\n    #sudo grep 'temporary password' /var/log/mysqld.log可以查询到。一般密码为空，按enter就行\n    #2.是否更改密码：y or enter\n    #3.新密码：123456\n    #4.再此输入密码：123456\n    #5.删除匿名用户：y\n    #6.禁止远程登陆：n\n    #7.删除测试数据库：y or enter\n    #8.是否重新加载权限表：y or enter\n\n    echo \"------------config mysql----------\"\n    set timeout 100\n    set firstpassword \n    set newpassword 123456\n    expect<<-END\n    spawn sudo mysql_secure_installation\n\n    expect \"enter for none:\"\n    send \"$firstpassword\\n\"\n\n    expect \"Y/n\"\n    send \"\\n\"\n    expect \"New password\"\n    send \"$newpassword\\n\"\n    expect \"Re-enter new password:\"\n    send \"$newpassword\\n\"\n    expect \"Y/n\"\n    send \"\\n\"\n    expect \"Y/n\"\n    send \"n\\n\"\n    expect \"Y/n\"\n    send \"\\n\"\n    expect \"Y/n\"\n    send \"\\n\"\n\n    expect eof\n    exit\n    END\n\n    SHELL\n  end\n```\n","source":"_posts/2019-05-21_Vagrant.md","raw":"---\ntitle: Vagrant-自动部署虚拟机、JDK、Mysql\ndate: 2019-05-21 17:16:23\ncategories: \n- Vargrant\ntags: \n- 自动部署\n- 虚拟机\n- JDK\n- Mysql\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于使用vagrant自动部署虚拟机、JDK、Mysql</font></center>\n\n<!--more-->\n\n# 使用vagrant自动部署虚拟机、JDK、Mysql\n\n## 这里主要介绍Vagrantfile的配置文件\n\n* Vagrantfile文件配置\n\n```shell\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# All Vagrant configuration is done below. The \"2\" in Vagrant.configure\n# configures the configuration version (we support older styles for\n# backwards compatibility). Please don't change it unless you know what\n# you're doing.\nVagrant.configure(\"2\") do |config|\n  # The most common configuration options are documented and commented below.\n  # For a complete reference, please see the online documentation at\n  # https://docs.vagrantup.com.\n\n  # Every Vagrant development environment requires a box. You can search for\n  # boxes at https://vagrantcloud.com/search.\n  #config.vm.box = \"centos7\"\n\n  #config.vm.hostname = \"host1\"\n\n  # Disable automatic box update checking. If you disable this, then\n  # boxes will only be checked for updates when the user runs\n  # `vagrant box outdated`. This is not recommended.\n  # config.vm.box_check_update = false\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine. In the example below,\n  # accessing \"localhost:8080\" will access port 80 on the guest machine.\n  # NOTE: This will enable public access to the opened port\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  # Create a forwarded port mapping which allows access to a specific port\n  # within the machine from a port on the host machine and only allow access\n  # via 127.0.0.1 to disable public access\n  # config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"\n\n  # Create a private network, which allows host-only access to the machine\n  # using a specific IP.\n  #config.vm.network \"private_network\", ip: \"192.168.31.10\"\n\n  # Create a public network, which generally matched to bridged network.\n  # Bridged networks make the machine appear as another physical device on\n  # your network.\n  # config.vm.network \"public_network\"\n\n  # Share an additional folder to the guest VM. The first argument is\n  # the path on the host to the actual folder. The second argument is\n  # the path on the guest to mount the folder. And the optional third\n  # argument is a set of non-required options.\n  # config.vm.synced_folder \"../data\", \"/vagrant_data\"\n\n  # Provider-specific configuration so you can fine-tune various\n  # backing providers for Vagrant. These expose provider-specific options.\n  # Example for VirtualBox:\n  #\n  # config.vm.provider \"virtualbox\" do |vb|\n  #   # Display the VirtualBox GUI when booting the machine\n  #   vb.gui = true\n  #\n  #   # Customize the amount of memory on the VM:\n  #   vb.memory = \"1024\"\n  # end\n  #\n  # View the documentation for the provider you are using for more\n  # information on available options.\n\n  # Enable provisioning with a shell script. Additional provisioners such as\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\n  # documentation for more information about their specific syntax and use.\n\n  # 定义应用服务器\n  config.vm.define :web do |web|\n    web.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]\n    end\n    web.vm.box = \"centos7\"\n    web.vm.hostname = \"web\"\n    web.vm.network :private_network, ip: \"10.0.2.19\"\n\n\n    config.vm.provision \"shell\", inline: <<-SHELL\n\nend\n\n```\n\n* JDK的shell脚本配置\n\n```shell\n#!/bin/bash\n\n  echo \"================= START install-jdk.sh $(date +\"%r\") =================\"\n  echo \" \"\n  echo \"BEGIN installing JDK\"\n\n  #################################################################\n  ## JDK Installation\n  #################################################################\n  JDK_VERSION=\"8u51\"\n  JDK_LONGVERSION=\"1.8.0_51\"\n  JDK_FILE=\"jdk-$JDK_VERSION-linux-x64.gz\"\n  JDK_FORCE=0\n\n  # Check if we have this JDK installed\n  if [ ! -d \"/usr/lib/jvm/jdk1.8.0_51\" ] || [ $JDK_FORCE -eq 1 ]; then\n    \n    # Don't download if we've already got it locally\n    if [ ! -f \"/vagrant/artifacts/$JDK_FILE\" ]; then\n      echo \"... Downloading JDK: $JDK_VERSION, standby ...\"\n      wget -O /vagrant/artifacts/$JDK_FILE http://downloads.ortussolutions.com/oracle/jdk/$JDK_VERSION/$JDK_FILE &>> /vagrant/log/install.sh\n    fi\n\n    # Install JDK\n    sudo gunzip -c /vagrant/artifacts/$JDK_FILE > jdk-$JDK_VERSION-linux-x64.tar\n    sudo tar -xvf jdk-$JDK_VERSION-linux-x64.tar &>> /vagrant/log/install.txt\n    #sudo gzip /vagrant/artifacts/jdk-$JDK_VERSION-linux-x64.tar &>> /vagrant/log/install.sh\n    \n    # Move to install directory\n    echo \"Moving JDK to installation directory at /usr/lib/jvm/jdk$JDK_LONGVERSION\"\n    sudo mkdir -p /usr/lib/jvm/jdk$JDK_LONGVERSION\n    sudo mv jdk$JDK_LONGVERSION/* /usr/lib/jvm/jdk$JDK_LONGVERSION/\n\n    echo \"Linking JDK to 'current' JDK\"\n    cd /usr/lib/jvm\n    sudo ln -s /usr/lib/jvm/jdk$JDK_LONGVERSION/ current\n\n    sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/java\" 1\n    sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javac\" 1 \n    sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javaws\" 1\n    #sudo update-alternatives --config java\n    \n    echo \"Updated java locations successfully\"\n    \n  else\n    echo \"JDK is already installed, skipping\"\n  fi\n\n  # Move in environment\n  sudo /bin/cp -f /vagrant/configs/.bash_profile /etc/environment\n\n  echo \"... END installing JDK.\"\n  echo \" \"\n  echo \"================= FINISH install-jdk.sh $(date +\"%r\") =================\"\n  echo \" \"\n  SHELL\n  end\n```\n\n* Mysql的脚本配置\n\n```shell\n  # 定义DB服务器\n  config.vm.define :db do |db|\n    db.vm.provider \"virtualbox\" do |v|\n          v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]\n    end\n    db.vm.box = \"mysqlVM\"\n    db.vm.hostname = \"db\"\n    db.vm.network :private_network, ip: \"10.0.2.20\"\n\n\n    config.vm.provision \"shell\", inline: <<-SHELL\n     \n     #!/bin/bash\n    echo \"-----------update system--------\"\n    #sudo yum -y update\n    # y   y\n    echo \"-------install wget---------\"\n    sudo yum -y install wget &>> /vagrant/log/install.sh\n    # y\n    echo \"------install mysql--------\"\n    wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm &>> /vagrant/log/install.sh\n    sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm\n    sudo yum -y update &>> /vagrant/log/install.sh\n\n    echo \"------search expect-------\"\n    rpm -qa | grep expect\n    echo \"--------install expect-------\"\n    sudo yum -y install expect &>> /vagrant/log/install.sh\n    # which expect    --->/usr/bin/expect  \n\n\n    echo \"-------install mysql-server-------\"\n    sudo yum -y install mysql-server &>> /vagrant/log/install.sh\n    sudo systemctl start mysqld\n\n    #sudo mysql_secure_installation\n    #1.输入当前密码：enter\n    #sudo grep 'temporary password' /var/log/mysqld.log可以查询到。一般密码为空，按enter就行\n    #2.是否更改密码：y or enter\n    #3.新密码：123456\n    #4.再此输入密码：123456\n    #5.删除匿名用户：y\n    #6.禁止远程登陆：n\n    #7.删除测试数据库：y or enter\n    #8.是否重新加载权限表：y or enter\n\n    echo \"------------config mysql----------\"\n    set timeout 100\n    set firstpassword \n    set newpassword 123456\n    expect<<-END\n    spawn sudo mysql_secure_installation\n\n    expect \"enter for none:\"\n    send \"$firstpassword\\n\"\n\n    expect \"Y/n\"\n    send \"\\n\"\n    expect \"New password\"\n    send \"$newpassword\\n\"\n    expect \"Re-enter new password:\"\n    send \"$newpassword\\n\"\n    expect \"Y/n\"\n    send \"\\n\"\n    expect \"Y/n\"\n    send \"n\\n\"\n    expect \"Y/n\"\n    send \"\\n\"\n    expect \"Y/n\"\n    send \"\\n\"\n\n    expect eof\n    exit\n    END\n\n    SHELL\n  end\n```\n","slug":"2019-05-21_Vagrant","published":1,"updated":"2019-08-10T04:35:46.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6uu000l54tn6ub471gc","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于使用vagrant自动部署虚拟机、JDK、Mysql</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"使用vagrant自动部署虚拟机、JDK、Mysql\"><a href=\"#使用vagrant自动部署虚拟机、JDK、Mysql\" class=\"headerlink\" title=\"使用vagrant自动部署虚拟机、JDK、Mysql\"></a>使用vagrant自动部署虚拟机、JDK、Mysql</h1><h2 id=\"这里主要介绍Vagrantfile的配置文件\"><a href=\"#这里主要介绍Vagrantfile的配置文件\" class=\"headerlink\" title=\"这里主要介绍Vagrantfile的配置文件\"></a>这里主要介绍Vagrantfile的配置文件</h2><ul>\n<li>Vagrantfile文件配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> -*- mode: ruby -*-</span><br><span class=\"line\"><span class=\"meta\">#</span> vi: set ft=ruby :</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> All Vagrant configuration is done below. The \"2\" in Vagrant.configure</span><br><span class=\"line\"><span class=\"meta\">#</span> configures the configuration version (we support older styles for</span><br><span class=\"line\"><span class=\"meta\">#</span> backwards compatibility). Please don't change it unless you know what</span><br><span class=\"line\"><span class=\"meta\">#</span> you're doing.</span><br><span class=\"line\">Vagrant.configure(\"2\") do |config|</span><br><span class=\"line\"><span class=\"meta\">  #</span> The most common configuration options are documented and commented below.</span><br><span class=\"line\"><span class=\"meta\">  #</span> For a complete reference, please see the online documentation at</span><br><span class=\"line\"><span class=\"meta\">  #</span> https://docs.vagrantup.com.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Every Vagrant development environment requires a box. You can search for</span><br><span class=\"line\"><span class=\"meta\">  #</span> boxes at https://vagrantcloud.com/search.</span><br><span class=\"line\"><span class=\"meta\">  #</span>config.vm.box = \"centos7\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span>config.vm.hostname = \"host1\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Disable automatic box update checking. If you disable this, then</span><br><span class=\"line\"><span class=\"meta\">  #</span> boxes will only be checked for updates when the user runs</span><br><span class=\"line\"><span class=\"meta\">  #</span> `vagrant box outdated`. This is not recommended.</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.box_check_update = false</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a forwarded port mapping which allows access to a specific port</span><br><span class=\"line\"><span class=\"meta\">  #</span> within the machine from a port on the host machine. In the example below,</span><br><span class=\"line\"><span class=\"meta\">  #</span> accessing \"localhost:8080\" will access port 80 on the guest machine.</span><br><span class=\"line\"><span class=\"meta\">  #</span> NOTE: This will enable public access to the opened port</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.network \"forwarded_port\", guest: 80, host: 8080</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a forwarded port mapping which allows access to a specific port</span><br><span class=\"line\"><span class=\"meta\">  #</span> within the machine from a port on the host machine and only allow access</span><br><span class=\"line\"><span class=\"meta\">  #</span> via 127.0.0.1 to disable public access</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a private network, which allows host-only access to the machine</span><br><span class=\"line\"><span class=\"meta\">  #</span> using a specific IP.</span><br><span class=\"line\"><span class=\"meta\">  #</span>config.vm.network \"private_network\", ip: \"192.168.31.10\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a public network, which generally matched to bridged network.</span><br><span class=\"line\"><span class=\"meta\">  #</span> Bridged networks make the machine appear as another physical device on</span><br><span class=\"line\"><span class=\"meta\">  #</span> your network.</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.network \"public_network\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Share an additional folder to the guest VM. The first argument is</span><br><span class=\"line\"><span class=\"meta\">  #</span> the path on the host to the actual folder. The second argument is</span><br><span class=\"line\"><span class=\"meta\">  #</span> the path on the guest to mount the folder. And the optional third</span><br><span class=\"line\"><span class=\"meta\">  #</span> argument is a set of non-required options.</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.synced_folder \"../data\", \"/vagrant_data\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Provider-specific configuration so you can fine-tune various</span><br><span class=\"line\"><span class=\"meta\">  #</span> backing providers for Vagrant. These expose provider-specific options.</span><br><span class=\"line\"><span class=\"meta\">  #</span> Example for VirtualBox:</span><br><span class=\"line\"><span class=\"meta\">  #</span></span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.provider \"virtualbox\" do |vb|</span><br><span class=\"line\"><span class=\"meta\">  #</span>   # Display the VirtualBox GUI when booting the machine</span><br><span class=\"line\"><span class=\"meta\">  #</span>   vb.gui = true</span><br><span class=\"line\"><span class=\"meta\">  #</span></span><br><span class=\"line\"><span class=\"meta\">  #</span>   # Customize the amount of memory on the VM:</span><br><span class=\"line\"><span class=\"meta\">  #</span>   vb.memory = \"1024\"</span><br><span class=\"line\"><span class=\"meta\">  #</span> end</span><br><span class=\"line\"><span class=\"meta\">  #</span></span><br><span class=\"line\"><span class=\"meta\">  #</span> View the documentation for the provider you are using for more</span><br><span class=\"line\"><span class=\"meta\">  #</span> information on available options.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Enable provisioning with a shell script. Additional provisioners such as</span><br><span class=\"line\"><span class=\"meta\">  #</span> Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the</span><br><span class=\"line\"><span class=\"meta\">  #</span> documentation for more information about their specific syntax and use.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> 定义应用服务器</span><br><span class=\"line\">  config.vm.define :web do |web|</span><br><span class=\"line\">    web.vm.provider \"virtualbox\" do |v|</span><br><span class=\"line\">          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]</span><br><span class=\"line\">    end</span><br><span class=\"line\">    web.vm.box = \"centos7\"</span><br><span class=\"line\">    web.vm.hostname = \"web\"</span><br><span class=\"line\">    web.vm.network :private_network, ip: \"10.0.2.19\"</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    config.vm.provision \"shell\", inline: &lt;&lt;-SHELL</span><br><span class=\"line\"></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<ul>\n<li>JDK的shell脚本配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"================= START install-jdk.sh $(date +\"%r\") =================\"</span><br><span class=\"line\">  echo \" \"</span><br><span class=\"line\">  echo \"BEGIN installing JDK\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span>################################################################</span><br><span class=\"line\"><span class=\"meta\">  #</span># JDK Installation</span><br><span class=\"line\"><span class=\"meta\">  #</span>################################################################</span><br><span class=\"line\">  JDK_VERSION=\"8u51\"</span><br><span class=\"line\">  JDK_LONGVERSION=\"1.8.0_51\"</span><br><span class=\"line\">  JDK_FILE=\"jdk-$JDK_VERSION-linux-x64.gz\"</span><br><span class=\"line\">  JDK_FORCE=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Check if we have this JDK installed</span><br><span class=\"line\">  if [ ! -d \"/usr/lib/jvm/jdk1.8.0_51\" ] || [ $JDK_FORCE -eq 1 ]; then</span><br><span class=\"line\">    </span><br><span class=\"line\">    # Don't download if we've already got it locally</span><br><span class=\"line\">    if [ ! -f \"/vagrant/artifacts/$JDK_FILE\" ]; then</span><br><span class=\"line\">      echo \"... Downloading JDK: $JDK_VERSION, standby ...\"</span><br><span class=\"line\">      wget -O /vagrant/artifacts/$JDK_FILE http://downloads.ortussolutions.com/oracle/jdk/$JDK_VERSION/$JDK_FILE &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    # Install JDK</span><br><span class=\"line\">    sudo gunzip -c /vagrant/artifacts/$JDK_FILE &gt; jdk-$JDK_VERSION-linux-x64.tar</span><br><span class=\"line\">    sudo tar -xvf jdk-$JDK_VERSION-linux-x64.tar &amp;&gt;&gt; /vagrant/log/install.txt</span><br><span class=\"line\">    #sudo gzip /vagrant/artifacts/jdk-$JDK_VERSION-linux-x64.tar &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">    </span><br><span class=\"line\">    # Move to install directory</span><br><span class=\"line\">    echo \"Moving JDK to installation directory at /usr/lib/jvm/jdk$JDK_LONGVERSION\"</span><br><span class=\"line\">    sudo mkdir -p /usr/lib/jvm/jdk$JDK_LONGVERSION</span><br><span class=\"line\">    sudo mv jdk$JDK_LONGVERSION/* /usr/lib/jvm/jdk$JDK_LONGVERSION/</span><br><span class=\"line\"></span><br><span class=\"line\">    echo \"Linking JDK to 'current' JDK\"</span><br><span class=\"line\">    cd /usr/lib/jvm</span><br><span class=\"line\">    sudo ln -s /usr/lib/jvm/jdk$JDK_LONGVERSION/ current</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/java\" 1</span><br><span class=\"line\">    sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javac\" 1 </span><br><span class=\"line\">    sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javaws\" 1</span><br><span class=\"line\">    #sudo update-alternatives --config java</span><br><span class=\"line\">    </span><br><span class=\"line\">    echo \"Updated java locations successfully\"</span><br><span class=\"line\">    </span><br><span class=\"line\">  else</span><br><span class=\"line\">    echo \"JDK is already installed, skipping\"</span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Move in environment</span><br><span class=\"line\">  sudo /bin/cp -f /vagrant/configs/.bash_profile /etc/environment</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"... END installing JDK.\"</span><br><span class=\"line\">  echo \" \"</span><br><span class=\"line\">  echo \"================= FINISH install-jdk.sh $(date +\"%r\") =================\"</span><br><span class=\"line\">  echo \" \"</span><br><span class=\"line\">  SHELL</span><br><span class=\"line\">  end</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Mysql的脚本配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 定义DB服务器</span><br><span class=\"line\">config.vm.define :db do |db|</span><br><span class=\"line\">  db.vm.provider \"virtualbox\" do |v|</span><br><span class=\"line\">        v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]</span><br><span class=\"line\">  end</span><br><span class=\"line\">  db.vm.box = \"mysqlVM\"</span><br><span class=\"line\">  db.vm.hostname = \"db\"</span><br><span class=\"line\">  db.vm.network :private_network, ip: \"10.0.2.20\"</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.provision \"shell\", inline: &lt;&lt;-SHELL</span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"meta\">   #</span>!/bin/bash</span><br><span class=\"line\">  echo \"-----------update system--------\"</span><br><span class=\"line\"><span class=\"meta\">  #</span>sudo yum -y update</span><br><span class=\"line\"><span class=\"meta\">  #</span> y   y</span><br><span class=\"line\">  echo \"-------install wget---------\"</span><br><span class=\"line\">  sudo yum -y install wget &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\"><span class=\"meta\">  #</span> y</span><br><span class=\"line\">  echo \"------install mysql--------\"</span><br><span class=\"line\">  wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">  sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class=\"line\">  sudo yum -y update &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"------search expect-------\"</span><br><span class=\"line\">  rpm -qa | grep expect</span><br><span class=\"line\">  echo \"--------install expect-------\"</span><br><span class=\"line\">  sudo yum -y install expect &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\"><span class=\"meta\">  #</span> which expect    ---&gt;/usr/bin/expect  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"-------install mysql-server-------\"</span><br><span class=\"line\">  sudo yum -y install mysql-server &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">  sudo systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span>sudo mysql_secure_installation</span><br><span class=\"line\"><span class=\"meta\">  #</span>1.输入当前密码：enter</span><br><span class=\"line\"><span class=\"meta\">  #</span>sudo grep 'temporary password' /var/log/mysqld.log可以查询到。一般密码为空，按enter就行</span><br><span class=\"line\"><span class=\"meta\">  #</span>2.是否更改密码：y or enter</span><br><span class=\"line\"><span class=\"meta\">  #</span>3.新密码：123456</span><br><span class=\"line\"><span class=\"meta\">  #</span>4.再此输入密码：123456</span><br><span class=\"line\"><span class=\"meta\">  #</span>5.删除匿名用户：y</span><br><span class=\"line\"><span class=\"meta\">  #</span>6.禁止远程登陆：n</span><br><span class=\"line\"><span class=\"meta\">  #</span>7.删除测试数据库：y or enter</span><br><span class=\"line\"><span class=\"meta\">  #</span>8.是否重新加载权限表：y or enter</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"------------config mysql----------\"</span><br><span class=\"line\">  set timeout 100</span><br><span class=\"line\">  set firstpassword </span><br><span class=\"line\">  set newpassword 123456</span><br><span class=\"line\">  expect&lt;&lt;-END</span><br><span class=\"line\">  spawn sudo mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\">  expect \"enter for none:\"</span><br><span class=\"line\">  send \"$firstpassword\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\">  expect \"New password\"</span><br><span class=\"line\">  send \"$newpassword\\n\"</span><br><span class=\"line\">  expect \"Re-enter new password:\"</span><br><span class=\"line\">  send \"$newpassword\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"n\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">  expect eof</span><br><span class=\"line\">  exit</span><br><span class=\"line\">  END</span><br><span class=\"line\"></span><br><span class=\"line\">  SHELL</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于使用vagrant自动部署虚拟机、JDK、Mysql</font></center>","more":"<h1 id=\"使用vagrant自动部署虚拟机、JDK、Mysql\"><a href=\"#使用vagrant自动部署虚拟机、JDK、Mysql\" class=\"headerlink\" title=\"使用vagrant自动部署虚拟机、JDK、Mysql\"></a>使用vagrant自动部署虚拟机、JDK、Mysql</h1><h2 id=\"这里主要介绍Vagrantfile的配置文件\"><a href=\"#这里主要介绍Vagrantfile的配置文件\" class=\"headerlink\" title=\"这里主要介绍Vagrantfile的配置文件\"></a>这里主要介绍Vagrantfile的配置文件</h2><ul>\n<li>Vagrantfile文件配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> -*- mode: ruby -*-</span><br><span class=\"line\"><span class=\"meta\">#</span> vi: set ft=ruby :</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> All Vagrant configuration is done below. The \"2\" in Vagrant.configure</span><br><span class=\"line\"><span class=\"meta\">#</span> configures the configuration version (we support older styles for</span><br><span class=\"line\"><span class=\"meta\">#</span> backwards compatibility). Please don't change it unless you know what</span><br><span class=\"line\"><span class=\"meta\">#</span> you're doing.</span><br><span class=\"line\">Vagrant.configure(\"2\") do |config|</span><br><span class=\"line\"><span class=\"meta\">  #</span> The most common configuration options are documented and commented below.</span><br><span class=\"line\"><span class=\"meta\">  #</span> For a complete reference, please see the online documentation at</span><br><span class=\"line\"><span class=\"meta\">  #</span> https://docs.vagrantup.com.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Every Vagrant development environment requires a box. You can search for</span><br><span class=\"line\"><span class=\"meta\">  #</span> boxes at https://vagrantcloud.com/search.</span><br><span class=\"line\"><span class=\"meta\">  #</span>config.vm.box = \"centos7\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span>config.vm.hostname = \"host1\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Disable automatic box update checking. If you disable this, then</span><br><span class=\"line\"><span class=\"meta\">  #</span> boxes will only be checked for updates when the user runs</span><br><span class=\"line\"><span class=\"meta\">  #</span> `vagrant box outdated`. This is not recommended.</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.box_check_update = false</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a forwarded port mapping which allows access to a specific port</span><br><span class=\"line\"><span class=\"meta\">  #</span> within the machine from a port on the host machine. In the example below,</span><br><span class=\"line\"><span class=\"meta\">  #</span> accessing \"localhost:8080\" will access port 80 on the guest machine.</span><br><span class=\"line\"><span class=\"meta\">  #</span> NOTE: This will enable public access to the opened port</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.network \"forwarded_port\", guest: 80, host: 8080</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a forwarded port mapping which allows access to a specific port</span><br><span class=\"line\"><span class=\"meta\">  #</span> within the machine from a port on the host machine and only allow access</span><br><span class=\"line\"><span class=\"meta\">  #</span> via 127.0.0.1 to disable public access</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a private network, which allows host-only access to the machine</span><br><span class=\"line\"><span class=\"meta\">  #</span> using a specific IP.</span><br><span class=\"line\"><span class=\"meta\">  #</span>config.vm.network \"private_network\", ip: \"192.168.31.10\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Create a public network, which generally matched to bridged network.</span><br><span class=\"line\"><span class=\"meta\">  #</span> Bridged networks make the machine appear as another physical device on</span><br><span class=\"line\"><span class=\"meta\">  #</span> your network.</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.network \"public_network\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Share an additional folder to the guest VM. The first argument is</span><br><span class=\"line\"><span class=\"meta\">  #</span> the path on the host to the actual folder. The second argument is</span><br><span class=\"line\"><span class=\"meta\">  #</span> the path on the guest to mount the folder. And the optional third</span><br><span class=\"line\"><span class=\"meta\">  #</span> argument is a set of non-required options.</span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.synced_folder \"../data\", \"/vagrant_data\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Provider-specific configuration so you can fine-tune various</span><br><span class=\"line\"><span class=\"meta\">  #</span> backing providers for Vagrant. These expose provider-specific options.</span><br><span class=\"line\"><span class=\"meta\">  #</span> Example for VirtualBox:</span><br><span class=\"line\"><span class=\"meta\">  #</span></span><br><span class=\"line\"><span class=\"meta\">  #</span> config.vm.provider \"virtualbox\" do |vb|</span><br><span class=\"line\"><span class=\"meta\">  #</span>   # Display the VirtualBox GUI when booting the machine</span><br><span class=\"line\"><span class=\"meta\">  #</span>   vb.gui = true</span><br><span class=\"line\"><span class=\"meta\">  #</span></span><br><span class=\"line\"><span class=\"meta\">  #</span>   # Customize the amount of memory on the VM:</span><br><span class=\"line\"><span class=\"meta\">  #</span>   vb.memory = \"1024\"</span><br><span class=\"line\"><span class=\"meta\">  #</span> end</span><br><span class=\"line\"><span class=\"meta\">  #</span></span><br><span class=\"line\"><span class=\"meta\">  #</span> View the documentation for the provider you are using for more</span><br><span class=\"line\"><span class=\"meta\">  #</span> information on available options.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Enable provisioning with a shell script. Additional provisioners such as</span><br><span class=\"line\"><span class=\"meta\">  #</span> Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the</span><br><span class=\"line\"><span class=\"meta\">  #</span> documentation for more information about their specific syntax and use.</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> 定义应用服务器</span><br><span class=\"line\">  config.vm.define :web do |web|</span><br><span class=\"line\">    web.vm.provider \"virtualbox\" do |v|</span><br><span class=\"line\">          v.customize [\"modifyvm\", :id, \"--name\", \"web\", \"--memory\", \"512\"]</span><br><span class=\"line\">    end</span><br><span class=\"line\">    web.vm.box = \"centos7\"</span><br><span class=\"line\">    web.vm.hostname = \"web\"</span><br><span class=\"line\">    web.vm.network :private_network, ip: \"10.0.2.19\"</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    config.vm.provision \"shell\", inline: &lt;&lt;-SHELL</span><br><span class=\"line\"></span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<ul>\n<li>JDK的shell脚本配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"================= START install-jdk.sh $(date +\"%r\") =================\"</span><br><span class=\"line\">  echo \" \"</span><br><span class=\"line\">  echo \"BEGIN installing JDK\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span>################################################################</span><br><span class=\"line\"><span class=\"meta\">  #</span># JDK Installation</span><br><span class=\"line\"><span class=\"meta\">  #</span>################################################################</span><br><span class=\"line\">  JDK_VERSION=\"8u51\"</span><br><span class=\"line\">  JDK_LONGVERSION=\"1.8.0_51\"</span><br><span class=\"line\">  JDK_FILE=\"jdk-$JDK_VERSION-linux-x64.gz\"</span><br><span class=\"line\">  JDK_FORCE=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Check if we have this JDK installed</span><br><span class=\"line\">  if [ ! -d \"/usr/lib/jvm/jdk1.8.0_51\" ] || [ $JDK_FORCE -eq 1 ]; then</span><br><span class=\"line\">    </span><br><span class=\"line\">    # Don't download if we've already got it locally</span><br><span class=\"line\">    if [ ! -f \"/vagrant/artifacts/$JDK_FILE\" ]; then</span><br><span class=\"line\">      echo \"... Downloading JDK: $JDK_VERSION, standby ...\"</span><br><span class=\"line\">      wget -O /vagrant/artifacts/$JDK_FILE http://downloads.ortussolutions.com/oracle/jdk/$JDK_VERSION/$JDK_FILE &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">    fi</span><br><span class=\"line\"></span><br><span class=\"line\">    # Install JDK</span><br><span class=\"line\">    sudo gunzip -c /vagrant/artifacts/$JDK_FILE &gt; jdk-$JDK_VERSION-linux-x64.tar</span><br><span class=\"line\">    sudo tar -xvf jdk-$JDK_VERSION-linux-x64.tar &amp;&gt;&gt; /vagrant/log/install.txt</span><br><span class=\"line\">    #sudo gzip /vagrant/artifacts/jdk-$JDK_VERSION-linux-x64.tar &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">    </span><br><span class=\"line\">    # Move to install directory</span><br><span class=\"line\">    echo \"Moving JDK to installation directory at /usr/lib/jvm/jdk$JDK_LONGVERSION\"</span><br><span class=\"line\">    sudo mkdir -p /usr/lib/jvm/jdk$JDK_LONGVERSION</span><br><span class=\"line\">    sudo mv jdk$JDK_LONGVERSION/* /usr/lib/jvm/jdk$JDK_LONGVERSION/</span><br><span class=\"line\"></span><br><span class=\"line\">    echo \"Linking JDK to 'current' JDK\"</span><br><span class=\"line\">    cd /usr/lib/jvm</span><br><span class=\"line\">    sudo ln -s /usr/lib/jvm/jdk$JDK_LONGVERSION/ current</span><br><span class=\"line\"></span><br><span class=\"line\">    sudo update-alternatives --install \"/usr/bin/java\" \"java\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/java\" 1</span><br><span class=\"line\">    sudo update-alternatives --install \"/usr/bin/javac\" \"javac\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javac\" 1 </span><br><span class=\"line\">    sudo update-alternatives --install \"/usr/bin/javaws\" \"javaws\" \"/usr/lib/jvm/jdk$JDK_LONGVERSION/bin/javaws\" 1</span><br><span class=\"line\">    #sudo update-alternatives --config java</span><br><span class=\"line\">    </span><br><span class=\"line\">    echo \"Updated java locations successfully\"</span><br><span class=\"line\">    </span><br><span class=\"line\">  else</span><br><span class=\"line\">    echo \"JDK is already installed, skipping\"</span><br><span class=\"line\">  fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span> Move in environment</span><br><span class=\"line\">  sudo /bin/cp -f /vagrant/configs/.bash_profile /etc/environment</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"... END installing JDK.\"</span><br><span class=\"line\">  echo \" \"</span><br><span class=\"line\">  echo \"================= FINISH install-jdk.sh $(date +\"%r\") =================\"</span><br><span class=\"line\">  echo \" \"</span><br><span class=\"line\">  SHELL</span><br><span class=\"line\">  end</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Mysql的脚本配置</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 定义DB服务器</span><br><span class=\"line\">config.vm.define :db do |db|</span><br><span class=\"line\">  db.vm.provider \"virtualbox\" do |v|</span><br><span class=\"line\">        v.customize [\"modifyvm\", :id, \"--name\", \"db\", \"--memory\", \"512\"]</span><br><span class=\"line\">  end</span><br><span class=\"line\">  db.vm.box = \"mysqlVM\"</span><br><span class=\"line\">  db.vm.hostname = \"db\"</span><br><span class=\"line\">  db.vm.network :private_network, ip: \"10.0.2.20\"</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  config.vm.provision \"shell\", inline: &lt;&lt;-SHELL</span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"meta\">   #</span>!/bin/bash</span><br><span class=\"line\">  echo \"-----------update system--------\"</span><br><span class=\"line\"><span class=\"meta\">  #</span>sudo yum -y update</span><br><span class=\"line\"><span class=\"meta\">  #</span> y   y</span><br><span class=\"line\">  echo \"-------install wget---------\"</span><br><span class=\"line\">  sudo yum -y install wget &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\"><span class=\"meta\">  #</span> y</span><br><span class=\"line\">  echo \"------install mysql--------\"</span><br><span class=\"line\">  wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">  sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class=\"line\">  sudo yum -y update &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"------search expect-------\"</span><br><span class=\"line\">  rpm -qa | grep expect</span><br><span class=\"line\">  echo \"--------install expect-------\"</span><br><span class=\"line\">  sudo yum -y install expect &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\"><span class=\"meta\">  #</span> which expect    ---&gt;/usr/bin/expect  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"-------install mysql-server-------\"</span><br><span class=\"line\">  sudo yum -y install mysql-server &amp;&gt;&gt; /vagrant/log/install.sh</span><br><span class=\"line\">  sudo systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">  #</span>sudo mysql_secure_installation</span><br><span class=\"line\"><span class=\"meta\">  #</span>1.输入当前密码：enter</span><br><span class=\"line\"><span class=\"meta\">  #</span>sudo grep 'temporary password' /var/log/mysqld.log可以查询到。一般密码为空，按enter就行</span><br><span class=\"line\"><span class=\"meta\">  #</span>2.是否更改密码：y or enter</span><br><span class=\"line\"><span class=\"meta\">  #</span>3.新密码：123456</span><br><span class=\"line\"><span class=\"meta\">  #</span>4.再此输入密码：123456</span><br><span class=\"line\"><span class=\"meta\">  #</span>5.删除匿名用户：y</span><br><span class=\"line\"><span class=\"meta\">  #</span>6.禁止远程登陆：n</span><br><span class=\"line\"><span class=\"meta\">  #</span>7.删除测试数据库：y or enter</span><br><span class=\"line\"><span class=\"meta\">  #</span>8.是否重新加载权限表：y or enter</span><br><span class=\"line\"></span><br><span class=\"line\">  echo \"------------config mysql----------\"</span><br><span class=\"line\">  set timeout 100</span><br><span class=\"line\">  set firstpassword </span><br><span class=\"line\">  set newpassword 123456</span><br><span class=\"line\">  expect&lt;&lt;-END</span><br><span class=\"line\">  spawn sudo mysql_secure_installation</span><br><span class=\"line\"></span><br><span class=\"line\">  expect \"enter for none:\"</span><br><span class=\"line\">  send \"$firstpassword\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\">  expect \"New password\"</span><br><span class=\"line\">  send \"$newpassword\\n\"</span><br><span class=\"line\">  expect \"Re-enter new password:\"</span><br><span class=\"line\">  send \"$newpassword\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"n\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\">  expect \"Y/n\"</span><br><span class=\"line\">  send \"\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">  expect eof</span><br><span class=\"line\">  exit</span><br><span class=\"line\">  END</span><br><span class=\"line\"></span><br><span class=\"line\">  SHELL</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>"},{"title":"软件工程-07_需求建模：流程、行为、模式和Web应用","date":"2019-05-22T10:54:21.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于软件需求建模的文章</font></center>\n\n<!--more-->\n\n# 需求建模：流程、行为、模式和Web应用\n\n## 需求建模策略\n\n结构化分析：\n\n* 考虑数据和处理的分析建模方法，数据可作为独立实体转换。数据对象模型的方式定义了它们的属性和关系，表明当数据对象通过系统时如何转换数据。\n\n面向对象分析：\n\n* 专注于定义类以及影响客户需求的类之间的协作方式\n\n## 面向数建模\n\n数据流图(DFD)\n\n* 输入-处理-输出，流入软件的数据对象，经由处理元素变换，最后以结果数据对象的形式流出软件。\n\n表达方式：\n\n```md\n带标记的箭头表示数据或控制对象\n圆圈(泡泡)表示转换，0层是系统，其它层是动名词结合\n名词是外部实体，用方框表示\n数据存储，双横线表示\n```\n\n* 分层：0层，1层，2层......\n\n#### 创建数据流模型\n\n数据流图创建方式：\n\n* 1.第0层的数据流图应将软件或者系统描述成一个泡泡\n\n* 2.应仔细标记主要的输入和输出\n\n* 3.通过把选定的处理、数据对象和数据存储分离为下一层表示而开始精化过程\n\n* 4.应使用有意义的名称标记所有的箭头和泡泡\n\n* 5.当从一个层转到另一个层时要保持信息流连续性\n\n* 6.一次精化一个泡泡\n\n原则：\n\n* 逐渐精华泡泡\n\n* 保持信息流的连续性\n\n#### 创建控制流模型\n\n事件驱动的问题需要使用控制流建模\n\n#### 控制规格说明\n\nControl Specification CSPEC\n\n* 状态图，下章节会重点讲解\n\n#### 处理规格说明\n\nProcess Specification,PSPEC\n\n## 生成行为模型\n\n目的：将静态元素转换为系统或产品的动态行为\n\n生成模型的步骤\n\n* 1.评估所有的用例，以保证安全理解系统内的交互顺序\n\n* 2.识别驱动交互顺序的事件，并理解这些事件如何与特定的对象相互关联\n\n* 3.为每个用例生成序列\n\n* 4.创建系统状态图\n\n * 5.评审行为模型以验证准确性和一致性\n\n#### 识别用例事件\n\n用例表现了涉及参与者和系统的活动顺序。一般而言，只要系统和参与者之间交换了信息就发生事件。事件可以理解为一个动作或行为，例如，输入密码是个事件，商品加入购物车是个事件，吃饭是个事件。一旦找到了事件，要做的是将其分配到所涉及的对象。对象负责生成事件\n\n#### 状态表现\n\n行为建模必须考虑的两种不同的状态描述\n\n* 1.系统执行其功能时每个类的状态\n\n* 2.系统执行其功能时从外部观察到的系统状态\n\n类状态具有被动和主动两种特征\n\n* 1.被动状态只是某个对象所有属性的当前状态\n\n* 2.一个对象的主动状态指的是对象进行持续变换或处理时的当前状态\n\n以下讨论两种不同的行为表现形式，第一种显示一个类如何改变基于外部事件的状态，第二种以事件函数的形式显示软件的行为\n\n* **分析类的状态图**。UML状态图就是一种行为模型，该图为每个类呈现了主动状态和导致这些主动状态变化的事件\n\n* **顺序图**。该图表明事件如何引发从一个对象到一个对象的转移。一旦通过检查用例确认了事件，建模人员就创建了一个顺序图，即用时间函数表现如何引发事件从一个对象流到另一个对象\n\nUML建模工具\n\n```md\nArgoUML  `argouml.tigris.org`\nEnterprise Architect  `www.sparxsystems.com.au`\nPowerDesigner  `www.sybase.com`\nRational Rose   `www.ibm.com/software/retional`\nSystem Architect  `www.popkin.com`\nUML Studio  `www.pragsoft.com`\nVisio  `www.mocrosoft.com`\nVisual UML `www.visualuml.com`\n```\n\n## 需求建模的模式\n\n#### 发现分析模式\n\n需求模型由各种元素组成\n\n* 基于场景(用例)\n\n* 基于数据(数据模型)\n\n* 基于类\n\n* 基于流和行为\n\n需求模型中最基本的元素是用例。语义分析模式(semantic analysis pattern,SAP)是描述了一小套连贯用例，这些用例一起描述了通用应用的基础。\n\n#### 需求模式举例\n\n不再分析\n\n## Web应用系统的需求建模\n\n#### 如何分析\n\nWeb应用需求建模的重视程度依据以下因素\n\n* 1.Web应用的规模和复杂性的增长\n\n* 2.相关利益者的人数(识别需求冲突)\n\n* 3.Web应用团队的人数\n\n* 4.一起工作以前该Web应用团队成员的级别\n\n* 5.组织成功的程度直接依赖Web应用的成功\n\n#### 需求建模的输入\n\n需求建模输入的表现形式\n\n* 自然语言描述\n\n* 概要大纲\n\n* 草图\n\n* 其它非正式形式\n\n#### 需求建模的输出\n\n5种主要的模型类型\n\n* 内容模型：包括文本、图表和图像、视频和音频数据\n\n* 交互模式：描述了用户与Web应用系统采用了哪种交互方式\n\n* 功能模式：定义了将用于Web应用系统内容并描述其他处理功能的操作，这些处理功能不依赖于内容却是最终用户所必需的\n\n* 导航模式：为Web应用系统定义所有导航策略\n\n* 配置模型：描述Web应用系统所在的环境和基础设施\n\n#### Web应用系统内容建模\n\n内容对象是呈现给最终用户具有汇聚信息的所有条目\n\n数据树分析内容对象图示：\n\n![](https://i.loli.net/2019/05/22/5ce4b66a2918a47029.jpg)\n\n#### Web应用系统的交互模型\n\n交互模型可以由下面的一种或多种组成：\n\n* 1.用例\n\n* 2.顺序图\n\n* 3.状态图\n\n* 4.用户界面原型\n\n一般使用用例就行，对于复杂的情况需要使用顺序图和状态图，甚至用户界面原型\n\n#### Web应用系统的功能模型\n\n功能模型描述Web应用系统的两个处理元素，每个处理元素代表抽象过程的不同层次\n\n* 1.用户可观察到的功能有Web应用系统传递给最终用户的\n\n* 2.分析类中的操作实现与类相关的行为\n\n在功能模型创建的过程中，如果存在着潜在的复杂的行为，可以使用活动图进行分析\n\n#### Web应用系统的配置模型\n\n配置较为复杂时，使用UML部署图\n\n#### 导航建模\n\n具体情况具体分析\n","source":"_posts/2019-05-22-07-软件工程.md","raw":"---\ntitle: 软件工程-07_需求建模：流程、行为、模式和Web应用\ndate: 2019-05-22 10:54:21\ncategories: \n- 软件工程\ntags: \n- 需求建模\n- 流程\n- 行为\n- 模式\n- Web应用\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于软件需求建模的文章</font></center>\n\n<!--more-->\n\n# 需求建模：流程、行为、模式和Web应用\n\n## 需求建模策略\n\n结构化分析：\n\n* 考虑数据和处理的分析建模方法，数据可作为独立实体转换。数据对象模型的方式定义了它们的属性和关系，表明当数据对象通过系统时如何转换数据。\n\n面向对象分析：\n\n* 专注于定义类以及影响客户需求的类之间的协作方式\n\n## 面向数建模\n\n数据流图(DFD)\n\n* 输入-处理-输出，流入软件的数据对象，经由处理元素变换，最后以结果数据对象的形式流出软件。\n\n表达方式：\n\n```md\n带标记的箭头表示数据或控制对象\n圆圈(泡泡)表示转换，0层是系统，其它层是动名词结合\n名词是外部实体，用方框表示\n数据存储，双横线表示\n```\n\n* 分层：0层，1层，2层......\n\n#### 创建数据流模型\n\n数据流图创建方式：\n\n* 1.第0层的数据流图应将软件或者系统描述成一个泡泡\n\n* 2.应仔细标记主要的输入和输出\n\n* 3.通过把选定的处理、数据对象和数据存储分离为下一层表示而开始精化过程\n\n* 4.应使用有意义的名称标记所有的箭头和泡泡\n\n* 5.当从一个层转到另一个层时要保持信息流连续性\n\n* 6.一次精化一个泡泡\n\n原则：\n\n* 逐渐精华泡泡\n\n* 保持信息流的连续性\n\n#### 创建控制流模型\n\n事件驱动的问题需要使用控制流建模\n\n#### 控制规格说明\n\nControl Specification CSPEC\n\n* 状态图，下章节会重点讲解\n\n#### 处理规格说明\n\nProcess Specification,PSPEC\n\n## 生成行为模型\n\n目的：将静态元素转换为系统或产品的动态行为\n\n生成模型的步骤\n\n* 1.评估所有的用例，以保证安全理解系统内的交互顺序\n\n* 2.识别驱动交互顺序的事件，并理解这些事件如何与特定的对象相互关联\n\n* 3.为每个用例生成序列\n\n* 4.创建系统状态图\n\n * 5.评审行为模型以验证准确性和一致性\n\n#### 识别用例事件\n\n用例表现了涉及参与者和系统的活动顺序。一般而言，只要系统和参与者之间交换了信息就发生事件。事件可以理解为一个动作或行为，例如，输入密码是个事件，商品加入购物车是个事件，吃饭是个事件。一旦找到了事件，要做的是将其分配到所涉及的对象。对象负责生成事件\n\n#### 状态表现\n\n行为建模必须考虑的两种不同的状态描述\n\n* 1.系统执行其功能时每个类的状态\n\n* 2.系统执行其功能时从外部观察到的系统状态\n\n类状态具有被动和主动两种特征\n\n* 1.被动状态只是某个对象所有属性的当前状态\n\n* 2.一个对象的主动状态指的是对象进行持续变换或处理时的当前状态\n\n以下讨论两种不同的行为表现形式，第一种显示一个类如何改变基于外部事件的状态，第二种以事件函数的形式显示软件的行为\n\n* **分析类的状态图**。UML状态图就是一种行为模型，该图为每个类呈现了主动状态和导致这些主动状态变化的事件\n\n* **顺序图**。该图表明事件如何引发从一个对象到一个对象的转移。一旦通过检查用例确认了事件，建模人员就创建了一个顺序图，即用时间函数表现如何引发事件从一个对象流到另一个对象\n\nUML建模工具\n\n```md\nArgoUML  `argouml.tigris.org`\nEnterprise Architect  `www.sparxsystems.com.au`\nPowerDesigner  `www.sybase.com`\nRational Rose   `www.ibm.com/software/retional`\nSystem Architect  `www.popkin.com`\nUML Studio  `www.pragsoft.com`\nVisio  `www.mocrosoft.com`\nVisual UML `www.visualuml.com`\n```\n\n## 需求建模的模式\n\n#### 发现分析模式\n\n需求模型由各种元素组成\n\n* 基于场景(用例)\n\n* 基于数据(数据模型)\n\n* 基于类\n\n* 基于流和行为\n\n需求模型中最基本的元素是用例。语义分析模式(semantic analysis pattern,SAP)是描述了一小套连贯用例，这些用例一起描述了通用应用的基础。\n\n#### 需求模式举例\n\n不再分析\n\n## Web应用系统的需求建模\n\n#### 如何分析\n\nWeb应用需求建模的重视程度依据以下因素\n\n* 1.Web应用的规模和复杂性的增长\n\n* 2.相关利益者的人数(识别需求冲突)\n\n* 3.Web应用团队的人数\n\n* 4.一起工作以前该Web应用团队成员的级别\n\n* 5.组织成功的程度直接依赖Web应用的成功\n\n#### 需求建模的输入\n\n需求建模输入的表现形式\n\n* 自然语言描述\n\n* 概要大纲\n\n* 草图\n\n* 其它非正式形式\n\n#### 需求建模的输出\n\n5种主要的模型类型\n\n* 内容模型：包括文本、图表和图像、视频和音频数据\n\n* 交互模式：描述了用户与Web应用系统采用了哪种交互方式\n\n* 功能模式：定义了将用于Web应用系统内容并描述其他处理功能的操作，这些处理功能不依赖于内容却是最终用户所必需的\n\n* 导航模式：为Web应用系统定义所有导航策略\n\n* 配置模型：描述Web应用系统所在的环境和基础设施\n\n#### Web应用系统内容建模\n\n内容对象是呈现给最终用户具有汇聚信息的所有条目\n\n数据树分析内容对象图示：\n\n![](https://i.loli.net/2019/05/22/5ce4b66a2918a47029.jpg)\n\n#### Web应用系统的交互模型\n\n交互模型可以由下面的一种或多种组成：\n\n* 1.用例\n\n* 2.顺序图\n\n* 3.状态图\n\n* 4.用户界面原型\n\n一般使用用例就行，对于复杂的情况需要使用顺序图和状态图，甚至用户界面原型\n\n#### Web应用系统的功能模型\n\n功能模型描述Web应用系统的两个处理元素，每个处理元素代表抽象过程的不同层次\n\n* 1.用户可观察到的功能有Web应用系统传递给最终用户的\n\n* 2.分析类中的操作实现与类相关的行为\n\n在功能模型创建的过程中，如果存在着潜在的复杂的行为，可以使用活动图进行分析\n\n#### Web应用系统的配置模型\n\n配置较为复杂时，使用UML部署图\n\n#### 导航建模\n\n具体情况具体分析\n","slug":"2019-05-22-07-软件工程","published":1,"updated":"2019-08-10T04:35:46.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6uy000o54tn51jegmvn","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件需求建模的文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"需求建模：流程、行为、模式和Web应用\"><a href=\"#需求建模：流程、行为、模式和Web应用\" class=\"headerlink\" title=\"需求建模：流程、行为、模式和Web应用\"></a>需求建模：流程、行为、模式和Web应用</h1><h2 id=\"需求建模策略\"><a href=\"#需求建模策略\" class=\"headerlink\" title=\"需求建模策略\"></a>需求建模策略</h2><p>结构化分析：</p>\n<ul>\n<li>考虑数据和处理的分析建模方法，数据可作为独立实体转换。数据对象模型的方式定义了它们的属性和关系，表明当数据对象通过系统时如何转换数据。</li>\n</ul>\n<p>面向对象分析：</p>\n<ul>\n<li>专注于定义类以及影响客户需求的类之间的协作方式</li>\n</ul>\n<h2 id=\"面向数建模\"><a href=\"#面向数建模\" class=\"headerlink\" title=\"面向数建模\"></a>面向数建模</h2><p>数据流图(DFD)</p>\n<ul>\n<li>输入-处理-输出，流入软件的数据对象，经由处理元素变换，最后以结果数据对象的形式流出软件。</li>\n</ul>\n<p>表达方式：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">带标记的箭头表示数据或控制对象</span><br><span class=\"line\">圆圈(泡泡)表示转换，0层是系统，其它层是动名词结合</span><br><span class=\"line\">名词是外部实体，用方框表示</span><br><span class=\"line\">数据存储，双横线表示</span><br></pre></td></tr></table></figure>\n<ul>\n<li>分层：0层，1层，2层……</li>\n</ul>\n<h4 id=\"创建数据流模型\"><a href=\"#创建数据流模型\" class=\"headerlink\" title=\"创建数据流模型\"></a>创建数据流模型</h4><p>数据流图创建方式：</p>\n<ul>\n<li><p>1.第0层的数据流图应将软件或者系统描述成一个泡泡</p>\n</li>\n<li><p>2.应仔细标记主要的输入和输出</p>\n</li>\n<li><p>3.通过把选定的处理、数据对象和数据存储分离为下一层表示而开始精化过程</p>\n</li>\n<li><p>4.应使用有意义的名称标记所有的箭头和泡泡</p>\n</li>\n<li><p>5.当从一个层转到另一个层时要保持信息流连续性</p>\n</li>\n<li><p>6.一次精化一个泡泡</p>\n</li>\n</ul>\n<p>原则：</p>\n<ul>\n<li><p>逐渐精华泡泡</p>\n</li>\n<li><p>保持信息流的连续性</p>\n</li>\n</ul>\n<h4 id=\"创建控制流模型\"><a href=\"#创建控制流模型\" class=\"headerlink\" title=\"创建控制流模型\"></a>创建控制流模型</h4><p>事件驱动的问题需要使用控制流建模</p>\n<h4 id=\"控制规格说明\"><a href=\"#控制规格说明\" class=\"headerlink\" title=\"控制规格说明\"></a>控制规格说明</h4><p>Control Specification CSPEC</p>\n<ul>\n<li>状态图，下章节会重点讲解</li>\n</ul>\n<h4 id=\"处理规格说明\"><a href=\"#处理规格说明\" class=\"headerlink\" title=\"处理规格说明\"></a>处理规格说明</h4><p>Process Specification,PSPEC</p>\n<h2 id=\"生成行为模型\"><a href=\"#生成行为模型\" class=\"headerlink\" title=\"生成行为模型\"></a>生成行为模型</h2><p>目的：将静态元素转换为系统或产品的动态行为</p>\n<p>生成模型的步骤</p>\n<ul>\n<li><p>1.评估所有的用例，以保证安全理解系统内的交互顺序</p>\n</li>\n<li><p>2.识别驱动交互顺序的事件，并理解这些事件如何与特定的对象相互关联</p>\n</li>\n<li><p>3.为每个用例生成序列</p>\n</li>\n<li><p>4.创建系统状态图</p>\n<ul>\n<li>5.评审行为模型以验证准确性和一致性</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"识别用例事件\"><a href=\"#识别用例事件\" class=\"headerlink\" title=\"识别用例事件\"></a>识别用例事件</h4><p>用例表现了涉及参与者和系统的活动顺序。一般而言，只要系统和参与者之间交换了信息就发生事件。事件可以理解为一个动作或行为，例如，输入密码是个事件，商品加入购物车是个事件，吃饭是个事件。一旦找到了事件，要做的是将其分配到所涉及的对象。对象负责生成事件</p>\n<h4 id=\"状态表现\"><a href=\"#状态表现\" class=\"headerlink\" title=\"状态表现\"></a>状态表现</h4><p>行为建模必须考虑的两种不同的状态描述</p>\n<ul>\n<li><p>1.系统执行其功能时每个类的状态</p>\n</li>\n<li><p>2.系统执行其功能时从外部观察到的系统状态</p>\n</li>\n</ul>\n<p>类状态具有被动和主动两种特征</p>\n<ul>\n<li><p>1.被动状态只是某个对象所有属性的当前状态</p>\n</li>\n<li><p>2.一个对象的主动状态指的是对象进行持续变换或处理时的当前状态</p>\n</li>\n</ul>\n<p>以下讨论两种不同的行为表现形式，第一种显示一个类如何改变基于外部事件的状态，第二种以事件函数的形式显示软件的行为</p>\n<ul>\n<li><p><strong>分析类的状态图</strong>。UML状态图就是一种行为模型，该图为每个类呈现了主动状态和导致这些主动状态变化的事件</p>\n</li>\n<li><p><strong>顺序图</strong>。该图表明事件如何引发从一个对象到一个对象的转移。一旦通过检查用例确认了事件，建模人员就创建了一个顺序图，即用时间函数表现如何引发事件从一个对象流到另一个对象</p>\n</li>\n</ul>\n<p>UML建模工具</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArgoUML  <span class=\"code\">`argouml.tigris.org`</span></span><br><span class=\"line\">Enterprise Architect  <span class=\"code\">`www.sparxsystems.com.au`</span></span><br><span class=\"line\">PowerDesigner  <span class=\"code\">`www.sybase.com`</span></span><br><span class=\"line\">Rational Rose   <span class=\"code\">`www.ibm.com/software/retional`</span></span><br><span class=\"line\">System Architect  <span class=\"code\">`www.popkin.com`</span></span><br><span class=\"line\">UML Studio  <span class=\"code\">`www.pragsoft.com`</span></span><br><span class=\"line\">Visio  <span class=\"code\">`www.mocrosoft.com`</span></span><br><span class=\"line\">Visual UML <span class=\"code\">`www.visualuml.com`</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"需求建模的模式\"><a href=\"#需求建模的模式\" class=\"headerlink\" title=\"需求建模的模式\"></a>需求建模的模式</h2><h4 id=\"发现分析模式\"><a href=\"#发现分析模式\" class=\"headerlink\" title=\"发现分析模式\"></a>发现分析模式</h4><p>需求模型由各种元素组成</p>\n<ul>\n<li><p>基于场景(用例)</p>\n</li>\n<li><p>基于数据(数据模型)</p>\n</li>\n<li><p>基于类</p>\n</li>\n<li><p>基于流和行为</p>\n</li>\n</ul>\n<p>需求模型中最基本的元素是用例。语义分析模式(semantic analysis pattern,SAP)是描述了一小套连贯用例，这些用例一起描述了通用应用的基础。</p>\n<h4 id=\"需求模式举例\"><a href=\"#需求模式举例\" class=\"headerlink\" title=\"需求模式举例\"></a>需求模式举例</h4><p>不再分析</p>\n<h2 id=\"Web应用系统的需求建模\"><a href=\"#Web应用系统的需求建模\" class=\"headerlink\" title=\"Web应用系统的需求建模\"></a>Web应用系统的需求建模</h2><h4 id=\"如何分析\"><a href=\"#如何分析\" class=\"headerlink\" title=\"如何分析\"></a>如何分析</h4><p>Web应用需求建模的重视程度依据以下因素</p>\n<ul>\n<li><p>1.Web应用的规模和复杂性的增长</p>\n</li>\n<li><p>2.相关利益者的人数(识别需求冲突)</p>\n</li>\n<li><p>3.Web应用团队的人数</p>\n</li>\n<li><p>4.一起工作以前该Web应用团队成员的级别</p>\n</li>\n<li><p>5.组织成功的程度直接依赖Web应用的成功</p>\n</li>\n</ul>\n<h4 id=\"需求建模的输入\"><a href=\"#需求建模的输入\" class=\"headerlink\" title=\"需求建模的输入\"></a>需求建模的输入</h4><p>需求建模输入的表现形式</p>\n<ul>\n<li><p>自然语言描述</p>\n</li>\n<li><p>概要大纲</p>\n</li>\n<li><p>草图</p>\n</li>\n<li><p>其它非正式形式</p>\n</li>\n</ul>\n<h4 id=\"需求建模的输出\"><a href=\"#需求建模的输出\" class=\"headerlink\" title=\"需求建模的输出\"></a>需求建模的输出</h4><p>5种主要的模型类型</p>\n<ul>\n<li><p>内容模型：包括文本、图表和图像、视频和音频数据</p>\n</li>\n<li><p>交互模式：描述了用户与Web应用系统采用了哪种交互方式</p>\n</li>\n<li><p>功能模式：定义了将用于Web应用系统内容并描述其他处理功能的操作，这些处理功能不依赖于内容却是最终用户所必需的</p>\n</li>\n<li><p>导航模式：为Web应用系统定义所有导航策略</p>\n</li>\n<li><p>配置模型：描述Web应用系统所在的环境和基础设施</p>\n</li>\n</ul>\n<h4 id=\"Web应用系统内容建模\"><a href=\"#Web应用系统内容建模\" class=\"headerlink\" title=\"Web应用系统内容建模\"></a>Web应用系统内容建模</h4><p>内容对象是呈现给最终用户具有汇聚信息的所有条目</p>\n<p>数据树分析内容对象图示：</p>\n<p><img src=\"https://i.loli.net/2019/05/22/5ce4b66a2918a47029.jpg\" alt></p>\n<h4 id=\"Web应用系统的交互模型\"><a href=\"#Web应用系统的交互模型\" class=\"headerlink\" title=\"Web应用系统的交互模型\"></a>Web应用系统的交互模型</h4><p>交互模型可以由下面的一种或多种组成：</p>\n<ul>\n<li><p>1.用例</p>\n</li>\n<li><p>2.顺序图</p>\n</li>\n<li><p>3.状态图</p>\n</li>\n<li><p>4.用户界面原型</p>\n</li>\n</ul>\n<p>一般使用用例就行，对于复杂的情况需要使用顺序图和状态图，甚至用户界面原型</p>\n<h4 id=\"Web应用系统的功能模型\"><a href=\"#Web应用系统的功能模型\" class=\"headerlink\" title=\"Web应用系统的功能模型\"></a>Web应用系统的功能模型</h4><p>功能模型描述Web应用系统的两个处理元素，每个处理元素代表抽象过程的不同层次</p>\n<ul>\n<li><p>1.用户可观察到的功能有Web应用系统传递给最终用户的</p>\n</li>\n<li><p>2.分析类中的操作实现与类相关的行为</p>\n</li>\n</ul>\n<p>在功能模型创建的过程中，如果存在着潜在的复杂的行为，可以使用活动图进行分析</p>\n<h4 id=\"Web应用系统的配置模型\"><a href=\"#Web应用系统的配置模型\" class=\"headerlink\" title=\"Web应用系统的配置模型\"></a>Web应用系统的配置模型</h4><p>配置较为复杂时，使用UML部署图</p>\n<h4 id=\"导航建模\"><a href=\"#导航建模\" class=\"headerlink\" title=\"导航建模\"></a>导航建模</h4><p>具体情况具体分析</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件需求建模的文章</font></center>","more":"<h1 id=\"需求建模：流程、行为、模式和Web应用\"><a href=\"#需求建模：流程、行为、模式和Web应用\" class=\"headerlink\" title=\"需求建模：流程、行为、模式和Web应用\"></a>需求建模：流程、行为、模式和Web应用</h1><h2 id=\"需求建模策略\"><a href=\"#需求建模策略\" class=\"headerlink\" title=\"需求建模策略\"></a>需求建模策略</h2><p>结构化分析：</p>\n<ul>\n<li>考虑数据和处理的分析建模方法，数据可作为独立实体转换。数据对象模型的方式定义了它们的属性和关系，表明当数据对象通过系统时如何转换数据。</li>\n</ul>\n<p>面向对象分析：</p>\n<ul>\n<li>专注于定义类以及影响客户需求的类之间的协作方式</li>\n</ul>\n<h2 id=\"面向数建模\"><a href=\"#面向数建模\" class=\"headerlink\" title=\"面向数建模\"></a>面向数建模</h2><p>数据流图(DFD)</p>\n<ul>\n<li>输入-处理-输出，流入软件的数据对象，经由处理元素变换，最后以结果数据对象的形式流出软件。</li>\n</ul>\n<p>表达方式：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">带标记的箭头表示数据或控制对象</span><br><span class=\"line\">圆圈(泡泡)表示转换，0层是系统，其它层是动名词结合</span><br><span class=\"line\">名词是外部实体，用方框表示</span><br><span class=\"line\">数据存储，双横线表示</span><br></pre></td></tr></table></figure>\n<ul>\n<li>分层：0层，1层，2层……</li>\n</ul>\n<h4 id=\"创建数据流模型\"><a href=\"#创建数据流模型\" class=\"headerlink\" title=\"创建数据流模型\"></a>创建数据流模型</h4><p>数据流图创建方式：</p>\n<ul>\n<li><p>1.第0层的数据流图应将软件或者系统描述成一个泡泡</p>\n</li>\n<li><p>2.应仔细标记主要的输入和输出</p>\n</li>\n<li><p>3.通过把选定的处理、数据对象和数据存储分离为下一层表示而开始精化过程</p>\n</li>\n<li><p>4.应使用有意义的名称标记所有的箭头和泡泡</p>\n</li>\n<li><p>5.当从一个层转到另一个层时要保持信息流连续性</p>\n</li>\n<li><p>6.一次精化一个泡泡</p>\n</li>\n</ul>\n<p>原则：</p>\n<ul>\n<li><p>逐渐精华泡泡</p>\n</li>\n<li><p>保持信息流的连续性</p>\n</li>\n</ul>\n<h4 id=\"创建控制流模型\"><a href=\"#创建控制流模型\" class=\"headerlink\" title=\"创建控制流模型\"></a>创建控制流模型</h4><p>事件驱动的问题需要使用控制流建模</p>\n<h4 id=\"控制规格说明\"><a href=\"#控制规格说明\" class=\"headerlink\" title=\"控制规格说明\"></a>控制规格说明</h4><p>Control Specification CSPEC</p>\n<ul>\n<li>状态图，下章节会重点讲解</li>\n</ul>\n<h4 id=\"处理规格说明\"><a href=\"#处理规格说明\" class=\"headerlink\" title=\"处理规格说明\"></a>处理规格说明</h4><p>Process Specification,PSPEC</p>\n<h2 id=\"生成行为模型\"><a href=\"#生成行为模型\" class=\"headerlink\" title=\"生成行为模型\"></a>生成行为模型</h2><p>目的：将静态元素转换为系统或产品的动态行为</p>\n<p>生成模型的步骤</p>\n<ul>\n<li><p>1.评估所有的用例，以保证安全理解系统内的交互顺序</p>\n</li>\n<li><p>2.识别驱动交互顺序的事件，并理解这些事件如何与特定的对象相互关联</p>\n</li>\n<li><p>3.为每个用例生成序列</p>\n</li>\n<li><p>4.创建系统状态图</p>\n<ul>\n<li>5.评审行为模型以验证准确性和一致性</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"识别用例事件\"><a href=\"#识别用例事件\" class=\"headerlink\" title=\"识别用例事件\"></a>识别用例事件</h4><p>用例表现了涉及参与者和系统的活动顺序。一般而言，只要系统和参与者之间交换了信息就发生事件。事件可以理解为一个动作或行为，例如，输入密码是个事件，商品加入购物车是个事件，吃饭是个事件。一旦找到了事件，要做的是将其分配到所涉及的对象。对象负责生成事件</p>\n<h4 id=\"状态表现\"><a href=\"#状态表现\" class=\"headerlink\" title=\"状态表现\"></a>状态表现</h4><p>行为建模必须考虑的两种不同的状态描述</p>\n<ul>\n<li><p>1.系统执行其功能时每个类的状态</p>\n</li>\n<li><p>2.系统执行其功能时从外部观察到的系统状态</p>\n</li>\n</ul>\n<p>类状态具有被动和主动两种特征</p>\n<ul>\n<li><p>1.被动状态只是某个对象所有属性的当前状态</p>\n</li>\n<li><p>2.一个对象的主动状态指的是对象进行持续变换或处理时的当前状态</p>\n</li>\n</ul>\n<p>以下讨论两种不同的行为表现形式，第一种显示一个类如何改变基于外部事件的状态，第二种以事件函数的形式显示软件的行为</p>\n<ul>\n<li><p><strong>分析类的状态图</strong>。UML状态图就是一种行为模型，该图为每个类呈现了主动状态和导致这些主动状态变化的事件</p>\n</li>\n<li><p><strong>顺序图</strong>。该图表明事件如何引发从一个对象到一个对象的转移。一旦通过检查用例确认了事件，建模人员就创建了一个顺序图，即用时间函数表现如何引发事件从一个对象流到另一个对象</p>\n</li>\n</ul>\n<p>UML建模工具</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ArgoUML  <span class=\"code\">`argouml.tigris.org`</span></span><br><span class=\"line\">Enterprise Architect  <span class=\"code\">`www.sparxsystems.com.au`</span></span><br><span class=\"line\">PowerDesigner  <span class=\"code\">`www.sybase.com`</span></span><br><span class=\"line\">Rational Rose   <span class=\"code\">`www.ibm.com/software/retional`</span></span><br><span class=\"line\">System Architect  <span class=\"code\">`www.popkin.com`</span></span><br><span class=\"line\">UML Studio  <span class=\"code\">`www.pragsoft.com`</span></span><br><span class=\"line\">Visio  <span class=\"code\">`www.mocrosoft.com`</span></span><br><span class=\"line\">Visual UML <span class=\"code\">`www.visualuml.com`</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"需求建模的模式\"><a href=\"#需求建模的模式\" class=\"headerlink\" title=\"需求建模的模式\"></a>需求建模的模式</h2><h4 id=\"发现分析模式\"><a href=\"#发现分析模式\" class=\"headerlink\" title=\"发现分析模式\"></a>发现分析模式</h4><p>需求模型由各种元素组成</p>\n<ul>\n<li><p>基于场景(用例)</p>\n</li>\n<li><p>基于数据(数据模型)</p>\n</li>\n<li><p>基于类</p>\n</li>\n<li><p>基于流和行为</p>\n</li>\n</ul>\n<p>需求模型中最基本的元素是用例。语义分析模式(semantic analysis pattern,SAP)是描述了一小套连贯用例，这些用例一起描述了通用应用的基础。</p>\n<h4 id=\"需求模式举例\"><a href=\"#需求模式举例\" class=\"headerlink\" title=\"需求模式举例\"></a>需求模式举例</h4><p>不再分析</p>\n<h2 id=\"Web应用系统的需求建模\"><a href=\"#Web应用系统的需求建模\" class=\"headerlink\" title=\"Web应用系统的需求建模\"></a>Web应用系统的需求建模</h2><h4 id=\"如何分析\"><a href=\"#如何分析\" class=\"headerlink\" title=\"如何分析\"></a>如何分析</h4><p>Web应用需求建模的重视程度依据以下因素</p>\n<ul>\n<li><p>1.Web应用的规模和复杂性的增长</p>\n</li>\n<li><p>2.相关利益者的人数(识别需求冲突)</p>\n</li>\n<li><p>3.Web应用团队的人数</p>\n</li>\n<li><p>4.一起工作以前该Web应用团队成员的级别</p>\n</li>\n<li><p>5.组织成功的程度直接依赖Web应用的成功</p>\n</li>\n</ul>\n<h4 id=\"需求建模的输入\"><a href=\"#需求建模的输入\" class=\"headerlink\" title=\"需求建模的输入\"></a>需求建模的输入</h4><p>需求建模输入的表现形式</p>\n<ul>\n<li><p>自然语言描述</p>\n</li>\n<li><p>概要大纲</p>\n</li>\n<li><p>草图</p>\n</li>\n<li><p>其它非正式形式</p>\n</li>\n</ul>\n<h4 id=\"需求建模的输出\"><a href=\"#需求建模的输出\" class=\"headerlink\" title=\"需求建模的输出\"></a>需求建模的输出</h4><p>5种主要的模型类型</p>\n<ul>\n<li><p>内容模型：包括文本、图表和图像、视频和音频数据</p>\n</li>\n<li><p>交互模式：描述了用户与Web应用系统采用了哪种交互方式</p>\n</li>\n<li><p>功能模式：定义了将用于Web应用系统内容并描述其他处理功能的操作，这些处理功能不依赖于内容却是最终用户所必需的</p>\n</li>\n<li><p>导航模式：为Web应用系统定义所有导航策略</p>\n</li>\n<li><p>配置模型：描述Web应用系统所在的环境和基础设施</p>\n</li>\n</ul>\n<h4 id=\"Web应用系统内容建模\"><a href=\"#Web应用系统内容建模\" class=\"headerlink\" title=\"Web应用系统内容建模\"></a>Web应用系统内容建模</h4><p>内容对象是呈现给最终用户具有汇聚信息的所有条目</p>\n<p>数据树分析内容对象图示：</p>\n<p><img src=\"https://i.loli.net/2019/05/22/5ce4b66a2918a47029.jpg\" alt></p>\n<h4 id=\"Web应用系统的交互模型\"><a href=\"#Web应用系统的交互模型\" class=\"headerlink\" title=\"Web应用系统的交互模型\"></a>Web应用系统的交互模型</h4><p>交互模型可以由下面的一种或多种组成：</p>\n<ul>\n<li><p>1.用例</p>\n</li>\n<li><p>2.顺序图</p>\n</li>\n<li><p>3.状态图</p>\n</li>\n<li><p>4.用户界面原型</p>\n</li>\n</ul>\n<p>一般使用用例就行，对于复杂的情况需要使用顺序图和状态图，甚至用户界面原型</p>\n<h4 id=\"Web应用系统的功能模型\"><a href=\"#Web应用系统的功能模型\" class=\"headerlink\" title=\"Web应用系统的功能模型\"></a>Web应用系统的功能模型</h4><p>功能模型描述Web应用系统的两个处理元素，每个处理元素代表抽象过程的不同层次</p>\n<ul>\n<li><p>1.用户可观察到的功能有Web应用系统传递给最终用户的</p>\n</li>\n<li><p>2.分析类中的操作实现与类相关的行为</p>\n</li>\n</ul>\n<p>在功能模型创建的过程中，如果存在着潜在的复杂的行为，可以使用活动图进行分析</p>\n<h4 id=\"Web应用系统的配置模型\"><a href=\"#Web应用系统的配置模型\" class=\"headerlink\" title=\"Web应用系统的配置模型\"></a>Web应用系统的配置模型</h4><p>配置较为复杂时，使用UML部署图</p>\n<h4 id=\"导航建模\"><a href=\"#导航建模\" class=\"headerlink\" title=\"导航建模\"></a>导航建模</h4><p>具体情况具体分析</p>"},{"title":"软件工程-08_设计概念","date":"2019-05-23T21:56:23.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于软件设计概念的文章</font></center>\n\n<!--more-->\n\n# 设计概念\n\n## 软件工程中的设计\n\n一旦对软件需求进行分析和建模，软件设计就开始了\n\n软件设计是建模活动的最后一个软件工程活动，接下来就是构造阶段。\n\n![](https://i.loli.net/2019/05/23/5ce6300696e6711905.png)\n\n设计一定要保证-----**质量**\n\n## 设计过程\n\n设计过程：迭代\n\n#### 软件质量指导原则和属性\n\n**设计的质量指导原则**\n\n* 1.设计应该有的结构\n\n    * a.已经使用可识别的体系结构风格或模式创建\n\n    * b.由展示出良好设计特征的构件构成\n\n    * c.能够以演化的方式实现，从而便于实现和测试\n\n* 2.设计应该模块化\n\n* 3.设计应该包含数据、体系结构、接口和构件的清晰表示\n\n* 4.设计应导出数据结构，这些数据结构适用于要实现的类，并从可识别的数据模式提取\n\n* 5.设计应导出显示独立功能特征的构件\n\n* 6.设计应导出接口，这些接口降低了构件之间以及与外部环境连接的复杂性\n\n* 7.设计的导出应根据软件需求分析过程中获取的信息采用可重复的方法进行\n\n* 8.应使用能够有效传达其意义的表示法来表达设计\n\n**质量属性FURPS**\n\n* 1.功能性(functionality)\n\n* 2.易用性(usability)\n\n* 3.可靠性(reliability)\n\n* 4.性能(performance)\n\n* 5.可支持性(supportability)\n\n#### 软件设计的演化\n\n无论软件设计如何演化，都有一些共同的特征\n\n* 1.将需求模型转化为设计表示的方法\n\n* 2.表示功能性构件及它们之间接口的表示法\n\n* 3.精华和分割的启发式方法\n\n* 4.质量评估的指导原则\n\n```md\n通用设计任务集\n    1.检查信息域模型，并为数据对象及其属性设计恰当的数据结构\n    2.使用分析模型，选择一种使用于软件的体系结构风格\n    3.将分析模型分割为若干个设计子系统，并在体系结构内分配这些子系统：\n      确保每个子系统是功能内聚的。\n      设计子系统接口。\n      为每个子系统分配分析类或功能。\n    4.创建一系列的设计类或构件：\n      将每个分析类描述转化为设计类\n      根据设计标准检查每个设计类，考虑继承问题\n      定义与每个设计类相关的方法和消息\n      评估设计类或子系统，并为这些类或子系统选择设计模式\n      评审设计类，并在需要时修改\n    5.设计外部系统或设备所需要的所有接口\n    6.设计用户接口：\n      评审任务分析的结果\n      基于用户场景详细说明活动序列\n      创建接口的行为模型\n      定义接口对象、控制机制\n      评审接口设计，并根据需要进行修改\n    7.进行构件级设计\n      在相对较低的抽象层次上详细地说明所有算法\n      精华每个构件的接口\n      定义构件级的数据结构\n      评审每个构件并修正所有已发现的错误\n    8.开发部署模型\n```\n\n## 设计概念\n\n设计概念提供应用更加复杂设计方法的基础，每种方法可以回答的问题：\n\n* 使用什么标准将软件分割为独立的构件\n\n* 功能和数据结构细节如何从软件的概念表示中分离出来\n\n* 定义软件设计技术质量的统一标准是什么\n\n#### 抽象\n\n过程抽象\n\n* 具有明确和有限的指令序列，只体现功能，不显示细节，例如“开门”，“开”所隐藏的一系列过程并不体现出来\n\n数据抽象\n\n* 描述数据对象的冠名数据集合。例如“开门”，“开”是动词，不会携带数据，但“门”是携带数据的，例如“门”的类型，转动方向，门的大小等\n\n#### 体系结构\n\n简单解释\n\n* 可以把体系结构理解为模块的结构或组织，以及模块交互的形式和所用数据的结构\n\n广泛解释\n\n* 主要系统元素及其交互\n\n？？？？？？？\n\n#### 模式\n\n解决重复方案\n\n* 模式是否适用于当前的工作\n\n* 模式是否能够复用\n\n* 模式是否能够用于指导开发一个类似的、但是功能或结构不同的模式\n\n#### 关注点分离\n\n将复杂问题分解为可以独立解决和优化的若干块，分而治之\n\n#### 模块化\n\n模块化的划分不能无限制的划分，划分太多就会集合麻烦，划分太少就会功能复杂\n\n#### 信息隐蔽\n\n每个模块对其它所有模块都隐藏自己的设计决策。模块应该规定并设计成为在模块中包含的信息(算法和数据)不被不需要这些信息的其它模块访问\n\n#### 功能独立\n\n就是做到模块的高内聚、低耦合\n\n#### 求精\n\n逐步求精：自顶向下的设计策略，一个逐渐细化的过程\n\n#### 方面\n\n解决问题：需求B必须在需求A满足的情况下才能进行\n\n#### 重构\n\n一种简化构件的设计，其实就是重新组装\n\n#### 面向对象的设计概念\n\n设计中遵循面向对象思想\n\n#### 设计类\n\n* 1.通过提供设计细节精华分析类，这些设计细节将促成类的实现\n\n* 2.实现支持业务解决方案的软件基础设施\n\n5种不同类型的设计类\n\n* 1.用户接口类：人-机交互\n\n* 2.业务域类：业务的属性和服务\n\n* 3.过程类：实现完整的管理业务所必须的低层业务抽象\n\n* 4.持久类：数据库\n\n* 5.系统类：软件管理和控制功能\n\n类应当有的特性\n\n* 1.完整性和充分性：完整的属性和方法\n\n* 2.原始性：专注于关注实现类的某一个服务，一旦服务被实现，就不在提供完成同一事情的另外一个方法\n\n* 3.高内聚性\n\n* 4.低耦合性\n\n## 设计模型\n\n设计模型和分析模型\n\n![](https://i.loli.net/2019/05/23/5ce69c6daab5434499.png)\n\n#### 数据设计元素\n\n数据模型到数据库的转换，这个非常重要，但抽象程度更高\n\n#### 体系结构设计元素\n\n软件的体系结构设计等效于房屋的平面图\n\n体系结构模型的来源：\n\n* 关于将要构建的软件的应用域信息\n\n* 特定的需要模型元素，如数据流图或分析类、现有问题中它们的关系和协作\n\n* 体系结构风格和模式的可获得性\n\n#### 接口设计元素\n\n软件的接口设计相当于一组房屋的门、窗和外部设施的详细绘图\n\n接口设计有3个重要的元素\n\n* 1.用户界面\n\n* 2.和其它系统、设备、网络和其它信息生成者或使用者的外部接口\n\n* 3.各种设计构件之间的内部接口\n\n#### 构件级设计元素\n\n构件级设计相当于一个房屋中每个房间的一组详图。这些图描绘了每个房间内的布线和管道、电器插座和墙上开关、水龙头、水池、淋浴、浴盆、下水道\n\n#### 部署级设计元素\n\n部署级设计元素指明软件功能和子系统将如何在支持软件的物理计算环境内分布\n\n\n","source":"_posts/2019-05-23-08_软件工程.md","raw":"---\ntitle: 软件工程-08_设计概念\ndate: 2019-05-23 21:56:23\ncategories: \n- 软件工程\ntags: \n- 软件\n- 设计\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于软件设计概念的文章</font></center>\n\n<!--more-->\n\n# 设计概念\n\n## 软件工程中的设计\n\n一旦对软件需求进行分析和建模，软件设计就开始了\n\n软件设计是建模活动的最后一个软件工程活动，接下来就是构造阶段。\n\n![](https://i.loli.net/2019/05/23/5ce6300696e6711905.png)\n\n设计一定要保证-----**质量**\n\n## 设计过程\n\n设计过程：迭代\n\n#### 软件质量指导原则和属性\n\n**设计的质量指导原则**\n\n* 1.设计应该有的结构\n\n    * a.已经使用可识别的体系结构风格或模式创建\n\n    * b.由展示出良好设计特征的构件构成\n\n    * c.能够以演化的方式实现，从而便于实现和测试\n\n* 2.设计应该模块化\n\n* 3.设计应该包含数据、体系结构、接口和构件的清晰表示\n\n* 4.设计应导出数据结构，这些数据结构适用于要实现的类，并从可识别的数据模式提取\n\n* 5.设计应导出显示独立功能特征的构件\n\n* 6.设计应导出接口，这些接口降低了构件之间以及与外部环境连接的复杂性\n\n* 7.设计的导出应根据软件需求分析过程中获取的信息采用可重复的方法进行\n\n* 8.应使用能够有效传达其意义的表示法来表达设计\n\n**质量属性FURPS**\n\n* 1.功能性(functionality)\n\n* 2.易用性(usability)\n\n* 3.可靠性(reliability)\n\n* 4.性能(performance)\n\n* 5.可支持性(supportability)\n\n#### 软件设计的演化\n\n无论软件设计如何演化，都有一些共同的特征\n\n* 1.将需求模型转化为设计表示的方法\n\n* 2.表示功能性构件及它们之间接口的表示法\n\n* 3.精华和分割的启发式方法\n\n* 4.质量评估的指导原则\n\n```md\n通用设计任务集\n    1.检查信息域模型，并为数据对象及其属性设计恰当的数据结构\n    2.使用分析模型，选择一种使用于软件的体系结构风格\n    3.将分析模型分割为若干个设计子系统，并在体系结构内分配这些子系统：\n      确保每个子系统是功能内聚的。\n      设计子系统接口。\n      为每个子系统分配分析类或功能。\n    4.创建一系列的设计类或构件：\n      将每个分析类描述转化为设计类\n      根据设计标准检查每个设计类，考虑继承问题\n      定义与每个设计类相关的方法和消息\n      评估设计类或子系统，并为这些类或子系统选择设计模式\n      评审设计类，并在需要时修改\n    5.设计外部系统或设备所需要的所有接口\n    6.设计用户接口：\n      评审任务分析的结果\n      基于用户场景详细说明活动序列\n      创建接口的行为模型\n      定义接口对象、控制机制\n      评审接口设计，并根据需要进行修改\n    7.进行构件级设计\n      在相对较低的抽象层次上详细地说明所有算法\n      精华每个构件的接口\n      定义构件级的数据结构\n      评审每个构件并修正所有已发现的错误\n    8.开发部署模型\n```\n\n## 设计概念\n\n设计概念提供应用更加复杂设计方法的基础，每种方法可以回答的问题：\n\n* 使用什么标准将软件分割为独立的构件\n\n* 功能和数据结构细节如何从软件的概念表示中分离出来\n\n* 定义软件设计技术质量的统一标准是什么\n\n#### 抽象\n\n过程抽象\n\n* 具有明确和有限的指令序列，只体现功能，不显示细节，例如“开门”，“开”所隐藏的一系列过程并不体现出来\n\n数据抽象\n\n* 描述数据对象的冠名数据集合。例如“开门”，“开”是动词，不会携带数据，但“门”是携带数据的，例如“门”的类型，转动方向，门的大小等\n\n#### 体系结构\n\n简单解释\n\n* 可以把体系结构理解为模块的结构或组织，以及模块交互的形式和所用数据的结构\n\n广泛解释\n\n* 主要系统元素及其交互\n\n？？？？？？？\n\n#### 模式\n\n解决重复方案\n\n* 模式是否适用于当前的工作\n\n* 模式是否能够复用\n\n* 模式是否能够用于指导开发一个类似的、但是功能或结构不同的模式\n\n#### 关注点分离\n\n将复杂问题分解为可以独立解决和优化的若干块，分而治之\n\n#### 模块化\n\n模块化的划分不能无限制的划分，划分太多就会集合麻烦，划分太少就会功能复杂\n\n#### 信息隐蔽\n\n每个模块对其它所有模块都隐藏自己的设计决策。模块应该规定并设计成为在模块中包含的信息(算法和数据)不被不需要这些信息的其它模块访问\n\n#### 功能独立\n\n就是做到模块的高内聚、低耦合\n\n#### 求精\n\n逐步求精：自顶向下的设计策略，一个逐渐细化的过程\n\n#### 方面\n\n解决问题：需求B必须在需求A满足的情况下才能进行\n\n#### 重构\n\n一种简化构件的设计，其实就是重新组装\n\n#### 面向对象的设计概念\n\n设计中遵循面向对象思想\n\n#### 设计类\n\n* 1.通过提供设计细节精华分析类，这些设计细节将促成类的实现\n\n* 2.实现支持业务解决方案的软件基础设施\n\n5种不同类型的设计类\n\n* 1.用户接口类：人-机交互\n\n* 2.业务域类：业务的属性和服务\n\n* 3.过程类：实现完整的管理业务所必须的低层业务抽象\n\n* 4.持久类：数据库\n\n* 5.系统类：软件管理和控制功能\n\n类应当有的特性\n\n* 1.完整性和充分性：完整的属性和方法\n\n* 2.原始性：专注于关注实现类的某一个服务，一旦服务被实现，就不在提供完成同一事情的另外一个方法\n\n* 3.高内聚性\n\n* 4.低耦合性\n\n## 设计模型\n\n设计模型和分析模型\n\n![](https://i.loli.net/2019/05/23/5ce69c6daab5434499.png)\n\n#### 数据设计元素\n\n数据模型到数据库的转换，这个非常重要，但抽象程度更高\n\n#### 体系结构设计元素\n\n软件的体系结构设计等效于房屋的平面图\n\n体系结构模型的来源：\n\n* 关于将要构建的软件的应用域信息\n\n* 特定的需要模型元素，如数据流图或分析类、现有问题中它们的关系和协作\n\n* 体系结构风格和模式的可获得性\n\n#### 接口设计元素\n\n软件的接口设计相当于一组房屋的门、窗和外部设施的详细绘图\n\n接口设计有3个重要的元素\n\n* 1.用户界面\n\n* 2.和其它系统、设备、网络和其它信息生成者或使用者的外部接口\n\n* 3.各种设计构件之间的内部接口\n\n#### 构件级设计元素\n\n构件级设计相当于一个房屋中每个房间的一组详图。这些图描绘了每个房间内的布线和管道、电器插座和墙上开关、水龙头、水池、淋浴、浴盆、下水道\n\n#### 部署级设计元素\n\n部署级设计元素指明软件功能和子系统将如何在支持软件的物理计算环境内分布\n\n\n","slug":"2019-05-23-08_软件工程","published":1,"updated":"2019-08-10T04:35:46.725Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v0000t54tn4pwrvqk5","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件设计概念的文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"设计概念\"><a href=\"#设计概念\" class=\"headerlink\" title=\"设计概念\"></a>设计概念</h1><h2 id=\"软件工程中的设计\"><a href=\"#软件工程中的设计\" class=\"headerlink\" title=\"软件工程中的设计\"></a>软件工程中的设计</h2><p>一旦对软件需求进行分析和建模，软件设计就开始了</p>\n<p>软件设计是建模活动的最后一个软件工程活动，接下来就是构造阶段。</p>\n<p><img src=\"https://i.loli.net/2019/05/23/5ce6300696e6711905.png\" alt></p>\n<p>设计一定要保证—–<strong>质量</strong></p>\n<h2 id=\"设计过程\"><a href=\"#设计过程\" class=\"headerlink\" title=\"设计过程\"></a>设计过程</h2><p>设计过程：迭代</p>\n<h4 id=\"软件质量指导原则和属性\"><a href=\"#软件质量指导原则和属性\" class=\"headerlink\" title=\"软件质量指导原则和属性\"></a>软件质量指导原则和属性</h4><p><strong>设计的质量指导原则</strong></p>\n<ul>\n<li><p>1.设计应该有的结构</p>\n<ul>\n<li><p>a.已经使用可识别的体系结构风格或模式创建</p>\n</li>\n<li><p>b.由展示出良好设计特征的构件构成</p>\n</li>\n<li><p>c.能够以演化的方式实现，从而便于实现和测试</p>\n</li>\n</ul>\n</li>\n<li><p>2.设计应该模块化</p>\n</li>\n<li><p>3.设计应该包含数据、体系结构、接口和构件的清晰表示</p>\n</li>\n<li><p>4.设计应导出数据结构，这些数据结构适用于要实现的类，并从可识别的数据模式提取</p>\n</li>\n<li><p>5.设计应导出显示独立功能特征的构件</p>\n</li>\n<li><p>6.设计应导出接口，这些接口降低了构件之间以及与外部环境连接的复杂性</p>\n</li>\n<li><p>7.设计的导出应根据软件需求分析过程中获取的信息采用可重复的方法进行</p>\n</li>\n<li><p>8.应使用能够有效传达其意义的表示法来表达设计</p>\n</li>\n</ul>\n<p><strong>质量属性FURPS</strong></p>\n<ul>\n<li><p>1.功能性(functionality)</p>\n</li>\n<li><p>2.易用性(usability)</p>\n</li>\n<li><p>3.可靠性(reliability)</p>\n</li>\n<li><p>4.性能(performance)</p>\n</li>\n<li><p>5.可支持性(supportability)</p>\n</li>\n</ul>\n<h4 id=\"软件设计的演化\"><a href=\"#软件设计的演化\" class=\"headerlink\" title=\"软件设计的演化\"></a>软件设计的演化</h4><p>无论软件设计如何演化，都有一些共同的特征</p>\n<ul>\n<li><p>1.将需求模型转化为设计表示的方法</p>\n</li>\n<li><p>2.表示功能性构件及它们之间接口的表示法</p>\n</li>\n<li><p>3.精华和分割的启发式方法</p>\n</li>\n<li><p>4.质量评估的指导原则</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通用设计任务集</span><br><span class=\"line\"><span class=\"code\">    1.检查信息域模型，并为数据对象及其属性设计恰当的数据结构</span></span><br><span class=\"line\"><span class=\"code\">    2.使用分析模型，选择一种使用于软件的体系结构风格</span></span><br><span class=\"line\"><span class=\"code\">    3.将分析模型分割为若干个设计子系统，并在体系结构内分配这些子系统：</span></span><br><span class=\"line\"><span class=\"code\">      确保每个子系统是功能内聚的。</span></span><br><span class=\"line\"><span class=\"code\">      设计子系统接口。</span></span><br><span class=\"line\"><span class=\"code\">      为每个子系统分配分析类或功能。</span></span><br><span class=\"line\"><span class=\"code\">    4.创建一系列的设计类或构件：</span></span><br><span class=\"line\"><span class=\"code\">      将每个分析类描述转化为设计类</span></span><br><span class=\"line\"><span class=\"code\">      根据设计标准检查每个设计类，考虑继承问题</span></span><br><span class=\"line\"><span class=\"code\">      定义与每个设计类相关的方法和消息</span></span><br><span class=\"line\"><span class=\"code\">      评估设计类或子系统，并为这些类或子系统选择设计模式</span></span><br><span class=\"line\"><span class=\"code\">      评审设计类，并在需要时修改</span></span><br><span class=\"line\"><span class=\"code\">    5.设计外部系统或设备所需要的所有接口</span></span><br><span class=\"line\"><span class=\"code\">    6.设计用户接口：</span></span><br><span class=\"line\"><span class=\"code\">      评审任务分析的结果</span></span><br><span class=\"line\"><span class=\"code\">      基于用户场景详细说明活动序列</span></span><br><span class=\"line\"><span class=\"code\">      创建接口的行为模型</span></span><br><span class=\"line\"><span class=\"code\">      定义接口对象、控制机制</span></span><br><span class=\"line\"><span class=\"code\">      评审接口设计，并根据需要进行修改</span></span><br><span class=\"line\"><span class=\"code\">    7.进行构件级设计</span></span><br><span class=\"line\"><span class=\"code\">      在相对较低的抽象层次上详细地说明所有算法</span></span><br><span class=\"line\"><span class=\"code\">      精华每个构件的接口</span></span><br><span class=\"line\"><span class=\"code\">      定义构件级的数据结构</span></span><br><span class=\"line\"><span class=\"code\">      评审每个构件并修正所有已发现的错误</span></span><br><span class=\"line\"><span class=\"code\">    8.开发部署模型</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"设计概念-1\"><a href=\"#设计概念-1\" class=\"headerlink\" title=\"设计概念\"></a>设计概念</h2><p>设计概念提供应用更加复杂设计方法的基础，每种方法可以回答的问题：</p>\n<ul>\n<li><p>使用什么标准将软件分割为独立的构件</p>\n</li>\n<li><p>功能和数据结构细节如何从软件的概念表示中分离出来</p>\n</li>\n<li><p>定义软件设计技术质量的统一标准是什么</p>\n</li>\n</ul>\n<h4 id=\"抽象\"><a href=\"#抽象\" class=\"headerlink\" title=\"抽象\"></a>抽象</h4><p>过程抽象</p>\n<ul>\n<li>具有明确和有限的指令序列，只体现功能，不显示细节，例如“开门”，“开”所隐藏的一系列过程并不体现出来</li>\n</ul>\n<p>数据抽象</p>\n<ul>\n<li>描述数据对象的冠名数据集合。例如“开门”，“开”是动词，不会携带数据，但“门”是携带数据的，例如“门”的类型，转动方向，门的大小等</li>\n</ul>\n<h4 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h4><p>简单解释</p>\n<ul>\n<li>可以把体系结构理解为模块的结构或组织，以及模块交互的形式和所用数据的结构</li>\n</ul>\n<p>广泛解释</p>\n<ul>\n<li>主要系统元素及其交互</li>\n</ul>\n<p>？？？？？？？</p>\n<h4 id=\"模式\"><a href=\"#模式\" class=\"headerlink\" title=\"模式\"></a>模式</h4><p>解决重复方案</p>\n<ul>\n<li><p>模式是否适用于当前的工作</p>\n</li>\n<li><p>模式是否能够复用</p>\n</li>\n<li><p>模式是否能够用于指导开发一个类似的、但是功能或结构不同的模式</p>\n</li>\n</ul>\n<h4 id=\"关注点分离\"><a href=\"#关注点分离\" class=\"headerlink\" title=\"关注点分离\"></a>关注点分离</h4><p>将复杂问题分解为可以独立解决和优化的若干块，分而治之</p>\n<h4 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h4><p>模块化的划分不能无限制的划分，划分太多就会集合麻烦，划分太少就会功能复杂</p>\n<h4 id=\"信息隐蔽\"><a href=\"#信息隐蔽\" class=\"headerlink\" title=\"信息隐蔽\"></a>信息隐蔽</h4><p>每个模块对其它所有模块都隐藏自己的设计决策。模块应该规定并设计成为在模块中包含的信息(算法和数据)不被不需要这些信息的其它模块访问</p>\n<h4 id=\"功能独立\"><a href=\"#功能独立\" class=\"headerlink\" title=\"功能独立\"></a>功能独立</h4><p>就是做到模块的高内聚、低耦合</p>\n<h4 id=\"求精\"><a href=\"#求精\" class=\"headerlink\" title=\"求精\"></a>求精</h4><p>逐步求精：自顶向下的设计策略，一个逐渐细化的过程</p>\n<h4 id=\"方面\"><a href=\"#方面\" class=\"headerlink\" title=\"方面\"></a>方面</h4><p>解决问题：需求B必须在需求A满足的情况下才能进行</p>\n<h4 id=\"重构\"><a href=\"#重构\" class=\"headerlink\" title=\"重构\"></a>重构</h4><p>一种简化构件的设计，其实就是重新组装</p>\n<h4 id=\"面向对象的设计概念\"><a href=\"#面向对象的设计概念\" class=\"headerlink\" title=\"面向对象的设计概念\"></a>面向对象的设计概念</h4><p>设计中遵循面向对象思想</p>\n<h4 id=\"设计类\"><a href=\"#设计类\" class=\"headerlink\" title=\"设计类\"></a>设计类</h4><ul>\n<li><p>1.通过提供设计细节精华分析类，这些设计细节将促成类的实现</p>\n</li>\n<li><p>2.实现支持业务解决方案的软件基础设施</p>\n</li>\n</ul>\n<p>5种不同类型的设计类</p>\n<ul>\n<li><p>1.用户接口类：人-机交互</p>\n</li>\n<li><p>2.业务域类：业务的属性和服务</p>\n</li>\n<li><p>3.过程类：实现完整的管理业务所必须的低层业务抽象</p>\n</li>\n<li><p>4.持久类：数据库</p>\n</li>\n<li><p>5.系统类：软件管理和控制功能</p>\n</li>\n</ul>\n<p>类应当有的特性</p>\n<ul>\n<li><p>1.完整性和充分性：完整的属性和方法</p>\n</li>\n<li><p>2.原始性：专注于关注实现类的某一个服务，一旦服务被实现，就不在提供完成同一事情的另外一个方法</p>\n</li>\n<li><p>3.高内聚性</p>\n</li>\n<li><p>4.低耦合性</p>\n</li>\n</ul>\n<h2 id=\"设计模型\"><a href=\"#设计模型\" class=\"headerlink\" title=\"设计模型\"></a>设计模型</h2><p>设计模型和分析模型</p>\n<p><img src=\"https://i.loli.net/2019/05/23/5ce69c6daab5434499.png\" alt></p>\n<h4 id=\"数据设计元素\"><a href=\"#数据设计元素\" class=\"headerlink\" title=\"数据设计元素\"></a>数据设计元素</h4><p>数据模型到数据库的转换，这个非常重要，但抽象程度更高</p>\n<h4 id=\"体系结构设计元素\"><a href=\"#体系结构设计元素\" class=\"headerlink\" title=\"体系结构设计元素\"></a>体系结构设计元素</h4><p>软件的体系结构设计等效于房屋的平面图</p>\n<p>体系结构模型的来源：</p>\n<ul>\n<li><p>关于将要构建的软件的应用域信息</p>\n</li>\n<li><p>特定的需要模型元素，如数据流图或分析类、现有问题中它们的关系和协作</p>\n</li>\n<li><p>体系结构风格和模式的可获得性</p>\n</li>\n</ul>\n<h4 id=\"接口设计元素\"><a href=\"#接口设计元素\" class=\"headerlink\" title=\"接口设计元素\"></a>接口设计元素</h4><p>软件的接口设计相当于一组房屋的门、窗和外部设施的详细绘图</p>\n<p>接口设计有3个重要的元素</p>\n<ul>\n<li><p>1.用户界面</p>\n</li>\n<li><p>2.和其它系统、设备、网络和其它信息生成者或使用者的外部接口</p>\n</li>\n<li><p>3.各种设计构件之间的内部接口</p>\n</li>\n</ul>\n<h4 id=\"构件级设计元素\"><a href=\"#构件级设计元素\" class=\"headerlink\" title=\"构件级设计元素\"></a>构件级设计元素</h4><p>构件级设计相当于一个房屋中每个房间的一组详图。这些图描绘了每个房间内的布线和管道、电器插座和墙上开关、水龙头、水池、淋浴、浴盆、下水道</p>\n<h4 id=\"部署级设计元素\"><a href=\"#部署级设计元素\" class=\"headerlink\" title=\"部署级设计元素\"></a>部署级设计元素</h4><p>部署级设计元素指明软件功能和子系统将如何在支持软件的物理计算环境内分布</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件设计概念的文章</font></center>","more":"<h1 id=\"设计概念\"><a href=\"#设计概念\" class=\"headerlink\" title=\"设计概念\"></a>设计概念</h1><h2 id=\"软件工程中的设计\"><a href=\"#软件工程中的设计\" class=\"headerlink\" title=\"软件工程中的设计\"></a>软件工程中的设计</h2><p>一旦对软件需求进行分析和建模，软件设计就开始了</p>\n<p>软件设计是建模活动的最后一个软件工程活动，接下来就是构造阶段。</p>\n<p><img src=\"https://i.loli.net/2019/05/23/5ce6300696e6711905.png\" alt></p>\n<p>设计一定要保证—–<strong>质量</strong></p>\n<h2 id=\"设计过程\"><a href=\"#设计过程\" class=\"headerlink\" title=\"设计过程\"></a>设计过程</h2><p>设计过程：迭代</p>\n<h4 id=\"软件质量指导原则和属性\"><a href=\"#软件质量指导原则和属性\" class=\"headerlink\" title=\"软件质量指导原则和属性\"></a>软件质量指导原则和属性</h4><p><strong>设计的质量指导原则</strong></p>\n<ul>\n<li><p>1.设计应该有的结构</p>\n<ul>\n<li><p>a.已经使用可识别的体系结构风格或模式创建</p>\n</li>\n<li><p>b.由展示出良好设计特征的构件构成</p>\n</li>\n<li><p>c.能够以演化的方式实现，从而便于实现和测试</p>\n</li>\n</ul>\n</li>\n<li><p>2.设计应该模块化</p>\n</li>\n<li><p>3.设计应该包含数据、体系结构、接口和构件的清晰表示</p>\n</li>\n<li><p>4.设计应导出数据结构，这些数据结构适用于要实现的类，并从可识别的数据模式提取</p>\n</li>\n<li><p>5.设计应导出显示独立功能特征的构件</p>\n</li>\n<li><p>6.设计应导出接口，这些接口降低了构件之间以及与外部环境连接的复杂性</p>\n</li>\n<li><p>7.设计的导出应根据软件需求分析过程中获取的信息采用可重复的方法进行</p>\n</li>\n<li><p>8.应使用能够有效传达其意义的表示法来表达设计</p>\n</li>\n</ul>\n<p><strong>质量属性FURPS</strong></p>\n<ul>\n<li><p>1.功能性(functionality)</p>\n</li>\n<li><p>2.易用性(usability)</p>\n</li>\n<li><p>3.可靠性(reliability)</p>\n</li>\n<li><p>4.性能(performance)</p>\n</li>\n<li><p>5.可支持性(supportability)</p>\n</li>\n</ul>\n<h4 id=\"软件设计的演化\"><a href=\"#软件设计的演化\" class=\"headerlink\" title=\"软件设计的演化\"></a>软件设计的演化</h4><p>无论软件设计如何演化，都有一些共同的特征</p>\n<ul>\n<li><p>1.将需求模型转化为设计表示的方法</p>\n</li>\n<li><p>2.表示功能性构件及它们之间接口的表示法</p>\n</li>\n<li><p>3.精华和分割的启发式方法</p>\n</li>\n<li><p>4.质量评估的指导原则</p>\n</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通用设计任务集</span><br><span class=\"line\"><span class=\"code\">    1.检查信息域模型，并为数据对象及其属性设计恰当的数据结构</span></span><br><span class=\"line\"><span class=\"code\">    2.使用分析模型，选择一种使用于软件的体系结构风格</span></span><br><span class=\"line\"><span class=\"code\">    3.将分析模型分割为若干个设计子系统，并在体系结构内分配这些子系统：</span></span><br><span class=\"line\"><span class=\"code\">      确保每个子系统是功能内聚的。</span></span><br><span class=\"line\"><span class=\"code\">      设计子系统接口。</span></span><br><span class=\"line\"><span class=\"code\">      为每个子系统分配分析类或功能。</span></span><br><span class=\"line\"><span class=\"code\">    4.创建一系列的设计类或构件：</span></span><br><span class=\"line\"><span class=\"code\">      将每个分析类描述转化为设计类</span></span><br><span class=\"line\"><span class=\"code\">      根据设计标准检查每个设计类，考虑继承问题</span></span><br><span class=\"line\"><span class=\"code\">      定义与每个设计类相关的方法和消息</span></span><br><span class=\"line\"><span class=\"code\">      评估设计类或子系统，并为这些类或子系统选择设计模式</span></span><br><span class=\"line\"><span class=\"code\">      评审设计类，并在需要时修改</span></span><br><span class=\"line\"><span class=\"code\">    5.设计外部系统或设备所需要的所有接口</span></span><br><span class=\"line\"><span class=\"code\">    6.设计用户接口：</span></span><br><span class=\"line\"><span class=\"code\">      评审任务分析的结果</span></span><br><span class=\"line\"><span class=\"code\">      基于用户场景详细说明活动序列</span></span><br><span class=\"line\"><span class=\"code\">      创建接口的行为模型</span></span><br><span class=\"line\"><span class=\"code\">      定义接口对象、控制机制</span></span><br><span class=\"line\"><span class=\"code\">      评审接口设计，并根据需要进行修改</span></span><br><span class=\"line\"><span class=\"code\">    7.进行构件级设计</span></span><br><span class=\"line\"><span class=\"code\">      在相对较低的抽象层次上详细地说明所有算法</span></span><br><span class=\"line\"><span class=\"code\">      精华每个构件的接口</span></span><br><span class=\"line\"><span class=\"code\">      定义构件级的数据结构</span></span><br><span class=\"line\"><span class=\"code\">      评审每个构件并修正所有已发现的错误</span></span><br><span class=\"line\"><span class=\"code\">    8.开发部署模型</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"设计概念-1\"><a href=\"#设计概念-1\" class=\"headerlink\" title=\"设计概念\"></a>设计概念</h2><p>设计概念提供应用更加复杂设计方法的基础，每种方法可以回答的问题：</p>\n<ul>\n<li><p>使用什么标准将软件分割为独立的构件</p>\n</li>\n<li><p>功能和数据结构细节如何从软件的概念表示中分离出来</p>\n</li>\n<li><p>定义软件设计技术质量的统一标准是什么</p>\n</li>\n</ul>\n<h4 id=\"抽象\"><a href=\"#抽象\" class=\"headerlink\" title=\"抽象\"></a>抽象</h4><p>过程抽象</p>\n<ul>\n<li>具有明确和有限的指令序列，只体现功能，不显示细节，例如“开门”，“开”所隐藏的一系列过程并不体现出来</li>\n</ul>\n<p>数据抽象</p>\n<ul>\n<li>描述数据对象的冠名数据集合。例如“开门”，“开”是动词，不会携带数据，但“门”是携带数据的，例如“门”的类型，转动方向，门的大小等</li>\n</ul>\n<h4 id=\"体系结构\"><a href=\"#体系结构\" class=\"headerlink\" title=\"体系结构\"></a>体系结构</h4><p>简单解释</p>\n<ul>\n<li>可以把体系结构理解为模块的结构或组织，以及模块交互的形式和所用数据的结构</li>\n</ul>\n<p>广泛解释</p>\n<ul>\n<li>主要系统元素及其交互</li>\n</ul>\n<p>？？？？？？？</p>\n<h4 id=\"模式\"><a href=\"#模式\" class=\"headerlink\" title=\"模式\"></a>模式</h4><p>解决重复方案</p>\n<ul>\n<li><p>模式是否适用于当前的工作</p>\n</li>\n<li><p>模式是否能够复用</p>\n</li>\n<li><p>模式是否能够用于指导开发一个类似的、但是功能或结构不同的模式</p>\n</li>\n</ul>\n<h4 id=\"关注点分离\"><a href=\"#关注点分离\" class=\"headerlink\" title=\"关注点分离\"></a>关注点分离</h4><p>将复杂问题分解为可以独立解决和优化的若干块，分而治之</p>\n<h4 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h4><p>模块化的划分不能无限制的划分，划分太多就会集合麻烦，划分太少就会功能复杂</p>\n<h4 id=\"信息隐蔽\"><a href=\"#信息隐蔽\" class=\"headerlink\" title=\"信息隐蔽\"></a>信息隐蔽</h4><p>每个模块对其它所有模块都隐藏自己的设计决策。模块应该规定并设计成为在模块中包含的信息(算法和数据)不被不需要这些信息的其它模块访问</p>\n<h4 id=\"功能独立\"><a href=\"#功能独立\" class=\"headerlink\" title=\"功能独立\"></a>功能独立</h4><p>就是做到模块的高内聚、低耦合</p>\n<h4 id=\"求精\"><a href=\"#求精\" class=\"headerlink\" title=\"求精\"></a>求精</h4><p>逐步求精：自顶向下的设计策略，一个逐渐细化的过程</p>\n<h4 id=\"方面\"><a href=\"#方面\" class=\"headerlink\" title=\"方面\"></a>方面</h4><p>解决问题：需求B必须在需求A满足的情况下才能进行</p>\n<h4 id=\"重构\"><a href=\"#重构\" class=\"headerlink\" title=\"重构\"></a>重构</h4><p>一种简化构件的设计，其实就是重新组装</p>\n<h4 id=\"面向对象的设计概念\"><a href=\"#面向对象的设计概念\" class=\"headerlink\" title=\"面向对象的设计概念\"></a>面向对象的设计概念</h4><p>设计中遵循面向对象思想</p>\n<h4 id=\"设计类\"><a href=\"#设计类\" class=\"headerlink\" title=\"设计类\"></a>设计类</h4><ul>\n<li><p>1.通过提供设计细节精华分析类，这些设计细节将促成类的实现</p>\n</li>\n<li><p>2.实现支持业务解决方案的软件基础设施</p>\n</li>\n</ul>\n<p>5种不同类型的设计类</p>\n<ul>\n<li><p>1.用户接口类：人-机交互</p>\n</li>\n<li><p>2.业务域类：业务的属性和服务</p>\n</li>\n<li><p>3.过程类：实现完整的管理业务所必须的低层业务抽象</p>\n</li>\n<li><p>4.持久类：数据库</p>\n</li>\n<li><p>5.系统类：软件管理和控制功能</p>\n</li>\n</ul>\n<p>类应当有的特性</p>\n<ul>\n<li><p>1.完整性和充分性：完整的属性和方法</p>\n</li>\n<li><p>2.原始性：专注于关注实现类的某一个服务，一旦服务被实现，就不在提供完成同一事情的另外一个方法</p>\n</li>\n<li><p>3.高内聚性</p>\n</li>\n<li><p>4.低耦合性</p>\n</li>\n</ul>\n<h2 id=\"设计模型\"><a href=\"#设计模型\" class=\"headerlink\" title=\"设计模型\"></a>设计模型</h2><p>设计模型和分析模型</p>\n<p><img src=\"https://i.loli.net/2019/05/23/5ce69c6daab5434499.png\" alt></p>\n<h4 id=\"数据设计元素\"><a href=\"#数据设计元素\" class=\"headerlink\" title=\"数据设计元素\"></a>数据设计元素</h4><p>数据模型到数据库的转换，这个非常重要，但抽象程度更高</p>\n<h4 id=\"体系结构设计元素\"><a href=\"#体系结构设计元素\" class=\"headerlink\" title=\"体系结构设计元素\"></a>体系结构设计元素</h4><p>软件的体系结构设计等效于房屋的平面图</p>\n<p>体系结构模型的来源：</p>\n<ul>\n<li><p>关于将要构建的软件的应用域信息</p>\n</li>\n<li><p>特定的需要模型元素，如数据流图或分析类、现有问题中它们的关系和协作</p>\n</li>\n<li><p>体系结构风格和模式的可获得性</p>\n</li>\n</ul>\n<h4 id=\"接口设计元素\"><a href=\"#接口设计元素\" class=\"headerlink\" title=\"接口设计元素\"></a>接口设计元素</h4><p>软件的接口设计相当于一组房屋的门、窗和外部设施的详细绘图</p>\n<p>接口设计有3个重要的元素</p>\n<ul>\n<li><p>1.用户界面</p>\n</li>\n<li><p>2.和其它系统、设备、网络和其它信息生成者或使用者的外部接口</p>\n</li>\n<li><p>3.各种设计构件之间的内部接口</p>\n</li>\n</ul>\n<h4 id=\"构件级设计元素\"><a href=\"#构件级设计元素\" class=\"headerlink\" title=\"构件级设计元素\"></a>构件级设计元素</h4><p>构件级设计相当于一个房屋中每个房间的一组详图。这些图描绘了每个房间内的布线和管道、电器插座和墙上开关、水龙头、水池、淋浴、浴盆、下水道</p>\n<h4 id=\"部署级设计元素\"><a href=\"#部署级设计元素\" class=\"headerlink\" title=\"部署级设计元素\"></a>部署级设计元素</h4><p>部署级设计元素指明软件功能和子系统将如何在支持软件的物理计算环境内分布</p>"},{"title":"Next添加分类和标签","date":"2019-06-01T17:12:29.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于如何在Next主题下添加分类和标签的教程</font></center>\n\n<!--more-->\n\n# 如何在next主题下添加分类和标签\n\n## 添加分类页面\n\n1.新建页面\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==categories==\n\n```shell\n$ cd your-hexo-site\n$ hexo new page categories\n```\n\n2.设置页面类型\n\n编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下：\n\n```shell\ntitle: 分类\ndate: 2019-06-1 12:00:04\ntype: \"categories\"\n---\n```\n\n3.修改菜单\n\n在菜单中添加链接。编辑 ==主题配置文件== ， 添加 categories 到 menu 中，如下:\n\n```shell\nmenu:\n  home: /\n  archives: /archives\n  分类: /categories\n```\n\n## 添加标签页面\n\n1.新建页面\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==tags==\n\n```shell\n$ cd your-hexo-site\n$ hexo new page tags\n```\n\n2.设置页面类型\n\n编辑刚新建的页面，将页面的 type 设置为 tags ，主题将自动为这个页面显示分类。页面内容如下：\n\n```shell\ntitle: 标签\ndate: 2019-06-1 12:39:04\ntype: \"tags\"\n---\n```\n\n3.修改菜单\n\n在菜单中添加链接。编辑 ==主题配置文件== ， 添加 tags 到 menu 中，如下:\n\n```shell\nmenu:\n  home: /\n  archives: /archives\n  标签: /tags\n```\n\n## 创建模版\n\n在编写md文件时如果总是要填写上述步骤很麻烦，所以建立一个模板时最好的选择，这个模板就在`\\scaffolds\\post.md`\n\n我使用的模板：\n\n```shell\n---\ntitle: {{ title }}\ndate: {{ date }}\ncategories:\ntags:\n---\n```\n\n* title是文章标题\n\n* data是编写日期。这两个都会自动生成(如果使用命令行创建md文件的话)\n\n* categories中填写分类\n\n* tags中填写标签\n\n例如我使用命令行：\n\n```shell\n$ hexo new \"hexo在next主题下如何添加分类和标签\"\n```\n\n就会在`\\source_posts`目录下生成一个hexo在next主题下如何添加分类和标签的md文件，显示如下\n\n```shell\n---\ntitle: hexo在next主题下如何添加分类和标签\ndate: 2018-10-06 22:38:18\ncategories:\n- 前端\n  - 搭建博客\ntags:\n- 搭建博客\n- 前端\n- next\n- 备忘\n---\n```\n\n随便写点信息，刷新一下hexo，部署一下，在我们的博客上就会看到我们新写的文章了。\n\n\n","source":"_posts/2019-06-01-Next添加分类和标签.md","raw":"---\ntitle: Next添加分类和标签\ndate: 2019-06-01 17:12:29\ncategories: \n- Hexo博客\ntags:\n- hexo\n- next\n- 分类\n- 标签\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于如何在Next主题下添加分类和标签的教程</font></center>\n\n<!--more-->\n\n# 如何在next主题下添加分类和标签\n\n## 添加分类页面\n\n1.新建页面\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==categories==\n\n```shell\n$ cd your-hexo-site\n$ hexo new page categories\n```\n\n2.设置页面类型\n\n编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下：\n\n```shell\ntitle: 分类\ndate: 2019-06-1 12:00:04\ntype: \"categories\"\n---\n```\n\n3.修改菜单\n\n在菜单中添加链接。编辑 ==主题配置文件== ， 添加 categories 到 menu 中，如下:\n\n```shell\nmenu:\n  home: /\n  archives: /archives\n  分类: /categories\n```\n\n## 添加标签页面\n\n1.新建页面\n\n在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==tags==\n\n```shell\n$ cd your-hexo-site\n$ hexo new page tags\n```\n\n2.设置页面类型\n\n编辑刚新建的页面，将页面的 type 设置为 tags ，主题将自动为这个页面显示分类。页面内容如下：\n\n```shell\ntitle: 标签\ndate: 2019-06-1 12:39:04\ntype: \"tags\"\n---\n```\n\n3.修改菜单\n\n在菜单中添加链接。编辑 ==主题配置文件== ， 添加 tags 到 menu 中，如下:\n\n```shell\nmenu:\n  home: /\n  archives: /archives\n  标签: /tags\n```\n\n## 创建模版\n\n在编写md文件时如果总是要填写上述步骤很麻烦，所以建立一个模板时最好的选择，这个模板就在`\\scaffolds\\post.md`\n\n我使用的模板：\n\n```shell\n---\ntitle: {{ title }}\ndate: {{ date }}\ncategories:\ntags:\n---\n```\n\n* title是文章标题\n\n* data是编写日期。这两个都会自动生成(如果使用命令行创建md文件的话)\n\n* categories中填写分类\n\n* tags中填写标签\n\n例如我使用命令行：\n\n```shell\n$ hexo new \"hexo在next主题下如何添加分类和标签\"\n```\n\n就会在`\\source_posts`目录下生成一个hexo在next主题下如何添加分类和标签的md文件，显示如下\n\n```shell\n---\ntitle: hexo在next主题下如何添加分类和标签\ndate: 2018-10-06 22:38:18\ncategories:\n- 前端\n  - 搭建博客\ntags:\n- 搭建博客\n- 前端\n- next\n- 备忘\n---\n```\n\n随便写点信息，刷新一下hexo，部署一下，在我们的博客上就会看到我们新写的文章了。\n\n\n","slug":"2019-06-01-Next添加分类和标签","published":1,"updated":"2019-08-10T04:35:46.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v1000w54tnpq3rla38","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于如何在Next主题下添加分类和标签的教程</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"如何在next主题下添加分类和标签\"><a href=\"#如何在next主题下添加分类和标签\" class=\"headerlink\" title=\"如何在next主题下添加分类和标签\"></a>如何在next主题下添加分类和标签</h1><h2 id=\"添加分类页面\"><a href=\"#添加分类页面\" class=\"headerlink\" title=\"添加分类页面\"></a>添加分类页面</h2><p>1.新建页面</p>\n<p>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==categories==</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd your-hexo-site</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>2.设置页面类型</p>\n<p>编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2019-06-1 12:00:04</span><br><span class=\"line\">type: \"categories\"</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>3.修改菜单</p>\n<p>在菜单中添加链接。编辑 ==主题配置文件== ， 添加 categories 到 menu 中，如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  分类: /categories</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加标签页面\"><a href=\"#添加标签页面\" class=\"headerlink\" title=\"添加标签页面\"></a>添加标签页面</h2><p>1.新建页面</p>\n<p>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==tags==</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd your-hexo-site</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>2.设置页面类型</p>\n<p>编辑刚新建的页面，将页面的 type 设置为 tags ，主题将自动为这个页面显示分类。页面内容如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-06-1 12:39:04</span><br><span class=\"line\">type: \"tags\"</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>3.修改菜单</p>\n<p>在菜单中添加链接。编辑 ==主题配置文件== ， 添加 tags 到 menu 中，如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  标签: /tags</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建模版\"><a href=\"#创建模版\" class=\"headerlink\" title=\"创建模版\"></a>创建模版</h2><p>在编写md文件时如果总是要填写上述步骤很麻烦，所以建立一个模板时最好的选择，这个模板就在<code>\\scaffolds\\post.md</code></p>\n<p>我使用的模板：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>title是文章标题</p>\n</li>\n<li><p>data是编写日期。这两个都会自动生成(如果使用命令行创建md文件的话)</p>\n</li>\n<li><p>categories中填写分类</p>\n</li>\n<li><p>tags中填写标签</p>\n</li>\n</ul>\n<p>例如我使用命令行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hexo new \"hexo在next主题下如何添加分类和标签\"</span><br></pre></td></tr></table></figure>\n<p>就会在<code>\\source_posts</code>目录下生成一个hexo在next主题下如何添加分类和标签的md文件，显示如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo在next主题下如何添加分类和标签</span><br><span class=\"line\">date: 2018-10-06 22:38:18</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 前端</span><br><span class=\"line\">  - 搭建博客</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- 搭建博客</span><br><span class=\"line\">- 前端</span><br><span class=\"line\">- next</span><br><span class=\"line\">- 备忘</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>随便写点信息，刷新一下hexo，部署一下，在我们的博客上就会看到我们新写的文章了。</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于如何在Next主题下添加分类和标签的教程</font></center>","more":"<h1 id=\"如何在next主题下添加分类和标签\"><a href=\"#如何在next主题下添加分类和标签\" class=\"headerlink\" title=\"如何在next主题下添加分类和标签\"></a>如何在next主题下添加分类和标签</h1><h2 id=\"添加分类页面\"><a href=\"#添加分类页面\" class=\"headerlink\" title=\"添加分类页面\"></a>添加分类页面</h2><p>1.新建页面</p>\n<p>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==categories==</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd your-hexo-site</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo new page categories</span><br></pre></td></tr></table></figure>\n<p>2.设置页面类型</p>\n<p>编辑刚新建的页面，将页面的 type 设置为 categories ，主题将自动为这个页面显示分类。页面内容如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2019-06-1 12:00:04</span><br><span class=\"line\">type: \"categories\"</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>3.修改菜单</p>\n<p>在菜单中添加链接。编辑 ==主题配置文件== ， 添加 categories 到 menu 中，如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  分类: /categories</span><br></pre></td></tr></table></figure>\n<h2 id=\"添加标签页面\"><a href=\"#添加标签页面\" class=\"headerlink\" title=\"添加标签页面\"></a>添加标签页面</h2><p>1.新建页面</p>\n<p>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 ==tags==</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd your-hexo-site</span><br><span class=\"line\"><span class=\"meta\">$</span> hexo new page tags</span><br></pre></td></tr></table></figure>\n<p>2.设置页面类型</p>\n<p>编辑刚新建的页面，将页面的 type 设置为 tags ，主题将自动为这个页面显示分类。页面内容如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2019-06-1 12:39:04</span><br><span class=\"line\">type: \"tags\"</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>3.修改菜单</p>\n<p>在菜单中添加链接。编辑 ==主题配置文件== ， 添加 tags 到 menu 中，如下:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  标签: /tags</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建模版\"><a href=\"#创建模版\" class=\"headerlink\" title=\"创建模版\"></a>创建模版</h2><p>在编写md文件时如果总是要填写上述步骤很麻烦，所以建立一个模板时最好的选择，这个模板就在<code>\\scaffolds\\post.md</code></p>\n<p>我使用的模板：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: &#123;&#123; title &#125;&#125;</span><br><span class=\"line\">date: &#123;&#123; date &#125;&#125;</span><br><span class=\"line\">categories:</span><br><span class=\"line\">tags:</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>title是文章标题</p>\n</li>\n<li><p>data是编写日期。这两个都会自动生成(如果使用命令行创建md文件的话)</p>\n</li>\n<li><p>categories中填写分类</p>\n</li>\n<li><p>tags中填写标签</p>\n</li>\n</ul>\n<p>例如我使用命令行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hexo new \"hexo在next主题下如何添加分类和标签\"</span><br></pre></td></tr></table></figure>\n<p>就会在<code>\\source_posts</code>目录下生成一个hexo在next主题下如何添加分类和标签的md文件，显示如下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo在next主题下如何添加分类和标签</span><br><span class=\"line\">date: 2018-10-06 22:38:18</span><br><span class=\"line\">categories:</span><br><span class=\"line\">- 前端</span><br><span class=\"line\">  - 搭建博客</span><br><span class=\"line\">tags:</span><br><span class=\"line\">- 搭建博客</span><br><span class=\"line\">- 前端</span><br><span class=\"line\">- next</span><br><span class=\"line\">- 备忘</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<p>随便写点信息，刷新一下hexo，部署一下，在我们的博客上就会看到我们新写的文章了。</p>"},{"title":"hexo insert images","date":"2019-06-01T15:13:14.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于Hexo如何生成本地图片的教程</font></center>\n\n<!--more-->\n\n# hexo生成博文插入本地图片\n\n## 步骤\n\n把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true\n\n在你的hexo目录下执行这样一句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git\n\n等待一小段时间后，再运行hexo new \"xxxx\"来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 （当然也可以自己手动建）\n\n最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：\n\n`![你想输入的替代文字](xxxx/图片名.jpg)`\n\n> 注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。\n\n最后检查一下，hexo g生成页面后，进入public\\2017\\02\\26\\index.html文件中查看相关字段，可以发现，html标签内的语句是`<img src=\"2017/02/26/xxxx/图片名.jpg\">`，而不是`<img src=\"xxxx/图片名.jpg>`。这很重要，关乎你的网页是否可以真正加载你想插入的图片。\n\n## 遇到问题\n\n遇到没能成功显示的问题，查看网页，结果是 `<img src=\"2017/02/26/2017-02-23-c/图片名.jpg\">` 的形式，然后查看 hexo 的目录，发现路径是 /public/2017/02/26/c/a.jpg。\n\n之前在 md 文件中引用时写作：\n\n`![你想输入的替代文字](xxxx/图片名.jpg)`\n\n改为：\n\n`![](a.jpg)`\n\n就可以了。\n\n效果查看 这篇文章 的图片显示。\n\n## 为什么\n\n看上面的效果，出错原因是 /public/2017/02/26/c/ 文件夹中没有生成保存图片的同名文件夹，图片直接被拷贝到这个文件夹下了。\n\n突然想起从 jekyll 转移到 hexo 的时候更改过文章路径与标题解析方式…\n\n不知道有没有关联。\n\n## hexo 修改文章路径\n\n产生的链接和两条属性相关。\n\npermalink: :year/:month/:day/:title/ 链接格式\n\nnew_post_name: :title.md 解析标题方式\n\n之前文章的命名方式都是 YYYY-MM-DD-title （jekyll 的文章格式），比如文件 2018-05-30-hexo-image.md 。\n\nhexo 渲染时解析博文的标题为 2018-05-30-hexo-image 。\n\n当如上设置 permalink 后，路径就是 http://hqweay.cn/2018/05/30/2018-05-30-hexo-image/ 这样。\n\n时间出现了两次好诡异啊。\n\n可以修改 permalink： ：title/ ，链接就直接用标题来区分。\n\n效果是：http://hqweay.cn/2018-05-30-hexo-image/\n\n但是我想导入评论，链接最好和之前 jekyll 的一致。\n\n于是就想办法改改后面。\n\nhexo 提供了 new_post_name 。这条属性是定义 hexo 对文章标题的解析方式的。\n\n默认为 new_post_name: :title.md 。\n\n我们修改为 new_post_name: :year-:month-:day-:title.md 。\n\n对比文件命名，很容易理解。\n\n这样，hexo 就会把自动提取出文件的命名中的文章标题，而不是直接把文件的命名解析为标题。\n\n路径就为：\n\nhttp://hqweay.cn/2018/05/30/hexo-image/\n\n\n","source":"_posts/2019-06-01-hexo-insert-images.md","raw":"---\ntitle: hexo insert images\ndate: 2019-06-01 15:13:14\ncategories: \n- Hexo博客\ntags: \n- hexo\n- 生成\n- 本地图片\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于Hexo如何生成本地图片的教程</font></center>\n\n<!--more-->\n\n# hexo生成博文插入本地图片\n\n## 步骤\n\n把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true\n\n在你的hexo目录下执行这样一句话npm install hexo-asset-image --save，这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git\n\n等待一小段时间后，再运行hexo new \"xxxx\"来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 （当然也可以自己手动建）\n\n最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：\n\n`![你想输入的替代文字](xxxx/图片名.jpg)`\n\n> 注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。\n\n最后检查一下，hexo g生成页面后，进入public\\2017\\02\\26\\index.html文件中查看相关字段，可以发现，html标签内的语句是`<img src=\"2017/02/26/xxxx/图片名.jpg\">`，而不是`<img src=\"xxxx/图片名.jpg>`。这很重要，关乎你的网页是否可以真正加载你想插入的图片。\n\n## 遇到问题\n\n遇到没能成功显示的问题，查看网页，结果是 `<img src=\"2017/02/26/2017-02-23-c/图片名.jpg\">` 的形式，然后查看 hexo 的目录，发现路径是 /public/2017/02/26/c/a.jpg。\n\n之前在 md 文件中引用时写作：\n\n`![你想输入的替代文字](xxxx/图片名.jpg)`\n\n改为：\n\n`![](a.jpg)`\n\n就可以了。\n\n效果查看 这篇文章 的图片显示。\n\n## 为什么\n\n看上面的效果，出错原因是 /public/2017/02/26/c/ 文件夹中没有生成保存图片的同名文件夹，图片直接被拷贝到这个文件夹下了。\n\n突然想起从 jekyll 转移到 hexo 的时候更改过文章路径与标题解析方式…\n\n不知道有没有关联。\n\n## hexo 修改文章路径\n\n产生的链接和两条属性相关。\n\npermalink: :year/:month/:day/:title/ 链接格式\n\nnew_post_name: :title.md 解析标题方式\n\n之前文章的命名方式都是 YYYY-MM-DD-title （jekyll 的文章格式），比如文件 2018-05-30-hexo-image.md 。\n\nhexo 渲染时解析博文的标题为 2018-05-30-hexo-image 。\n\n当如上设置 permalink 后，路径就是 http://hqweay.cn/2018/05/30/2018-05-30-hexo-image/ 这样。\n\n时间出现了两次好诡异啊。\n\n可以修改 permalink： ：title/ ，链接就直接用标题来区分。\n\n效果是：http://hqweay.cn/2018-05-30-hexo-image/\n\n但是我想导入评论，链接最好和之前 jekyll 的一致。\n\n于是就想办法改改后面。\n\nhexo 提供了 new_post_name 。这条属性是定义 hexo 对文章标题的解析方式的。\n\n默认为 new_post_name: :title.md 。\n\n我们修改为 new_post_name: :year-:month-:day-:title.md 。\n\n对比文件命名，很容易理解。\n\n这样，hexo 就会把自动提取出文件的命名中的文章标题，而不是直接把文件的命名解析为标题。\n\n路径就为：\n\nhttp://hqweay.cn/2018/05/30/hexo-image/\n\n\n","slug":"2019-06-01-hexo-insert-images","published":1,"updated":"2019-08-10T04:35:46.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v2000z54tn21twiefn","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于Hexo如何生成本地图片的教程</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"hexo生成博文插入本地图片\"><a href=\"#hexo生成博文插入本地图片\" class=\"headerlink\" title=\"hexo生成博文插入本地图片\"></a>hexo生成博文插入本地图片</h1><h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</p>\n<p>在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git</p>\n<p>等待一小段时间后，再运行hexo new “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 （当然也可以自己手动建）</p>\n<p>最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：</p>\n<p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p>\n<blockquote>\n<p>注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</p>\n</blockquote>\n<p>最后检查一下，hexo g生成页面后，进入public\\2017\\02\\26\\index.html文件中查看相关字段，可以发现，html标签内的语句是<code>&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;</code>，而不是<code>&lt;img src=&quot;xxxx/图片名.jpg&gt;</code>。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><p>遇到没能成功显示的问题，查看网页，结果是 <code>&lt;img src=&quot;2017/02/26/2017-02-23-c/图片名.jpg&quot;&gt;</code> 的形式，然后查看 hexo 的目录，发现路径是 /public/2017/02/26/c/a.jpg。</p>\n<p>之前在 md 文件中引用时写作：</p>\n<p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p>\n<p>改为：</p>\n<p><code>![](a.jpg)</code></p>\n<p>就可以了。</p>\n<p>效果查看 这篇文章 的图片显示。</p>\n<h2 id=\"为什么\"><a href=\"#为什么\" class=\"headerlink\" title=\"为什么\"></a>为什么</h2><p>看上面的效果，出错原因是 /public/2017/02/26/c/ 文件夹中没有生成保存图片的同名文件夹，图片直接被拷贝到这个文件夹下了。</p>\n<p>突然想起从 jekyll 转移到 hexo 的时候更改过文章路径与标题解析方式…</p>\n<p>不知道有没有关联。</p>\n<h2 id=\"hexo-修改文章路径\"><a href=\"#hexo-修改文章路径\" class=\"headerlink\" title=\"hexo 修改文章路径\"></a>hexo 修改文章路径</h2><p>产生的链接和两条属性相关。</p>\n<p>permalink: :year/:month/:day/:title/ 链接格式</p>\n<p>new_post_name: :title.md 解析标题方式</p>\n<p>之前文章的命名方式都是 YYYY-MM-DD-title （jekyll 的文章格式），比如文件 2018-05-30-hexo-image.md 。</p>\n<p>hexo 渲染时解析博文的标题为 2018-05-30-hexo-image 。</p>\n<p>当如上设置 permalink 后，路径就是 <a href=\"http://hqweay.cn/2018/05/30/2018-05-30-hexo-image/\" target=\"_blank\" rel=\"noopener\">http://hqweay.cn/2018/05/30/2018-05-30-hexo-image/</a> 这样。</p>\n<p>时间出现了两次好诡异啊。</p>\n<p>可以修改 permalink： ：title/ ，链接就直接用标题来区分。</p>\n<p>效果是：<a href=\"http://hqweay.cn/2018-05-30-hexo-image/\" target=\"_blank\" rel=\"noopener\">http://hqweay.cn/2018-05-30-hexo-image/</a></p>\n<p>但是我想导入评论，链接最好和之前 jekyll 的一致。</p>\n<p>于是就想办法改改后面。</p>\n<p>hexo 提供了 new_post_name 。这条属性是定义 hexo 对文章标题的解析方式的。</p>\n<p>默认为 new_post_name: :title.md 。</p>\n<p>我们修改为 new_post_name: :year-:month-:day-:title.md 。</p>\n<p>对比文件命名，很容易理解。</p>\n<p>这样，hexo 就会把自动提取出文件的命名中的文章标题，而不是直接把文件的命名解析为标题。</p>\n<p>路径就为：</p>\n<p><a href=\"http://hqweay.cn/2018/05/30/hexo-image/\" target=\"_blank\" rel=\"noopener\">http://hqweay.cn/2018/05/30/hexo-image/</a></p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于Hexo如何生成本地图片的教程</font></center>","more":"<h1 id=\"hexo生成博文插入本地图片\"><a href=\"#hexo生成博文插入本地图片\" class=\"headerlink\" title=\"hexo生成博文插入本地图片\"></a>hexo生成博文插入本地图片</h1><h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><p>把主页配置文件_config.yml 里的post_asset_folder:这个选项设置为true</p>\n<p>在你的hexo目录下执行这样一句话npm install hexo-asset-image –save，这是下载安装一个可以上传本地图片的插件，来自dalao：dalao的git</p>\n<p>等待一小段时间后，再运行hexo new “xxxx”来生成md博文时，/source/_posts文件夹内除了xxxx.md文件还有一个同名的文件夹 （当然也可以自己手动建）</p>\n<p>最后在xxxx.md中想引入图片时，先把图片复制到xxxx这个文件夹中，然后只需要在xxxx.md中按照markdown的格式引入图片：</p>\n<p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p>\n<blockquote>\n<p>注意： xxxx是这个md文件的名字，也是同名文件夹的名字。只需要有文件夹名字即可，不需要有什么绝对路径。你想引入的图片就只需要放入xxxx这个文件夹内就好了，很像引用相对路径。</p>\n</blockquote>\n<p>最后检查一下，hexo g生成页面后，进入public\\2017\\02\\26\\index.html文件中查看相关字段，可以发现，html标签内的语句是<code>&lt;img src=&quot;2017/02/26/xxxx/图片名.jpg&quot;&gt;</code>，而不是<code>&lt;img src=&quot;xxxx/图片名.jpg&gt;</code>。这很重要，关乎你的网页是否可以真正加载你想插入的图片。</p>\n<h2 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h2><p>遇到没能成功显示的问题，查看网页，结果是 <code>&lt;img src=&quot;2017/02/26/2017-02-23-c/图片名.jpg&quot;&gt;</code> 的形式，然后查看 hexo 的目录，发现路径是 /public/2017/02/26/c/a.jpg。</p>\n<p>之前在 md 文件中引用时写作：</p>\n<p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p>\n<p>改为：</p>\n<p><code>![](a.jpg)</code></p>\n<p>就可以了。</p>\n<p>效果查看 这篇文章 的图片显示。</p>\n<h2 id=\"为什么\"><a href=\"#为什么\" class=\"headerlink\" title=\"为什么\"></a>为什么</h2><p>看上面的效果，出错原因是 /public/2017/02/26/c/ 文件夹中没有生成保存图片的同名文件夹，图片直接被拷贝到这个文件夹下了。</p>\n<p>突然想起从 jekyll 转移到 hexo 的时候更改过文章路径与标题解析方式…</p>\n<p>不知道有没有关联。</p>\n<h2 id=\"hexo-修改文章路径\"><a href=\"#hexo-修改文章路径\" class=\"headerlink\" title=\"hexo 修改文章路径\"></a>hexo 修改文章路径</h2><p>产生的链接和两条属性相关。</p>\n<p>permalink: :year/:month/:day/:title/ 链接格式</p>\n<p>new_post_name: :title.md 解析标题方式</p>\n<p>之前文章的命名方式都是 YYYY-MM-DD-title （jekyll 的文章格式），比如文件 2018-05-30-hexo-image.md 。</p>\n<p>hexo 渲染时解析博文的标题为 2018-05-30-hexo-image 。</p>\n<p>当如上设置 permalink 后，路径就是 <a href=\"http://hqweay.cn/2018/05/30/2018-05-30-hexo-image/\" target=\"_blank\" rel=\"noopener\">http://hqweay.cn/2018/05/30/2018-05-30-hexo-image/</a> 这样。</p>\n<p>时间出现了两次好诡异啊。</p>\n<p>可以修改 permalink： ：title/ ，链接就直接用标题来区分。</p>\n<p>效果是：<a href=\"http://hqweay.cn/2018-05-30-hexo-image/\" target=\"_blank\" rel=\"noopener\">http://hqweay.cn/2018-05-30-hexo-image/</a></p>\n<p>但是我想导入评论，链接最好和之前 jekyll 的一致。</p>\n<p>于是就想办法改改后面。</p>\n<p>hexo 提供了 new_post_name 。这条属性是定义 hexo 对文章标题的解析方式的。</p>\n<p>默认为 new_post_name: :title.md 。</p>\n<p>我们修改为 new_post_name: :year-:month-:day-:title.md 。</p>\n<p>对比文件命名，很容易理解。</p>\n<p>这样，hexo 就会把自动提取出文件的命名中的文章标题，而不是直接把文件的命名解析为标题。</p>\n<p>路径就为：</p>\n<p><a href=\"http://hqweay.cn/2018/05/30/hexo-image/\" target=\"_blank\" rel=\"noopener\">http://hqweay.cn/2018/05/30/hexo-image/</a></p>"},{"title":"软件工程-09_体系结构设计","date":"2019-05-25T14:49:32.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于软件体系结构的文章</font></center>\n\n<!--more-->\n\n# 体系结构设计\n\n## 软件体系结构\n\n#### 什么是体系结构\n\n程序或计算系统的软件体系结构是指系统的一个或者多个结构，它包括软件构件、构件的外部可见属性以及它们之间的相互关系\n\n体系结构并非可运行的软件，确切说，它是一种表达，能够：\n\n* 1.对设计在满足既定需求方面的有效性进行分析\n\n* 2.在设计变更相对容易的阶段，考虑体系结构可能的选择方案\n\n* 3.降低与软件构造相关的风险\n\n\"体系结构\"和\"设计\"的区别:类与对象之间的区别\n\n例如：使用Java和.NET对同一个项目进行设计，其设计方法是不一样的，但其体系结构是一样的。只有对一个项目的体系结构想的越明白，设计就越容易\n\n#### 体系结构为什么重要\n\n* 软件体系结构的表示有助于对计算机系统开发感兴趣的各方(利益相关者)开展交流\n\n* 体系结构突出了早期的设计决策，这些决策对随后所有的软件工程工作有深远的影响，同时对系统作为一个可运行实体的最后成功有重要作用\n\n* 体系结构“构建了一个相对小的、易于理解的模型，该模型描述了系统如何构成以及其构件如何一起工作”\n\n#### 体系结构描述\n\n不同利益相关者会从不同的角度理解体系结构，它是有不同的关注点驱动的，所以，体系结构描述实际上是一组体现系统不同视图的工作产品。体系结构应当考虑到每个利益相关者想要的东西\n\n#### 体系结构决策\n\n体系结构决策描述模版\n\n```md\n每个主要的体系结构决策可以被记录在案，以便以后评审，评审由想要理解已提出的体系结构描述的利益相关者进行。\n\n设计问题：描述将要解决的体系结构设计问题\n解决方案：陈述所选择的解决设计问题的方法\n分类：指定问题和解决方案陈述的分类(例如，数据设计、内容结构、构件结构、集成、介绍)\n假设：指出任何有助于指定决策的假设\n约束：指定任何有助于指定决策的环境约束(例如，技术标准、可用的模版、项目相关问题)\n候选方案：简要描述所考虑的体系结构设计候选方案，并描述为什么要摒弃这些方案\n争论：陈述你为什么选择了这种解决方案而不是其他的候选方案\n意义：指出制定决策对设计的影响。选择方案如何影响其他的体系结构设计问题？解决方案会在某种程度上约束设计吗？\n相关策略：其他记录的决策和该决策有什么相关性？\n相关关注点：其他需求和该决策有什么相关性？\n工作产品：指出体系结构描述中，决策会在哪里体现出来\n注释：参考可用来制定决策的其他团队的备忘录或文档\n```\n\n## 体系结构类型\n\n体系结构类型：如今社会软件设计常见的\n\n```md\n人工智能\n商业和非盈利的\n通信\n内容制作\n设备\n娱乐于运动\n金融\n游戏\n行政管理\n工业\n法律\n医疗\n军事\n操作系统\n平台\n科学\n工具\n运输\n实用程序\n```\n\n以上每种类别在如今社会中都已经形成了相应的体系结构，每种类别的具体分类要采用更具体的体系结构。例如：游戏，也分塔防游戏，益智游戏，战略游戏，枪战游戏\n\n## 体系结构风格\n\n由相关的体系结构风格就能理解系统的整体性质。这就像，我要盖个“茅草屋”，你在脑子里就能想到“茅草屋”的大概样子\n\n5种典型的基本体系结构\n\n```md\n功能结构：构件表示功能或实体，连接件表示接口。特性描述构件的特性和接口的组织\n\n实现结构：购进可以是包、类、对象、过程、函数、方法等所有在不同抽象层上打包的功能。连接件包括传递数据和控制、共享数据、“使用”以及“是一个实例”等能力。特性关注于结构实现时的质量特性(例如：可维护性、可重用性)\n\n并发结构：构件表示“并发单元”(并发任务或线程)。“关系”(连接件)包括同步于、优先级高于、发送数据到、运行必须有、运行不能有。与结构相关的特性包括优先级、抢先占有以及执行时间\n\n物理结构：类似于设计开发中的部署模型。构件是物理硬件，软件驻留在硬件上。连接件是硬件构件之间的接口。特性用来描述容量、带宽、性能和其他属性\n\n开发结构：该结构定义构件、工作产品以及软件工程过程中所需的其他信息源。连接件表示工作产品之间的关系。特性标识每项的特征\n```\n\n#### 体系结构风格的简单分类\n\n几种常见的体系结构\n\n* 以数据为中心的体系结构：核心是数据库\n\n![](https://i.loli.net/2019/05/24/5ce7940476b2124587.jpg)\n\n* 数据流体系结构\n\n![](https://i.loli.net/2019/05/24/5ce795ba19b1a61852.png)\n\n* 调用和返回体系结构\n\n    * 主程序/子程序体系结构：主程序调用一组构件，这些构件又调用其他构件\n\n    ![](https://i.loli.net/2019/05/24/5ce795c58014e26384.png)\n    \n    * 远程过程调用体系结构：主程序/子程序体系结构的构件分布在网络中的多台计算机上\n\n* 面向对象体系结构\n\n* 层次体系结构：参考MVC设计模式考虑\n\n#### 体系结构模式\n\n12章再讲\n\n#### 组织和求精\n\n体系结构设计的评估标准\n\n控制：\n\n```md\n在体系结构中如何管理控制？\n是否存在清晰的控制层次？\n如果存在，构件在控制层次中有什么作用？\n构件如何在系统中传递控制？\n构件间如何共享控制？\n控制的拓扑结构如何？\n控制是否同步或者构件操作是否异步？\n```\n\n数据\n\n```md\n构件间如何进行数据通信？\n数据流是否是连续地传递给系统，或数据对象是否是零散地传递给系统？\n数据传递的模式是什么(即，数据是从一个构件传递到另一个构件，还是数据被系统中的构件全局共享)？\n是否存在数据构件(如黑板或中心数据库)？如果存在，它们的作用是什么？\n功能构件如何和数据构件交互？\n数据构件是被动的还是主动的(即数据构件是否主动地和系统的其他构件交互)？\n数据和控制如何在系统中交互？\n```\n\n## 体系结构设计\n\n#### 系统环境的表示\n\n体系结构环境图的一般结构\n\n![](https://i.loli.net/2019/05/25/5ce8b5999ec5776790.png)\n\n由图所示，与目标系统(为该系统所开发的体系结构设计)交互的系统可以表示为：\n\n* 上级系统----这些系统把目标系统作为某些高层处理方案的一部分\n\n* 下级系统----这些系统被目标系统使用，并为完成目标系统的功能提供必要的数据和处理\n\n* 同级系统----这些系统在对等的基础上相互作用(即信息或者同级系统和目标系统产生，或者被目标系统和同级系统使用)\n\n* 参与者------通过产生和消耗必要处理所需的信息，实现与目标系统交互的实体(人，设备)\n\n每个外部实体都通过某一个接口(带阴影的小矩形)与目标系统进行通信\n\n#### 定义原型\n\n原型是表示核心抽象的类或模式\n\n原型包括：结点、探测器、指示器、控制器\n\n#### 将体系结构精华为构件\n\n一个将完整体系结构精华为构件的实例\n\n![](https://i.loli.net/2019/05/25/5ce8baaf5fbe956921.png)\n\n其中的每一个方框都是一个构件\n\n#### 描述系统实例\n\n将上文中的完整体系结构再进一步精华\n\n```md\n体系结构设计\n    目的：体系结构设计工具通过描述构件接口、依赖与联系以及交互作用来建立整体软件结构模型\n    机制：工具采用的机制多种多样。在大多数情况下，体系结构的设计能力是分析和设计建模自动化工具的一部分功能\n    代表性工具：\n    Adalon\n    ObjectiF\n    Rational Rose\n```\n\n## 评估可选的体系结构设计\n\n#### 体系结构权衡分析方法\n\n目的：验证设计的体系结构是否能用\n\n* 1.收集场景：开发一组用例，从用户角度描述系统\n\n* 2.引出需求、约束和环境描述：确保所有利益相关者问题都被处理\n\n* 3.描述那些已经被选择用于解决场景和需求的体系结构风格/模式：采用以下一种描述\n\n    * a.模块视图：分析带有构件的工作任务以及信息隐蔽获得的程度\n\n    * b.过程视图：分析系统性能\n\n    * c.数据流视图：分析体系结构满足功能需求的程度\n\n* 4.通过单独地考虑每个属性来评估质量属性：包括可靠性、性能、安全性、可维护性、灵活性、可测试性、可移植性、可复用性和互操作性\n\n* 5.针对特定的体系结构风格，确定质量属性对各种体系结构属性的敏感性：通过体系结构变更测试，受变更大的就是敏感点\n\n* 6.找第5步的敏感点，然后做成候选体系结构\n\n#### 体系结构复杂性\n\n体系结构的复杂性体现在体系结构中构件间的依赖关系，包括\n\n* 1.共享依赖：存在与使用相同资源的消费者或相同消费者生产的生产者之间的依赖关系\n\n* 2.流依赖：生产者和消费者之间的依赖\n\n* 3.约束依赖：一组活动间相关控制流上的约束\n\n#### 体系结构描述语言\n\n体系结构描述语言(architectural description language,ADL)提供了一种描述软件体系结构的语义和语法\n\nUML没有ADL完成，以下是5个ADL\n\n```md\nRapide:\nUniCon\nAesop\nWright\nAcme\n```\n\n## 使用数据流进行体系结构映射\n\n从DFD到软件体系结构的便捷的转化，转化由下述6个步骤的一部分完成\n\n* 1.建立信息流的类型\n\n* 2.标注流的边界\n\n* 3.将DFD映射到程序结构\n\n* 4.定义控制层级\n\n* 5.使用设计度量和启发式精华产生的结构\n\n* 6.求精华细化体系结构描述\n\n#### 变换映射\n\n将具有变换流特征的DFD映射为某个特定的体系结构风格，图示为SafeHome的安全例子\n\n**步骤1：评审基本系统模型**\n* DFD图从0层到1层的转换\n\n![](https://i.loli.net/2019/05/25/5ce8d5161de4998095.png)\n\n**步骤2：评审和精华软件的数据流图**\n* DFD图从1层到2层到转换\n\n![](https://i.loli.net/2019/05/25/5ce8d5200897a87808.png)\n\n**步骤3：确定DFD是否含有变换流或事物流特征**\n* DFD图从2层到3层的转换，这次转换要搞清楚数据流的输入和输出\n\n![](https://i.loli.net/2019/05/25/5ce8d5278ae5e31684.png)\n\n**步骤4：通过确定输入和输出流的边界，分离出变换中心**\n* 输入是信息从外部形式转内部形式，输出是信息从内部形式转外部形式\n流边界是指在流从外部转内部(或从内部转外部)的边界处\n\n![](https://i.loli.net/2019/05/25/5ce8d5301579c36594.png)\n\n**步骤5:完成“第一级分解”**\n* 以步骤4的边界处为界限进行第一级的分解\n\n![](https://i.loli.net/2019/05/25/5ce8d537c7e1e69811.png)\n\n**步骤6:完成“第二级分解”**\n* 将每个变换(泡泡)映射到体系结构中的相应模块，从变换中心的边界开始，沿输入路径和输出路径向外，将变换依次映射到软件结构的从属层。一般是一对一映射，有时会有多个泡泡合并为一个构件，或者一个泡泡分解为多个构件的情况。这步结束，就得到了第一次的迭代体系结构\n\n![](https://i.loli.net/2019/05/25/5ce8d53f85e5c49088.png)\n\n**步骤7:使用提高软件质量的设计启发式方法，精华第一次迭代得到的体系结构**\n* 精化第一次迭代得到的体系结构。对构件进行“分解”和“结合”\n\n![](https://i.loli.net/2019/05/25/5ce8d5468f2e424959.png)\n\n**最终逐渐精华的完善版**\n\n* 构件的和并和消除\n\n![](https://i.loli.net/2019/05/25/5ce8d6aec130c48135.png)\n\n#### 精华体系结构设计\n\n不能工作的“优化设计”是值得怀疑的\n\n设计求精应在满足有效模块要求的前提下尽量减少构件的数量，在充分满足信息需求的前提下尽量减少复杂的数据结构\n","source":"_posts/2019-05-25-09-软件工程.md","raw":"---\ntitle: 软件工程-09_体系结构设计\ndate: 2019-05-25 14:49:32\ncategories: \n- 软件工程\ntags: \n- 软件\n- 体系结构\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于软件体系结构的文章</font></center>\n\n<!--more-->\n\n# 体系结构设计\n\n## 软件体系结构\n\n#### 什么是体系结构\n\n程序或计算系统的软件体系结构是指系统的一个或者多个结构，它包括软件构件、构件的外部可见属性以及它们之间的相互关系\n\n体系结构并非可运行的软件，确切说，它是一种表达，能够：\n\n* 1.对设计在满足既定需求方面的有效性进行分析\n\n* 2.在设计变更相对容易的阶段，考虑体系结构可能的选择方案\n\n* 3.降低与软件构造相关的风险\n\n\"体系结构\"和\"设计\"的区别:类与对象之间的区别\n\n例如：使用Java和.NET对同一个项目进行设计，其设计方法是不一样的，但其体系结构是一样的。只有对一个项目的体系结构想的越明白，设计就越容易\n\n#### 体系结构为什么重要\n\n* 软件体系结构的表示有助于对计算机系统开发感兴趣的各方(利益相关者)开展交流\n\n* 体系结构突出了早期的设计决策，这些决策对随后所有的软件工程工作有深远的影响，同时对系统作为一个可运行实体的最后成功有重要作用\n\n* 体系结构“构建了一个相对小的、易于理解的模型，该模型描述了系统如何构成以及其构件如何一起工作”\n\n#### 体系结构描述\n\n不同利益相关者会从不同的角度理解体系结构，它是有不同的关注点驱动的，所以，体系结构描述实际上是一组体现系统不同视图的工作产品。体系结构应当考虑到每个利益相关者想要的东西\n\n#### 体系结构决策\n\n体系结构决策描述模版\n\n```md\n每个主要的体系结构决策可以被记录在案，以便以后评审，评审由想要理解已提出的体系结构描述的利益相关者进行。\n\n设计问题：描述将要解决的体系结构设计问题\n解决方案：陈述所选择的解决设计问题的方法\n分类：指定问题和解决方案陈述的分类(例如，数据设计、内容结构、构件结构、集成、介绍)\n假设：指出任何有助于指定决策的假设\n约束：指定任何有助于指定决策的环境约束(例如，技术标准、可用的模版、项目相关问题)\n候选方案：简要描述所考虑的体系结构设计候选方案，并描述为什么要摒弃这些方案\n争论：陈述你为什么选择了这种解决方案而不是其他的候选方案\n意义：指出制定决策对设计的影响。选择方案如何影响其他的体系结构设计问题？解决方案会在某种程度上约束设计吗？\n相关策略：其他记录的决策和该决策有什么相关性？\n相关关注点：其他需求和该决策有什么相关性？\n工作产品：指出体系结构描述中，决策会在哪里体现出来\n注释：参考可用来制定决策的其他团队的备忘录或文档\n```\n\n## 体系结构类型\n\n体系结构类型：如今社会软件设计常见的\n\n```md\n人工智能\n商业和非盈利的\n通信\n内容制作\n设备\n娱乐于运动\n金融\n游戏\n行政管理\n工业\n法律\n医疗\n军事\n操作系统\n平台\n科学\n工具\n运输\n实用程序\n```\n\n以上每种类别在如今社会中都已经形成了相应的体系结构，每种类别的具体分类要采用更具体的体系结构。例如：游戏，也分塔防游戏，益智游戏，战略游戏，枪战游戏\n\n## 体系结构风格\n\n由相关的体系结构风格就能理解系统的整体性质。这就像，我要盖个“茅草屋”，你在脑子里就能想到“茅草屋”的大概样子\n\n5种典型的基本体系结构\n\n```md\n功能结构：构件表示功能或实体，连接件表示接口。特性描述构件的特性和接口的组织\n\n实现结构：购进可以是包、类、对象、过程、函数、方法等所有在不同抽象层上打包的功能。连接件包括传递数据和控制、共享数据、“使用”以及“是一个实例”等能力。特性关注于结构实现时的质量特性(例如：可维护性、可重用性)\n\n并发结构：构件表示“并发单元”(并发任务或线程)。“关系”(连接件)包括同步于、优先级高于、发送数据到、运行必须有、运行不能有。与结构相关的特性包括优先级、抢先占有以及执行时间\n\n物理结构：类似于设计开发中的部署模型。构件是物理硬件，软件驻留在硬件上。连接件是硬件构件之间的接口。特性用来描述容量、带宽、性能和其他属性\n\n开发结构：该结构定义构件、工作产品以及软件工程过程中所需的其他信息源。连接件表示工作产品之间的关系。特性标识每项的特征\n```\n\n#### 体系结构风格的简单分类\n\n几种常见的体系结构\n\n* 以数据为中心的体系结构：核心是数据库\n\n![](https://i.loli.net/2019/05/24/5ce7940476b2124587.jpg)\n\n* 数据流体系结构\n\n![](https://i.loli.net/2019/05/24/5ce795ba19b1a61852.png)\n\n* 调用和返回体系结构\n\n    * 主程序/子程序体系结构：主程序调用一组构件，这些构件又调用其他构件\n\n    ![](https://i.loli.net/2019/05/24/5ce795c58014e26384.png)\n    \n    * 远程过程调用体系结构：主程序/子程序体系结构的构件分布在网络中的多台计算机上\n\n* 面向对象体系结构\n\n* 层次体系结构：参考MVC设计模式考虑\n\n#### 体系结构模式\n\n12章再讲\n\n#### 组织和求精\n\n体系结构设计的评估标准\n\n控制：\n\n```md\n在体系结构中如何管理控制？\n是否存在清晰的控制层次？\n如果存在，构件在控制层次中有什么作用？\n构件如何在系统中传递控制？\n构件间如何共享控制？\n控制的拓扑结构如何？\n控制是否同步或者构件操作是否异步？\n```\n\n数据\n\n```md\n构件间如何进行数据通信？\n数据流是否是连续地传递给系统，或数据对象是否是零散地传递给系统？\n数据传递的模式是什么(即，数据是从一个构件传递到另一个构件，还是数据被系统中的构件全局共享)？\n是否存在数据构件(如黑板或中心数据库)？如果存在，它们的作用是什么？\n功能构件如何和数据构件交互？\n数据构件是被动的还是主动的(即数据构件是否主动地和系统的其他构件交互)？\n数据和控制如何在系统中交互？\n```\n\n## 体系结构设计\n\n#### 系统环境的表示\n\n体系结构环境图的一般结构\n\n![](https://i.loli.net/2019/05/25/5ce8b5999ec5776790.png)\n\n由图所示，与目标系统(为该系统所开发的体系结构设计)交互的系统可以表示为：\n\n* 上级系统----这些系统把目标系统作为某些高层处理方案的一部分\n\n* 下级系统----这些系统被目标系统使用，并为完成目标系统的功能提供必要的数据和处理\n\n* 同级系统----这些系统在对等的基础上相互作用(即信息或者同级系统和目标系统产生，或者被目标系统和同级系统使用)\n\n* 参与者------通过产生和消耗必要处理所需的信息，实现与目标系统交互的实体(人，设备)\n\n每个外部实体都通过某一个接口(带阴影的小矩形)与目标系统进行通信\n\n#### 定义原型\n\n原型是表示核心抽象的类或模式\n\n原型包括：结点、探测器、指示器、控制器\n\n#### 将体系结构精华为构件\n\n一个将完整体系结构精华为构件的实例\n\n![](https://i.loli.net/2019/05/25/5ce8baaf5fbe956921.png)\n\n其中的每一个方框都是一个构件\n\n#### 描述系统实例\n\n将上文中的完整体系结构再进一步精华\n\n```md\n体系结构设计\n    目的：体系结构设计工具通过描述构件接口、依赖与联系以及交互作用来建立整体软件结构模型\n    机制：工具采用的机制多种多样。在大多数情况下，体系结构的设计能力是分析和设计建模自动化工具的一部分功能\n    代表性工具：\n    Adalon\n    ObjectiF\n    Rational Rose\n```\n\n## 评估可选的体系结构设计\n\n#### 体系结构权衡分析方法\n\n目的：验证设计的体系结构是否能用\n\n* 1.收集场景：开发一组用例，从用户角度描述系统\n\n* 2.引出需求、约束和环境描述：确保所有利益相关者问题都被处理\n\n* 3.描述那些已经被选择用于解决场景和需求的体系结构风格/模式：采用以下一种描述\n\n    * a.模块视图：分析带有构件的工作任务以及信息隐蔽获得的程度\n\n    * b.过程视图：分析系统性能\n\n    * c.数据流视图：分析体系结构满足功能需求的程度\n\n* 4.通过单独地考虑每个属性来评估质量属性：包括可靠性、性能、安全性、可维护性、灵活性、可测试性、可移植性、可复用性和互操作性\n\n* 5.针对特定的体系结构风格，确定质量属性对各种体系结构属性的敏感性：通过体系结构变更测试，受变更大的就是敏感点\n\n* 6.找第5步的敏感点，然后做成候选体系结构\n\n#### 体系结构复杂性\n\n体系结构的复杂性体现在体系结构中构件间的依赖关系，包括\n\n* 1.共享依赖：存在与使用相同资源的消费者或相同消费者生产的生产者之间的依赖关系\n\n* 2.流依赖：生产者和消费者之间的依赖\n\n* 3.约束依赖：一组活动间相关控制流上的约束\n\n#### 体系结构描述语言\n\n体系结构描述语言(architectural description language,ADL)提供了一种描述软件体系结构的语义和语法\n\nUML没有ADL完成，以下是5个ADL\n\n```md\nRapide:\nUniCon\nAesop\nWright\nAcme\n```\n\n## 使用数据流进行体系结构映射\n\n从DFD到软件体系结构的便捷的转化，转化由下述6个步骤的一部分完成\n\n* 1.建立信息流的类型\n\n* 2.标注流的边界\n\n* 3.将DFD映射到程序结构\n\n* 4.定义控制层级\n\n* 5.使用设计度量和启发式精华产生的结构\n\n* 6.求精华细化体系结构描述\n\n#### 变换映射\n\n将具有变换流特征的DFD映射为某个特定的体系结构风格，图示为SafeHome的安全例子\n\n**步骤1：评审基本系统模型**\n* DFD图从0层到1层的转换\n\n![](https://i.loli.net/2019/05/25/5ce8d5161de4998095.png)\n\n**步骤2：评审和精华软件的数据流图**\n* DFD图从1层到2层到转换\n\n![](https://i.loli.net/2019/05/25/5ce8d5200897a87808.png)\n\n**步骤3：确定DFD是否含有变换流或事物流特征**\n* DFD图从2层到3层的转换，这次转换要搞清楚数据流的输入和输出\n\n![](https://i.loli.net/2019/05/25/5ce8d5278ae5e31684.png)\n\n**步骤4：通过确定输入和输出流的边界，分离出变换中心**\n* 输入是信息从外部形式转内部形式，输出是信息从内部形式转外部形式\n流边界是指在流从外部转内部(或从内部转外部)的边界处\n\n![](https://i.loli.net/2019/05/25/5ce8d5301579c36594.png)\n\n**步骤5:完成“第一级分解”**\n* 以步骤4的边界处为界限进行第一级的分解\n\n![](https://i.loli.net/2019/05/25/5ce8d537c7e1e69811.png)\n\n**步骤6:完成“第二级分解”**\n* 将每个变换(泡泡)映射到体系结构中的相应模块，从变换中心的边界开始，沿输入路径和输出路径向外，将变换依次映射到软件结构的从属层。一般是一对一映射，有时会有多个泡泡合并为一个构件，或者一个泡泡分解为多个构件的情况。这步结束，就得到了第一次的迭代体系结构\n\n![](https://i.loli.net/2019/05/25/5ce8d53f85e5c49088.png)\n\n**步骤7:使用提高软件质量的设计启发式方法，精华第一次迭代得到的体系结构**\n* 精化第一次迭代得到的体系结构。对构件进行“分解”和“结合”\n\n![](https://i.loli.net/2019/05/25/5ce8d5468f2e424959.png)\n\n**最终逐渐精华的完善版**\n\n* 构件的和并和消除\n\n![](https://i.loli.net/2019/05/25/5ce8d6aec130c48135.png)\n\n#### 精华体系结构设计\n\n不能工作的“优化设计”是值得怀疑的\n\n设计求精应在满足有效模块要求的前提下尽量减少构件的数量，在充分满足信息需求的前提下尽量减少复杂的数据结构\n","slug":"2019-05-25-09-软件工程","published":1,"updated":"2019-08-10T04:35:46.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v3001254tnl2dqc5bj","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件体系结构的文章</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"体系结构设计\"><a href=\"#体系结构设计\" class=\"headerlink\" title=\"体系结构设计\"></a>体系结构设计</h1><h2 id=\"软件体系结构\"><a href=\"#软件体系结构\" class=\"headerlink\" title=\"软件体系结构\"></a>软件体系结构</h2><h4 id=\"什么是体系结构\"><a href=\"#什么是体系结构\" class=\"headerlink\" title=\"什么是体系结构\"></a>什么是体系结构</h4><p>程序或计算系统的软件体系结构是指系统的一个或者多个结构，它包括软件构件、构件的外部可见属性以及它们之间的相互关系</p>\n<p>体系结构并非可运行的软件，确切说，它是一种表达，能够：</p>\n<ul>\n<li><p>1.对设计在满足既定需求方面的有效性进行分析</p>\n</li>\n<li><p>2.在设计变更相对容易的阶段，考虑体系结构可能的选择方案</p>\n</li>\n<li><p>3.降低与软件构造相关的风险</p>\n</li>\n</ul>\n<p>“体系结构”和”设计”的区别:类与对象之间的区别</p>\n<p>例如：使用Java和.NET对同一个项目进行设计，其设计方法是不一样的，但其体系结构是一样的。只有对一个项目的体系结构想的越明白，设计就越容易</p>\n<h4 id=\"体系结构为什么重要\"><a href=\"#体系结构为什么重要\" class=\"headerlink\" title=\"体系结构为什么重要\"></a>体系结构为什么重要</h4><ul>\n<li><p>软件体系结构的表示有助于对计算机系统开发感兴趣的各方(利益相关者)开展交流</p>\n</li>\n<li><p>体系结构突出了早期的设计决策，这些决策对随后所有的软件工程工作有深远的影响，同时对系统作为一个可运行实体的最后成功有重要作用</p>\n</li>\n<li><p>体系结构“构建了一个相对小的、易于理解的模型，该模型描述了系统如何构成以及其构件如何一起工作”</p>\n</li>\n</ul>\n<h4 id=\"体系结构描述\"><a href=\"#体系结构描述\" class=\"headerlink\" title=\"体系结构描述\"></a>体系结构描述</h4><p>不同利益相关者会从不同的角度理解体系结构，它是有不同的关注点驱动的，所以，体系结构描述实际上是一组体现系统不同视图的工作产品。体系结构应当考虑到每个利益相关者想要的东西</p>\n<h4 id=\"体系结构决策\"><a href=\"#体系结构决策\" class=\"headerlink\" title=\"体系结构决策\"></a>体系结构决策</h4><p>体系结构决策描述模版</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每个主要的体系结构决策可以被记录在案，以便以后评审，评审由想要理解已提出的体系结构描述的利益相关者进行。</span><br><span class=\"line\"></span><br><span class=\"line\">设计问题：描述将要解决的体系结构设计问题</span><br><span class=\"line\">解决方案：陈述所选择的解决设计问题的方法</span><br><span class=\"line\">分类：指定问题和解决方案陈述的分类(例如，数据设计、内容结构、构件结构、集成、介绍)</span><br><span class=\"line\">假设：指出任何有助于指定决策的假设</span><br><span class=\"line\">约束：指定任何有助于指定决策的环境约束(例如，技术标准、可用的模版、项目相关问题)</span><br><span class=\"line\">候选方案：简要描述所考虑的体系结构设计候选方案，并描述为什么要摒弃这些方案</span><br><span class=\"line\">争论：陈述你为什么选择了这种解决方案而不是其他的候选方案</span><br><span class=\"line\">意义：指出制定决策对设计的影响。选择方案如何影响其他的体系结构设计问题？解决方案会在某种程度上约束设计吗？</span><br><span class=\"line\">相关策略：其他记录的决策和该决策有什么相关性？</span><br><span class=\"line\">相关关注点：其他需求和该决策有什么相关性？</span><br><span class=\"line\">工作产品：指出体系结构描述中，决策会在哪里体现出来</span><br><span class=\"line\">注释：参考可用来制定决策的其他团队的备忘录或文档</span><br></pre></td></tr></table></figure>\n<h2 id=\"体系结构类型\"><a href=\"#体系结构类型\" class=\"headerlink\" title=\"体系结构类型\"></a>体系结构类型</h2><p>体系结构类型：如今社会软件设计常见的</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">人工智能</span><br><span class=\"line\">商业和非盈利的</span><br><span class=\"line\">通信</span><br><span class=\"line\">内容制作</span><br><span class=\"line\">设备</span><br><span class=\"line\">娱乐于运动</span><br><span class=\"line\">金融</span><br><span class=\"line\">游戏</span><br><span class=\"line\">行政管理</span><br><span class=\"line\">工业</span><br><span class=\"line\">法律</span><br><span class=\"line\">医疗</span><br><span class=\"line\">军事</span><br><span class=\"line\">操作系统</span><br><span class=\"line\">平台</span><br><span class=\"line\">科学</span><br><span class=\"line\">工具</span><br><span class=\"line\">运输</span><br><span class=\"line\">实用程序</span><br></pre></td></tr></table></figure>\n<p>以上每种类别在如今社会中都已经形成了相应的体系结构，每种类别的具体分类要采用更具体的体系结构。例如：游戏，也分塔防游戏，益智游戏，战略游戏，枪战游戏</p>\n<h2 id=\"体系结构风格\"><a href=\"#体系结构风格\" class=\"headerlink\" title=\"体系结构风格\"></a>体系结构风格</h2><p>由相关的体系结构风格就能理解系统的整体性质。这就像，我要盖个“茅草屋”，你在脑子里就能想到“茅草屋”的大概样子</p>\n<p>5种典型的基本体系结构</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能结构：构件表示功能或实体，连接件表示接口。特性描述构件的特性和接口的组织</span><br><span class=\"line\"></span><br><span class=\"line\">实现结构：购进可以是包、类、对象、过程、函数、方法等所有在不同抽象层上打包的功能。连接件包括传递数据和控制、共享数据、“使用”以及“是一个实例”等能力。特性关注于结构实现时的质量特性(例如：可维护性、可重用性)</span><br><span class=\"line\"></span><br><span class=\"line\">并发结构：构件表示“并发单元”(并发任务或线程)。“关系”(连接件)包括同步于、优先级高于、发送数据到、运行必须有、运行不能有。与结构相关的特性包括优先级、抢先占有以及执行时间</span><br><span class=\"line\"></span><br><span class=\"line\">物理结构：类似于设计开发中的部署模型。构件是物理硬件，软件驻留在硬件上。连接件是硬件构件之间的接口。特性用来描述容量、带宽、性能和其他属性</span><br><span class=\"line\"></span><br><span class=\"line\">开发结构：该结构定义构件、工作产品以及软件工程过程中所需的其他信息源。连接件表示工作产品之间的关系。特性标识每项的特征</span><br></pre></td></tr></table></figure>\n<h4 id=\"体系结构风格的简单分类\"><a href=\"#体系结构风格的简单分类\" class=\"headerlink\" title=\"体系结构风格的简单分类\"></a>体系结构风格的简单分类</h4><p>几种常见的体系结构</p>\n<ul>\n<li>以数据为中心的体系结构：核心是数据库</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/24/5ce7940476b2124587.jpg\" alt></p>\n<ul>\n<li>数据流体系结构</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/24/5ce795ba19b1a61852.png\" alt></p>\n<ul>\n<li><p>调用和返回体系结构</p>\n<ul>\n<li><p>主程序/子程序体系结构：主程序调用一组构件，这些构件又调用其他构件</p>\n<p><img src=\"https://i.loli.net/2019/05/24/5ce795c58014e26384.png\" alt></p>\n</li>\n<li><p>远程过程调用体系结构：主程序/子程序体系结构的构件分布在网络中的多台计算机上</p>\n</li>\n</ul>\n</li>\n<li><p>面向对象体系结构</p>\n</li>\n<li><p>层次体系结构：参考MVC设计模式考虑</p>\n</li>\n</ul>\n<h4 id=\"体系结构模式\"><a href=\"#体系结构模式\" class=\"headerlink\" title=\"体系结构模式\"></a>体系结构模式</h4><p>12章再讲</p>\n<h4 id=\"组织和求精\"><a href=\"#组织和求精\" class=\"headerlink\" title=\"组织和求精\"></a>组织和求精</h4><p>体系结构设计的评估标准</p>\n<p>控制：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在体系结构中如何管理控制？</span><br><span class=\"line\">是否存在清晰的控制层次？</span><br><span class=\"line\">如果存在，构件在控制层次中有什么作用？</span><br><span class=\"line\">构件如何在系统中传递控制？</span><br><span class=\"line\">构件间如何共享控制？</span><br><span class=\"line\">控制的拓扑结构如何？</span><br><span class=\"line\">控制是否同步或者构件操作是否异步？</span><br></pre></td></tr></table></figure>\n<p>数据</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构件间如何进行数据通信？</span><br><span class=\"line\">数据流是否是连续地传递给系统，或数据对象是否是零散地传递给系统？</span><br><span class=\"line\">数据传递的模式是什么(即，数据是从一个构件传递到另一个构件，还是数据被系统中的构件全局共享)？</span><br><span class=\"line\">是否存在数据构件(如黑板或中心数据库)？如果存在，它们的作用是什么？</span><br><span class=\"line\">功能构件如何和数据构件交互？</span><br><span class=\"line\">数据构件是被动的还是主动的(即数据构件是否主动地和系统的其他构件交互)？</span><br><span class=\"line\">数据和控制如何在系统中交互？</span><br></pre></td></tr></table></figure>\n<h2 id=\"体系结构设计-1\"><a href=\"#体系结构设计-1\" class=\"headerlink\" title=\"体系结构设计\"></a>体系结构设计</h2><h4 id=\"系统环境的表示\"><a href=\"#系统环境的表示\" class=\"headerlink\" title=\"系统环境的表示\"></a>系统环境的表示</h4><p>体系结构环境图的一般结构</p>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8b5999ec5776790.png\" alt></p>\n<p>由图所示，与目标系统(为该系统所开发的体系结构设计)交互的系统可以表示为：</p>\n<ul>\n<li><p>上级系统—-这些系统把目标系统作为某些高层处理方案的一部分</p>\n</li>\n<li><p>下级系统—-这些系统被目标系统使用，并为完成目标系统的功能提供必要的数据和处理</p>\n</li>\n<li><p>同级系统—-这些系统在对等的基础上相互作用(即信息或者同级系统和目标系统产生，或者被目标系统和同级系统使用)</p>\n</li>\n<li><p>参与者——通过产生和消耗必要处理所需的信息，实现与目标系统交互的实体(人，设备)</p>\n</li>\n</ul>\n<p>每个外部实体都通过某一个接口(带阴影的小矩形)与目标系统进行通信</p>\n<h4 id=\"定义原型\"><a href=\"#定义原型\" class=\"headerlink\" title=\"定义原型\"></a>定义原型</h4><p>原型是表示核心抽象的类或模式</p>\n<p>原型包括：结点、探测器、指示器、控制器</p>\n<h4 id=\"将体系结构精华为构件\"><a href=\"#将体系结构精华为构件\" class=\"headerlink\" title=\"将体系结构精华为构件\"></a>将体系结构精华为构件</h4><p>一个将完整体系结构精华为构件的实例</p>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8baaf5fbe956921.png\" alt></p>\n<p>其中的每一个方框都是一个构件</p>\n<h4 id=\"描述系统实例\"><a href=\"#描述系统实例\" class=\"headerlink\" title=\"描述系统实例\"></a>描述系统实例</h4><p>将上文中的完整体系结构再进一步精华</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">体系结构设计</span><br><span class=\"line\"><span class=\"code\">    目的：体系结构设计工具通过描述构件接口、依赖与联系以及交互作用来建立整体软件结构模型</span></span><br><span class=\"line\"><span class=\"code\">    机制：工具采用的机制多种多样。在大多数情况下，体系结构的设计能力是分析和设计建模自动化工具的一部分功能</span></span><br><span class=\"line\"><span class=\"code\">    代表性工具：</span></span><br><span class=\"line\"><span class=\"code\">    Adalon</span></span><br><span class=\"line\"><span class=\"code\">    ObjectiF</span></span><br><span class=\"line\"><span class=\"code\">    Rational Rose</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"评估可选的体系结构设计\"><a href=\"#评估可选的体系结构设计\" class=\"headerlink\" title=\"评估可选的体系结构设计\"></a>评估可选的体系结构设计</h2><h4 id=\"体系结构权衡分析方法\"><a href=\"#体系结构权衡分析方法\" class=\"headerlink\" title=\"体系结构权衡分析方法\"></a>体系结构权衡分析方法</h4><p>目的：验证设计的体系结构是否能用</p>\n<ul>\n<li><p>1.收集场景：开发一组用例，从用户角度描述系统</p>\n</li>\n<li><p>2.引出需求、约束和环境描述：确保所有利益相关者问题都被处理</p>\n</li>\n<li><p>3.描述那些已经被选择用于解决场景和需求的体系结构风格/模式：采用以下一种描述</p>\n<ul>\n<li><p>a.模块视图：分析带有构件的工作任务以及信息隐蔽获得的程度</p>\n</li>\n<li><p>b.过程视图：分析系统性能</p>\n</li>\n<li><p>c.数据流视图：分析体系结构满足功能需求的程度</p>\n</li>\n</ul>\n</li>\n<li><p>4.通过单独地考虑每个属性来评估质量属性：包括可靠性、性能、安全性、可维护性、灵活性、可测试性、可移植性、可复用性和互操作性</p>\n</li>\n<li><p>5.针对特定的体系结构风格，确定质量属性对各种体系结构属性的敏感性：通过体系结构变更测试，受变更大的就是敏感点</p>\n</li>\n<li><p>6.找第5步的敏感点，然后做成候选体系结构</p>\n</li>\n</ul>\n<h4 id=\"体系结构复杂性\"><a href=\"#体系结构复杂性\" class=\"headerlink\" title=\"体系结构复杂性\"></a>体系结构复杂性</h4><p>体系结构的复杂性体现在体系结构中构件间的依赖关系，包括</p>\n<ul>\n<li><p>1.共享依赖：存在与使用相同资源的消费者或相同消费者生产的生产者之间的依赖关系</p>\n</li>\n<li><p>2.流依赖：生产者和消费者之间的依赖</p>\n</li>\n<li><p>3.约束依赖：一组活动间相关控制流上的约束</p>\n</li>\n</ul>\n<h4 id=\"体系结构描述语言\"><a href=\"#体系结构描述语言\" class=\"headerlink\" title=\"体系结构描述语言\"></a>体系结构描述语言</h4><p>体系结构描述语言(architectural description language,ADL)提供了一种描述软件体系结构的语义和语法</p>\n<p>UML没有ADL完成，以下是5个ADL</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rapide:</span><br><span class=\"line\">UniCon</span><br><span class=\"line\">Aesop</span><br><span class=\"line\">Wright</span><br><span class=\"line\">Acme</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用数据流进行体系结构映射\"><a href=\"#使用数据流进行体系结构映射\" class=\"headerlink\" title=\"使用数据流进行体系结构映射\"></a>使用数据流进行体系结构映射</h2><p>从DFD到软件体系结构的便捷的转化，转化由下述6个步骤的一部分完成</p>\n<ul>\n<li><p>1.建立信息流的类型</p>\n</li>\n<li><p>2.标注流的边界</p>\n</li>\n<li><p>3.将DFD映射到程序结构</p>\n</li>\n<li><p>4.定义控制层级</p>\n</li>\n<li><p>5.使用设计度量和启发式精华产生的结构</p>\n</li>\n<li><p>6.求精华细化体系结构描述</p>\n</li>\n</ul>\n<h4 id=\"变换映射\"><a href=\"#变换映射\" class=\"headerlink\" title=\"变换映射\"></a>变换映射</h4><p>将具有变换流特征的DFD映射为某个特定的体系结构风格，图示为SafeHome的安全例子</p>\n<p><strong>步骤1：评审基本系统模型</strong></p>\n<ul>\n<li>DFD图从0层到1层的转换</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5161de4998095.png\" alt></p>\n<p><strong>步骤2：评审和精华软件的数据流图</strong></p>\n<ul>\n<li>DFD图从1层到2层到转换</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5200897a87808.png\" alt></p>\n<p><strong>步骤3：确定DFD是否含有变换流或事物流特征</strong></p>\n<ul>\n<li>DFD图从2层到3层的转换，这次转换要搞清楚数据流的输入和输出</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5278ae5e31684.png\" alt></p>\n<p><strong>步骤4：通过确定输入和输出流的边界，分离出变换中心</strong></p>\n<ul>\n<li>输入是信息从外部形式转内部形式，输出是信息从内部形式转外部形式<br>流边界是指在流从外部转内部(或从内部转外部)的边界处</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5301579c36594.png\" alt></p>\n<p><strong>步骤5:完成“第一级分解”</strong></p>\n<ul>\n<li>以步骤4的边界处为界限进行第一级的分解</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d537c7e1e69811.png\" alt></p>\n<p><strong>步骤6:完成“第二级分解”</strong></p>\n<ul>\n<li>将每个变换(泡泡)映射到体系结构中的相应模块，从变换中心的边界开始，沿输入路径和输出路径向外，将变换依次映射到软件结构的从属层。一般是一对一映射，有时会有多个泡泡合并为一个构件，或者一个泡泡分解为多个构件的情况。这步结束，就得到了第一次的迭代体系结构</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d53f85e5c49088.png\" alt></p>\n<p><strong>步骤7:使用提高软件质量的设计启发式方法，精华第一次迭代得到的体系结构</strong></p>\n<ul>\n<li>精化第一次迭代得到的体系结构。对构件进行“分解”和“结合”</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5468f2e424959.png\" alt></p>\n<p><strong>最终逐渐精华的完善版</strong></p>\n<ul>\n<li>构件的和并和消除</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d6aec130c48135.png\" alt></p>\n<h4 id=\"精华体系结构设计\"><a href=\"#精华体系结构设计\" class=\"headerlink\" title=\"精华体系结构设计\"></a>精华体系结构设计</h4><p>不能工作的“优化设计”是值得怀疑的</p>\n<p>设计求精应在满足有效模块要求的前提下尽量减少构件的数量，在充分满足信息需求的前提下尽量减少复杂的数据结构</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于软件体系结构的文章</font></center>","more":"<h1 id=\"体系结构设计\"><a href=\"#体系结构设计\" class=\"headerlink\" title=\"体系结构设计\"></a>体系结构设计</h1><h2 id=\"软件体系结构\"><a href=\"#软件体系结构\" class=\"headerlink\" title=\"软件体系结构\"></a>软件体系结构</h2><h4 id=\"什么是体系结构\"><a href=\"#什么是体系结构\" class=\"headerlink\" title=\"什么是体系结构\"></a>什么是体系结构</h4><p>程序或计算系统的软件体系结构是指系统的一个或者多个结构，它包括软件构件、构件的外部可见属性以及它们之间的相互关系</p>\n<p>体系结构并非可运行的软件，确切说，它是一种表达，能够：</p>\n<ul>\n<li><p>1.对设计在满足既定需求方面的有效性进行分析</p>\n</li>\n<li><p>2.在设计变更相对容易的阶段，考虑体系结构可能的选择方案</p>\n</li>\n<li><p>3.降低与软件构造相关的风险</p>\n</li>\n</ul>\n<p>“体系结构”和”设计”的区别:类与对象之间的区别</p>\n<p>例如：使用Java和.NET对同一个项目进行设计，其设计方法是不一样的，但其体系结构是一样的。只有对一个项目的体系结构想的越明白，设计就越容易</p>\n<h4 id=\"体系结构为什么重要\"><a href=\"#体系结构为什么重要\" class=\"headerlink\" title=\"体系结构为什么重要\"></a>体系结构为什么重要</h4><ul>\n<li><p>软件体系结构的表示有助于对计算机系统开发感兴趣的各方(利益相关者)开展交流</p>\n</li>\n<li><p>体系结构突出了早期的设计决策，这些决策对随后所有的软件工程工作有深远的影响，同时对系统作为一个可运行实体的最后成功有重要作用</p>\n</li>\n<li><p>体系结构“构建了一个相对小的、易于理解的模型，该模型描述了系统如何构成以及其构件如何一起工作”</p>\n</li>\n</ul>\n<h4 id=\"体系结构描述\"><a href=\"#体系结构描述\" class=\"headerlink\" title=\"体系结构描述\"></a>体系结构描述</h4><p>不同利益相关者会从不同的角度理解体系结构，它是有不同的关注点驱动的，所以，体系结构描述实际上是一组体现系统不同视图的工作产品。体系结构应当考虑到每个利益相关者想要的东西</p>\n<h4 id=\"体系结构决策\"><a href=\"#体系结构决策\" class=\"headerlink\" title=\"体系结构决策\"></a>体系结构决策</h4><p>体系结构决策描述模版</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">每个主要的体系结构决策可以被记录在案，以便以后评审，评审由想要理解已提出的体系结构描述的利益相关者进行。</span><br><span class=\"line\"></span><br><span class=\"line\">设计问题：描述将要解决的体系结构设计问题</span><br><span class=\"line\">解决方案：陈述所选择的解决设计问题的方法</span><br><span class=\"line\">分类：指定问题和解决方案陈述的分类(例如，数据设计、内容结构、构件结构、集成、介绍)</span><br><span class=\"line\">假设：指出任何有助于指定决策的假设</span><br><span class=\"line\">约束：指定任何有助于指定决策的环境约束(例如，技术标准、可用的模版、项目相关问题)</span><br><span class=\"line\">候选方案：简要描述所考虑的体系结构设计候选方案，并描述为什么要摒弃这些方案</span><br><span class=\"line\">争论：陈述你为什么选择了这种解决方案而不是其他的候选方案</span><br><span class=\"line\">意义：指出制定决策对设计的影响。选择方案如何影响其他的体系结构设计问题？解决方案会在某种程度上约束设计吗？</span><br><span class=\"line\">相关策略：其他记录的决策和该决策有什么相关性？</span><br><span class=\"line\">相关关注点：其他需求和该决策有什么相关性？</span><br><span class=\"line\">工作产品：指出体系结构描述中，决策会在哪里体现出来</span><br><span class=\"line\">注释：参考可用来制定决策的其他团队的备忘录或文档</span><br></pre></td></tr></table></figure>\n<h2 id=\"体系结构类型\"><a href=\"#体系结构类型\" class=\"headerlink\" title=\"体系结构类型\"></a>体系结构类型</h2><p>体系结构类型：如今社会软件设计常见的</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">人工智能</span><br><span class=\"line\">商业和非盈利的</span><br><span class=\"line\">通信</span><br><span class=\"line\">内容制作</span><br><span class=\"line\">设备</span><br><span class=\"line\">娱乐于运动</span><br><span class=\"line\">金融</span><br><span class=\"line\">游戏</span><br><span class=\"line\">行政管理</span><br><span class=\"line\">工业</span><br><span class=\"line\">法律</span><br><span class=\"line\">医疗</span><br><span class=\"line\">军事</span><br><span class=\"line\">操作系统</span><br><span class=\"line\">平台</span><br><span class=\"line\">科学</span><br><span class=\"line\">工具</span><br><span class=\"line\">运输</span><br><span class=\"line\">实用程序</span><br></pre></td></tr></table></figure>\n<p>以上每种类别在如今社会中都已经形成了相应的体系结构，每种类别的具体分类要采用更具体的体系结构。例如：游戏，也分塔防游戏，益智游戏，战略游戏，枪战游戏</p>\n<h2 id=\"体系结构风格\"><a href=\"#体系结构风格\" class=\"headerlink\" title=\"体系结构风格\"></a>体系结构风格</h2><p>由相关的体系结构风格就能理解系统的整体性质。这就像，我要盖个“茅草屋”，你在脑子里就能想到“茅草屋”的大概样子</p>\n<p>5种典型的基本体系结构</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">功能结构：构件表示功能或实体，连接件表示接口。特性描述构件的特性和接口的组织</span><br><span class=\"line\"></span><br><span class=\"line\">实现结构：购进可以是包、类、对象、过程、函数、方法等所有在不同抽象层上打包的功能。连接件包括传递数据和控制、共享数据、“使用”以及“是一个实例”等能力。特性关注于结构实现时的质量特性(例如：可维护性、可重用性)</span><br><span class=\"line\"></span><br><span class=\"line\">并发结构：构件表示“并发单元”(并发任务或线程)。“关系”(连接件)包括同步于、优先级高于、发送数据到、运行必须有、运行不能有。与结构相关的特性包括优先级、抢先占有以及执行时间</span><br><span class=\"line\"></span><br><span class=\"line\">物理结构：类似于设计开发中的部署模型。构件是物理硬件，软件驻留在硬件上。连接件是硬件构件之间的接口。特性用来描述容量、带宽、性能和其他属性</span><br><span class=\"line\"></span><br><span class=\"line\">开发结构：该结构定义构件、工作产品以及软件工程过程中所需的其他信息源。连接件表示工作产品之间的关系。特性标识每项的特征</span><br></pre></td></tr></table></figure>\n<h4 id=\"体系结构风格的简单分类\"><a href=\"#体系结构风格的简单分类\" class=\"headerlink\" title=\"体系结构风格的简单分类\"></a>体系结构风格的简单分类</h4><p>几种常见的体系结构</p>\n<ul>\n<li>以数据为中心的体系结构：核心是数据库</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/24/5ce7940476b2124587.jpg\" alt></p>\n<ul>\n<li>数据流体系结构</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/24/5ce795ba19b1a61852.png\" alt></p>\n<ul>\n<li><p>调用和返回体系结构</p>\n<ul>\n<li><p>主程序/子程序体系结构：主程序调用一组构件，这些构件又调用其他构件</p>\n<p><img src=\"https://i.loli.net/2019/05/24/5ce795c58014e26384.png\" alt></p>\n</li>\n<li><p>远程过程调用体系结构：主程序/子程序体系结构的构件分布在网络中的多台计算机上</p>\n</li>\n</ul>\n</li>\n<li><p>面向对象体系结构</p>\n</li>\n<li><p>层次体系结构：参考MVC设计模式考虑</p>\n</li>\n</ul>\n<h4 id=\"体系结构模式\"><a href=\"#体系结构模式\" class=\"headerlink\" title=\"体系结构模式\"></a>体系结构模式</h4><p>12章再讲</p>\n<h4 id=\"组织和求精\"><a href=\"#组织和求精\" class=\"headerlink\" title=\"组织和求精\"></a>组织和求精</h4><p>体系结构设计的评估标准</p>\n<p>控制：</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">在体系结构中如何管理控制？</span><br><span class=\"line\">是否存在清晰的控制层次？</span><br><span class=\"line\">如果存在，构件在控制层次中有什么作用？</span><br><span class=\"line\">构件如何在系统中传递控制？</span><br><span class=\"line\">构件间如何共享控制？</span><br><span class=\"line\">控制的拓扑结构如何？</span><br><span class=\"line\">控制是否同步或者构件操作是否异步？</span><br></pre></td></tr></table></figure>\n<p>数据</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">构件间如何进行数据通信？</span><br><span class=\"line\">数据流是否是连续地传递给系统，或数据对象是否是零散地传递给系统？</span><br><span class=\"line\">数据传递的模式是什么(即，数据是从一个构件传递到另一个构件，还是数据被系统中的构件全局共享)？</span><br><span class=\"line\">是否存在数据构件(如黑板或中心数据库)？如果存在，它们的作用是什么？</span><br><span class=\"line\">功能构件如何和数据构件交互？</span><br><span class=\"line\">数据构件是被动的还是主动的(即数据构件是否主动地和系统的其他构件交互)？</span><br><span class=\"line\">数据和控制如何在系统中交互？</span><br></pre></td></tr></table></figure>\n<h2 id=\"体系结构设计-1\"><a href=\"#体系结构设计-1\" class=\"headerlink\" title=\"体系结构设计\"></a>体系结构设计</h2><h4 id=\"系统环境的表示\"><a href=\"#系统环境的表示\" class=\"headerlink\" title=\"系统环境的表示\"></a>系统环境的表示</h4><p>体系结构环境图的一般结构</p>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8b5999ec5776790.png\" alt></p>\n<p>由图所示，与目标系统(为该系统所开发的体系结构设计)交互的系统可以表示为：</p>\n<ul>\n<li><p>上级系统—-这些系统把目标系统作为某些高层处理方案的一部分</p>\n</li>\n<li><p>下级系统—-这些系统被目标系统使用，并为完成目标系统的功能提供必要的数据和处理</p>\n</li>\n<li><p>同级系统—-这些系统在对等的基础上相互作用(即信息或者同级系统和目标系统产生，或者被目标系统和同级系统使用)</p>\n</li>\n<li><p>参与者——通过产生和消耗必要处理所需的信息，实现与目标系统交互的实体(人，设备)</p>\n</li>\n</ul>\n<p>每个外部实体都通过某一个接口(带阴影的小矩形)与目标系统进行通信</p>\n<h4 id=\"定义原型\"><a href=\"#定义原型\" class=\"headerlink\" title=\"定义原型\"></a>定义原型</h4><p>原型是表示核心抽象的类或模式</p>\n<p>原型包括：结点、探测器、指示器、控制器</p>\n<h4 id=\"将体系结构精华为构件\"><a href=\"#将体系结构精华为构件\" class=\"headerlink\" title=\"将体系结构精华为构件\"></a>将体系结构精华为构件</h4><p>一个将完整体系结构精华为构件的实例</p>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8baaf5fbe956921.png\" alt></p>\n<p>其中的每一个方框都是一个构件</p>\n<h4 id=\"描述系统实例\"><a href=\"#描述系统实例\" class=\"headerlink\" title=\"描述系统实例\"></a>描述系统实例</h4><p>将上文中的完整体系结构再进一步精华</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">体系结构设计</span><br><span class=\"line\"><span class=\"code\">    目的：体系结构设计工具通过描述构件接口、依赖与联系以及交互作用来建立整体软件结构模型</span></span><br><span class=\"line\"><span class=\"code\">    机制：工具采用的机制多种多样。在大多数情况下，体系结构的设计能力是分析和设计建模自动化工具的一部分功能</span></span><br><span class=\"line\"><span class=\"code\">    代表性工具：</span></span><br><span class=\"line\"><span class=\"code\">    Adalon</span></span><br><span class=\"line\"><span class=\"code\">    ObjectiF</span></span><br><span class=\"line\"><span class=\"code\">    Rational Rose</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"评估可选的体系结构设计\"><a href=\"#评估可选的体系结构设计\" class=\"headerlink\" title=\"评估可选的体系结构设计\"></a>评估可选的体系结构设计</h2><h4 id=\"体系结构权衡分析方法\"><a href=\"#体系结构权衡分析方法\" class=\"headerlink\" title=\"体系结构权衡分析方法\"></a>体系结构权衡分析方法</h4><p>目的：验证设计的体系结构是否能用</p>\n<ul>\n<li><p>1.收集场景：开发一组用例，从用户角度描述系统</p>\n</li>\n<li><p>2.引出需求、约束和环境描述：确保所有利益相关者问题都被处理</p>\n</li>\n<li><p>3.描述那些已经被选择用于解决场景和需求的体系结构风格/模式：采用以下一种描述</p>\n<ul>\n<li><p>a.模块视图：分析带有构件的工作任务以及信息隐蔽获得的程度</p>\n</li>\n<li><p>b.过程视图：分析系统性能</p>\n</li>\n<li><p>c.数据流视图：分析体系结构满足功能需求的程度</p>\n</li>\n</ul>\n</li>\n<li><p>4.通过单独地考虑每个属性来评估质量属性：包括可靠性、性能、安全性、可维护性、灵活性、可测试性、可移植性、可复用性和互操作性</p>\n</li>\n<li><p>5.针对特定的体系结构风格，确定质量属性对各种体系结构属性的敏感性：通过体系结构变更测试，受变更大的就是敏感点</p>\n</li>\n<li><p>6.找第5步的敏感点，然后做成候选体系结构</p>\n</li>\n</ul>\n<h4 id=\"体系结构复杂性\"><a href=\"#体系结构复杂性\" class=\"headerlink\" title=\"体系结构复杂性\"></a>体系结构复杂性</h4><p>体系结构的复杂性体现在体系结构中构件间的依赖关系，包括</p>\n<ul>\n<li><p>1.共享依赖：存在与使用相同资源的消费者或相同消费者生产的生产者之间的依赖关系</p>\n</li>\n<li><p>2.流依赖：生产者和消费者之间的依赖</p>\n</li>\n<li><p>3.约束依赖：一组活动间相关控制流上的约束</p>\n</li>\n</ul>\n<h4 id=\"体系结构描述语言\"><a href=\"#体系结构描述语言\" class=\"headerlink\" title=\"体系结构描述语言\"></a>体系结构描述语言</h4><p>体系结构描述语言(architectural description language,ADL)提供了一种描述软件体系结构的语义和语法</p>\n<p>UML没有ADL完成，以下是5个ADL</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Rapide:</span><br><span class=\"line\">UniCon</span><br><span class=\"line\">Aesop</span><br><span class=\"line\">Wright</span><br><span class=\"line\">Acme</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用数据流进行体系结构映射\"><a href=\"#使用数据流进行体系结构映射\" class=\"headerlink\" title=\"使用数据流进行体系结构映射\"></a>使用数据流进行体系结构映射</h2><p>从DFD到软件体系结构的便捷的转化，转化由下述6个步骤的一部分完成</p>\n<ul>\n<li><p>1.建立信息流的类型</p>\n</li>\n<li><p>2.标注流的边界</p>\n</li>\n<li><p>3.将DFD映射到程序结构</p>\n</li>\n<li><p>4.定义控制层级</p>\n</li>\n<li><p>5.使用设计度量和启发式精华产生的结构</p>\n</li>\n<li><p>6.求精华细化体系结构描述</p>\n</li>\n</ul>\n<h4 id=\"变换映射\"><a href=\"#变换映射\" class=\"headerlink\" title=\"变换映射\"></a>变换映射</h4><p>将具有变换流特征的DFD映射为某个特定的体系结构风格，图示为SafeHome的安全例子</p>\n<p><strong>步骤1：评审基本系统模型</strong></p>\n<ul>\n<li>DFD图从0层到1层的转换</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5161de4998095.png\" alt></p>\n<p><strong>步骤2：评审和精华软件的数据流图</strong></p>\n<ul>\n<li>DFD图从1层到2层到转换</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5200897a87808.png\" alt></p>\n<p><strong>步骤3：确定DFD是否含有变换流或事物流特征</strong></p>\n<ul>\n<li>DFD图从2层到3层的转换，这次转换要搞清楚数据流的输入和输出</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5278ae5e31684.png\" alt></p>\n<p><strong>步骤4：通过确定输入和输出流的边界，分离出变换中心</strong></p>\n<ul>\n<li>输入是信息从外部形式转内部形式，输出是信息从内部形式转外部形式<br>流边界是指在流从外部转内部(或从内部转外部)的边界处</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5301579c36594.png\" alt></p>\n<p><strong>步骤5:完成“第一级分解”</strong></p>\n<ul>\n<li>以步骤4的边界处为界限进行第一级的分解</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d537c7e1e69811.png\" alt></p>\n<p><strong>步骤6:完成“第二级分解”</strong></p>\n<ul>\n<li>将每个变换(泡泡)映射到体系结构中的相应模块，从变换中心的边界开始，沿输入路径和输出路径向外，将变换依次映射到软件结构的从属层。一般是一对一映射，有时会有多个泡泡合并为一个构件，或者一个泡泡分解为多个构件的情况。这步结束，就得到了第一次的迭代体系结构</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d53f85e5c49088.png\" alt></p>\n<p><strong>步骤7:使用提高软件质量的设计启发式方法，精华第一次迭代得到的体系结构</strong></p>\n<ul>\n<li>精化第一次迭代得到的体系结构。对构件进行“分解”和“结合”</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d5468f2e424959.png\" alt></p>\n<p><strong>最终逐渐精华的完善版</strong></p>\n<ul>\n<li>构件的和并和消除</li>\n</ul>\n<p><img src=\"https://i.loli.net/2019/05/25/5ce8d6aec130c48135.png\" alt></p>\n<h4 id=\"精华体系结构设计\"><a href=\"#精华体系结构设计\" class=\"headerlink\" title=\"精华体系结构设计\"></a>精华体系结构设计</h4><p>不能工作的“优化设计”是值得怀疑的</p>\n<p>设计求精应在满足有效模块要求的前提下尽量减少构件的数量，在充分满足信息需求的前提下尽量减少复杂的数据结构</p>"},{"title":"01_CRM资料收集","date":"2019-06-04T09:29:33.000Z","_content":"\n<center><font size=4 color=\"red\">01_CRM的第一版资料</font></center>\n\n<!--more-->\n\n# CRM项目设计\n\n## CRM概述\n\nCRM：Customer Relationship Management\n\n**最终目标**：吸引新客户，保留老客户以及将已有客户转为忠实客户，增强市场。\n\nCRM:以客户为中心，客户需要什么，我就给他提供什么\n\n**CRM的两个任务：**\n\n* 1.获取客户\n\n* 2.提高客户忠诚度\n\n**客户信息处理技术：**\n\n* 1.数据仓库\n\n* 2.商业智能\n\n* 3.知识发现\n\nCRM是一个获取保持和增加可获利客户的方法和过程\n\nCRM是**企业业务流程**的管理\n\n**CRM的核心步骤：**\n\n* 1.市场营销\n\n* 2.销售\n\n* 3.客户服务\n\n* 4.技术支持\n\n**CRM的模块：**\n\n* 1.客户资源管理\n\n* 2。销售管理\n\n* 3.客户服务管理\n\n* 4.日常事务管理\n\n**CRM对网络的要求：**\n\n公网和内网都可以实现\n\n**CRM的手段：**\n\n判断，选择，争取和保持客户所需的全部商业过程，对客户资料详细分析\n\n**CRM分类：**\n\n操作型：业务流程、信息记录、提供便捷的操作、人性化的界面\n\n分析型：基于大量的企业日常数据，对数据挖掘分析，找出客户产品、服务的特征，从而修正企业的产品策略、市场策略。\n\n**CRM按功能分：**\n\n* 市场营销中的客户关系管理\n\n    * 分析目标群体：客户行业、职业、年龄、地域等\n\n    * 活动-->产生/销售-->报表-->决策\n\n* 销售过程中的客户关系管理\n\n    包括：\n    \n    ```markdown\n    潜在客户\n    客户\n    联系人\n    业务机会\n    订单\n    汇款单\n    报表统计图\n    ```\n\n    业务员要做的\n\n    ```markdown\n    记录沟通内容\n    建立日程安排\n    查询预约提醒\n    快速浏览客户数据\n    大额业务提醒\n    销售漏斗分析\n    业绩指标统计\n    业务阶段划分\n    客户服务过程中的客户关系管理\n    ```\n    \n* 客户服务过程中的客户关系管理\n\n    目的：\n    \n    ```markdown\n    获的问题客户信息\n    客户历史问题记录\n    ```\n\n    主要功能：\n\n    ```markdown\n    客户反馈\n    解决方案\n    满意度调查\n    呼叫中心\n    ```\n\n    其它功能：\n\n    ```markdown\n    办公管理\n    行政管理\n    进销存\n    ```\n\n## 运行范围\n\n**业务员**\n\n* 客户信息的录入和维护的方式\n\n\n\n```markdown\n名片\n其他途径\n```   \n\n> 要求：能及时对电话，地址等信息变更\n\n* 练习记录的录入的方式：\n\n```markdown\n电话\n邮件\n即时通知\n上门拜访\n公司网站\n电子邮件\n实时聊天\n营销材料\n最近社交媒体\n```\n\n* 投价单的录入信息\n\n```md\n基本客户信息\n沟通信息\n报价信息\n```\n\n> 要求：最好形成可打印的模板\n\n**业务员日常功能**\n\n* 客户联系提醒\n\n```markdown\n今天或明天应联系客户\n逾期未联系客户\n逾期未下单客户\n长期没有业务往来客户\n```\n\n* 客户资料查询和统计分析\n\n    按客户名称关键词模糊查询，防止撞单\n\n* 每天客户联系拜访情况的查询和分析\n\n* 业绩查询和统计\n\n* 应收款的提醒\n\n* 工资，提成和费用的查询\n\n**销售助理**\n\n合同订单录入\n\n* 收到传真订单和签订销售合同后凯撒录入系统\n\n```markdown\n订购产品的型号\n数量\n单价\n金额\n```\n\n出货单的录入\n\n* 录入收获单\n\n```markdown\n出货日期\n出货仓\n出货产品明细\n```\n> 注：如果以前录过，可以将录入信息数据导出模板使用\n\n**销售助理日常适用**\n\n* 订单查询及交货提醒\n\n* 统计销售部门业绩\n\n* 打印出货单\n\n**财务主管**\n\n* 收款后做收款处理，冲销应收款\n\n* 付款后做付款处理，冲销应付款\n\n* 录企业运营的各种费用\n\n```markdown\n房租\n水电费\n办公支出\n员工工资\n提成奖金\n各种销售费用\n```\n\n**日常使用**\n\n* 应收款提醒\n\n```markdown\n日、周有哪些应收款\n逾期应收款\n```\n\n逾期应收款日期：30天内，30～60天，60～90天，90～180天，180天以上\n\n* 应收款统计分析\n\n```markdown\n哪些客户应收款比例大\n哪些用户逾期金额超额\n哪些用户账龄过长\n```\n\n* 应收/付款查询和统计，统计任一时期收/付款进账/出账明细，用图表显示\n\n```markdown\n按收/付款方式\n按业务员\n按年/月\n```\n\n* 费用查询统计，查各类费用，明细支出情况，用图标显示\n\n```markdown\n按费用大类\n费用项目\n按年/月\n按业务员\n```\n\n以上核心：数据哪来？--> 怎么处理 --> 怎么展示\n\n**采购员**\n\n采购订单录入\n\n```markdown\n供应商名称\n产品明细\n```\n\n> 要求：可打印出模板\n\n采购收获单\n\n```markdown\n收货信息\n```\n\n> 如果已有相应订单信息，可直接导出使用\n\n## 客户关怀\n\n* 客户服务\n\n```markdown\n产品信息\n服务建议\n```\n\n* 产品质量\n\n```markdown\n符合有关标准\n适合客户使用\n保证安全可靠\n```\n\n* 服务质量\n\n```markdown\n客户体验\n```\n\n* 售后服务\n\n```markdown\n售后查询\n投诉\n维护\n修理\n```\n\n## 一些问题解决方案\n\n1. 遗忘老客户\n\n数据-->市场预测分析-->制定计划和目标-->激励销售人员\n\n2. 客户信息散，管理凌乱\n\n* 企业资源分类\n\n```markdown\n客户\n竞争对手\n合作伙伴\n```\n\n3. 软件灵活性差，开发升级难\n\n* 企业自己要有强大的个性化自定制功能\n\n## 指标\n\n客户概述分析 profiling\n\n```markdown\n客户层次\n客户风险\n客户爱好\n客户习惯\n```\n\n客户忠诚分析 persistency\n\n* 客户对产品或商业机构\n\n```markdown\n信用程度\n持久性\n变动情况\n```\n\n客户利润分析 profitability\n\n* 消费产品\n  \n```markdown\n边缘利润\n总利润\n净利润\n```\n\n客户性能分析 performance\n\n* 消费产品的消费额\n\n```markdown\n种类\n渠道\n销售地点\n```\n\n客户未来分析 prospecting\n\n```markdown\n客户数量\n客户类别\n```\n\n客户产品分析 product\n\n```markdown\n产品设计\n关联性\n供应链\n```\n\n客户促销分析 promotion\n\n```markdown\n广告\n寻传\n```\n\n## 主要步骤\n\n1. 确定业务计划\n\n2. 建立CRM员工队伍\n\n3. 评估销售，服务过程\n\n4. 明确实际需求\n\n* 销售管理人员\n\n```markdown\n市场预测\n销售渠道管理\n销售报告的提交\n```\n\n* 销售人员\n\n```markdown\n销售额\n销售建议\n产品目录\n客户资料\n```\n\n5. 选择供应商\n\n6. 开发与部署\n\n呼叫中心：集中公司的一些信息资料提供客户剖析，业务剖析，找出有价值用户，将其转化为忠实客户\n\n## 吸引新客户方法\n\n1. 市场调查，收集客户名单\n\n2. 公司活动，抽奖\n\n3. 开发已签单客户，寻求转介绍\n\n10C\n\n1.客户轮廓 customer profile\n\n```markdown\n人口统计信息\n消费心理特征\n消费需求\n消费行为模式\n交易记录\n信用\n```\n\n2. 客户知识 customer knowledge\n\n3. 客户区隔 customer segmentation\n\n* 区分客户\n\n```markdown\n消费者对产品/服务(p/s)的相似欲望与需求\n客户获利率\n```\n\n4. 客户化/定制化 customization\n\n* 针对单一顾客，量身定制\n\n```markdown\n一对一的价格\n一对一的促销\n一对一的通路\n```\n\n> 大量营销 --> 区隔营销 --> 一对一营销\n\n5. 客户价值 customer value\n\n* 从特定p/s获得利益集合\n\n```markdown\n产品价值\n服务价值\n员工友谊价值\n品牌价值\n```\n\n6. 客户满意度 customer satisfaction\n\n7. 顾客发展 customer development\n\n* 针对老客户提供荷包贡献率(Wallet Ration)，方法：\n\n```markdown\n交叉销售：推荐其他产品\n高级销售：推荐本产品的高级版\n```\n\n8. 客户保留率 customer retention\n\n* 不让老客户流失的方法，产品需要\n\n```markdown\n优秀\n贴心\n量身订购\n```\n\n9. 客户赢取率 customer acquistion\n\n* 比竞争对手更好的产品\n\n10. 客户获利率 customer profitability\n\n* 客户终生对企业贡献的纯利润\n\n\n\n第一个CRM\n\n* SugarCRM\n\n加个功能：社交媒体\n\n社交CRM：Base，Nutshell\n\n仪表盘：客户信息，过去销售，先前的营销活动\n\n运营CRM：销售人员自动化，营销自动化，服务自动化\n\n营销自动化：定时发送邮件，社交媒体上发送社交信息\n\n服务自动化：客户通过电话，邮件，知识库，服务门户，常见问题解答\n\n协作：整合第三方外部相关者，供应商，供应商和分销商，信息整合部门/分发信息\n\n客户数据平台CDP\n\n以客户为中心的关系管理CCRM\n\n财务投资回报ROI\n\n感知质量\n\n关系，价值和品牌\n\n客户利益的价值驱动因素：CRM为公司提供管理客户请求和内容的能力。呼叫中心软件能够将经理与各客户联系起来\n\nGPS\n\n供应链关系管理VRM\n\n","source":"_posts/2019-06-04-01-CRM资料收集.md","raw":"---\ntitle: 01_CRM资料收集\ndate: 2019-06-04 09:29:33\ncategories:\n- CRM\ntags:\n- CRM\n- 初始资料\n---\n\n<center><font size=4 color=\"red\">01_CRM的第一版资料</font></center>\n\n<!--more-->\n\n# CRM项目设计\n\n## CRM概述\n\nCRM：Customer Relationship Management\n\n**最终目标**：吸引新客户，保留老客户以及将已有客户转为忠实客户，增强市场。\n\nCRM:以客户为中心，客户需要什么，我就给他提供什么\n\n**CRM的两个任务：**\n\n* 1.获取客户\n\n* 2.提高客户忠诚度\n\n**客户信息处理技术：**\n\n* 1.数据仓库\n\n* 2.商业智能\n\n* 3.知识发现\n\nCRM是一个获取保持和增加可获利客户的方法和过程\n\nCRM是**企业业务流程**的管理\n\n**CRM的核心步骤：**\n\n* 1.市场营销\n\n* 2.销售\n\n* 3.客户服务\n\n* 4.技术支持\n\n**CRM的模块：**\n\n* 1.客户资源管理\n\n* 2。销售管理\n\n* 3.客户服务管理\n\n* 4.日常事务管理\n\n**CRM对网络的要求：**\n\n公网和内网都可以实现\n\n**CRM的手段：**\n\n判断，选择，争取和保持客户所需的全部商业过程，对客户资料详细分析\n\n**CRM分类：**\n\n操作型：业务流程、信息记录、提供便捷的操作、人性化的界面\n\n分析型：基于大量的企业日常数据，对数据挖掘分析，找出客户产品、服务的特征，从而修正企业的产品策略、市场策略。\n\n**CRM按功能分：**\n\n* 市场营销中的客户关系管理\n\n    * 分析目标群体：客户行业、职业、年龄、地域等\n\n    * 活动-->产生/销售-->报表-->决策\n\n* 销售过程中的客户关系管理\n\n    包括：\n    \n    ```markdown\n    潜在客户\n    客户\n    联系人\n    业务机会\n    订单\n    汇款单\n    报表统计图\n    ```\n\n    业务员要做的\n\n    ```markdown\n    记录沟通内容\n    建立日程安排\n    查询预约提醒\n    快速浏览客户数据\n    大额业务提醒\n    销售漏斗分析\n    业绩指标统计\n    业务阶段划分\n    客户服务过程中的客户关系管理\n    ```\n    \n* 客户服务过程中的客户关系管理\n\n    目的：\n    \n    ```markdown\n    获的问题客户信息\n    客户历史问题记录\n    ```\n\n    主要功能：\n\n    ```markdown\n    客户反馈\n    解决方案\n    满意度调查\n    呼叫中心\n    ```\n\n    其它功能：\n\n    ```markdown\n    办公管理\n    行政管理\n    进销存\n    ```\n\n## 运行范围\n\n**业务员**\n\n* 客户信息的录入和维护的方式\n\n\n\n```markdown\n名片\n其他途径\n```   \n\n> 要求：能及时对电话，地址等信息变更\n\n* 练习记录的录入的方式：\n\n```markdown\n电话\n邮件\n即时通知\n上门拜访\n公司网站\n电子邮件\n实时聊天\n营销材料\n最近社交媒体\n```\n\n* 投价单的录入信息\n\n```md\n基本客户信息\n沟通信息\n报价信息\n```\n\n> 要求：最好形成可打印的模板\n\n**业务员日常功能**\n\n* 客户联系提醒\n\n```markdown\n今天或明天应联系客户\n逾期未联系客户\n逾期未下单客户\n长期没有业务往来客户\n```\n\n* 客户资料查询和统计分析\n\n    按客户名称关键词模糊查询，防止撞单\n\n* 每天客户联系拜访情况的查询和分析\n\n* 业绩查询和统计\n\n* 应收款的提醒\n\n* 工资，提成和费用的查询\n\n**销售助理**\n\n合同订单录入\n\n* 收到传真订单和签订销售合同后凯撒录入系统\n\n```markdown\n订购产品的型号\n数量\n单价\n金额\n```\n\n出货单的录入\n\n* 录入收获单\n\n```markdown\n出货日期\n出货仓\n出货产品明细\n```\n> 注：如果以前录过，可以将录入信息数据导出模板使用\n\n**销售助理日常适用**\n\n* 订单查询及交货提醒\n\n* 统计销售部门业绩\n\n* 打印出货单\n\n**财务主管**\n\n* 收款后做收款处理，冲销应收款\n\n* 付款后做付款处理，冲销应付款\n\n* 录企业运营的各种费用\n\n```markdown\n房租\n水电费\n办公支出\n员工工资\n提成奖金\n各种销售费用\n```\n\n**日常使用**\n\n* 应收款提醒\n\n```markdown\n日、周有哪些应收款\n逾期应收款\n```\n\n逾期应收款日期：30天内，30～60天，60～90天，90～180天，180天以上\n\n* 应收款统计分析\n\n```markdown\n哪些客户应收款比例大\n哪些用户逾期金额超额\n哪些用户账龄过长\n```\n\n* 应收/付款查询和统计，统计任一时期收/付款进账/出账明细，用图表显示\n\n```markdown\n按收/付款方式\n按业务员\n按年/月\n```\n\n* 费用查询统计，查各类费用，明细支出情况，用图标显示\n\n```markdown\n按费用大类\n费用项目\n按年/月\n按业务员\n```\n\n以上核心：数据哪来？--> 怎么处理 --> 怎么展示\n\n**采购员**\n\n采购订单录入\n\n```markdown\n供应商名称\n产品明细\n```\n\n> 要求：可打印出模板\n\n采购收获单\n\n```markdown\n收货信息\n```\n\n> 如果已有相应订单信息，可直接导出使用\n\n## 客户关怀\n\n* 客户服务\n\n```markdown\n产品信息\n服务建议\n```\n\n* 产品质量\n\n```markdown\n符合有关标准\n适合客户使用\n保证安全可靠\n```\n\n* 服务质量\n\n```markdown\n客户体验\n```\n\n* 售后服务\n\n```markdown\n售后查询\n投诉\n维护\n修理\n```\n\n## 一些问题解决方案\n\n1. 遗忘老客户\n\n数据-->市场预测分析-->制定计划和目标-->激励销售人员\n\n2. 客户信息散，管理凌乱\n\n* 企业资源分类\n\n```markdown\n客户\n竞争对手\n合作伙伴\n```\n\n3. 软件灵活性差，开发升级难\n\n* 企业自己要有强大的个性化自定制功能\n\n## 指标\n\n客户概述分析 profiling\n\n```markdown\n客户层次\n客户风险\n客户爱好\n客户习惯\n```\n\n客户忠诚分析 persistency\n\n* 客户对产品或商业机构\n\n```markdown\n信用程度\n持久性\n变动情况\n```\n\n客户利润分析 profitability\n\n* 消费产品\n  \n```markdown\n边缘利润\n总利润\n净利润\n```\n\n客户性能分析 performance\n\n* 消费产品的消费额\n\n```markdown\n种类\n渠道\n销售地点\n```\n\n客户未来分析 prospecting\n\n```markdown\n客户数量\n客户类别\n```\n\n客户产品分析 product\n\n```markdown\n产品设计\n关联性\n供应链\n```\n\n客户促销分析 promotion\n\n```markdown\n广告\n寻传\n```\n\n## 主要步骤\n\n1. 确定业务计划\n\n2. 建立CRM员工队伍\n\n3. 评估销售，服务过程\n\n4. 明确实际需求\n\n* 销售管理人员\n\n```markdown\n市场预测\n销售渠道管理\n销售报告的提交\n```\n\n* 销售人员\n\n```markdown\n销售额\n销售建议\n产品目录\n客户资料\n```\n\n5. 选择供应商\n\n6. 开发与部署\n\n呼叫中心：集中公司的一些信息资料提供客户剖析，业务剖析，找出有价值用户，将其转化为忠实客户\n\n## 吸引新客户方法\n\n1. 市场调查，收集客户名单\n\n2. 公司活动，抽奖\n\n3. 开发已签单客户，寻求转介绍\n\n10C\n\n1.客户轮廓 customer profile\n\n```markdown\n人口统计信息\n消费心理特征\n消费需求\n消费行为模式\n交易记录\n信用\n```\n\n2. 客户知识 customer knowledge\n\n3. 客户区隔 customer segmentation\n\n* 区分客户\n\n```markdown\n消费者对产品/服务(p/s)的相似欲望与需求\n客户获利率\n```\n\n4. 客户化/定制化 customization\n\n* 针对单一顾客，量身定制\n\n```markdown\n一对一的价格\n一对一的促销\n一对一的通路\n```\n\n> 大量营销 --> 区隔营销 --> 一对一营销\n\n5. 客户价值 customer value\n\n* 从特定p/s获得利益集合\n\n```markdown\n产品价值\n服务价值\n员工友谊价值\n品牌价值\n```\n\n6. 客户满意度 customer satisfaction\n\n7. 顾客发展 customer development\n\n* 针对老客户提供荷包贡献率(Wallet Ration)，方法：\n\n```markdown\n交叉销售：推荐其他产品\n高级销售：推荐本产品的高级版\n```\n\n8. 客户保留率 customer retention\n\n* 不让老客户流失的方法，产品需要\n\n```markdown\n优秀\n贴心\n量身订购\n```\n\n9. 客户赢取率 customer acquistion\n\n* 比竞争对手更好的产品\n\n10. 客户获利率 customer profitability\n\n* 客户终生对企业贡献的纯利润\n\n\n\n第一个CRM\n\n* SugarCRM\n\n加个功能：社交媒体\n\n社交CRM：Base，Nutshell\n\n仪表盘：客户信息，过去销售，先前的营销活动\n\n运营CRM：销售人员自动化，营销自动化，服务自动化\n\n营销自动化：定时发送邮件，社交媒体上发送社交信息\n\n服务自动化：客户通过电话，邮件，知识库，服务门户，常见问题解答\n\n协作：整合第三方外部相关者，供应商，供应商和分销商，信息整合部门/分发信息\n\n客户数据平台CDP\n\n以客户为中心的关系管理CCRM\n\n财务投资回报ROI\n\n感知质量\n\n关系，价值和品牌\n\n客户利益的价值驱动因素：CRM为公司提供管理客户请求和内容的能力。呼叫中心软件能够将经理与各客户联系起来\n\nGPS\n\n供应链关系管理VRM\n\n","slug":"2019-06-04-01-CRM资料收集","published":1,"updated":"2019-08-10T04:35:46.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v5001554tnhkyh12ce","content":"<center><font size=\"4\" color=\"red\">01_CRM的第一版资料</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"CRM项目设计\"><a href=\"#CRM项目设计\" class=\"headerlink\" title=\"CRM项目设计\"></a>CRM项目设计</h1><h2 id=\"CRM概述\"><a href=\"#CRM概述\" class=\"headerlink\" title=\"CRM概述\"></a>CRM概述</h2><p>CRM：Customer Relationship Management</p>\n<p><strong>最终目标</strong>：吸引新客户，保留老客户以及将已有客户转为忠实客户，增强市场。</p>\n<p>CRM:以客户为中心，客户需要什么，我就给他提供什么</p>\n<p><strong>CRM的两个任务：</strong></p>\n<ul>\n<li><p>1.获取客户</p>\n</li>\n<li><p>2.提高客户忠诚度</p>\n</li>\n</ul>\n<p><strong>客户信息处理技术：</strong></p>\n<ul>\n<li><p>1.数据仓库</p>\n</li>\n<li><p>2.商业智能</p>\n</li>\n<li><p>3.知识发现</p>\n</li>\n</ul>\n<p>CRM是一个获取保持和增加可获利客户的方法和过程</p>\n<p>CRM是<strong>企业业务流程</strong>的管理</p>\n<p><strong>CRM的核心步骤：</strong></p>\n<ul>\n<li><p>1.市场营销</p>\n</li>\n<li><p>2.销售</p>\n</li>\n<li><p>3.客户服务</p>\n</li>\n<li><p>4.技术支持</p>\n</li>\n</ul>\n<p><strong>CRM的模块：</strong></p>\n<ul>\n<li><p>1.客户资源管理</p>\n</li>\n<li><p>2。销售管理</p>\n</li>\n<li><p>3.客户服务管理</p>\n</li>\n<li><p>4.日常事务管理</p>\n</li>\n</ul>\n<p><strong>CRM对网络的要求：</strong></p>\n<p>公网和内网都可以实现</p>\n<p><strong>CRM的手段：</strong></p>\n<p>判断，选择，争取和保持客户所需的全部商业过程，对客户资料详细分析</p>\n<p><strong>CRM分类：</strong></p>\n<p>操作型：业务流程、信息记录、提供便捷的操作、人性化的界面</p>\n<p>分析型：基于大量的企业日常数据，对数据挖掘分析，找出客户产品、服务的特征，从而修正企业的产品策略、市场策略。</p>\n<p><strong>CRM按功能分：</strong></p>\n<ul>\n<li><p>市场营销中的客户关系管理</p>\n<ul>\n<li><p>分析目标群体：客户行业、职业、年龄、地域等</p>\n</li>\n<li><p>活动–&gt;产生/销售–&gt;报表–&gt;决策</p>\n</li>\n</ul>\n</li>\n<li><p>销售过程中的客户关系管理</p>\n<p>  包括：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">潜在客户</span><br><span class=\"line\">客户</span><br><span class=\"line\">联系人</span><br><span class=\"line\">业务机会</span><br><span class=\"line\">订单</span><br><span class=\"line\">汇款单</span><br><span class=\"line\">报表统计图</span><br></pre></td></tr></table></figure>\n<p>  业务员要做的</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记录沟通内容</span><br><span class=\"line\">建立日程安排</span><br><span class=\"line\">查询预约提醒</span><br><span class=\"line\">快速浏览客户数据</span><br><span class=\"line\">大额业务提醒</span><br><span class=\"line\">销售漏斗分析</span><br><span class=\"line\">业绩指标统计</span><br><span class=\"line\">业务阶段划分</span><br><span class=\"line\">客户服务过程中的客户关系管理</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>客户服务过程中的客户关系管理</p>\n<p>  目的：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获的问题客户信息</span><br><span class=\"line\">客户历史问题记录</span><br></pre></td></tr></table></figure>\n<p>  主要功能：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户反馈</span><br><span class=\"line\">解决方案</span><br><span class=\"line\">满意度调查</span><br><span class=\"line\">呼叫中心</span><br></pre></td></tr></table></figure>\n<p>  其它功能：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">办公管理</span><br><span class=\"line\">行政管理</span><br><span class=\"line\">进销存</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"运行范围\"><a href=\"#运行范围\" class=\"headerlink\" title=\"运行范围\"></a>运行范围</h2><p><strong>业务员</strong></p>\n<ul>\n<li>客户信息的录入和维护的方式</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">名片</span><br><span class=\"line\">其他途径</span><br><span class=\"line\"><span class=\"code\">```   </span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">&gt; 要求：能及时对电话，地址等信息变更</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">* 练习记录的录入的方式：</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">```markdown</span></span><br><span class=\"line\"><span class=\"code\">电话</span></span><br><span class=\"line\"><span class=\"code\">邮件</span></span><br><span class=\"line\"><span class=\"code\">即时通知</span></span><br><span class=\"line\"><span class=\"code\">上门拜访</span></span><br><span class=\"line\"><span class=\"code\">公司网站</span></span><br><span class=\"line\"><span class=\"code\">电子邮件</span></span><br><span class=\"line\"><span class=\"code\">实时聊天</span></span><br><span class=\"line\"><span class=\"code\">营销材料</span></span><br><span class=\"line\"><span class=\"code\">最近社交媒体</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>投价单的录入信息</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本客户信息</span><br><span class=\"line\">沟通信息</span><br><span class=\"line\">报价信息</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>要求：最好形成可打印的模板</p>\n</blockquote>\n<p><strong>业务员日常功能</strong></p>\n<ul>\n<li>客户联系提醒</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">今天或明天应联系客户</span><br><span class=\"line\">逾期未联系客户</span><br><span class=\"line\">逾期未下单客户</span><br><span class=\"line\">长期没有业务往来客户</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>客户资料查询和统计分析</p>\n<p>  按客户名称关键词模糊查询，防止撞单</p>\n</li>\n<li><p>每天客户联系拜访情况的查询和分析</p>\n</li>\n<li><p>业绩查询和统计</p>\n</li>\n<li><p>应收款的提醒</p>\n</li>\n<li><p>工资，提成和费用的查询</p>\n</li>\n</ul>\n<p><strong>销售助理</strong></p>\n<p>合同订单录入</p>\n<ul>\n<li>收到传真订单和签订销售合同后凯撒录入系统</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">订购产品的型号</span><br><span class=\"line\">数量</span><br><span class=\"line\">单价</span><br><span class=\"line\">金额</span><br></pre></td></tr></table></figure>\n<p>出货单的录入</p>\n<ul>\n<li>录入收获单</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">出货日期</span><br><span class=\"line\">出货仓</span><br><span class=\"line\">出货产品明细</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：如果以前录过，可以将录入信息数据导出模板使用</p>\n</blockquote>\n<p><strong>销售助理日常适用</strong></p>\n<ul>\n<li><p>订单查询及交货提醒</p>\n</li>\n<li><p>统计销售部门业绩</p>\n</li>\n<li><p>打印出货单</p>\n</li>\n</ul>\n<p><strong>财务主管</strong></p>\n<ul>\n<li><p>收款后做收款处理，冲销应收款</p>\n</li>\n<li><p>付款后做付款处理，冲销应付款</p>\n</li>\n<li><p>录企业运营的各种费用</p>\n</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">房租</span><br><span class=\"line\">水电费</span><br><span class=\"line\">办公支出</span><br><span class=\"line\">员工工资</span><br><span class=\"line\">提成奖金</span><br><span class=\"line\">各种销售费用</span><br></pre></td></tr></table></figure>\n<p><strong>日常使用</strong></p>\n<ul>\n<li>应收款提醒</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">日、周有哪些应收款</span><br><span class=\"line\">逾期应收款</span><br></pre></td></tr></table></figure>\n<p>逾期应收款日期：30天内，30～60天，60～90天，90～180天，180天以上</p>\n<ul>\n<li>应收款统计分析</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">哪些客户应收款比例大</span><br><span class=\"line\">哪些用户逾期金额超额</span><br><span class=\"line\">哪些用户账龄过长</span><br></pre></td></tr></table></figure>\n<ul>\n<li>应收/付款查询和统计，统计任一时期收/付款进账/出账明细，用图表显示</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按收/付款方式</span><br><span class=\"line\">按业务员</span><br><span class=\"line\">按年/月</span><br></pre></td></tr></table></figure>\n<ul>\n<li>费用查询统计，查各类费用，明细支出情况，用图标显示</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按费用大类</span><br><span class=\"line\">费用项目</span><br><span class=\"line\">按年/月</span><br><span class=\"line\">按业务员</span><br></pre></td></tr></table></figure>\n<p>以上核心：数据哪来？–&gt; 怎么处理 –&gt; 怎么展示</p>\n<p><strong>采购员</strong></p>\n<p>采购订单录入</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">供应商名称</span><br><span class=\"line\">产品明细</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>要求：可打印出模板</p>\n</blockquote>\n<p>采购收获单</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">收货信息</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果已有相应订单信息，可直接导出使用</p>\n</blockquote>\n<h2 id=\"客户关怀\"><a href=\"#客户关怀\" class=\"headerlink\" title=\"客户关怀\"></a>客户关怀</h2><ul>\n<li>客户服务</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">产品信息</span><br><span class=\"line\">服务建议</span><br></pre></td></tr></table></figure>\n<ul>\n<li>产品质量</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">符合有关标准</span><br><span class=\"line\">适合客户使用</span><br><span class=\"line\">保证安全可靠</span><br></pre></td></tr></table></figure>\n<ul>\n<li>服务质量</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户体验</span><br></pre></td></tr></table></figure>\n<ul>\n<li>售后服务</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">售后查询</span><br><span class=\"line\">投诉</span><br><span class=\"line\">维护</span><br><span class=\"line\">修理</span><br></pre></td></tr></table></figure>\n<h2 id=\"一些问题解决方案\"><a href=\"#一些问题解决方案\" class=\"headerlink\" title=\"一些问题解决方案\"></a>一些问题解决方案</h2><ol>\n<li>遗忘老客户</li>\n</ol>\n<p>数据–&gt;市场预测分析–&gt;制定计划和目标–&gt;激励销售人员</p>\n<ol start=\"2\">\n<li>客户信息散，管理凌乱</li>\n</ol>\n<ul>\n<li>企业资源分类</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户</span><br><span class=\"line\">竞争对手</span><br><span class=\"line\">合作伙伴</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>软件灵活性差，开发升级难</li>\n</ol>\n<ul>\n<li>企业自己要有强大的个性化自定制功能</li>\n</ul>\n<h2 id=\"指标\"><a href=\"#指标\" class=\"headerlink\" title=\"指标\"></a>指标</h2><p>客户概述分析 profiling</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户层次</span><br><span class=\"line\">客户风险</span><br><span class=\"line\">客户爱好</span><br><span class=\"line\">客户习惯</span><br></pre></td></tr></table></figure>\n<p>客户忠诚分析 persistency</p>\n<ul>\n<li>客户对产品或商业机构</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">信用程度</span><br><span class=\"line\">持久性</span><br><span class=\"line\">变动情况</span><br></pre></td></tr></table></figure>\n<p>客户利润分析 profitability</p>\n<ul>\n<li>消费产品</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">边缘利润</span><br><span class=\"line\">总利润</span><br><span class=\"line\">净利润</span><br></pre></td></tr></table></figure>\n<p>客户性能分析 performance</p>\n<ul>\n<li>消费产品的消费额</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">种类</span><br><span class=\"line\">渠道</span><br><span class=\"line\">销售地点</span><br></pre></td></tr></table></figure>\n<p>客户未来分析 prospecting</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户数量</span><br><span class=\"line\">客户类别</span><br></pre></td></tr></table></figure>\n<p>客户产品分析 product</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">产品设计</span><br><span class=\"line\">关联性</span><br><span class=\"line\">供应链</span><br></pre></td></tr></table></figure>\n<p>客户促销分析 promotion</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">广告</span><br><span class=\"line\">寻传</span><br></pre></td></tr></table></figure>\n<h2 id=\"主要步骤\"><a href=\"#主要步骤\" class=\"headerlink\" title=\"主要步骤\"></a>主要步骤</h2><ol>\n<li><p>确定业务计划</p>\n</li>\n<li><p>建立CRM员工队伍</p>\n</li>\n<li><p>评估销售，服务过程</p>\n</li>\n<li><p>明确实际需求</p>\n</li>\n</ol>\n<ul>\n<li>销售管理人员</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">市场预测</span><br><span class=\"line\">销售渠道管理</span><br><span class=\"line\">销售报告的提交</span><br></pre></td></tr></table></figure>\n<ul>\n<li>销售人员</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">销售额</span><br><span class=\"line\">销售建议</span><br><span class=\"line\">产品目录</span><br><span class=\"line\">客户资料</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li><p>选择供应商</p>\n</li>\n<li><p>开发与部署</p>\n</li>\n</ol>\n<p>呼叫中心：集中公司的一些信息资料提供客户剖析，业务剖析，找出有价值用户，将其转化为忠实客户</p>\n<h2 id=\"吸引新客户方法\"><a href=\"#吸引新客户方法\" class=\"headerlink\" title=\"吸引新客户方法\"></a>吸引新客户方法</h2><ol>\n<li><p>市场调查，收集客户名单</p>\n</li>\n<li><p>公司活动，抽奖</p>\n</li>\n<li><p>开发已签单客户，寻求转介绍</p>\n</li>\n</ol>\n<p>10C</p>\n<p>1.客户轮廓 customer profile</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">人口统计信息</span><br><span class=\"line\">消费心理特征</span><br><span class=\"line\">消费需求</span><br><span class=\"line\">消费行为模式</span><br><span class=\"line\">交易记录</span><br><span class=\"line\">信用</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>客户知识 customer knowledge</p>\n</li>\n<li><p>客户区隔 customer segmentation</p>\n</li>\n</ol>\n<ul>\n<li>区分客户</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">消费者对产品/服务(p/s)的相似欲望与需求</span><br><span class=\"line\">客户获利率</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>客户化/定制化 customization</li>\n</ol>\n<ul>\n<li>针对单一顾客，量身定制</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一对一的价格</span><br><span class=\"line\">一对一的促销</span><br><span class=\"line\">一对一的通路</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>大量营销 –&gt; 区隔营销 –&gt; 一对一营销</p>\n</blockquote>\n<ol start=\"5\">\n<li>客户价值 customer value</li>\n</ol>\n<ul>\n<li>从特定p/s获得利益集合</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">产品价值</span><br><span class=\"line\">服务价值</span><br><span class=\"line\">员工友谊价值</span><br><span class=\"line\">品牌价值</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><p>客户满意度 customer satisfaction</p>\n</li>\n<li><p>顾客发展 customer development</p>\n</li>\n</ol>\n<ul>\n<li>针对老客户提供荷包贡献率(Wallet Ration)，方法：</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">交叉销售：推荐其他产品</span><br><span class=\"line\">高级销售：推荐本产品的高级版</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>客户保留率 customer retention</li>\n</ol>\n<ul>\n<li>不让老客户流失的方法，产品需要</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">优秀</span><br><span class=\"line\">贴心</span><br><span class=\"line\">量身订购</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>客户赢取率 customer acquistion</li>\n</ol>\n<ul>\n<li>比竞争对手更好的产品</li>\n</ul>\n<ol start=\"10\">\n<li>客户获利率 customer profitability</li>\n</ol>\n<ul>\n<li>客户终生对企业贡献的纯利润</li>\n</ul>\n<p>第一个CRM</p>\n<ul>\n<li>SugarCRM</li>\n</ul>\n<p>加个功能：社交媒体</p>\n<p>社交CRM：Base，Nutshell</p>\n<p>仪表盘：客户信息，过去销售，先前的营销活动</p>\n<p>运营CRM：销售人员自动化，营销自动化，服务自动化</p>\n<p>营销自动化：定时发送邮件，社交媒体上发送社交信息</p>\n<p>服务自动化：客户通过电话，邮件，知识库，服务门户，常见问题解答</p>\n<p>协作：整合第三方外部相关者，供应商，供应商和分销商，信息整合部门/分发信息</p>\n<p>客户数据平台CDP</p>\n<p>以客户为中心的关系管理CCRM</p>\n<p>财务投资回报ROI</p>\n<p>感知质量</p>\n<p>关系，价值和品牌</p>\n<p>客户利益的价值驱动因素：CRM为公司提供管理客户请求和内容的能力。呼叫中心软件能够将经理与各客户联系起来</p>\n<p>GPS</p>\n<p>供应链关系管理VRM</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">01_CRM的第一版资料</font></center>","more":"<h1 id=\"CRM项目设计\"><a href=\"#CRM项目设计\" class=\"headerlink\" title=\"CRM项目设计\"></a>CRM项目设计</h1><h2 id=\"CRM概述\"><a href=\"#CRM概述\" class=\"headerlink\" title=\"CRM概述\"></a>CRM概述</h2><p>CRM：Customer Relationship Management</p>\n<p><strong>最终目标</strong>：吸引新客户，保留老客户以及将已有客户转为忠实客户，增强市场。</p>\n<p>CRM:以客户为中心，客户需要什么，我就给他提供什么</p>\n<p><strong>CRM的两个任务：</strong></p>\n<ul>\n<li><p>1.获取客户</p>\n</li>\n<li><p>2.提高客户忠诚度</p>\n</li>\n</ul>\n<p><strong>客户信息处理技术：</strong></p>\n<ul>\n<li><p>1.数据仓库</p>\n</li>\n<li><p>2.商业智能</p>\n</li>\n<li><p>3.知识发现</p>\n</li>\n</ul>\n<p>CRM是一个获取保持和增加可获利客户的方法和过程</p>\n<p>CRM是<strong>企业业务流程</strong>的管理</p>\n<p><strong>CRM的核心步骤：</strong></p>\n<ul>\n<li><p>1.市场营销</p>\n</li>\n<li><p>2.销售</p>\n</li>\n<li><p>3.客户服务</p>\n</li>\n<li><p>4.技术支持</p>\n</li>\n</ul>\n<p><strong>CRM的模块：</strong></p>\n<ul>\n<li><p>1.客户资源管理</p>\n</li>\n<li><p>2。销售管理</p>\n</li>\n<li><p>3.客户服务管理</p>\n</li>\n<li><p>4.日常事务管理</p>\n</li>\n</ul>\n<p><strong>CRM对网络的要求：</strong></p>\n<p>公网和内网都可以实现</p>\n<p><strong>CRM的手段：</strong></p>\n<p>判断，选择，争取和保持客户所需的全部商业过程，对客户资料详细分析</p>\n<p><strong>CRM分类：</strong></p>\n<p>操作型：业务流程、信息记录、提供便捷的操作、人性化的界面</p>\n<p>分析型：基于大量的企业日常数据，对数据挖掘分析，找出客户产品、服务的特征，从而修正企业的产品策略、市场策略。</p>\n<p><strong>CRM按功能分：</strong></p>\n<ul>\n<li><p>市场营销中的客户关系管理</p>\n<ul>\n<li><p>分析目标群体：客户行业、职业、年龄、地域等</p>\n</li>\n<li><p>活动–&gt;产生/销售–&gt;报表–&gt;决策</p>\n</li>\n</ul>\n</li>\n<li><p>销售过程中的客户关系管理</p>\n<p>  包括：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">潜在客户</span><br><span class=\"line\">客户</span><br><span class=\"line\">联系人</span><br><span class=\"line\">业务机会</span><br><span class=\"line\">订单</span><br><span class=\"line\">汇款单</span><br><span class=\"line\">报表统计图</span><br></pre></td></tr></table></figure>\n<p>  业务员要做的</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">记录沟通内容</span><br><span class=\"line\">建立日程安排</span><br><span class=\"line\">查询预约提醒</span><br><span class=\"line\">快速浏览客户数据</span><br><span class=\"line\">大额业务提醒</span><br><span class=\"line\">销售漏斗分析</span><br><span class=\"line\">业绩指标统计</span><br><span class=\"line\">业务阶段划分</span><br><span class=\"line\">客户服务过程中的客户关系管理</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>客户服务过程中的客户关系管理</p>\n<p>  目的：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">获的问题客户信息</span><br><span class=\"line\">客户历史问题记录</span><br></pre></td></tr></table></figure>\n<p>  主要功能：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户反馈</span><br><span class=\"line\">解决方案</span><br><span class=\"line\">满意度调查</span><br><span class=\"line\">呼叫中心</span><br></pre></td></tr></table></figure>\n<p>  其它功能：</p>\n  <figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">办公管理</span><br><span class=\"line\">行政管理</span><br><span class=\"line\">进销存</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"运行范围\"><a href=\"#运行范围\" class=\"headerlink\" title=\"运行范围\"></a>运行范围</h2><p><strong>业务员</strong></p>\n<ul>\n<li>客户信息的录入和维护的方式</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">名片</span><br><span class=\"line\">其他途径</span><br><span class=\"line\"><span class=\"code\">```   </span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">&gt; 要求：能及时对电话，地址等信息变更</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">* 练习记录的录入的方式：</span></span><br><span class=\"line\"><span class=\"code\"></span></span><br><span class=\"line\"><span class=\"code\">```markdown</span></span><br><span class=\"line\"><span class=\"code\">电话</span></span><br><span class=\"line\"><span class=\"code\">邮件</span></span><br><span class=\"line\"><span class=\"code\">即时通知</span></span><br><span class=\"line\"><span class=\"code\">上门拜访</span></span><br><span class=\"line\"><span class=\"code\">公司网站</span></span><br><span class=\"line\"><span class=\"code\">电子邮件</span></span><br><span class=\"line\"><span class=\"code\">实时聊天</span></span><br><span class=\"line\"><span class=\"code\">营销材料</span></span><br><span class=\"line\"><span class=\"code\">最近社交媒体</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>投价单的录入信息</li>\n</ul>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">基本客户信息</span><br><span class=\"line\">沟通信息</span><br><span class=\"line\">报价信息</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>要求：最好形成可打印的模板</p>\n</blockquote>\n<p><strong>业务员日常功能</strong></p>\n<ul>\n<li>客户联系提醒</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">今天或明天应联系客户</span><br><span class=\"line\">逾期未联系客户</span><br><span class=\"line\">逾期未下单客户</span><br><span class=\"line\">长期没有业务往来客户</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>客户资料查询和统计分析</p>\n<p>  按客户名称关键词模糊查询，防止撞单</p>\n</li>\n<li><p>每天客户联系拜访情况的查询和分析</p>\n</li>\n<li><p>业绩查询和统计</p>\n</li>\n<li><p>应收款的提醒</p>\n</li>\n<li><p>工资，提成和费用的查询</p>\n</li>\n</ul>\n<p><strong>销售助理</strong></p>\n<p>合同订单录入</p>\n<ul>\n<li>收到传真订单和签订销售合同后凯撒录入系统</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">订购产品的型号</span><br><span class=\"line\">数量</span><br><span class=\"line\">单价</span><br><span class=\"line\">金额</span><br></pre></td></tr></table></figure>\n<p>出货单的录入</p>\n<ul>\n<li>录入收获单</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">出货日期</span><br><span class=\"line\">出货仓</span><br><span class=\"line\">出货产品明细</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注：如果以前录过，可以将录入信息数据导出模板使用</p>\n</blockquote>\n<p><strong>销售助理日常适用</strong></p>\n<ul>\n<li><p>订单查询及交货提醒</p>\n</li>\n<li><p>统计销售部门业绩</p>\n</li>\n<li><p>打印出货单</p>\n</li>\n</ul>\n<p><strong>财务主管</strong></p>\n<ul>\n<li><p>收款后做收款处理，冲销应收款</p>\n</li>\n<li><p>付款后做付款处理，冲销应付款</p>\n</li>\n<li><p>录企业运营的各种费用</p>\n</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">房租</span><br><span class=\"line\">水电费</span><br><span class=\"line\">办公支出</span><br><span class=\"line\">员工工资</span><br><span class=\"line\">提成奖金</span><br><span class=\"line\">各种销售费用</span><br></pre></td></tr></table></figure>\n<p><strong>日常使用</strong></p>\n<ul>\n<li>应收款提醒</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">日、周有哪些应收款</span><br><span class=\"line\">逾期应收款</span><br></pre></td></tr></table></figure>\n<p>逾期应收款日期：30天内，30～60天，60～90天，90～180天，180天以上</p>\n<ul>\n<li>应收款统计分析</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">哪些客户应收款比例大</span><br><span class=\"line\">哪些用户逾期金额超额</span><br><span class=\"line\">哪些用户账龄过长</span><br></pre></td></tr></table></figure>\n<ul>\n<li>应收/付款查询和统计，统计任一时期收/付款进账/出账明细，用图表显示</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按收/付款方式</span><br><span class=\"line\">按业务员</span><br><span class=\"line\">按年/月</span><br></pre></td></tr></table></figure>\n<ul>\n<li>费用查询统计，查各类费用，明细支出情况，用图标显示</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">按费用大类</span><br><span class=\"line\">费用项目</span><br><span class=\"line\">按年/月</span><br><span class=\"line\">按业务员</span><br></pre></td></tr></table></figure>\n<p>以上核心：数据哪来？–&gt; 怎么处理 –&gt; 怎么展示</p>\n<p><strong>采购员</strong></p>\n<p>采购订单录入</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">供应商名称</span><br><span class=\"line\">产品明细</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>要求：可打印出模板</p>\n</blockquote>\n<p>采购收获单</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">收货信息</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果已有相应订单信息，可直接导出使用</p>\n</blockquote>\n<h2 id=\"客户关怀\"><a href=\"#客户关怀\" class=\"headerlink\" title=\"客户关怀\"></a>客户关怀</h2><ul>\n<li>客户服务</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">产品信息</span><br><span class=\"line\">服务建议</span><br></pre></td></tr></table></figure>\n<ul>\n<li>产品质量</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">符合有关标准</span><br><span class=\"line\">适合客户使用</span><br><span class=\"line\">保证安全可靠</span><br></pre></td></tr></table></figure>\n<ul>\n<li>服务质量</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户体验</span><br></pre></td></tr></table></figure>\n<ul>\n<li>售后服务</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">售后查询</span><br><span class=\"line\">投诉</span><br><span class=\"line\">维护</span><br><span class=\"line\">修理</span><br></pre></td></tr></table></figure>\n<h2 id=\"一些问题解决方案\"><a href=\"#一些问题解决方案\" class=\"headerlink\" title=\"一些问题解决方案\"></a>一些问题解决方案</h2><ol>\n<li>遗忘老客户</li>\n</ol>\n<p>数据–&gt;市场预测分析–&gt;制定计划和目标–&gt;激励销售人员</p>\n<ol start=\"2\">\n<li>客户信息散，管理凌乱</li>\n</ol>\n<ul>\n<li>企业资源分类</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户</span><br><span class=\"line\">竞争对手</span><br><span class=\"line\">合作伙伴</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>软件灵活性差，开发升级难</li>\n</ol>\n<ul>\n<li>企业自己要有强大的个性化自定制功能</li>\n</ul>\n<h2 id=\"指标\"><a href=\"#指标\" class=\"headerlink\" title=\"指标\"></a>指标</h2><p>客户概述分析 profiling</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户层次</span><br><span class=\"line\">客户风险</span><br><span class=\"line\">客户爱好</span><br><span class=\"line\">客户习惯</span><br></pre></td></tr></table></figure>\n<p>客户忠诚分析 persistency</p>\n<ul>\n<li>客户对产品或商业机构</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">信用程度</span><br><span class=\"line\">持久性</span><br><span class=\"line\">变动情况</span><br></pre></td></tr></table></figure>\n<p>客户利润分析 profitability</p>\n<ul>\n<li>消费产品</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">边缘利润</span><br><span class=\"line\">总利润</span><br><span class=\"line\">净利润</span><br></pre></td></tr></table></figure>\n<p>客户性能分析 performance</p>\n<ul>\n<li>消费产品的消费额</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">种类</span><br><span class=\"line\">渠道</span><br><span class=\"line\">销售地点</span><br></pre></td></tr></table></figure>\n<p>客户未来分析 prospecting</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">客户数量</span><br><span class=\"line\">客户类别</span><br></pre></td></tr></table></figure>\n<p>客户产品分析 product</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">产品设计</span><br><span class=\"line\">关联性</span><br><span class=\"line\">供应链</span><br></pre></td></tr></table></figure>\n<p>客户促销分析 promotion</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">广告</span><br><span class=\"line\">寻传</span><br></pre></td></tr></table></figure>\n<h2 id=\"主要步骤\"><a href=\"#主要步骤\" class=\"headerlink\" title=\"主要步骤\"></a>主要步骤</h2><ol>\n<li><p>确定业务计划</p>\n</li>\n<li><p>建立CRM员工队伍</p>\n</li>\n<li><p>评估销售，服务过程</p>\n</li>\n<li><p>明确实际需求</p>\n</li>\n</ol>\n<ul>\n<li>销售管理人员</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">市场预测</span><br><span class=\"line\">销售渠道管理</span><br><span class=\"line\">销售报告的提交</span><br></pre></td></tr></table></figure>\n<ul>\n<li>销售人员</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">销售额</span><br><span class=\"line\">销售建议</span><br><span class=\"line\">产品目录</span><br><span class=\"line\">客户资料</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li><p>选择供应商</p>\n</li>\n<li><p>开发与部署</p>\n</li>\n</ol>\n<p>呼叫中心：集中公司的一些信息资料提供客户剖析，业务剖析，找出有价值用户，将其转化为忠实客户</p>\n<h2 id=\"吸引新客户方法\"><a href=\"#吸引新客户方法\" class=\"headerlink\" title=\"吸引新客户方法\"></a>吸引新客户方法</h2><ol>\n<li><p>市场调查，收集客户名单</p>\n</li>\n<li><p>公司活动，抽奖</p>\n</li>\n<li><p>开发已签单客户，寻求转介绍</p>\n</li>\n</ol>\n<p>10C</p>\n<p>1.客户轮廓 customer profile</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">人口统计信息</span><br><span class=\"line\">消费心理特征</span><br><span class=\"line\">消费需求</span><br><span class=\"line\">消费行为模式</span><br><span class=\"line\">交易记录</span><br><span class=\"line\">信用</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><p>客户知识 customer knowledge</p>\n</li>\n<li><p>客户区隔 customer segmentation</p>\n</li>\n</ol>\n<ul>\n<li>区分客户</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">消费者对产品/服务(p/s)的相似欲望与需求</span><br><span class=\"line\">客户获利率</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>客户化/定制化 customization</li>\n</ol>\n<ul>\n<li>针对单一顾客，量身定制</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">一对一的价格</span><br><span class=\"line\">一对一的促销</span><br><span class=\"line\">一对一的通路</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>大量营销 –&gt; 区隔营销 –&gt; 一对一营销</p>\n</blockquote>\n<ol start=\"5\">\n<li>客户价值 customer value</li>\n</ol>\n<ul>\n<li>从特定p/s获得利益集合</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">产品价值</span><br><span class=\"line\">服务价值</span><br><span class=\"line\">员工友谊价值</span><br><span class=\"line\">品牌价值</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li><p>客户满意度 customer satisfaction</p>\n</li>\n<li><p>顾客发展 customer development</p>\n</li>\n</ol>\n<ul>\n<li>针对老客户提供荷包贡献率(Wallet Ration)，方法：</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">交叉销售：推荐其他产品</span><br><span class=\"line\">高级销售：推荐本产品的高级版</span><br></pre></td></tr></table></figure>\n<ol start=\"8\">\n<li>客户保留率 customer retention</li>\n</ol>\n<ul>\n<li>不让老客户流失的方法，产品需要</li>\n</ul>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">优秀</span><br><span class=\"line\">贴心</span><br><span class=\"line\">量身订购</span><br></pre></td></tr></table></figure>\n<ol start=\"9\">\n<li>客户赢取率 customer acquistion</li>\n</ol>\n<ul>\n<li>比竞争对手更好的产品</li>\n</ul>\n<ol start=\"10\">\n<li>客户获利率 customer profitability</li>\n</ol>\n<ul>\n<li>客户终生对企业贡献的纯利润</li>\n</ul>\n<p>第一个CRM</p>\n<ul>\n<li>SugarCRM</li>\n</ul>\n<p>加个功能：社交媒体</p>\n<p>社交CRM：Base，Nutshell</p>\n<p>仪表盘：客户信息，过去销售，先前的营销活动</p>\n<p>运营CRM：销售人员自动化，营销自动化，服务自动化</p>\n<p>营销自动化：定时发送邮件，社交媒体上发送社交信息</p>\n<p>服务自动化：客户通过电话，邮件，知识库，服务门户，常见问题解答</p>\n<p>协作：整合第三方外部相关者，供应商，供应商和分销商，信息整合部门/分发信息</p>\n<p>客户数据平台CDP</p>\n<p>以客户为中心的关系管理CCRM</p>\n<p>财务投资回报ROI</p>\n<p>感知质量</p>\n<p>关系，价值和品牌</p>\n<p>客户利益的价值驱动因素：CRM为公司提供管理客户请求和内容的能力。呼叫中心软件能够将经理与各客户联系起来</p>\n<p>GPS</p>\n<p>供应链关系管理VRM</p>"},{"title":"hexo添加一些小玩意","date":"2019-06-04T09:21:43.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于如何在hexo博客里添加一些小玩意的教程</font></center>\n\n<!--more-->\n\n# Next的一些小玩意设置\n\n## 点击出现❤️型\n\n1.创建js文件\n\n在/themes/next/source/js/src下新建文件clicklove.js，接着把下面的代码拷贝粘贴到clicklove.js文件中\n\n```shell\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n2.修改_layout.swig\n\n在`\\themes\\next\\layout`下的`_layout.swig`文件末尾添加：\n\n```shell\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/clicklove.js\"></script>\n```\n\n## 显示二次元动漫人物\n\n1.安装插件\n\n进入hexo博客根目录执行以下命令安装插件\n\n```shell\nnpm install --save hexo-helper-live2d\n```\n\n2.安装动画模型\n\n动画原型地址https://huaji8.top/post/live2d-plugin-2.0/\n\n动画原型下载模版\n\n```shell\nlive2d-widget-model-haru/02 \nlive2d-widget-model-haruto\nlive2d-widget-model-hibiki\nlive2d-widget-model-hijiki\nlive2d-widget-model-izumi\nlive2d-widget-model-koharu\nlive2d-widget-model-miku\nlive2d-widget-model-ni-j\nlive2d-widget-model-nico\nlive2d-widget-model-nietzsche\nlive2d-widget-model-nipsilon\nlive2d-widget-model-nito\nlive2d-widget-model-shizuku\nlive2d-widget-model-tororo\nlive2d-widget-model-tsumiki\nlive2d-widget-model-unitychan\nlive2d-widget-model-wanko\nlive2d-widget-model-z16\n```\n\n选择好对应的模型，使用npm install 模型的包名来安装，比如我选择的是`live2d-widget-model-hibiki`\n\n```shell\nnpm install live2d-widget-model-hibiki\n```\n\n3.配置\n\n打开个人Hexo博客文件根目录下的 _config.yml 文件，在最后添加一下代码\n\n```shell\n#二次元\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: live2d-widget-model-wanko #这个是你要修改的\n  display:\n    position: right #在屏幕上的显示位置\n    width: 85 #显示宽度\n    height: 170 #显示高度\n  mobile:\n    show: false #手机端是否显示\n```\n\n> 注意：当你换了动漫人物，发现在本地并没有展示出来的时候，或者明明设置了宽高时，不用慌，你可以hexo clean一下，再hexo g生成静态文件，hexo s启动本地服务看看，这样应该就行了。\n\n4.卸载\n\n当你不想要的时候，可以enable设置为false，也可以卸载\n\n```shell\nnpm uninstall hexo-helper-live2d   \n```\n\n\n","source":"_posts/2019-06-04-hexo添加一些小玩意.md","raw":"---\ntitle: hexo添加一些小玩意\ndate: 2019-06-04 09:21:43\ncategories:\n- Hexo博客\ntags:\n- hexo\n- next\n- 小玩意\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于如何在hexo博客里添加一些小玩意的教程</font></center>\n\n<!--more-->\n\n# Next的一些小玩意设置\n\n## 点击出现❤️型\n\n1.创建js文件\n\n在/themes/next/source/js/src下新建文件clicklove.js，接着把下面的代码拷贝粘贴到clicklove.js文件中\n\n```shell\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n\n2.修改_layout.swig\n\n在`\\themes\\next\\layout`下的`_layout.swig`文件末尾添加：\n\n```shell\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/clicklove.js\"></script>\n```\n\n## 显示二次元动漫人物\n\n1.安装插件\n\n进入hexo博客根目录执行以下命令安装插件\n\n```shell\nnpm install --save hexo-helper-live2d\n```\n\n2.安装动画模型\n\n动画原型地址https://huaji8.top/post/live2d-plugin-2.0/\n\n动画原型下载模版\n\n```shell\nlive2d-widget-model-haru/02 \nlive2d-widget-model-haruto\nlive2d-widget-model-hibiki\nlive2d-widget-model-hijiki\nlive2d-widget-model-izumi\nlive2d-widget-model-koharu\nlive2d-widget-model-miku\nlive2d-widget-model-ni-j\nlive2d-widget-model-nico\nlive2d-widget-model-nietzsche\nlive2d-widget-model-nipsilon\nlive2d-widget-model-nito\nlive2d-widget-model-shizuku\nlive2d-widget-model-tororo\nlive2d-widget-model-tsumiki\nlive2d-widget-model-unitychan\nlive2d-widget-model-wanko\nlive2d-widget-model-z16\n```\n\n选择好对应的模型，使用npm install 模型的包名来安装，比如我选择的是`live2d-widget-model-hibiki`\n\n```shell\nnpm install live2d-widget-model-hibiki\n```\n\n3.配置\n\n打开个人Hexo博客文件根目录下的 _config.yml 文件，在最后添加一下代码\n\n```shell\n#二次元\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: live2d-widget-model-wanko #这个是你要修改的\n  display:\n    position: right #在屏幕上的显示位置\n    width: 85 #显示宽度\n    height: 170 #显示高度\n  mobile:\n    show: false #手机端是否显示\n```\n\n> 注意：当你换了动漫人物，发现在本地并没有展示出来的时候，或者明明设置了宽高时，不用慌，你可以hexo clean一下，再hexo g生成静态文件，hexo s启动本地服务看看，这样应该就行了。\n\n4.卸载\n\n当你不想要的时候，可以enable设置为false，也可以卸载\n\n```shell\nnpm uninstall hexo-helper-live2d   \n```\n\n\n","slug":"2019-06-04-hexo添加一些小玩意","published":1,"updated":"2019-08-10T04:35:46.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v6001854tnwsraehzo","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于如何在hexo博客里添加一些小玩意的教程</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Next的一些小玩意设置\"><a href=\"#Next的一些小玩意设置\" class=\"headerlink\" title=\"Next的一些小玩意设置\"></a>Next的一些小玩意设置</h1><h2 id=\"点击出现❤️型\"><a href=\"#点击出现❤️型\" class=\"headerlink\" title=\"点击出现❤️型\"></a>点击出现❤️型</h2><p>1.创建js文件</p>\n<p>在/themes/next/source/js/src下新建文件clicklove.js，接着把下面的代码拷贝粘贴到clicklove.js文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)&#125;function o()&#123;var t=\"function\"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(\"div\");a.className=\"heart\",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(\"style\");a.type=\"text/css\";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(\"head\")[0].appendChild(a)&#125;function s()&#123;return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n<p>2.修改_layout.swig</p>\n<p>在<code>\\themes\\next\\layout</code>下的<code>_layout.swig</code>文件末尾添加：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=\"text/javascript\" src=\"/js/src/clicklove.js\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"显示二次元动漫人物\"><a href=\"#显示二次元动漫人物\" class=\"headerlink\" title=\"显示二次元动漫人物\"></a>显示二次元动漫人物</h2><p>1.安装插件</p>\n<p>进入hexo博客根目录执行以下命令安装插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>2.安装动画模型</p>\n<p>动画原型地址<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\" target=\"_blank\" rel=\"noopener\">https://huaji8.top/post/live2d-plugin-2.0/</a></p>\n<p>动画原型下载模版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">live2d-widget-model-haru/02 </span><br><span class=\"line\">live2d-widget-model-haruto</span><br><span class=\"line\">live2d-widget-model-hibiki</span><br><span class=\"line\">live2d-widget-model-hijiki</span><br><span class=\"line\">live2d-widget-model-izumi</span><br><span class=\"line\">live2d-widget-model-koharu</span><br><span class=\"line\">live2d-widget-model-miku</span><br><span class=\"line\">live2d-widget-model-ni-j</span><br><span class=\"line\">live2d-widget-model-nico</span><br><span class=\"line\">live2d-widget-model-nietzsche</span><br><span class=\"line\">live2d-widget-model-nipsilon</span><br><span class=\"line\">live2d-widget-model-nito</span><br><span class=\"line\">live2d-widget-model-shizuku</span><br><span class=\"line\">live2d-widget-model-tororo</span><br><span class=\"line\">live2d-widget-model-tsumiki</span><br><span class=\"line\">live2d-widget-model-unitychan</span><br><span class=\"line\">live2d-widget-model-wanko</span><br><span class=\"line\">live2d-widget-model-z16</span><br></pre></td></tr></table></figure>\n<p>选择好对应的模型，使用npm install 模型的包名来安装，比如我选择的是<code>live2d-widget-model-hibiki</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install live2d-widget-model-hibiki</span><br></pre></td></tr></table></figure>\n<p>3.配置</p>\n<p>打开个人Hexo博客文件根目录下的 _config.yml 文件，在最后添加一下代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>二次元</span><br><span class=\"line\">live2d:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  scriptFrom: local</span><br><span class=\"line\">  pluginRootPath: live2dw/</span><br><span class=\"line\">  pluginJsPath: lib/</span><br><span class=\"line\">  pluginModelPath: assets/</span><br><span class=\"line\">  tagMode: false</span><br><span class=\"line\">  debug: false</span><br><span class=\"line\">  model:</span><br><span class=\"line\">    use: live2d-widget-model-wanko #这个是你要修改的</span><br><span class=\"line\">  display:</span><br><span class=\"line\">    position: right #在屏幕上的显示位置</span><br><span class=\"line\">    width: 85 #显示宽度</span><br><span class=\"line\">    height: 170 #显示高度</span><br><span class=\"line\">  mobile:</span><br><span class=\"line\">    show: false #手机端是否显示</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：当你换了动漫人物，发现在本地并没有展示出来的时候，或者明明设置了宽高时，不用慌，你可以hexo clean一下，再hexo g生成静态文件，hexo s启动本地服务看看，这样应该就行了。</p>\n</blockquote>\n<p>4.卸载</p>\n<p>当你不想要的时候，可以enable设置为false，也可以卸载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于如何在hexo博客里添加一些小玩意的教程</font></center>","more":"<h1 id=\"Next的一些小玩意设置\"><a href=\"#Next的一些小玩意设置\" class=\"headerlink\" title=\"Next的一些小玩意设置\"></a>Next的一些小玩意设置</h1><h2 id=\"点击出现❤️型\"><a href=\"#点击出现❤️型\" class=\"headerlink\" title=\"点击出现❤️型\"></a>点击出现❤️型</h2><p>1.创建js文件</p>\n<p>在/themes/next/source/js/src下新建文件clicklove.js，接着把下面的代码拷贝粘贴到clicklove.js文件中</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(\".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;\"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)&#125;function o()&#123;var t=\"function\"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(\"div\");a.className=\"heart\",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(\"style\");a.type=\"text/css\";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(\"head\")[0].appendChild(a)&#125;function s()&#123;return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n<p>2.修改_layout.swig</p>\n<p>在<code>\\themes\\next\\layout</code>下的<code>_layout.swig</code>文件末尾添加：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=\"text/javascript\" src=\"/js/src/clicklove.js\"&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"显示二次元动漫人物\"><a href=\"#显示二次元动漫人物\" class=\"headerlink\" title=\"显示二次元动漫人物\"></a>显示二次元动漫人物</h2><p>1.安装插件</p>\n<p>进入hexo博客根目录执行以下命令安装插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>\n<p>2.安装动画模型</p>\n<p>动画原型地址<a href=\"https://huaji8.top/post/live2d-plugin-2.0/\" target=\"_blank\" rel=\"noopener\">https://huaji8.top/post/live2d-plugin-2.0/</a></p>\n<p>动画原型下载模版</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">live2d-widget-model-haru/02 </span><br><span class=\"line\">live2d-widget-model-haruto</span><br><span class=\"line\">live2d-widget-model-hibiki</span><br><span class=\"line\">live2d-widget-model-hijiki</span><br><span class=\"line\">live2d-widget-model-izumi</span><br><span class=\"line\">live2d-widget-model-koharu</span><br><span class=\"line\">live2d-widget-model-miku</span><br><span class=\"line\">live2d-widget-model-ni-j</span><br><span class=\"line\">live2d-widget-model-nico</span><br><span class=\"line\">live2d-widget-model-nietzsche</span><br><span class=\"line\">live2d-widget-model-nipsilon</span><br><span class=\"line\">live2d-widget-model-nito</span><br><span class=\"line\">live2d-widget-model-shizuku</span><br><span class=\"line\">live2d-widget-model-tororo</span><br><span class=\"line\">live2d-widget-model-tsumiki</span><br><span class=\"line\">live2d-widget-model-unitychan</span><br><span class=\"line\">live2d-widget-model-wanko</span><br><span class=\"line\">live2d-widget-model-z16</span><br></pre></td></tr></table></figure>\n<p>选择好对应的模型，使用npm install 模型的包名来安装，比如我选择的是<code>live2d-widget-model-hibiki</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install live2d-widget-model-hibiki</span><br></pre></td></tr></table></figure>\n<p>3.配置</p>\n<p>打开个人Hexo博客文件根目录下的 _config.yml 文件，在最后添加一下代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>二次元</span><br><span class=\"line\">live2d:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  scriptFrom: local</span><br><span class=\"line\">  pluginRootPath: live2dw/</span><br><span class=\"line\">  pluginJsPath: lib/</span><br><span class=\"line\">  pluginModelPath: assets/</span><br><span class=\"line\">  tagMode: false</span><br><span class=\"line\">  debug: false</span><br><span class=\"line\">  model:</span><br><span class=\"line\">    use: live2d-widget-model-wanko #这个是你要修改的</span><br><span class=\"line\">  display:</span><br><span class=\"line\">    position: right #在屏幕上的显示位置</span><br><span class=\"line\">    width: 85 #显示宽度</span><br><span class=\"line\">    height: 170 #显示高度</span><br><span class=\"line\">  mobile:</span><br><span class=\"line\">    show: false #手机端是否显示</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：当你换了动漫人物，发现在本地并没有展示出来的时候，或者明明设置了宽高时，不用慌，你可以hexo clean一下，再hexo g生成静态文件，hexo s启动本地服务看看，这样应该就行了。</p>\n</blockquote>\n<p>4.卸载</p>\n<p>当你不想要的时候，可以enable设置为false，也可以卸载</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-helper-live2d</span><br></pre></td></tr></table></figure>"},{"title":"冒泡排序法","date":"2019-06-08T17:30:50.000Z","_content":"\n<center><font size=4 color=\"red\">这是一篇关于冒泡排序的方法</font></center>\n\n<!--more-->\n\n# 冒泡排序\n\n## 文字解释\n\n对于一组包含n个数据的记录，冒泡排序在最坏的情况下需要进行n-1趟排序\n\n* 第1趟：依次比较0和1、1和2、2和3...（n-2）和（n-1）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第1趟排序，最大的元素排到了最后\n\n* 第2趟：依次比较0和1、1和2、2和3...（n-3）和（n-3）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第2趟排序，第二大的元素排到了倒数第二个位置\n...\n\n* 第n-1趟：比较0和1索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第n-1趟排序，第二小的元素排到了第二个位置\n\n\n## 动图展示\n\n![](BubbleSort.gif)\n\n## Java代码实现\n\n```java\npublic int[] sort(int[] arr){\n        for (int i=1;i<arr.length;i++){\n            for (int j=i;j<arr.length-1;j++){\n                int temp;\n                if (arr[j]>arr[j+1]){\n                    temp=arr[j];\n                    arr[j]=arr[j+1];\n                    arr[j+1]=temp;\n                }\n            }\n        }\n    return arr;\n    }\n```\n\n## 时间复杂度\n\n时间复杂度：O(n²)\n\n* 空间复杂度：O(1)，只需要一个额外空间用于交换\n\n* 稳定性：冒泡排序是稳定的排序算法\n\n\n","source":"_posts/2019-06-08-冒泡排序法.md","raw":"---\ntitle: 冒泡排序法\ndate: 2019-06-08 17:30:50\ncategories:\n- 算法\ntags:\n- 冒泡\n- 排序\n---\n\n<center><font size=4 color=\"red\">这是一篇关于冒泡排序的方法</font></center>\n\n<!--more-->\n\n# 冒泡排序\n\n## 文字解释\n\n对于一组包含n个数据的记录，冒泡排序在最坏的情况下需要进行n-1趟排序\n\n* 第1趟：依次比较0和1、1和2、2和3...（n-2）和（n-1）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第1趟排序，最大的元素排到了最后\n\n* 第2趟：依次比较0和1、1和2、2和3...（n-3）和（n-3）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第2趟排序，第二大的元素排到了倒数第二个位置\n...\n\n* 第n-1趟：比较0和1索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第n-1趟排序，第二小的元素排到了第二个位置\n\n\n## 动图展示\n\n![](BubbleSort.gif)\n\n## Java代码实现\n\n```java\npublic int[] sort(int[] arr){\n        for (int i=1;i<arr.length;i++){\n            for (int j=i;j<arr.length-1;j++){\n                int temp;\n                if (arr[j]>arr[j+1]){\n                    temp=arr[j];\n                    arr[j]=arr[j+1];\n                    arr[j+1]=temp;\n                }\n            }\n        }\n    return arr;\n    }\n```\n\n## 时间复杂度\n\n时间复杂度：O(n²)\n\n* 空间复杂度：O(1)，只需要一个额外空间用于交换\n\n* 稳定性：冒泡排序是稳定的排序算法\n\n\n","slug":"2019-06-08-冒泡排序法","published":1,"updated":"2019-08-10T04:35:46.727Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v8001b54tn1i1457af","content":"<center><font size=\"4\" color=\"red\">这是一篇关于冒泡排序的方法</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h1><h2 id=\"文字解释\"><a href=\"#文字解释\" class=\"headerlink\" title=\"文字解释\"></a>文字解释</h2><p>对于一组包含n个数据的记录，冒泡排序在最坏的情况下需要进行n-1趟排序</p>\n<ul>\n<li><p>第1趟：依次比较0和1、1和2、2和3…（n-2）和（n-1）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第1趟排序，最大的元素排到了最后</p>\n</li>\n<li><p>第2趟：依次比较0和1、1和2、2和3…（n-3）和（n-3）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第2趟排序，第二大的元素排到了倒数第二个位置<br>…</p>\n</li>\n<li><p>第n-1趟：比较0和1索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第n-1趟排序，第二小的元素排到了第二个位置</p>\n</li>\n</ul>\n<h2 id=\"动图展示\"><a href=\"#动图展示\" class=\"headerlink\" title=\"动图展示\"></a>动图展示</h2><p><img src=\"/2019/06/09/2019-06-08-冒泡排序法/BubbleSort.gif\" alt></p>\n<h2 id=\"Java代码实现\"><a href=\"#Java代码实现\" class=\"headerlink\" title=\"Java代码实现\"></a>Java代码实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] sort(<span class=\"keyword\">int</span>[] arr)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=i;j&lt;arr.length-<span class=\"number\">1</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[j]&gt;arr[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                    temp=arr[j];</span><br><span class=\"line\">                    arr[j]=arr[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                    arr[j+<span class=\"number\">1</span>]=temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>时间复杂度：O(n²)</p>\n<ul>\n<li><p>空间复杂度：O(1)，只需要一个额外空间用于交换</p>\n</li>\n<li><p>稳定性：冒泡排序是稳定的排序算法</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">这是一篇关于冒泡排序的方法</font></center>","more":"<h1 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h1><h2 id=\"文字解释\"><a href=\"#文字解释\" class=\"headerlink\" title=\"文字解释\"></a>文字解释</h2><p>对于一组包含n个数据的记录，冒泡排序在最坏的情况下需要进行n-1趟排序</p>\n<ul>\n<li><p>第1趟：依次比较0和1、1和2、2和3…（n-2）和（n-1）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第1趟排序，最大的元素排到了最后</p>\n</li>\n<li><p>第2趟：依次比较0和1、1和2、2和3…（n-3）和（n-3）索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第2趟排序，第二大的元素排到了倒数第二个位置<br>…</p>\n</li>\n<li><p>第n-1趟：比较0和1索引的元素，如果发现第1个数据大于第2个数据，交换他们，经过第n-1趟排序，第二小的元素排到了第二个位置</p>\n</li>\n</ul>\n<h2 id=\"动图展示\"><a href=\"#动图展示\" class=\"headerlink\" title=\"动图展示\"></a>动图展示</h2><p><img src=\"/2019/06/09/2019-06-08-冒泡排序法/BubbleSort.gif\" alt></p>\n<h2 id=\"Java代码实现\"><a href=\"#Java代码实现\" class=\"headerlink\" title=\"Java代码实现\"></a>Java代码实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] sort(<span class=\"keyword\">int</span>[] arr)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=i;j&lt;arr.length-<span class=\"number\">1</span>;j++)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arr[j]&gt;arr[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                    temp=arr[j];</span><br><span class=\"line\">                    arr[j]=arr[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                    arr[j+<span class=\"number\">1</span>]=temp;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>时间复杂度：O(n²)</p>\n<ul>\n<li><p>空间复杂度：O(1)，只需要一个额外空间用于交换</p>\n</li>\n<li><p>稳定性：冒泡排序是稳定的排序算法</p>\n</li>\n</ul>"},{"title":"插入排序法","date":"2019-06-08T17:41:37.000Z","_content":"\n<center><font size=4 color=\"red\">这是一篇关于插入排序的方法</font></center>\n\n<!--more-->\n\n# 插入排序\n\n## 文字解释\n\n1. 插入排序是将数组分成两个数组，左边的为有序数组，右边的为无序数组\n\n2. 第一步，选择数组的第一个选择作为有序数组，然后拿该无序数组的第一个元素和它比较\n\n3. 从有序数组的最大的元素进行比较，如果比其大，就直接跳出循环\n\n4. 否则，将数组向后移动，最后将该数值插入到比较的大的元素的右边\n\n## 动图展示\n\n![](InsertSort.gif)\n\n## 代码展示\n\n```java\npublic int[] insertSort(int[] arr){\n        /*\n        该for循环把数组分成两部分\n        左边已经排好的序，右边为未排好的序\n         */\n        for (int i=1;i<arr.length;i++){\n            //记录排序与未排序的分割点temp(temp为下一个排序对象)\n            int temp=arr[i];\n            /*\n            第二个for循环\n            将排序对象temp与已排序数组比较，这里遍历的是已排序的数组\n            如果temp比最近左边的数大时，直接结束本次循环，进行下一个排序\n            否则比左边这个数小时，将这个数右移，腾出这个数的位置\n             */\n            int j;\n            for (j=i-1;j>=0;j--){\n                if (temp>arr[j]){\n                    break;\n                }else {\n                    arr[j+1]=arr[j];\n                }\n            }\n            arr[j+1]=temp;\n        }\n\n        return arr;\n    }\n```\n\n## 复杂度分析\n\n* 最好的情况O(n)\n\n* 最差的情况O(n²)\n\n\n\n\n","source":"_posts/2019-06-08-插入排序法.md","raw":"---\ntitle: 插入排序法\ndate: 2019-06-08 17:41:37\ncategories:\n- 算法\ntags:\n- 插入\n- 排序\n---\n\n<center><font size=4 color=\"red\">这是一篇关于插入排序的方法</font></center>\n\n<!--more-->\n\n# 插入排序\n\n## 文字解释\n\n1. 插入排序是将数组分成两个数组，左边的为有序数组，右边的为无序数组\n\n2. 第一步，选择数组的第一个选择作为有序数组，然后拿该无序数组的第一个元素和它比较\n\n3. 从有序数组的最大的元素进行比较，如果比其大，就直接跳出循环\n\n4. 否则，将数组向后移动，最后将该数值插入到比较的大的元素的右边\n\n## 动图展示\n\n![](InsertSort.gif)\n\n## 代码展示\n\n```java\npublic int[] insertSort(int[] arr){\n        /*\n        该for循环把数组分成两部分\n        左边已经排好的序，右边为未排好的序\n         */\n        for (int i=1;i<arr.length;i++){\n            //记录排序与未排序的分割点temp(temp为下一个排序对象)\n            int temp=arr[i];\n            /*\n            第二个for循环\n            将排序对象temp与已排序数组比较，这里遍历的是已排序的数组\n            如果temp比最近左边的数大时，直接结束本次循环，进行下一个排序\n            否则比左边这个数小时，将这个数右移，腾出这个数的位置\n             */\n            int j;\n            for (j=i-1;j>=0;j--){\n                if (temp>arr[j]){\n                    break;\n                }else {\n                    arr[j+1]=arr[j];\n                }\n            }\n            arr[j+1]=temp;\n        }\n\n        return arr;\n    }\n```\n\n## 复杂度分析\n\n* 最好的情况O(n)\n\n* 最差的情况O(n²)\n\n\n\n\n","slug":"2019-06-08-插入排序法","published":1,"updated":"2019-08-10T04:35:46.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6v9001g54tnnpne0fr8","content":"<center><font size=\"4\" color=\"red\">这是一篇关于插入排序的方法</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h1><h2 id=\"文字解释\"><a href=\"#文字解释\" class=\"headerlink\" title=\"文字解释\"></a>文字解释</h2><ol>\n<li><p>插入排序是将数组分成两个数组，左边的为有序数组，右边的为无序数组</p>\n</li>\n<li><p>第一步，选择数组的第一个选择作为有序数组，然后拿该无序数组的第一个元素和它比较</p>\n</li>\n<li><p>从有序数组的最大的元素进行比较，如果比其大，就直接跳出循环</p>\n</li>\n<li><p>否则，将数组向后移动，最后将该数值插入到比较的大的元素的右边</p>\n</li>\n</ol>\n<h2 id=\"动图展示\"><a href=\"#动图展示\" class=\"headerlink\" title=\"动图展示\"></a>动图展示</h2><p><img src=\"/2019/06/09/2019-06-08-插入排序法/InsertSort.gif\" alt></p>\n<h2 id=\"代码展示\"><a href=\"#代码展示\" class=\"headerlink\" title=\"代码展示\"></a>代码展示</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] insertSort(<span class=\"keyword\">int</span>[] arr)&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        该for循环把数组分成两部分</span></span><br><span class=\"line\"><span class=\"comment\">        左边已经排好的序，右边为未排好的序</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//记录排序与未排序的分割点temp(temp为下一个排序对象)</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp=arr[i];</span><br><span class=\"line\">            <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            第二个for循环</span></span><br><span class=\"line\"><span class=\"comment\">            将排序对象temp与已排序数组比较，这里遍历的是已排序的数组</span></span><br><span class=\"line\"><span class=\"comment\">            如果temp比最近左边的数大时，直接结束本次循环，进行下一个排序</span></span><br><span class=\"line\"><span class=\"comment\">            否则比左边这个数小时，将这个数右移，腾出这个数的位置</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j=i-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (temp&gt;arr[j])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    arr[j+<span class=\"number\">1</span>]=arr[j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arr[j+<span class=\"number\">1</span>]=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h2><ul>\n<li><p>最好的情况O(n)</p>\n</li>\n<li><p>最差的情况O(n²)</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">这是一篇关于插入排序的方法</font></center>","more":"<h1 id=\"插入排序\"><a href=\"#插入排序\" class=\"headerlink\" title=\"插入排序\"></a>插入排序</h1><h2 id=\"文字解释\"><a href=\"#文字解释\" class=\"headerlink\" title=\"文字解释\"></a>文字解释</h2><ol>\n<li><p>插入排序是将数组分成两个数组，左边的为有序数组，右边的为无序数组</p>\n</li>\n<li><p>第一步，选择数组的第一个选择作为有序数组，然后拿该无序数组的第一个元素和它比较</p>\n</li>\n<li><p>从有序数组的最大的元素进行比较，如果比其大，就直接跳出循环</p>\n</li>\n<li><p>否则，将数组向后移动，最后将该数值插入到比较的大的元素的右边</p>\n</li>\n</ol>\n<h2 id=\"动图展示\"><a href=\"#动图展示\" class=\"headerlink\" title=\"动图展示\"></a>动图展示</h2><p><img src=\"/2019/06/09/2019-06-08-插入排序法/InsertSort.gif\" alt></p>\n<h2 id=\"代码展示\"><a href=\"#代码展示\" class=\"headerlink\" title=\"代码展示\"></a>代码展示</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] insertSort(<span class=\"keyword\">int</span>[] arr)&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        该for循环把数组分成两部分</span></span><br><span class=\"line\"><span class=\"comment\">        左边已经排好的序，右边为未排好的序</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;arr.length;i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//记录排序与未排序的分割点temp(temp为下一个排序对象)</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp=arr[i];</span><br><span class=\"line\">            <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">            第二个for循环</span></span><br><span class=\"line\"><span class=\"comment\">            将排序对象temp与已排序数组比较，这里遍历的是已排序的数组</span></span><br><span class=\"line\"><span class=\"comment\">            如果temp比最近左边的数大时，直接结束本次循环，进行下一个排序</span></span><br><span class=\"line\"><span class=\"comment\">            否则比左边这个数小时，将这个数右移，腾出这个数的位置</span></span><br><span class=\"line\"><span class=\"comment\">             */</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j=i-<span class=\"number\">1</span>;j&gt;=<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (temp&gt;arr[j])&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    arr[j+<span class=\"number\">1</span>]=arr[j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arr[j+<span class=\"number\">1</span>]=temp;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"复杂度分析\"><a href=\"#复杂度分析\" class=\"headerlink\" title=\"复杂度分析\"></a>复杂度分析</h2><ul>\n<li><p>最好的情况O(n)</p>\n</li>\n<li><p>最差的情况O(n²)</p>\n</li>\n</ul>"},{"title":"SSM整合配置文件","date":"2019-06-11T14:21:29.000Z","_content":"\n<center><font size=4 color=\"red\">这是一篇关于SSM整合的配置文件</font></center>\n\n<!--more-->\n\n# SSM框架整合\n\n## 整合思路\n\nDao层\n\n* 1.SqlMapConfig.xml,空文件即可，但是需要文件头\n\n* 2.applicationContext.xml\n\n    * a.数据库连接\n\n    * b.SqlSessionFactory对象，需要spring和mybatis整合包下的\n\n    * c.配置mapper文件扫描器\n\nService层\n\n* 1.applicationContext-service.xml包扫描器，扫描@service注解的类\n\n* 2.applicationContext-trans.xml配置事务\n\nController层\n\n* springmvc.xml\n\n    * a.包扫描器，扫描@Controller注解的类\n\n    * b.配置注解驱动\n\n    * c.配置视图解析器\n\nWeb.xml\n\n* 1.配置spring\n\n* 2.配置springmvc\n\n* 3.配置前端控制器\n\n\n## 整体配置文件\n\nDao层\n\n* 1.SqlMapConfig.xml,空文件即可，但是需要文件头\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n</configuration>\n```\n\n* 2.applicationContext.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 配置 读取properties文件 jdbc.properties -->\n    <context:property-placeholder location=\"classpath:jdbc.properties\" />\n\n    <!-- 配置 数据源 -->\n    <bean id=\"dataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\">\n        <property name=\"driverClassName\" value=\"${jdbc.driver}\" />\n        <property name=\"url\" value=\"${jdbc.url}\" />\n        <property name=\"username\" value=\"${jdbc.username}\" />\n        <property name=\"password\" value=\"${jdbc.password}\" />\n    </bean>\n\n    <!-- 配置SqlSessionFactory -->\n    <bean class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <!-- 设置MyBatis核心配置文件 -->\n        <property name=\"configLocation\" value=\"classpath:SqlMapConfig.xml\" />\n        <!-- 设置数据源 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <!--配置别名包扫描-->\n        <property name=\"typeAliasesPackage\" value=\"com.hui.pojo\"/>\n    </bean>\n\n    <!-- 配置Mapper扫描 -->\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <!-- 设置Mapper扫描包 -->\n        <property name=\"basePackage\" value=\"com.hui.mapper\" />\n    </bean>\n</beans>\n```\n\n* jdbc.properties的配置文件\n\n```\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://192.1468.31.225:3306/crm?characterEncoding=utf-8\njdbc.username=root\njdbc.password=123456\n```\n\n* log4j.properties的配置文件\n\n```\n# Global logging configuration\nlog4j.rootLogger=DEBUG, stdout\n# Console output...\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n\n```\n\nService层\n\n* 1.applicationContext-service.xml包扫描器，扫描@service注解的类\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 配置@Service类的包扫描 -->\n    <context:component-scan base-package=\"com.hui.service\" />\n</beans>\n```\n\n* 2.applicationContext-trans.xml配置事务\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 事务管理器 -->\n    <bean id=\"transactionManager\"\tclass=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n        <!-- 数据源 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n    </bean>\n\n    <!-- 通知 -->\n    <tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n        <tx:attributes>\n            <!-- 传播行为 -->\n            <tx:method name=\"save*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"insert*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"add*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"create*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"delete*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"update*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"find*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n            <tx:method name=\"select*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n            <tx:method name=\"get*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n            <tx:method name=\"query*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n        </tx:attributes>\n    </tx:advice>\n\n    <!-- 切面 -->\n    <aop:config>\n        <aop:advisor advice-ref=\"txAdvice\"\n                     pointcut=\"execution(* com.hui.service.*.*(..))\" />\n    </aop:config>\n\n</beans>\n```\n\nController层\n\n* springmvc.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\n        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\">\n    <!-- 配置Controller扫描 -->\n    <context:component-scan base-package=\"com.hui.controller\" />\n\n    <!-- 配置注解驱动 -->\n    <mvc:annotation-driven />\n\n    <!-- 配置视图解析器 -->\n    <bean\tclass=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n        <!-- 前缀 -->\n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />\n        <!-- 后缀 -->\n        <property name=\"suffix\" value=\".jsp\" />\n    </bean>\n</beans>\n```\n\nWeb.xml\n\n* 1.配置spring\n\n* 2.配置springmvc\n\n* 3.配置前端控制器\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n\n    <display-name>crm</display-name>\n\n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n        <welcome-file>index.htm</welcome-file>\n        <welcome-file>index.jsp</welcome-file>\n        <welcome-file>default.html</welcome-file>\n        <welcome-file>default.htm</welcome-file>\n        <welcome-file>default.jsp</welcome-file>\n    </welcome-file-list>\n\n    <!-- 配置spring -->\n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath:spring/applicationContext-*.xml</param-value>\n    </context-param>\n\n    <!-- 配置监听器加载spring -->\n    <listener>\n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n    </listener>\n\n    <!-- 配置过滤器，解决post的乱码问题 -->\n    <filter>\n        <filter-name>encoding</filter-name>\n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n        <!--设置编码为utf-8,这部分可以不写-->\n        <!--<init-param>-->\n            <!--<param-name>encoding</param-name>-->\n            <!--<param-value>UTF-8</param-value>-->\n        <!--</init-param>-->\n    </filter>\n    <filter-mapping>\n        <filter-name>encoding</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <!-- 配置SpringMVC -->\n    <servlet>\n        <servlet-name>crm</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <param-value>classpath:spring/springmvc.xml</param-value>\n        </init-param>\n\n        <!-- load-on-startup配置springmvc什么时候启动，参数必须为整数 -->\n        <!-- 如果为0或者大于0，则springMVC随着tomcat容器启动而启动 -->\n        <!-- 如果小于0，则在第一次请求进来的时候启动 -->\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>crm</servlet-name>\n        <!-- 所有的请求都进入springMVC -->\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n\n</web-app>\n```\n\n## 目录图\n\n![](ssm.png)\n\n\n\n\n\n\n\n\n","source":"_posts/2019-06-11-SSM整合配置文件.md","raw":"---\ntitle: SSM整合配置文件\ndate: 2019-06-11 14:21:29\ncategories:\n- SSM\ntags:\n- SSM\n- 整合\n---\n\n<center><font size=4 color=\"red\">这是一篇关于SSM整合的配置文件</font></center>\n\n<!--more-->\n\n# SSM框架整合\n\n## 整合思路\n\nDao层\n\n* 1.SqlMapConfig.xml,空文件即可，但是需要文件头\n\n* 2.applicationContext.xml\n\n    * a.数据库连接\n\n    * b.SqlSessionFactory对象，需要spring和mybatis整合包下的\n\n    * c.配置mapper文件扫描器\n\nService层\n\n* 1.applicationContext-service.xml包扫描器，扫描@service注解的类\n\n* 2.applicationContext-trans.xml配置事务\n\nController层\n\n* springmvc.xml\n\n    * a.包扫描器，扫描@Controller注解的类\n\n    * b.配置注解驱动\n\n    * c.配置视图解析器\n\nWeb.xml\n\n* 1.配置spring\n\n* 2.配置springmvc\n\n* 3.配置前端控制器\n\n\n## 整体配置文件\n\nDao层\n\n* 1.SqlMapConfig.xml,空文件即可，但是需要文件头\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n</configuration>\n```\n\n* 2.applicationContext.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 配置 读取properties文件 jdbc.properties -->\n    <context:property-placeholder location=\"classpath:jdbc.properties\" />\n\n    <!-- 配置 数据源 -->\n    <bean id=\"dataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\">\n        <property name=\"driverClassName\" value=\"${jdbc.driver}\" />\n        <property name=\"url\" value=\"${jdbc.url}\" />\n        <property name=\"username\" value=\"${jdbc.username}\" />\n        <property name=\"password\" value=\"${jdbc.password}\" />\n    </bean>\n\n    <!-- 配置SqlSessionFactory -->\n    <bean class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <!-- 设置MyBatis核心配置文件 -->\n        <property name=\"configLocation\" value=\"classpath:SqlMapConfig.xml\" />\n        <!-- 设置数据源 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <!--配置别名包扫描-->\n        <property name=\"typeAliasesPackage\" value=\"com.hui.pojo\"/>\n    </bean>\n\n    <!-- 配置Mapper扫描 -->\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <!-- 设置Mapper扫描包 -->\n        <property name=\"basePackage\" value=\"com.hui.mapper\" />\n    </bean>\n</beans>\n```\n\n* jdbc.properties的配置文件\n\n```\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://192.1468.31.225:3306/crm?characterEncoding=utf-8\njdbc.username=root\njdbc.password=123456\n```\n\n* log4j.properties的配置文件\n\n```\n# Global logging configuration\nlog4j.rootLogger=DEBUG, stdout\n# Console output...\nlog4j.appender.stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n\n```\n\nService层\n\n* 1.applicationContext-service.xml包扫描器，扫描@service注解的类\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 配置@Service类的包扫描 -->\n    <context:component-scan base-package=\"com.hui.service\" />\n</beans>\n```\n\n* 2.applicationContext-trans.xml配置事务\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 事务管理器 -->\n    <bean id=\"transactionManager\"\tclass=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\n        <!-- 数据源 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n    </bean>\n\n    <!-- 通知 -->\n    <tx:advice id=\"txAdvice\" transaction-manager=\"transactionManager\">\n        <tx:attributes>\n            <!-- 传播行为 -->\n            <tx:method name=\"save*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"insert*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"add*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"create*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"delete*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"update*\" propagation=\"REQUIRED\" />\n            <tx:method name=\"find*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n            <tx:method name=\"select*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n            <tx:method name=\"get*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n            <tx:method name=\"query*\" propagation=\"SUPPORTS\" read-only=\"true\" />\n        </tx:attributes>\n    </tx:advice>\n\n    <!-- 切面 -->\n    <aop:config>\n        <aop:advisor advice-ref=\"txAdvice\"\n                     pointcut=\"execution(* com.hui.service.*.*(..))\" />\n    </aop:config>\n\n</beans>\n```\n\nController层\n\n* springmvc.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:mvc=\"http://www.springframework.org/schema/mvc\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd\n        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\">\n    <!-- 配置Controller扫描 -->\n    <context:component-scan base-package=\"com.hui.controller\" />\n\n    <!-- 配置注解驱动 -->\n    <mvc:annotation-driven />\n\n    <!-- 配置视图解析器 -->\n    <bean\tclass=\"org.springframework.web.servlet.view.InternalResourceViewResolver\">\n        <!-- 前缀 -->\n        <property name=\"prefix\" value=\"/WEB-INF/jsp/\" />\n        <!-- 后缀 -->\n        <property name=\"suffix\" value=\".jsp\" />\n    </bean>\n</beans>\n```\n\nWeb.xml\n\n* 1.配置spring\n\n* 2.配置springmvc\n\n* 3.配置前端控制器\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n\n    <display-name>crm</display-name>\n\n    <welcome-file-list>\n        <welcome-file>index.html</welcome-file>\n        <welcome-file>index.htm</welcome-file>\n        <welcome-file>index.jsp</welcome-file>\n        <welcome-file>default.html</welcome-file>\n        <welcome-file>default.htm</welcome-file>\n        <welcome-file>default.jsp</welcome-file>\n    </welcome-file-list>\n\n    <!-- 配置spring -->\n    <context-param>\n        <param-name>contextConfigLocation</param-name>\n        <param-value>classpath:spring/applicationContext-*.xml</param-value>\n    </context-param>\n\n    <!-- 配置监听器加载spring -->\n    <listener>\n        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>\n    </listener>\n\n    <!-- 配置过滤器，解决post的乱码问题 -->\n    <filter>\n        <filter-name>encoding</filter-name>\n        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>\n        <!--设置编码为utf-8,这部分可以不写-->\n        <!--<init-param>-->\n            <!--<param-name>encoding</param-name>-->\n            <!--<param-value>UTF-8</param-value>-->\n        <!--</init-param>-->\n    </filter>\n    <filter-mapping>\n        <filter-name>encoding</filter-name>\n        <url-pattern>/*</url-pattern>\n    </filter-mapping>\n\n    <!-- 配置SpringMVC -->\n    <servlet>\n        <servlet-name>crm</servlet-name>\n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n        <init-param>\n            <param-name>contextConfigLocation</param-name>\n            <param-value>classpath:spring/springmvc.xml</param-value>\n        </init-param>\n\n        <!-- load-on-startup配置springmvc什么时候启动，参数必须为整数 -->\n        <!-- 如果为0或者大于0，则springMVC随着tomcat容器启动而启动 -->\n        <!-- 如果小于0，则在第一次请求进来的时候启动 -->\n        <load-on-startup>1</load-on-startup>\n    </servlet>\n    <servlet-mapping>\n        <servlet-name>crm</servlet-name>\n        <!-- 所有的请求都进入springMVC -->\n        <url-pattern>/</url-pattern>\n    </servlet-mapping>\n\n</web-app>\n```\n\n## 目录图\n\n![](ssm.png)\n\n\n\n\n\n\n\n\n","slug":"2019-06-11-SSM整合配置文件","published":1,"updated":"2019-08-10T04:35:46.732Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vb001j54tnfzmepc8o","content":"<center><font size=\"4\" color=\"red\">这是一篇关于SSM整合的配置文件</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"SSM框架整合\"><a href=\"#SSM框架整合\" class=\"headerlink\" title=\"SSM框架整合\"></a>SSM框架整合</h1><h2 id=\"整合思路\"><a href=\"#整合思路\" class=\"headerlink\" title=\"整合思路\"></a>整合思路</h2><p>Dao层</p>\n<ul>\n<li><p>1.SqlMapConfig.xml,空文件即可，但是需要文件头</p>\n</li>\n<li><p>2.applicationContext.xml</p>\n<ul>\n<li><p>a.数据库连接</p>\n</li>\n<li><p>b.SqlSessionFactory对象，需要spring和mybatis整合包下的</p>\n</li>\n<li><p>c.配置mapper文件扫描器</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Service层</p>\n<ul>\n<li><p>1.applicationContext-service.xml包扫描器，扫描@service注解的类</p>\n</li>\n<li><p>2.applicationContext-trans.xml配置事务</p>\n</li>\n</ul>\n<p>Controller层</p>\n<ul>\n<li><p>springmvc.xml</p>\n<ul>\n<li><p>a.包扫描器，扫描@Controller注解的类</p>\n</li>\n<li><p>b.配置注解驱动</p>\n</li>\n<li><p>c.配置视图解析器</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Web.xml</p>\n<ul>\n<li><p>1.配置spring</p>\n</li>\n<li><p>2.配置springmvc</p>\n</li>\n<li><p>3.配置前端控制器</p>\n</li>\n</ul>\n<h2 id=\"整体配置文件\"><a href=\"#整体配置文件\" class=\"headerlink\" title=\"整体配置文件\"></a>整体配置文件</h2><p>Dao层</p>\n<ul>\n<li>1.SqlMapConfig.xml,空文件即可，但是需要文件头</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.applicationContext.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 读取properties文件 jdbc.properties --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:jdbc.properties\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 数据源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SqlSessionFactory --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置MyBatis核心配置文件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:SqlMapConfig.xml\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置数据源 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--配置别名包扫描--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"typeAliasesPackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.pojo\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置Mapper扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.mapper.MapperScannerConfigurer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置Mapper扫描包 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"basePackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.mapper\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>jdbc.properties的配置文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">jdbc.url=jdbc:mysql://192.1468.31.225:3306/crm?characterEncoding=utf-8</span><br><span class=\"line\">jdbc.username=root</span><br><span class=\"line\">jdbc.password=123456</span><br></pre></td></tr></table></figure>\n<ul>\n<li>log4j.properties的配置文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Global logging configuration</span><br><span class=\"line\">log4j.rootLogger=DEBUG, stdout</span><br><span class=\"line\"># Console output...</span><br><span class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure>\n<p>Service层</p>\n<ul>\n<li>1.applicationContext-service.xml包扫描器，扫描@service注解的类</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置@Service类的包扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.hui.service\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.applicationContext-trans.xml配置事务</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 事务管理器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span>\t<span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 数据源 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 通知 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tx:advice</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txAdvice\"</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tx:attributes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 传播行为 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"save*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"insert*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"add*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"create*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"delete*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"update*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"find*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"select*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"get*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"query*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tx:attributes</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tx:advice</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 切面 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aop:config</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">aop:advisor</span> <span class=\"attr\">advice-ref</span>=<span class=\"string\">\"txAdvice\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">pointcut</span>=<span class=\"string\">\"execution(* com.hui.service.*.*(..))\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">aop:config</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Controller层</p>\n<ul>\n<li>springmvc.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">\"http://www.springframework.org/schema/mvc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置Controller扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.hui.controller\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置注解驱动 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span>\t<span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.web.servlet.view.InternalResourceViewResolver\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 前缀 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prefix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"/WEB-INF/jsp/\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 后缀 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suffix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\".jsp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Web.xml</p>\n<ul>\n<li><p>1.配置spring</p>\n</li>\n<li><p>2.配置springmvc</p>\n</li>\n<li><p>3.配置前端控制器</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">\"3.1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>crm<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置spring --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:spring/applicationContext-*.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置监听器加载spring --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置过滤器，解决post的乱码问题 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--设置编码为utf-8,这部分可以不写--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;init-param&gt;--&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--&lt;param-name&gt;encoding&lt;/param-name&gt;--&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--&lt;param-value&gt;UTF-8&lt;/param-value&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;/init-param&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SpringMVC --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>crm<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:spring/springmvc.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- load-on-startup配置springmvc什么时候启动，参数必须为整数 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 如果为0或者大于0，则springMVC随着tomcat容器启动而启动 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 如果小于0，则在第一次请求进来的时候启动 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>crm<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 所有的请求都进入springMVC --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"目录图\"><a href=\"#目录图\" class=\"headerlink\" title=\"目录图\"></a>目录图</h2><p><img src=\"/2019/06/11/2019-06-11-SSM整合配置文件/ssm.png\" alt></p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">这是一篇关于SSM整合的配置文件</font></center>","more":"<h1 id=\"SSM框架整合\"><a href=\"#SSM框架整合\" class=\"headerlink\" title=\"SSM框架整合\"></a>SSM框架整合</h1><h2 id=\"整合思路\"><a href=\"#整合思路\" class=\"headerlink\" title=\"整合思路\"></a>整合思路</h2><p>Dao层</p>\n<ul>\n<li><p>1.SqlMapConfig.xml,空文件即可，但是需要文件头</p>\n</li>\n<li><p>2.applicationContext.xml</p>\n<ul>\n<li><p>a.数据库连接</p>\n</li>\n<li><p>b.SqlSessionFactory对象，需要spring和mybatis整合包下的</p>\n</li>\n<li><p>c.配置mapper文件扫描器</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Service层</p>\n<ul>\n<li><p>1.applicationContext-service.xml包扫描器，扫描@service注解的类</p>\n</li>\n<li><p>2.applicationContext-trans.xml配置事务</p>\n</li>\n</ul>\n<p>Controller层</p>\n<ul>\n<li><p>springmvc.xml</p>\n<ul>\n<li><p>a.包扫描器，扫描@Controller注解的类</p>\n</li>\n<li><p>b.配置注解驱动</p>\n</li>\n<li><p>c.配置视图解析器</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>Web.xml</p>\n<ul>\n<li><p>1.配置spring</p>\n</li>\n<li><p>2.配置springmvc</p>\n</li>\n<li><p>3.配置前端控制器</p>\n</li>\n</ul>\n<h2 id=\"整体配置文件\"><a href=\"#整体配置文件\" class=\"headerlink\" title=\"整体配置文件\"></a>整体配置文件</h2><p>Dao层</p>\n<ul>\n<li>1.SqlMapConfig.xml,空文件即可，但是需要文件头</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.applicationContext.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 读取properties文件 jdbc.properties --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:jdbc.properties\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 数据源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SqlSessionFactory --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置MyBatis核心配置文件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:SqlMapConfig.xml\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置数据源 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--配置别名包扫描--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"typeAliasesPackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.pojo\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置Mapper扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.mapper.MapperScannerConfigurer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置Mapper扫描包 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"basePackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.mapper\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>jdbc.properties的配置文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">jdbc.url=jdbc:mysql://192.1468.31.225:3306/crm?characterEncoding=utf-8</span><br><span class=\"line\">jdbc.username=root</span><br><span class=\"line\">jdbc.password=123456</span><br></pre></td></tr></table></figure>\n<ul>\n<li>log4j.properties的配置文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Global logging configuration</span><br><span class=\"line\">log4j.rootLogger=DEBUG, stdout</span><br><span class=\"line\"># Console output...</span><br><span class=\"line\">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n</span><br></pre></td></tr></table></figure>\n<p>Service层</p>\n<ul>\n<li>1.applicationContext-service.xml包扫描器，扫描@service注解的类</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置@Service类的包扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.hui.service\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>2.applicationContext-trans.xml配置事务</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 事务管理器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"transactionManager\"</span>\t<span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jdbc.datasource.DataSourceTransactionManager\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 数据源 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 通知 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">tx:advice</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txAdvice\"</span> <span class=\"attr\">transaction-manager</span>=<span class=\"string\">\"transactionManager\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tx:attributes</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 传播行为 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"save*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"insert*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"add*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"create*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"delete*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"update*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"REQUIRED\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"find*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"select*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"get*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">tx:method</span> <span class=\"attr\">name</span>=<span class=\"string\">\"query*\"</span> <span class=\"attr\">propagation</span>=<span class=\"string\">\"SUPPORTS\"</span> <span class=\"attr\">read-only</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tx:attributes</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">tx:advice</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 切面 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">aop:config</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">aop:advisor</span> <span class=\"attr\">advice-ref</span>=<span class=\"string\">\"txAdvice\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                     <span class=\"attr\">pointcut</span>=<span class=\"string\">\"execution(* com.hui.service.*.*(..))\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">aop:config</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Controller层</p>\n<ul>\n<li>springmvc.xml</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:mvc</span>=<span class=\"string\">\"http://www.springframework.org/schema/mvc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置Controller扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.hui.controller\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置注解驱动 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mvc:annotation-driven</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置视图解析器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span>\t<span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.web.servlet.view.InternalResourceViewResolver\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 前缀 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prefix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"/WEB-INF/jsp/\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 后缀 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suffix\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\".jsp\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Web.xml</p>\n<ul>\n<li><p>1.配置spring</p>\n</li>\n<li><p>2.配置springmvc</p>\n</li>\n<li><p>3.配置前端控制器</p>\n</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">\"3.1\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>crm<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>index.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.html<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.htm<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">welcome-file</span>&gt;</span>default.jsp<span class=\"tag\">&lt;/<span class=\"name\">welcome-file</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">welcome-file-list</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置spring --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:spring/applicationContext-*.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context-param</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置监听器加载spring --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class=\"tag\">&lt;/<span class=\"name\">listener-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">listener</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置过滤器，解决post的乱码问题 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class=\"tag\">&lt;/<span class=\"name\">filter-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--设置编码为utf-8,这部分可以不写--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;init-param&gt;--&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--&lt;param-name&gt;encoding&lt;/param-name&gt;--&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--&lt;param-value&gt;UTF-8&lt;/param-value&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--&lt;/init-param&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filter-name</span>&gt;</span>encoding<span class=\"tag\">&lt;/<span class=\"name\">filter-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/*<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">filter-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SpringMVC --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>crm<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>contextConfigLocation<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>classpath:spring/springmvc.xml<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- load-on-startup配置springmvc什么时候启动，参数必须为整数 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 如果为0或者大于0，则springMVC随着tomcat容器启动而启动 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 如果小于0，则在第一次请求进来的时候启动 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">load-on-startup</span>&gt;</span>1<span class=\"tag\">&lt;/<span class=\"name\">load-on-startup</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>crm<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 所有的请求都进入springMVC --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"目录图\"><a href=\"#目录图\" class=\"headerlink\" title=\"目录图\"></a>目录图</h2><p><img src=\"/2019/06/11/2019-06-11-SSM整合配置文件/ssm.png\" alt></p>"},{"title":"Maven","date":"2019-06-12T11:57:14.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于Maven的文件</font></center>\n\n<!--more-->\n\n# Maven\n\n## 下载和安装Maven\n\n下载地址：`http://maven.apache.org/download.cgi`\n\n安装地址：`http://maven.apache.org/install.html`\n\nmaven的中央仓库：`http://repo1.maven.org/maven2/`\n\n## 修改maven中央仓库\n\n输入`mvn --version`可以查看到maven的安装位置\n\n```shell\nApache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)\nMaven home: /usr/local/Cellar/maven/3.6.0/libexec\nJava version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre\nDefault locale: zh_CN, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"\n```\n\n然后cd到Maven home\n\n`$ cd /usr/local/Cellar/maven/3.6.0/libexec`\n\nmaven的配置文件settings.xml在该目录下的conf下\n\n然后在镜像的配置文件下添加以下配置\n\n```xml\n    <mirror>\n      <id>alimaven</id>\n      <name>aliyun maven</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n      <mirrorOf>central</mirrorOf>\n    </mirror>\n```\n\n具体如下：\n\n```xml\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n    -->\n    <mirror>\n      <id>alimaven</id>\n      <name>aliyun maven</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n      <mirrorOf>central</mirrorOf>\n    </mirror>\n\n  </mirrors>\n```\n\n## Maven的目录介绍\n\nbin目录 mvn.bat(以run方式运行项目)、mvnDebug.bat(以debug方式运行项目)\n\nboot目录 maven运行需要的加载类\n\nconf目录 settings.xml整个maven工具核心配置文件\n\nlib目录 maven运行依赖jar包\n\n## Maven本地仓库的配置\n\n在MAVE_HOME/conf/settings.xml文件中配置本地仓库\n\n`<localRepository>/Users/wanghui/mvn/repository</localRepository>`\n\n在控制台上输入`mvn --version`就可以看到MAVE_HOME\n\n```shell\n$ mvn --version\nApache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)\nMaven home: /usr/local/Cellar/maven/3.6.0/libexec  //这里就是MAVE_HOME位置\nJava version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre\nDefault locale: zh_CN, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"\n```\n\n## Maven项目工程目录约定\n\n创建一个maven项目\n\n```java\nProject\n  | src\n  |    | main\n  |    |     | java        ----存放项目的.java文件\n  |    |     | resources   ----存放项目资源文件，如spring，hibernate配置文件\n             | webapp      ----web工程的主目录\n                 | WEB-INF\n                     | web.xml\n       | test\n             | java       ----存放所有测试.java文件，入JUnit测试类\n             | resources  ----测试资源文件\n  | target\n  | pom.xml               ----maven项目核心配置文件\n```\n\n## Maven的常用命令\n\ncompile:编译，将.java文件编译为.class文件，并存放在target目录下\n\ntest：测试\n\nclear：清理命令，删除target目录的内容\n\npackage：打包命令，对java工程打成jar包，对web工程打成war包\n\ninstall：执行install将maven打成jar包或war包发布到本地仓库\n\n## Maven在idea里的配置\n\n![maven](maven.jpg)\n\n## maven工程的jar包冲突问题的解决方式\n\nmaven的jar包冲突原理：\n\n```\nA->B->C->D1(log 15.0)：A中包含对B的依赖，B中包含对C的依赖，C中包含对D1的依赖，假设是D1是日志jar包，version为15.0\n\nE->F->D2(log 16.0)：E中包含对F的依赖，F包含对D2的依赖，假设是D2是同一个日志jar包，version为16.0\n```\n\n当pom.xml文件中引入A、E两个依赖后，根据Maven传递依赖的原则，D1、D2都会被引入，而D1、D2是同一个依赖D的不同版本。 \n当我们在调用D2中的method1()方法，而D1中是15.0版本（method1可能是D升级后增加的方法），可能没有这个方法，这样JVM在加载A中D1依赖的时候，找不到method1方法，就会报NoSuchMethodError的错误，此时就产生了jar包冲突。\n\n注： \n如果在调用method2()方法的时候，D1、D2都含有这个方法（且升级的版本D2没有改动这个方法，这样即使D有多个版本，也不会产生版本冲突的问题。）\n\n解决jar包冲突的方案：\n\n方案一：\n\n第一声明优先原则：哪个jar包的坐标在靠上的位置，这个jar包就是先声明的。先声明的jar包坐标下的依赖包，可以优先进入项目中。\n\n方案二：\n\n直接依赖：项目中直接导入的jar包，就是该项目的直接依赖包\n传递依赖：项目中没有直接导入的jar包，可以通过项目直接依赖jar包传递到项目中\n\n路径就近优先原则。直接依赖路径比传递依赖路径近，那么最终项目进入的jar包会是路径近的直接依赖\n\n方案三：(推荐使用)\n\n直接排除法\n\n当我们要排除某个jar包下的依赖包，在配置exclusions标签的时候，内部可以不写版本号。因为此时依赖包使用的版本和默认的本jar包的版本一样\n\n例如以下配置：spring-beans使用的是5.1.5.RELEASE，其所依赖的spring-core版本也是5.1.5.RELEASE。spring-context版本4.3.22.RELEASE，其所依赖的spring-core版本也是4.3.22.RELEASE。根据就近原则spring-core版本应该是5.1.5.RELEASE。因为添加了spring-core的exclusion，所以5.1.5.RELEASE的版本失效。最终spring-core的版本为4.3.22.RELEASE。\n\n```xml\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>5.1.5.RELEASE</version>\n      <exclusions>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-core</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>4.3.22.RELEASE</version>\n    </dependency>\n  </dependencies>\n```\n\n总结：\n\nexclusion的实效权限最大，实效后就不在有对应的版本信息。然后是直接依赖，存在直接依赖时，直接依赖会>就近原则，即是有直接依赖的话，无论近远，都用的直接依赖，如果都不存在直接依赖，存在的都是传递依赖，这时才使用就近原则。\n\n## jar包的锁定\n\n<dependencyManagement>标签用于锁定jar包\n\n例如B依赖A，A是父工程。此时如果不对A中的部分jar包锁定，如果B中有对应的其他版本的jar包，B工程中会优先使用自己的jar包。如果对A中的部分jar包采用dependencyManagement标签锁定，B只能使用A中被锁定的版本的jar包\n\n锁定的写法：\n\n```xml\n<dependencyManagement>\n      <dependency>\n        <groupId>org.mybatis</groupId>\n        <artifactId>mybatis</artifactId>\n        <version>${mybatis.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n```\n\n\n\n\n","source":"_posts/2019-06-12-Maven.md","raw":"---\ntitle: Maven\ndate: 2019-06-12 11:57:14\ncategories:\n- Maven\ntags:\n- 安装\n- 配置\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于Maven的文件</font></center>\n\n<!--more-->\n\n# Maven\n\n## 下载和安装Maven\n\n下载地址：`http://maven.apache.org/download.cgi`\n\n安装地址：`http://maven.apache.org/install.html`\n\nmaven的中央仓库：`http://repo1.maven.org/maven2/`\n\n## 修改maven中央仓库\n\n输入`mvn --version`可以查看到maven的安装位置\n\n```shell\nApache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)\nMaven home: /usr/local/Cellar/maven/3.6.0/libexec\nJava version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre\nDefault locale: zh_CN, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"\n```\n\n然后cd到Maven home\n\n`$ cd /usr/local/Cellar/maven/3.6.0/libexec`\n\nmaven的配置文件settings.xml在该目录下的conf下\n\n然后在镜像的配置文件下添加以下配置\n\n```xml\n    <mirror>\n      <id>alimaven</id>\n      <name>aliyun maven</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n      <mirrorOf>central</mirrorOf>\n    </mirror>\n```\n\n具体如下：\n\n```xml\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n    -->\n    <mirror>\n      <id>alimaven</id>\n      <name>aliyun maven</name>\n      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>\n      <mirrorOf>central</mirrorOf>\n    </mirror>\n\n  </mirrors>\n```\n\n## Maven的目录介绍\n\nbin目录 mvn.bat(以run方式运行项目)、mvnDebug.bat(以debug方式运行项目)\n\nboot目录 maven运行需要的加载类\n\nconf目录 settings.xml整个maven工具核心配置文件\n\nlib目录 maven运行依赖jar包\n\n## Maven本地仓库的配置\n\n在MAVE_HOME/conf/settings.xml文件中配置本地仓库\n\n`<localRepository>/Users/wanghui/mvn/repository</localRepository>`\n\n在控制台上输入`mvn --version`就可以看到MAVE_HOME\n\n```shell\n$ mvn --version\nApache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)\nMaven home: /usr/local/Cellar/maven/3.6.0/libexec  //这里就是MAVE_HOME位置\nJava version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre\nDefault locale: zh_CN, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"\n```\n\n## Maven项目工程目录约定\n\n创建一个maven项目\n\n```java\nProject\n  | src\n  |    | main\n  |    |     | java        ----存放项目的.java文件\n  |    |     | resources   ----存放项目资源文件，如spring，hibernate配置文件\n             | webapp      ----web工程的主目录\n                 | WEB-INF\n                     | web.xml\n       | test\n             | java       ----存放所有测试.java文件，入JUnit测试类\n             | resources  ----测试资源文件\n  | target\n  | pom.xml               ----maven项目核心配置文件\n```\n\n## Maven的常用命令\n\ncompile:编译，将.java文件编译为.class文件，并存放在target目录下\n\ntest：测试\n\nclear：清理命令，删除target目录的内容\n\npackage：打包命令，对java工程打成jar包，对web工程打成war包\n\ninstall：执行install将maven打成jar包或war包发布到本地仓库\n\n## Maven在idea里的配置\n\n![maven](maven.jpg)\n\n## maven工程的jar包冲突问题的解决方式\n\nmaven的jar包冲突原理：\n\n```\nA->B->C->D1(log 15.0)：A中包含对B的依赖，B中包含对C的依赖，C中包含对D1的依赖，假设是D1是日志jar包，version为15.0\n\nE->F->D2(log 16.0)：E中包含对F的依赖，F包含对D2的依赖，假设是D2是同一个日志jar包，version为16.0\n```\n\n当pom.xml文件中引入A、E两个依赖后，根据Maven传递依赖的原则，D1、D2都会被引入，而D1、D2是同一个依赖D的不同版本。 \n当我们在调用D2中的method1()方法，而D1中是15.0版本（method1可能是D升级后增加的方法），可能没有这个方法，这样JVM在加载A中D1依赖的时候，找不到method1方法，就会报NoSuchMethodError的错误，此时就产生了jar包冲突。\n\n注： \n如果在调用method2()方法的时候，D1、D2都含有这个方法（且升级的版本D2没有改动这个方法，这样即使D有多个版本，也不会产生版本冲突的问题。）\n\n解决jar包冲突的方案：\n\n方案一：\n\n第一声明优先原则：哪个jar包的坐标在靠上的位置，这个jar包就是先声明的。先声明的jar包坐标下的依赖包，可以优先进入项目中。\n\n方案二：\n\n直接依赖：项目中直接导入的jar包，就是该项目的直接依赖包\n传递依赖：项目中没有直接导入的jar包，可以通过项目直接依赖jar包传递到项目中\n\n路径就近优先原则。直接依赖路径比传递依赖路径近，那么最终项目进入的jar包会是路径近的直接依赖\n\n方案三：(推荐使用)\n\n直接排除法\n\n当我们要排除某个jar包下的依赖包，在配置exclusions标签的时候，内部可以不写版本号。因为此时依赖包使用的版本和默认的本jar包的版本一样\n\n例如以下配置：spring-beans使用的是5.1.5.RELEASE，其所依赖的spring-core版本也是5.1.5.RELEASE。spring-context版本4.3.22.RELEASE，其所依赖的spring-core版本也是4.3.22.RELEASE。根据就近原则spring-core版本应该是5.1.5.RELEASE。因为添加了spring-core的exclusion，所以5.1.5.RELEASE的版本失效。最终spring-core的版本为4.3.22.RELEASE。\n\n```xml\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>5.1.5.RELEASE</version>\n      <exclusions>\n        <exclusion>\n          <groupId>org.springframework</groupId>\n          <artifactId>spring-core</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>4.3.22.RELEASE</version>\n    </dependency>\n  </dependencies>\n```\n\n总结：\n\nexclusion的实效权限最大，实效后就不在有对应的版本信息。然后是直接依赖，存在直接依赖时，直接依赖会>就近原则，即是有直接依赖的话，无论近远，都用的直接依赖，如果都不存在直接依赖，存在的都是传递依赖，这时才使用就近原则。\n\n## jar包的锁定\n\n<dependencyManagement>标签用于锁定jar包\n\n例如B依赖A，A是父工程。此时如果不对A中的部分jar包锁定，如果B中有对应的其他版本的jar包，B工程中会优先使用自己的jar包。如果对A中的部分jar包采用dependencyManagement标签锁定，B只能使用A中被锁定的版本的jar包\n\n锁定的写法：\n\n```xml\n<dependencyManagement>\n      <dependency>\n        <groupId>org.mybatis</groupId>\n        <artifactId>mybatis</artifactId>\n        <version>${mybatis.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n```\n\n\n\n\n","slug":"2019-06-12-Maven","published":1,"updated":"2019-08-10T04:35:46.733Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vd001n54tnavrv0zek","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于Maven的文件</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h1><h2 id=\"下载和安装Maven\"><a href=\"#下载和安装Maven\" class=\"headerlink\" title=\"下载和安装Maven\"></a>下载和安装Maven</h2><p>下载地址：<code>http://maven.apache.org/download.cgi</code></p>\n<p>安装地址：<code>http://maven.apache.org/install.html</code></p>\n<p>maven的中央仓库：<code>http://repo1.maven.org/maven2/</code></p>\n<h2 id=\"修改maven中央仓库\"><a href=\"#修改maven中央仓库\" class=\"headerlink\" title=\"修改maven中央仓库\"></a>修改maven中央仓库</h2><p>输入<code>mvn --version</code>可以查看到maven的安装位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class=\"line\">Maven home: /usr/local/Cellar/maven/3.6.0/libexec</span><br><span class=\"line\">Java version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class=\"line\">OS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"</span><br></pre></td></tr></table></figure>\n<p>然后cd到Maven home</p>\n<p><code>$ cd /usr/local/Cellar/maven/3.6.0/libexec</code></p>\n<p>maven的配置文件settings.xml在该目录下的conf下</p>\n<p>然后在镜像的配置文件下添加以下配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>具体如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- mirror</span></span><br><span class=\"line\"><span class=\"comment\">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class=\"line\"><span class=\"comment\">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class=\"line\"><span class=\"comment\">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class=\"line\"><span class=\"comment\">   |</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;mirror&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;/mirror&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Maven的目录介绍\"><a href=\"#Maven的目录介绍\" class=\"headerlink\" title=\"Maven的目录介绍\"></a>Maven的目录介绍</h2><p>bin目录 mvn.bat(以run方式运行项目)、mvnDebug.bat(以debug方式运行项目)</p>\n<p>boot目录 maven运行需要的加载类</p>\n<p>conf目录 settings.xml整个maven工具核心配置文件</p>\n<p>lib目录 maven运行依赖jar包</p>\n<h2 id=\"Maven本地仓库的配置\"><a href=\"#Maven本地仓库的配置\" class=\"headerlink\" title=\"Maven本地仓库的配置\"></a>Maven本地仓库的配置</h2><p>在MAVE_HOME/conf/settings.xml文件中配置本地仓库</p>\n<p><code>&lt;localRepository&gt;/Users/wanghui/mvn/repository&lt;/localRepository&gt;</code></p>\n<p>在控制台上输入<code>mvn --version</code>就可以看到MAVE_HOME</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> mvn --version</span><br><span class=\"line\">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class=\"line\">Maven home: /usr/local/Cellar/maven/3.6.0/libexec  //这里就是MAVE_HOME位置</span><br><span class=\"line\">Java version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class=\"line\">OS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"</span><br></pre></td></tr></table></figure>\n<h2 id=\"Maven项目工程目录约定\"><a href=\"#Maven项目工程目录约定\" class=\"headerlink\" title=\"Maven项目工程目录约定\"></a>Maven项目工程目录约定</h2><p>创建一个maven项目</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Project</span><br><span class=\"line\">  | src</span><br><span class=\"line\">  |    | main</span><br><span class=\"line\">  |    |     | java        ----存放项目的.java文件</span><br><span class=\"line\">  |    |     | resources   ----存放项目资源文件，如spring，hibernate配置文件</span><br><span class=\"line\">             | webapp      ----web工程的主目录</span><br><span class=\"line\">                 | WEB-INF</span><br><span class=\"line\">                     | web.xml</span><br><span class=\"line\">       | test</span><br><span class=\"line\">             | java       ----存放所有测试.java文件，入JUnit测试类</span><br><span class=\"line\">             | resources  ----测试资源文件</span><br><span class=\"line\">  | target</span><br><span class=\"line\">  | pom.xml               ----maven项目核心配置文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"Maven的常用命令\"><a href=\"#Maven的常用命令\" class=\"headerlink\" title=\"Maven的常用命令\"></a>Maven的常用命令</h2><p>compile:编译，将.java文件编译为.class文件，并存放在target目录下</p>\n<p>test：测试</p>\n<p>clear：清理命令，删除target目录的内容</p>\n<p>package：打包命令，对java工程打成jar包，对web工程打成war包</p>\n<p>install：执行install将maven打成jar包或war包发布到本地仓库</p>\n<h2 id=\"Maven在idea里的配置\"><a href=\"#Maven在idea里的配置\" class=\"headerlink\" title=\"Maven在idea里的配置\"></a>Maven在idea里的配置</h2><p><img src=\"/2019/06/12/2019-06-12-Maven/maven.jpg\" alt=\"maven\"></p>\n<h2 id=\"maven工程的jar包冲突问题的解决方式\"><a href=\"#maven工程的jar包冲突问题的解决方式\" class=\"headerlink\" title=\"maven工程的jar包冲突问题的解决方式\"></a>maven工程的jar包冲突问题的解决方式</h2><p>maven的jar包冲突原理：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A-&gt;B-&gt;C-&gt;D1(log 15.0)：A中包含对B的依赖，B中包含对C的依赖，C中包含对D1的依赖，假设是D1是日志jar包，version为15.0</span><br><span class=\"line\"></span><br><span class=\"line\">E-&gt;F-&gt;D2(log 16.0)：E中包含对F的依赖，F包含对D2的依赖，假设是D2是同一个日志jar包，version为16.0</span><br></pre></td></tr></table></figure>\n<p>当pom.xml文件中引入A、E两个依赖后，根据Maven传递依赖的原则，D1、D2都会被引入，而D1、D2是同一个依赖D的不同版本。<br>当我们在调用D2中的method1()方法，而D1中是15.0版本（method1可能是D升级后增加的方法），可能没有这个方法，这样JVM在加载A中D1依赖的时候，找不到method1方法，就会报NoSuchMethodError的错误，此时就产生了jar包冲突。</p>\n<p>注：<br>如果在调用method2()方法的时候，D1、D2都含有这个方法（且升级的版本D2没有改动这个方法，这样即使D有多个版本，也不会产生版本冲突的问题。）</p>\n<p>解决jar包冲突的方案：</p>\n<p>方案一：</p>\n<p>第一声明优先原则：哪个jar包的坐标在靠上的位置，这个jar包就是先声明的。先声明的jar包坐标下的依赖包，可以优先进入项目中。</p>\n<p>方案二：</p>\n<p>直接依赖：项目中直接导入的jar包，就是该项目的直接依赖包<br>传递依赖：项目中没有直接导入的jar包，可以通过项目直接依赖jar包传递到项目中</p>\n<p>路径就近优先原则。直接依赖路径比传递依赖路径近，那么最终项目进入的jar包会是路径近的直接依赖</p>\n<p>方案三：(推荐使用)</p>\n<p>直接排除法</p>\n<p>当我们要排除某个jar包下的依赖包，在配置exclusions标签的时候，内部可以不写版本号。因为此时依赖包使用的版本和默认的本jar包的版本一样</p>\n<p>例如以下配置：spring-beans使用的是5.1.5.RELEASE，其所依赖的spring-core版本也是5.1.5.RELEASE。spring-context版本4.3.22.RELEASE，其所依赖的spring-core版本也是4.3.22.RELEASE。根据就近原则spring-core版本应该是5.1.5.RELEASE。因为添加了spring-core的exclusion，所以5.1.5.RELEASE的版本失效。最终spring-core的版本为4.3.22.RELEASE。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-beans<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.3.22.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>exclusion的实效权限最大，实效后就不在有对应的版本信息。然后是直接依赖，存在直接依赖时，直接依赖会&gt;就近原则，即是有直接依赖的话，无论近远，都用的直接依赖，如果都不存在直接依赖，存在的都是传递依赖，这时才使用就近原则。</p>\n<h2 id=\"jar包的锁定\"><a href=\"#jar包的锁定\" class=\"headerlink\" title=\"jar包的锁定\"></a>jar包的锁定</h2><p><dependencymanagement>标签用于锁定jar包</dependencymanagement></p>\n<p>例如B依赖A，A是父工程。此时如果不对A中的部分jar包锁定，如果B中有对应的其他版本的jar包，B工程中会优先使用自己的jar包。如果对A中的部分jar包采用dependencyManagement标签锁定，B只能使用A中被锁定的版本的jar包</p>\n<p>锁定的写法：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于Maven的文件</font></center>","more":"<h1 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h1><h2 id=\"下载和安装Maven\"><a href=\"#下载和安装Maven\" class=\"headerlink\" title=\"下载和安装Maven\"></a>下载和安装Maven</h2><p>下载地址：<code>http://maven.apache.org/download.cgi</code></p>\n<p>安装地址：<code>http://maven.apache.org/install.html</code></p>\n<p>maven的中央仓库：<code>http://repo1.maven.org/maven2/</code></p>\n<h2 id=\"修改maven中央仓库\"><a href=\"#修改maven中央仓库\" class=\"headerlink\" title=\"修改maven中央仓库\"></a>修改maven中央仓库</h2><p>输入<code>mvn --version</code>可以查看到maven的安装位置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class=\"line\">Maven home: /usr/local/Cellar/maven/3.6.0/libexec</span><br><span class=\"line\">Java version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class=\"line\">OS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"</span><br></pre></td></tr></table></figure>\n<p>然后cd到Maven home</p>\n<p><code>$ cd /usr/local/Cellar/maven/3.6.0/libexec</code></p>\n<p>maven的配置文件settings.xml在该目录下的conf下</p>\n<p>然后在镜像的配置文件下添加以下配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>具体如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mirrors</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- mirror</span></span><br><span class=\"line\"><span class=\"comment\">   | Specifies a repository mirror site to use instead of a given repository. The repository that</span></span><br><span class=\"line\"><span class=\"comment\">   | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used</span></span><br><span class=\"line\"><span class=\"comment\">   | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.</span></span><br><span class=\"line\"><span class=\"comment\">   |</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;mirror&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;id&gt;mirrorId&lt;/id&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;mirrorOf&gt;repositoryId&lt;/mirrorOf&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</span></span><br><span class=\"line\"><span class=\"comment\">    &lt;url&gt;http://my.repository.com/repo/path&lt;/url&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  &lt;/mirror&gt;</span></span><br><span class=\"line\"><span class=\"comment\">  --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">id</span>&gt;</span>alimaven<span class=\"tag\">&lt;/<span class=\"name\">id</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>aliyun maven<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public/<span class=\"tag\">&lt;/<span class=\"name\">url</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mirrorOf</span>&gt;</span>central<span class=\"tag\">&lt;/<span class=\"name\">mirrorOf</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">mirror</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Maven的目录介绍\"><a href=\"#Maven的目录介绍\" class=\"headerlink\" title=\"Maven的目录介绍\"></a>Maven的目录介绍</h2><p>bin目录 mvn.bat(以run方式运行项目)、mvnDebug.bat(以debug方式运行项目)</p>\n<p>boot目录 maven运行需要的加载类</p>\n<p>conf目录 settings.xml整个maven工具核心配置文件</p>\n<p>lib目录 maven运行依赖jar包</p>\n<h2 id=\"Maven本地仓库的配置\"><a href=\"#Maven本地仓库的配置\" class=\"headerlink\" title=\"Maven本地仓库的配置\"></a>Maven本地仓库的配置</h2><p>在MAVE_HOME/conf/settings.xml文件中配置本地仓库</p>\n<p><code>&lt;localRepository&gt;/Users/wanghui/mvn/repository&lt;/localRepository&gt;</code></p>\n<p>在控制台上输入<code>mvn --version</code>就可以看到MAVE_HOME</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> mvn --version</span><br><span class=\"line\">Apache Maven 3.6.0 (97c98ec64a1fdfee7767ce5ffb20918da4f719f3; 2018-10-25T02:41:47+08:00)</span><br><span class=\"line\">Maven home: /usr/local/Cellar/maven/3.6.0/libexec  //这里就是MAVE_HOME位置</span><br><span class=\"line\">Java version: 1.8.0_202, vendor: Oracle Corporation, runtime: /Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/Home/jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: UTF-8</span><br><span class=\"line\">OS name: \"mac os x\", version: \"10.13.6\", arch: \"x86_64\", family: \"mac\"</span><br></pre></td></tr></table></figure>\n<h2 id=\"Maven项目工程目录约定\"><a href=\"#Maven项目工程目录约定\" class=\"headerlink\" title=\"Maven项目工程目录约定\"></a>Maven项目工程目录约定</h2><p>创建一个maven项目</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Project</span><br><span class=\"line\">  | src</span><br><span class=\"line\">  |    | main</span><br><span class=\"line\">  |    |     | java        ----存放项目的.java文件</span><br><span class=\"line\">  |    |     | resources   ----存放项目资源文件，如spring，hibernate配置文件</span><br><span class=\"line\">             | webapp      ----web工程的主目录</span><br><span class=\"line\">                 | WEB-INF</span><br><span class=\"line\">                     | web.xml</span><br><span class=\"line\">       | test</span><br><span class=\"line\">             | java       ----存放所有测试.java文件，入JUnit测试类</span><br><span class=\"line\">             | resources  ----测试资源文件</span><br><span class=\"line\">  | target</span><br><span class=\"line\">  | pom.xml               ----maven项目核心配置文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"Maven的常用命令\"><a href=\"#Maven的常用命令\" class=\"headerlink\" title=\"Maven的常用命令\"></a>Maven的常用命令</h2><p>compile:编译，将.java文件编译为.class文件，并存放在target目录下</p>\n<p>test：测试</p>\n<p>clear：清理命令，删除target目录的内容</p>\n<p>package：打包命令，对java工程打成jar包，对web工程打成war包</p>\n<p>install：执行install将maven打成jar包或war包发布到本地仓库</p>\n<h2 id=\"Maven在idea里的配置\"><a href=\"#Maven在idea里的配置\" class=\"headerlink\" title=\"Maven在idea里的配置\"></a>Maven在idea里的配置</h2><p><img src=\"/2019/06/12/2019-06-12-Maven/maven.jpg\" alt=\"maven\"></p>\n<h2 id=\"maven工程的jar包冲突问题的解决方式\"><a href=\"#maven工程的jar包冲突问题的解决方式\" class=\"headerlink\" title=\"maven工程的jar包冲突问题的解决方式\"></a>maven工程的jar包冲突问题的解决方式</h2><p>maven的jar包冲突原理：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A-&gt;B-&gt;C-&gt;D1(log 15.0)：A中包含对B的依赖，B中包含对C的依赖，C中包含对D1的依赖，假设是D1是日志jar包，version为15.0</span><br><span class=\"line\"></span><br><span class=\"line\">E-&gt;F-&gt;D2(log 16.0)：E中包含对F的依赖，F包含对D2的依赖，假设是D2是同一个日志jar包，version为16.0</span><br></pre></td></tr></table></figure>\n<p>当pom.xml文件中引入A、E两个依赖后，根据Maven传递依赖的原则，D1、D2都会被引入，而D1、D2是同一个依赖D的不同版本。<br>当我们在调用D2中的method1()方法，而D1中是15.0版本（method1可能是D升级后增加的方法），可能没有这个方法，这样JVM在加载A中D1依赖的时候，找不到method1方法，就会报NoSuchMethodError的错误，此时就产生了jar包冲突。</p>\n<p>注：<br>如果在调用method2()方法的时候，D1、D2都含有这个方法（且升级的版本D2没有改动这个方法，这样即使D有多个版本，也不会产生版本冲突的问题。）</p>\n<p>解决jar包冲突的方案：</p>\n<p>方案一：</p>\n<p>第一声明优先原则：哪个jar包的坐标在靠上的位置，这个jar包就是先声明的。先声明的jar包坐标下的依赖包，可以优先进入项目中。</p>\n<p>方案二：</p>\n<p>直接依赖：项目中直接导入的jar包，就是该项目的直接依赖包<br>传递依赖：项目中没有直接导入的jar包，可以通过项目直接依赖jar包传递到项目中</p>\n<p>路径就近优先原则。直接依赖路径比传递依赖路径近，那么最终项目进入的jar包会是路径近的直接依赖</p>\n<p>方案三：(推荐使用)</p>\n<p>直接排除法</p>\n<p>当我们要排除某个jar包下的依赖包，在配置exclusions标签的时候，内部可以不写版本号。因为此时依赖包使用的版本和默认的本jar包的版本一样</p>\n<p>例如以下配置：spring-beans使用的是5.1.5.RELEASE，其所依赖的spring-core版本也是5.1.5.RELEASE。spring-context版本4.3.22.RELEASE，其所依赖的spring-core版本也是4.3.22.RELEASE。根据就近原则spring-core版本应该是5.1.5.RELEASE。因为添加了spring-core的exclusion，所以5.1.5.RELEASE的版本失效。最终spring-core的版本为4.3.22.RELEASE。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-beans<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.5.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.3.22.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>exclusion的实效权限最大，实效后就不在有对应的版本信息。然后是直接依赖，存在直接依赖时，直接依赖会&gt;就近原则，即是有直接依赖的话，无论近远，都用的直接依赖，如果都不存在直接依赖，存在的都是传递依赖，这时才使用就近原则。</p>\n<h2 id=\"jar包的锁定\"><a href=\"#jar包的锁定\" class=\"headerlink\" title=\"jar包的锁定\"></a>jar包的锁定</h2><p><dependencymanagement>标签用于锁定jar包</dependencymanagement></p>\n<p>例如B依赖A，A是父工程。此时如果不对A中的部分jar包锁定，如果B中有对应的其他版本的jar包，B工程中会优先使用自己的jar包。如果对A中的部分jar包采用dependencyManagement标签锁定，B只能使用A中被锁定的版本的jar包</p>\n<p>锁定的写法：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Maven整合SSM","date":"2019-06-12T11:57:32.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于Maven整合SSM的依赖配置文件</font></center>\n\n<!--more-->\n\n# Maven中的SSM的项目依赖\n\n```xml\n  <properties>\n    <spring.version>5.0.2.RELEASE</spring.version>\n    <slf4j.version>1.6.6</slf4j.version>\n    <log4j.version>1.2.12</log4j.version>\n    <shiro.version>1.2.3</shiro.version>\n    <mysql.version>5.1.6</mysql.version>\n    <mybatis.version>3.4.5</mybatis.version>\n    <spring.security.version>5.0.1.RELEASE</spring.security.version>\n  </properties>\n\n  <!-- 锁定jar包版本 -->\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-context</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-web</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-webmvc</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-tx</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-test</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.mybatis</groupId>\n        <artifactId>mybatis</artifactId>\n        <version>${mybatis.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <!-- 项目依赖jar包 -->\n  <dependencies>\n    <!-- spring -->\n    <dependency>\n      <groupId>org.aspectj</groupId>\n      <artifactId>aspectjweaver</artifactId>\n      <version>1.6.8</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-aop</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context-support</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-web</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-orm</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-core</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-test</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-webmvc</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-tx</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>4.12</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <version>${mysql.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet</groupId>\n      <artifactId>javax.servlet-api</artifactId>\n      <version>3.1.0</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet.jsp</groupId>\n      <artifactId>jsp-api</artifactId>\n      <version>2.0</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>jstl</groupId>\n      <artifactId>jstl</artifactId>\n      <version>1.2</version>\n    </dependency>\n    <!-- log start -->\n    <dependency>\n      <groupId>log4j</groupId>\n      <artifactId>log4j</artifactId>\n      <version>${log4j.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-api</artifactId>\n      <version>${slf4j.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-log4j12</artifactId>\n      <version>${slf4j.version}</version>\n    </dependency>\n    <!-- log end -->\n    <dependency>\n      <groupId>org.mybatis</groupId>\n      <artifactId>mybatis</artifactId>\n      <version>${mybatis.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.mybatis</groupId>\n      <artifactId>mybatis-spring</artifactId>\n      <version>1.3.0</version>\n    </dependency>\n    <dependency>\n      <groupId>c3p0</groupId>\n      <artifactId>c3p0</artifactId>\n      <version>0.9.1.2</version>\n      <type>jar</type>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.github.pagehelper</groupId>\n      <artifactId>pagehelper</artifactId>\n      <version>5.1.2</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-web</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-config</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-core</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-taglibs</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>com.alibaba</groupId>\n      <artifactId>druid</artifactId>\n      <version>1.0.9</version>\n    </dependency>\n  </dependencies>\n  <!-- 添加tomcat7插件 -->\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.tomcat.maven</groupId>\n        <artifactId>tomcat7-maven-plugin</artifactId>\n        <version>2.2</version>\n      </plugin>\n    </plugins>\n  </build>\n```\n\n> 注意：被锁定的jar包在dependencyManagement标签内和外部都要有一份，因为被锁定的jar包是不能生成真正的jar包的。只有在dependencyManagement外部的依赖配置文件才能生成真正的jar包。\n","source":"_posts/2019-06-12-Maven整合SSM.md","raw":"---\ntitle: Maven整合SSM\ndate: 2019-06-12 11:57:32\ncategories:\n- Maven\ntags:\n- maven\n- SSM\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于Maven整合SSM的依赖配置文件</font></center>\n\n<!--more-->\n\n# Maven中的SSM的项目依赖\n\n```xml\n  <properties>\n    <spring.version>5.0.2.RELEASE</spring.version>\n    <slf4j.version>1.6.6</slf4j.version>\n    <log4j.version>1.2.12</log4j.version>\n    <shiro.version>1.2.3</shiro.version>\n    <mysql.version>5.1.6</mysql.version>\n    <mybatis.version>3.4.5</mybatis.version>\n    <spring.security.version>5.0.1.RELEASE</spring.security.version>\n  </properties>\n\n  <!-- 锁定jar包版本 -->\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-context</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-web</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-webmvc</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-tx</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-test</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.mybatis</groupId>\n        <artifactId>mybatis</artifactId>\n        <version>${mybatis.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <!-- 项目依赖jar包 -->\n  <dependencies>\n    <!-- spring -->\n    <dependency>\n      <groupId>org.aspectj</groupId>\n      <artifactId>aspectjweaver</artifactId>\n      <version>1.6.8</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-aop</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-context-support</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-web</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-orm</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-beans</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-core</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-test</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-webmvc</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-tx</artifactId>\n      <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>4.12</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>mysql</groupId>\n      <artifactId>mysql-connector-java</artifactId>\n      <version>${mysql.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet</groupId>\n      <artifactId>javax.servlet-api</artifactId>\n      <version>3.1.0</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>javax.servlet.jsp</groupId>\n      <artifactId>jsp-api</artifactId>\n      <version>2.0</version>\n      <scope>provided</scope>\n    </dependency>\n    <dependency>\n      <groupId>jstl</groupId>\n      <artifactId>jstl</artifactId>\n      <version>1.2</version>\n    </dependency>\n    <!-- log start -->\n    <dependency>\n      <groupId>log4j</groupId>\n      <artifactId>log4j</artifactId>\n      <version>${log4j.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-api</artifactId>\n      <version>${slf4j.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.slf4j</groupId>\n      <artifactId>slf4j-log4j12</artifactId>\n      <version>${slf4j.version}</version>\n    </dependency>\n    <!-- log end -->\n    <dependency>\n      <groupId>org.mybatis</groupId>\n      <artifactId>mybatis</artifactId>\n      <version>${mybatis.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.mybatis</groupId>\n      <artifactId>mybatis-spring</artifactId>\n      <version>1.3.0</version>\n    </dependency>\n    <dependency>\n      <groupId>c3p0</groupId>\n      <artifactId>c3p0</artifactId>\n      <version>0.9.1.2</version>\n      <type>jar</type>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.github.pagehelper</groupId>\n      <artifactId>pagehelper</artifactId>\n      <version>5.1.2</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-web</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-config</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-core</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.security</groupId>\n      <artifactId>spring-security-taglibs</artifactId>\n      <version>${spring.security.version}</version>\n    </dependency>\n    <dependency>\n      <groupId>com.alibaba</groupId>\n      <artifactId>druid</artifactId>\n      <version>1.0.9</version>\n    </dependency>\n  </dependencies>\n  <!-- 添加tomcat7插件 -->\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.tomcat.maven</groupId>\n        <artifactId>tomcat7-maven-plugin</artifactId>\n        <version>2.2</version>\n      </plugin>\n    </plugins>\n  </build>\n```\n\n> 注意：被锁定的jar包在dependencyManagement标签内和外部都要有一份，因为被锁定的jar包是不能生成真正的jar包的。只有在dependencyManagement外部的依赖配置文件才能生成真正的jar包。\n","slug":"2019-06-12-Maven整合SSM","published":1,"updated":"2019-08-10T04:35:46.734Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6ve001q54tnk61dyis2","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于Maven整合SSM的依赖配置文件</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Maven中的SSM的项目依赖\"><a href=\"#Maven中的SSM的项目依赖\" class=\"headerlink\" title=\"Maven中的SSM的项目依赖\"></a>Maven中的SSM的项目依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">spring.version</span>&gt;</span>5.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">slf4j.version</span>&gt;</span>1.6.6<span class=\"tag\">&lt;/<span class=\"name\">slf4j.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">log4j.version</span>&gt;</span>1.2.12<span class=\"tag\">&lt;/<span class=\"name\">log4j.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">shiro.version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">shiro.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mysql.version</span>&gt;</span>5.1.6<span class=\"tag\">&lt;/<span class=\"name\">mysql.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mybatis.version</span>&gt;</span>3.4.5<span class=\"tag\">&lt;/<span class=\"name\">mybatis.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">spring.security.version</span>&gt;</span>5.0.1.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.security.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 锁定jar包版本 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-tx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 项目依赖jar包 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- spring --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.aspectj<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aspectjweaver<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.6.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-aop<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context-support<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-orm<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-beans<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-tx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mysql.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- log start --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;log4j.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- log end --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-taglibs<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加tomcat7插件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：被锁定的jar包在dependencyManagement标签内和外部都要有一份，因为被锁定的jar包是不能生成真正的jar包的。只有在dependencyManagement外部的依赖配置文件才能生成真正的jar包。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于Maven整合SSM的依赖配置文件</font></center>","more":"<h1 id=\"Maven中的SSM的项目依赖\"><a href=\"#Maven中的SSM的项目依赖\" class=\"headerlink\" title=\"Maven中的SSM的项目依赖\"></a>Maven中的SSM的项目依赖</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">spring.version</span>&gt;</span>5.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">slf4j.version</span>&gt;</span>1.6.6<span class=\"tag\">&lt;/<span class=\"name\">slf4j.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">log4j.version</span>&gt;</span>1.2.12<span class=\"tag\">&lt;/<span class=\"name\">log4j.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">shiro.version</span>&gt;</span>1.2.3<span class=\"tag\">&lt;/<span class=\"name\">shiro.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mysql.version</span>&gt;</span>5.1.6<span class=\"tag\">&lt;/<span class=\"name\">mysql.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">mybatis.version</span>&gt;</span>3.4.5<span class=\"tag\">&lt;/<span class=\"name\">mybatis.version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">spring.security.version</span>&gt;</span>5.0.1.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.security.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 锁定jar包版本 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-tx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 项目依赖jar包 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- spring --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.aspectj<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aspectjweaver<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.6.8<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-aop<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context-support<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-orm<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-beans<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-webmvc<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-tx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mysql.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.servlet-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.1.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.servlet.jsp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jsp-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>provided<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jstl<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- log start --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;log4j.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;slf4j.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- log end --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;mybatis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>c3p0<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.9.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>compile<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.security<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-security-taglibs<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.security.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.alibaba<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>druid<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0.9<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 添加tomcat7插件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.tomcat.maven<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>tomcat7-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：被锁定的jar包在dependencyManagement标签内和外部都要有一份，因为被锁定的jar包是不能生成真正的jar包的。只有在dependencyManagement外部的依赖配置文件才能生成真正的jar包。</p>\n</blockquote>"},{"title":"web.xml文件头声明","date":"2019-06-12T11:58:16.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于web.xml文件头声明的各个版本的总结</font></center>\n\n<!--more-->\n\n#  web.xml文件头声明各个版本参考\n\n1. Servlet 3.1\n\nJava EE 7 XML schema, namespace is http://xmlns.jcp.org/xml/ns/javaee/\n\n```xml\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n</web-app>\n```\n\n2. Servlet 3.0\n\nJava EE 6 XML schema, namespace is http://java.sun.com/xml/ns/javaee\n\n```xml\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n          version=\"3.0\">\n</web-app>\n```\n\n3. Servlet 2.5\n\nJava EE 5 XML schema, namespace is http://java.sun.com/xml/ns/javaee\n\n```xml\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n          version=\"2.5\">\n</web-app>\n```\n\n4. Servlet 2.4\n\nJ2EE 1.4 XML schema, namespace is http://java.sun.com/xml/ns/j2ee\n\n```xml\n<web-app xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\n          http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\"\n          version=\"2.4\">\n\n  <display-name>Servlet 2.4 Web Application</display-name>\n</web-app>\n```\n\n5. Servlet 2.3\n\nJ2EE 1.3 DTDs schema. This web.xml file is too old, highly recommend you to upgrade it.\n\n```xml\n<!DOCTYPE web-app PUBLIC\n \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n\n<web-app>\n  <display-name>Servlet 2.3 Web Application</display-name>\n</web-app>\n```\n","source":"_posts/2019-06-12-web-xml文件头声明.md","raw":"---\ntitle: web.xml文件头声明\ndate: 2019-06-12 11:58:16\ncategories:\n- web.xml\ntags:\n- 文件头\n- 版本\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于web.xml文件头声明的各个版本的总结</font></center>\n\n<!--more-->\n\n#  web.xml文件头声明各个版本参考\n\n1. Servlet 3.1\n\nJava EE 7 XML schema, namespace is http://xmlns.jcp.org/xml/ns/javaee/\n\n```xml\n<web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee\n         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"\n         version=\"3.1\">\n</web-app>\n```\n\n2. Servlet 3.0\n\nJava EE 6 XML schema, namespace is http://java.sun.com/xml/ns/javaee\n\n```xml\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n          version=\"3.0\">\n</web-app>\n```\n\n3. Servlet 2.5\n\nJava EE 5 XML schema, namespace is http://java.sun.com/xml/ns/javaee\n\n```xml\n<web-app xmlns=\"http://java.sun.com/xml/ns/javaee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee\n          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"\n          version=\"2.5\">\n</web-app>\n```\n\n4. Servlet 2.4\n\nJ2EE 1.4 XML schema, namespace is http://java.sun.com/xml/ns/j2ee\n\n```xml\n<web-app xmlns=\"http://java.sun.com/xml/ns/j2ee\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://java.sun.com/xml/ns/j2ee\n          http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\"\n          version=\"2.4\">\n\n  <display-name>Servlet 2.4 Web Application</display-name>\n</web-app>\n```\n\n5. Servlet 2.3\n\nJ2EE 1.3 DTDs schema. This web.xml file is too old, highly recommend you to upgrade it.\n\n```xml\n<!DOCTYPE web-app PUBLIC\n \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"\n \"http://java.sun.com/dtd/web-app_2_3.dtd\" >\n\n<web-app>\n  <display-name>Servlet 2.3 Web Application</display-name>\n</web-app>\n```\n","slug":"2019-06-12-web-xml文件头声明","published":1,"updated":"2019-08-10T04:35:46.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vg001v54tnyvln5ov7","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于web.xml文件头声明的各个版本的总结</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"web-xml文件头声明各个版本参考\"><a href=\"#web-xml文件头声明各个版本参考\" class=\"headerlink\" title=\"web.xml文件头声明各个版本参考\"></a>web.xml文件头声明各个版本参考</h1><ol>\n<li>Servlet 3.1</li>\n</ol>\n<p>Java EE 7 XML schema, namespace is <a href=\"http://xmlns.jcp.org/xml/ns/javaee/\" target=\"_blank\" rel=\"noopener\">http://xmlns.jcp.org/xml/ns/javaee/</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">\"3.1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Servlet 3.0</li>\n</ol>\n<p>Java EE 6 XML schema, namespace is <a href=\"http://java.sun.com/xml/ns/javaee\" target=\"_blank\" rel=\"noopener\">http://java.sun.com/xml/ns/javaee</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Servlet 2.5</li>\n</ol>\n<p>Java EE 5 XML schema, namespace is <a href=\"http://java.sun.com/xml/ns/javaee\" target=\"_blank\" rel=\"noopener\">http://java.sun.com/xml/ns/javaee</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">version</span>=<span class=\"string\">\"2.5\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>Servlet 2.4</li>\n</ol>\n<p>J2EE 1.4 XML schema, namespace is <a href=\"http://java.sun.com/xml/ns/j2ee\" target=\"_blank\" rel=\"noopener\">http://java.sun.com/xml/ns/j2ee</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/j2ee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/j2ee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">          http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">version</span>=<span class=\"string\">\"2.4\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Servlet 2.4 Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>Servlet 2.3</li>\n</ol>\n<p>J2EE 1.3 DTDs schema. This web.xml file is too old, highly recommend you to upgrade it.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class=\"line\"><span class=\"meta\"> \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"</span></span><br><span class=\"line\"><span class=\"meta\"> \"http://java.sun.com/dtd/web-app_2_3.dtd\" &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Servlet 2.3 Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于web.xml文件头声明的各个版本的总结</font></center>","more":"<h1 id=\"web-xml文件头声明各个版本参考\"><a href=\"#web-xml文件头声明各个版本参考\" class=\"headerlink\" title=\"web.xml文件头声明各个版本参考\"></a>web.xml文件头声明各个版本参考</h1><ol>\n<li>Servlet 3.1</li>\n</ol>\n<p>Java EE 7 XML schema, namespace is <a href=\"http://xmlns.jcp.org/xml/ns/javaee/\" target=\"_blank\" rel=\"noopener\">http://xmlns.jcp.org/xml/ns/javaee/</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://xmlns.jcp.org/xml/ns/javaee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">version</span>=<span class=\"string\">\"3.1\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>Servlet 3.0</li>\n</ol>\n<p>Java EE 6 XML schema, namespace is <a href=\"http://java.sun.com/xml/ns/javaee\" target=\"_blank\" rel=\"noopener\">http://java.sun.com/xml/ns/javaee</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">version</span>=<span class=\"string\">\"3.0\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>Servlet 2.5</li>\n</ol>\n<p>Java EE 5 XML schema, namespace is <a href=\"http://java.sun.com/xml/ns/javaee\" target=\"_blank\" rel=\"noopener\">http://java.sun.com/xml/ns/javaee</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">version</span>=<span class=\"string\">\"2.5\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>Servlet 2.4</li>\n</ol>\n<p>J2EE 1.4 XML schema, namespace is <a href=\"http://java.sun.com/xml/ns/j2ee\" target=\"_blank\" rel=\"noopener\">http://java.sun.com/xml/ns/j2ee</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/j2ee\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://java.sun.com/xml/ns/j2ee</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">          http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">version</span>=<span class=\"string\">\"2.4\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Servlet 2.4 Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>Servlet 2.3</li>\n</ol>\n<p>J2EE 1.3 DTDs schema. This web.xml file is too old, highly recommend you to upgrade it.</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE web-app PUBLIC</span></span><br><span class=\"line\"><span class=\"meta\"> \"-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN\"</span></span><br><span class=\"line\"><span class=\"meta\"> \"http://java.sun.com/dtd/web-app_2_3.dtd\" &gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">display-name</span>&gt;</span>Servlet 2.3 Web Application<span class=\"tag\">&lt;/<span class=\"name\">display-name</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"选择排序法","date":"2019-06-12T17:22:09.000Z","_content":"\n<center><font size=4 color=\"red\">这是一篇关于选择排序的方法</font></center>\n\n<!--more-->\n\n# 选择排序\n\n## 文字解释\n\n选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。\n\n## 动图展示\n\n![](SelectSort.gif)\n\n## Java代码实现\n\n```java\npublic int[] select(int[] arr){\n        int min;\n        //只需要执行arr.length-1次\n        for (int i=0;i<arr.length-1;i++){\n            int index=0;\n            min=arr[i];\n            //比较次数逐次递减\n            for (int j=arr.length-1-i;j>0;j--){\n                /*\n                判断：\n                如果min大小接下来的值，将接下来的值赋给min,并记下该索引的位置\n                否则继续迭代\n                 */\n                if (min>arr[arr.length-j]){\n                    min=arr[arr.length-j];\n                    index=arr.length-j;\n                }\n            }\n            //交换索引为index和最初的那个值的位置\n            if (index!=0){\n                int temp;\n                temp=arr[i];\n                arr[i]=arr[index];\n                arr[index]=temp;\n            }\n        }\n\n        return arr;\n    }\n```\n\n## 时间复杂度\n\n选择排序的交换操作介于 0 和 (n - 1） 次之间。选择排序的比较操作为 n (n - 1） / 2 次之间\n\n## 稳定性\n\n选择排序是给每个位置选择当前元素最小的，比如给第一个位置选择最小的，在剩余元素里面给第二个元素选择第二小的，依次类推，直到第n-1个元素，第n个元素不用选择了，因为只剩下它一个最大的元素了。那么，在一趟选择，如果一个元素比当前元素小，而该小的元素又出现在一个和当前元素相等的元素后面，那么交换后稳定性就被破坏了。比较拗口，举个例子，序列5 8 5 2 9，我们知道第一遍选择第1个元素5会和2交换，那么原序列中两个5的相对前后顺序就被破坏了，所以选择排序是一个不稳定的排序算法。\n","source":"_posts/2019-06-12-选择排序法.md","raw":"---\ntitle: 选择排序法\ndate: 2019-06-12 17:22:09\ncategories:\ntags:\n---\n\n<center><font size=4 color=\"red\">这是一篇关于选择排序的方法</font></center>\n\n<!--more-->\n\n# 选择排序\n\n## 文字解释\n\n选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。\n\n## 动图展示\n\n![](SelectSort.gif)\n\n## Java代码实现\n\n```java\npublic int[] select(int[] arr){\n        int min;\n        //只需要执行arr.length-1次\n        for (int i=0;i<arr.length-1;i++){\n            int index=0;\n            min=arr[i];\n            //比较次数逐次递减\n            for (int j=arr.length-1-i;j>0;j--){\n                /*\n                判断：\n                如果min大小接下来的值，将接下来的值赋给min,并记下该索引的位置\n                否则继续迭代\n                 */\n                if (min>arr[arr.length-j]){\n                    min=arr[arr.length-j];\n                    index=arr.length-j;\n                }\n            }\n            //交换索引为index和最初的那个值的位置\n            if (index!=0){\n                int temp;\n                temp=arr[i];\n                arr[i]=arr[index];\n                arr[index]=temp;\n            }\n        }\n\n        return arr;\n    }\n```\n\n## 时间复杂度\n\n选择排序的交换操作介于 0 和 (n - 1） 次之间。选择排序的比较操作为 n (n - 1） / 2 次之间\n\n## 稳定性\n\n选择排序是给每个位置选择当前元素最小的，比如给第一个位置选择最小的，在剩余元素里面给第二个元素选择第二小的，依次类推，直到第n-1个元素，第n个元素不用选择了，因为只剩下它一个最大的元素了。那么，在一趟选择，如果一个元素比当前元素小，而该小的元素又出现在一个和当前元素相等的元素后面，那么交换后稳定性就被破坏了。比较拗口，举个例子，序列5 8 5 2 9，我们知道第一遍选择第1个元素5会和2交换，那么原序列中两个5的相对前后顺序就被破坏了，所以选择排序是一个不稳定的排序算法。\n","slug":"2019-06-12-选择排序法","published":1,"updated":"2019-08-10T04:35:46.735Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vh001x54tnxo08pors","content":"<center><font size=\"4\" color=\"red\">这是一篇关于选择排序的方法</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h1><h2 id=\"文字解释\"><a href=\"#文字解释\" class=\"headerlink\" title=\"文字解释\"></a>文字解释</h2><p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p>\n<h2 id=\"动图展示\"><a href=\"#动图展示\" class=\"headerlink\" title=\"动图展示\"></a>动图展示</h2><p><img src=\"/2019/06/13/2019-06-12-选择排序法/SelectSort.gif\" alt></p>\n<h2 id=\"Java代码实现\"><a href=\"#Java代码实现\" class=\"headerlink\" title=\"Java代码实现\"></a>Java代码实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] select(<span class=\"keyword\">int</span>[] arr)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min;</span><br><span class=\"line\">        <span class=\"comment\">//只需要执行arr.length-1次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;arr.length-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\">            min=arr[i];</span><br><span class=\"line\">            <span class=\"comment\">//比较次数逐次递减</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=arr.length-<span class=\"number\">1</span>-i;j&gt;<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">                判断：</span></span><br><span class=\"line\"><span class=\"comment\">                如果min大小接下来的值，将接下来的值赋给min,并记下该索引的位置</span></span><br><span class=\"line\"><span class=\"comment\">                否则继续迭代</span></span><br><span class=\"line\"><span class=\"comment\">                 */</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (min&gt;arr[arr.length-j])&#123;</span><br><span class=\"line\">                    min=arr[arr.length-j];</span><br><span class=\"line\">                    index=arr.length-j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//交换索引为index和最初的那个值的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">                temp=arr[i];</span><br><span class=\"line\">                arr[i]=arr[index];</span><br><span class=\"line\">                arr[index]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>选择排序的交换操作介于 0 和 (n - 1） 次之间。选择排序的比较操作为 n (n - 1） / 2 次之间</p>\n<h2 id=\"稳定性\"><a href=\"#稳定性\" class=\"headerlink\" title=\"稳定性\"></a>稳定性</h2><p>选择排序是给每个位置选择当前元素最小的，比如给第一个位置选择最小的，在剩余元素里面给第二个元素选择第二小的，依次类推，直到第n-1个元素，第n个元素不用选择了，因为只剩下它一个最大的元素了。那么，在一趟选择，如果一个元素比当前元素小，而该小的元素又出现在一个和当前元素相等的元素后面，那么交换后稳定性就被破坏了。比较拗口，举个例子，序列5 8 5 2 9，我们知道第一遍选择第1个元素5会和2交换，那么原序列中两个5的相对前后顺序就被破坏了，所以选择排序是一个不稳定的排序算法。</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">这是一篇关于选择排序的方法</font></center>","more":"<h1 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h1><h2 id=\"文字解释\"><a href=\"#文字解释\" class=\"headerlink\" title=\"文字解释\"></a>文字解释</h2><p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p>\n<h2 id=\"动图展示\"><a href=\"#动图展示\" class=\"headerlink\" title=\"动图展示\"></a>动图展示</h2><p><img src=\"/2019/06/13/2019-06-12-选择排序法/SelectSort.gif\" alt></p>\n<h2 id=\"Java代码实现\"><a href=\"#Java代码实现\" class=\"headerlink\" title=\"Java代码实现\"></a>Java代码实现</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span>[] select(<span class=\"keyword\">int</span>[] arr)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> min;</span><br><span class=\"line\">        <span class=\"comment\">//只需要执行arr.length-1次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;arr.length-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\">            min=arr[i];</span><br><span class=\"line\">            <span class=\"comment\">//比较次数逐次递减</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j=arr.length-<span class=\"number\">1</span>-i;j&gt;<span class=\"number\">0</span>;j--)&#123;</span><br><span class=\"line\">                <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">                判断：</span></span><br><span class=\"line\"><span class=\"comment\">                如果min大小接下来的值，将接下来的值赋给min,并记下该索引的位置</span></span><br><span class=\"line\"><span class=\"comment\">                否则继续迭代</span></span><br><span class=\"line\"><span class=\"comment\">                 */</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (min&gt;arr[arr.length-j])&#123;</span><br><span class=\"line\">                    min=arr[arr.length-j];</span><br><span class=\"line\">                    index=arr.length-j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//交换索引为index和最初的那个值的位置</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (index!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">                temp=arr[i];</span><br><span class=\"line\">                arr[i]=arr[index];</span><br><span class=\"line\">                arr[index]=temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> arr;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"时间复杂度\"><a href=\"#时间复杂度\" class=\"headerlink\" title=\"时间复杂度\"></a>时间复杂度</h2><p>选择排序的交换操作介于 0 和 (n - 1） 次之间。选择排序的比较操作为 n (n - 1） / 2 次之间</p>\n<h2 id=\"稳定性\"><a href=\"#稳定性\" class=\"headerlink\" title=\"稳定性\"></a>稳定性</h2><p>选择排序是给每个位置选择当前元素最小的，比如给第一个位置选择最小的，在剩余元素里面给第二个元素选择第二小的，依次类推，直到第n-1个元素，第n个元素不用选择了，因为只剩下它一个最大的元素了。那么，在一趟选择，如果一个元素比当前元素小，而该小的元素又出现在一个和当前元素相等的元素后面，那么交换后稳定性就被破坏了。比较拗口，举个例子，序列5 8 5 2 9，我们知道第一遍选择第1个元素5会和2交换，那么原序列中两个5的相对前后顺序就被破坏了，所以选择排序是一个不稳定的排序算法。</p>"},{"title":"Shell基本命令","date":"2019-06-19T10:52:04.000Z","_content":"\n<center><font size=4 color=\"red\">本文是一篇关于Shell脚本语言的基本命令文档</font></center>\n\n<!--more-->\n\n# shell\n\n```test\n-e filename 如果 filename存在，则为真\n-d filename 如果 filename为目录，则为真\n-f filename 如果 filename为常规文件，则为真\n-L filename 如果 filename为符号链接，则为真\n-r filename 如果 filename可读，则为真\n-w filename 如果 filename可写，则为真\n-x filename 如果 filename可执行，则为真\n-s filename 如果文件长度不为0，则为真\n-h filename 如果文件是软链接，则为真\nfilename1 -nt filename2 如果 filename1比 filename2新，则为真。\nfilename1 -ot filename2 如果 filename1比 filename2旧，则为真。\n-eq 等于\n-ne 不等于\n-gt 大于\n-ge 大于等于\n-lt 小于\n-le 小于等于\n至于！号那就是取非了呗！\n```\n\n## expect\n\n```test\nspawn 调用要执行的命令\nexpect 等待命令提示信息的出现，也就是捕捉用户输入的提示：\nsend 发送需要交互的值，替代了用户手动输入内容\nset 设置变量值\n\ninteract 执行完成后保持交互状态，把控制权交给控制台\nexpect eof 这个一定要加，与spawn对应表示捕获终端输出信息终止\nexpect脚本必须以interact或expect eof结束，执行自动化任务通常expect eof就够了\n\n设置expect永不超时\nset timeout -1\n设置expect 300秒超时，如果超过300没有expect内容出现，则推出\nset timeout 300\n\nexpect编写语法，expect使用的是tcl语法。\n一条Tcl命令由空格分割的单词组成. 其中, 第一个单词是命令名称, 其余的是命令参数\ncmd arg arg arg\n$符号代表变量的值. 在本例中, 变量名称是foo.\n$foo\n方括号执行了一个嵌套命令. 例如, 如果你想传递一个命令的结果作为另外一个命令的参数, 那么你使用这个符号\n[cmd arg]\n双引号把词组标记为命令的一个参数. \"$\"符号和方括号在双引号内仍被解释\n\"some stuff\"\n大括号也把词组标记为命令的一个参数. 但是, 其他符号在大括号内不被解释\n{some stuff}\n\n反斜线符号是用来引用特殊符号. 例如：n 代表换行. 反斜线符号也被用来关闭\"$\"符号, 引号,方括号和大括号的特殊含义\n```\n\n# 使用shell编写的科学上网的脚本\n\n开启\n\n```shell\n#!/usr/bin/expect\n\n#user login\n\nset user root\nset host 192.168.xx.x\nset password *******\nset timeout 60\n\nspawn ssh $user@$host\n\nexpect \"password:\"\nsend \"$password\\n\"\n\nexpect \"~#\"\nsend \"monlor\\n\"\n\nexpect \"请输入你的选择：\"\nsend \"04\\n\"\n\nexpect \"1/0\"\nsend \"1\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"~#\"\nsend \"exit\\n\"\n\ninteract\n```\n\n关闭\n\n```shell\n#!/usr/bin/expect\n\n# user layout\n\nset user root\nset host 192.168.xx.x\nset password *******\nset timeout 60\n\nspawn ssh $user@$host\n\nexpect \"password:\"\nsend \"$password\\n\"\n\nexpect \"~#\"\nsend \"monlor\\n\"\n\nexpect \"请输入你的选择：\"\nsend \"04\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"~#\"\nsend \"exit\\n\"\n\ninteract\n```","source":"_posts/2019-06-19-Shell基本命令.md","raw":"---\ntitle: Shell基本命令\ndate: 2019-06-19 10:52:04\ncategories:\n- shell\ntags:\n- shell\n- 基础\n---\n\n<center><font size=4 color=\"red\">本文是一篇关于Shell脚本语言的基本命令文档</font></center>\n\n<!--more-->\n\n# shell\n\n```test\n-e filename 如果 filename存在，则为真\n-d filename 如果 filename为目录，则为真\n-f filename 如果 filename为常规文件，则为真\n-L filename 如果 filename为符号链接，则为真\n-r filename 如果 filename可读，则为真\n-w filename 如果 filename可写，则为真\n-x filename 如果 filename可执行，则为真\n-s filename 如果文件长度不为0，则为真\n-h filename 如果文件是软链接，则为真\nfilename1 -nt filename2 如果 filename1比 filename2新，则为真。\nfilename1 -ot filename2 如果 filename1比 filename2旧，则为真。\n-eq 等于\n-ne 不等于\n-gt 大于\n-ge 大于等于\n-lt 小于\n-le 小于等于\n至于！号那就是取非了呗！\n```\n\n## expect\n\n```test\nspawn 调用要执行的命令\nexpect 等待命令提示信息的出现，也就是捕捉用户输入的提示：\nsend 发送需要交互的值，替代了用户手动输入内容\nset 设置变量值\n\ninteract 执行完成后保持交互状态，把控制权交给控制台\nexpect eof 这个一定要加，与spawn对应表示捕获终端输出信息终止\nexpect脚本必须以interact或expect eof结束，执行自动化任务通常expect eof就够了\n\n设置expect永不超时\nset timeout -1\n设置expect 300秒超时，如果超过300没有expect内容出现，则推出\nset timeout 300\n\nexpect编写语法，expect使用的是tcl语法。\n一条Tcl命令由空格分割的单词组成. 其中, 第一个单词是命令名称, 其余的是命令参数\ncmd arg arg arg\n$符号代表变量的值. 在本例中, 变量名称是foo.\n$foo\n方括号执行了一个嵌套命令. 例如, 如果你想传递一个命令的结果作为另外一个命令的参数, 那么你使用这个符号\n[cmd arg]\n双引号把词组标记为命令的一个参数. \"$\"符号和方括号在双引号内仍被解释\n\"some stuff\"\n大括号也把词组标记为命令的一个参数. 但是, 其他符号在大括号内不被解释\n{some stuff}\n\n反斜线符号是用来引用特殊符号. 例如：n 代表换行. 反斜线符号也被用来关闭\"$\"符号, 引号,方括号和大括号的特殊含义\n```\n\n# 使用shell编写的科学上网的脚本\n\n开启\n\n```shell\n#!/usr/bin/expect\n\n#user login\n\nset user root\nset host 192.168.xx.x\nset password *******\nset timeout 60\n\nspawn ssh $user@$host\n\nexpect \"password:\"\nsend \"$password\\n\"\n\nexpect \"~#\"\nsend \"monlor\\n\"\n\nexpect \"请输入你的选择：\"\nsend \"04\\n\"\n\nexpect \"1/0\"\nsend \"1\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"~#\"\nsend \"exit\\n\"\n\ninteract\n```\n\n关闭\n\n```shell\n#!/usr/bin/expect\n\n# user layout\n\nset user root\nset host 192.168.xx.x\nset password *******\nset timeout 60\n\nspawn ssh $user@$host\n\nexpect \"password:\"\nsend \"$password\\n\"\n\nexpect \"~#\"\nsend \"monlor\\n\"\n\nexpect \"请输入你的选择：\"\nsend \"04\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"1/0\"\nsend \"0\\n\"\n\nexpect \"~#\"\nsend \"exit\\n\"\n\ninteract\n```","slug":"2019-06-19-Shell基本命令","published":1,"updated":"2019-08-10T04:35:46.739Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vj002154tna4m4q696","content":"<center><font size=\"4\" color=\"red\">本文是一篇关于Shell脚本语言的基本命令文档</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-e filename 如果 filename存在，则为真</span><br><span class=\"line\">-d filename 如果 filename为目录，则为真</span><br><span class=\"line\">-f filename 如果 filename为常规文件，则为真</span><br><span class=\"line\">-L filename 如果 filename为符号链接，则为真</span><br><span class=\"line\">-r filename 如果 filename可读，则为真</span><br><span class=\"line\">-w filename 如果 filename可写，则为真</span><br><span class=\"line\">-x filename 如果 filename可执行，则为真</span><br><span class=\"line\">-s filename 如果文件长度不为0，则为真</span><br><span class=\"line\">-h filename 如果文件是软链接，则为真</span><br><span class=\"line\">filename1 -nt filename2 如果 filename1比 filename2新，则为真。</span><br><span class=\"line\">filename1 -ot filename2 如果 filename1比 filename2旧，则为真。</span><br><span class=\"line\">-eq 等于</span><br><span class=\"line\">-ne 不等于</span><br><span class=\"line\">-gt 大于</span><br><span class=\"line\">-ge 大于等于</span><br><span class=\"line\">-lt 小于</span><br><span class=\"line\">-le 小于等于</span><br><span class=\"line\">至于！号那就是取非了呗！</span><br></pre></td></tr></table></figure>\n<h2 id=\"expect\"><a href=\"#expect\" class=\"headerlink\" title=\"expect\"></a>expect</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spawn 调用要执行的命令</span><br><span class=\"line\">expect 等待命令提示信息的出现，也就是捕捉用户输入的提示：</span><br><span class=\"line\">send 发送需要交互的值，替代了用户手动输入内容</span><br><span class=\"line\">set 设置变量值</span><br><span class=\"line\"></span><br><span class=\"line\">interact 执行完成后保持交互状态，把控制权交给控制台</span><br><span class=\"line\">expect eof 这个一定要加，与spawn对应表示捕获终端输出信息终止</span><br><span class=\"line\">expect脚本必须以interact或expect eof结束，执行自动化任务通常expect eof就够了</span><br><span class=\"line\"></span><br><span class=\"line\">设置expect永不超时</span><br><span class=\"line\">set timeout -1</span><br><span class=\"line\">设置expect 300秒超时，如果超过300没有expect内容出现，则推出</span><br><span class=\"line\">set timeout 300</span><br><span class=\"line\"></span><br><span class=\"line\">expect编写语法，expect使用的是tcl语法。</span><br><span class=\"line\">一条Tcl命令由空格分割的单词组成. 其中, 第一个单词是命令名称, 其余的是命令参数</span><br><span class=\"line\">cmd arg arg arg</span><br><span class=\"line\">$符号代表变量的值. 在本例中, 变量名称是foo.</span><br><span class=\"line\">$foo</span><br><span class=\"line\">方括号执行了一个嵌套命令. 例如, 如果你想传递一个命令的结果作为另外一个命令的参数, 那么你使用这个符号</span><br><span class=\"line\">[cmd arg]</span><br><span class=\"line\">双引号把词组标记为命令的一个参数. &quot;$&quot;符号和方括号在双引号内仍被解释</span><br><span class=\"line\">&quot;some stuff&quot;</span><br><span class=\"line\">大括号也把词组标记为命令的一个参数. 但是, 其他符号在大括号内不被解释</span><br><span class=\"line\">&#123;some stuff&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">反斜线符号是用来引用特殊符号. 例如：n 代表换行. 反斜线符号也被用来关闭&quot;$&quot;符号, 引号,方括号和大括号的特殊含义</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用shell编写的科学上网的脚本\"><a href=\"#使用shell编写的科学上网的脚本\" class=\"headerlink\" title=\"使用shell编写的科学上网的脚本\"></a>使用shell编写的科学上网的脚本</h1><p>开启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/usr/bin/expect</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>user login</span><br><span class=\"line\"></span><br><span class=\"line\">set user root</span><br><span class=\"line\">set host 192.168.xx.x</span><br><span class=\"line\">set password *******</span><br><span class=\"line\">set timeout 60</span><br><span class=\"line\"></span><br><span class=\"line\">spawn ssh $user@$host</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"password:\"</span><br><span class=\"line\">send \"$password\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"monlor\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"请输入你的选择：\"</span><br><span class=\"line\">send \"04\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"1\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"exit\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">interact</span><br></pre></td></tr></table></figure>\n<p>关闭</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/usr/bin/expect</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> user layout</span><br><span class=\"line\"></span><br><span class=\"line\">set user root</span><br><span class=\"line\">set host 192.168.xx.x</span><br><span class=\"line\">set password *******</span><br><span class=\"line\">set timeout 60</span><br><span class=\"line\"></span><br><span class=\"line\">spawn ssh $user@$host</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"password:\"</span><br><span class=\"line\">send \"$password\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"monlor\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"请输入你的选择：\"</span><br><span class=\"line\">send \"04\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"exit\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">interact</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">本文是一篇关于Shell脚本语言的基本命令文档</font></center>","more":"<h1 id=\"shell\"><a href=\"#shell\" class=\"headerlink\" title=\"shell\"></a>shell</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-e filename 如果 filename存在，则为真</span><br><span class=\"line\">-d filename 如果 filename为目录，则为真</span><br><span class=\"line\">-f filename 如果 filename为常规文件，则为真</span><br><span class=\"line\">-L filename 如果 filename为符号链接，则为真</span><br><span class=\"line\">-r filename 如果 filename可读，则为真</span><br><span class=\"line\">-w filename 如果 filename可写，则为真</span><br><span class=\"line\">-x filename 如果 filename可执行，则为真</span><br><span class=\"line\">-s filename 如果文件长度不为0，则为真</span><br><span class=\"line\">-h filename 如果文件是软链接，则为真</span><br><span class=\"line\">filename1 -nt filename2 如果 filename1比 filename2新，则为真。</span><br><span class=\"line\">filename1 -ot filename2 如果 filename1比 filename2旧，则为真。</span><br><span class=\"line\">-eq 等于</span><br><span class=\"line\">-ne 不等于</span><br><span class=\"line\">-gt 大于</span><br><span class=\"line\">-ge 大于等于</span><br><span class=\"line\">-lt 小于</span><br><span class=\"line\">-le 小于等于</span><br><span class=\"line\">至于！号那就是取非了呗！</span><br></pre></td></tr></table></figure>\n<h2 id=\"expect\"><a href=\"#expect\" class=\"headerlink\" title=\"expect\"></a>expect</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spawn 调用要执行的命令</span><br><span class=\"line\">expect 等待命令提示信息的出现，也就是捕捉用户输入的提示：</span><br><span class=\"line\">send 发送需要交互的值，替代了用户手动输入内容</span><br><span class=\"line\">set 设置变量值</span><br><span class=\"line\"></span><br><span class=\"line\">interact 执行完成后保持交互状态，把控制权交给控制台</span><br><span class=\"line\">expect eof 这个一定要加，与spawn对应表示捕获终端输出信息终止</span><br><span class=\"line\">expect脚本必须以interact或expect eof结束，执行自动化任务通常expect eof就够了</span><br><span class=\"line\"></span><br><span class=\"line\">设置expect永不超时</span><br><span class=\"line\">set timeout -1</span><br><span class=\"line\">设置expect 300秒超时，如果超过300没有expect内容出现，则推出</span><br><span class=\"line\">set timeout 300</span><br><span class=\"line\"></span><br><span class=\"line\">expect编写语法，expect使用的是tcl语法。</span><br><span class=\"line\">一条Tcl命令由空格分割的单词组成. 其中, 第一个单词是命令名称, 其余的是命令参数</span><br><span class=\"line\">cmd arg arg arg</span><br><span class=\"line\">$符号代表变量的值. 在本例中, 变量名称是foo.</span><br><span class=\"line\">$foo</span><br><span class=\"line\">方括号执行了一个嵌套命令. 例如, 如果你想传递一个命令的结果作为另外一个命令的参数, 那么你使用这个符号</span><br><span class=\"line\">[cmd arg]</span><br><span class=\"line\">双引号把词组标记为命令的一个参数. &quot;$&quot;符号和方括号在双引号内仍被解释</span><br><span class=\"line\">&quot;some stuff&quot;</span><br><span class=\"line\">大括号也把词组标记为命令的一个参数. 但是, 其他符号在大括号内不被解释</span><br><span class=\"line\">&#123;some stuff&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">反斜线符号是用来引用特殊符号. 例如：n 代表换行. 反斜线符号也被用来关闭&quot;$&quot;符号, 引号,方括号和大括号的特殊含义</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用shell编写的科学上网的脚本\"><a href=\"#使用shell编写的科学上网的脚本\" class=\"headerlink\" title=\"使用shell编写的科学上网的脚本\"></a>使用shell编写的科学上网的脚本</h1><p>开启</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/usr/bin/expect</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>user login</span><br><span class=\"line\"></span><br><span class=\"line\">set user root</span><br><span class=\"line\">set host 192.168.xx.x</span><br><span class=\"line\">set password *******</span><br><span class=\"line\">set timeout 60</span><br><span class=\"line\"></span><br><span class=\"line\">spawn ssh $user@$host</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"password:\"</span><br><span class=\"line\">send \"$password\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"monlor\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"请输入你的选择：\"</span><br><span class=\"line\">send \"04\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"1\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"exit\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">interact</span><br></pre></td></tr></table></figure>\n<p>关闭</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/usr/bin/expect</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> user layout</span><br><span class=\"line\"></span><br><span class=\"line\">set user root</span><br><span class=\"line\">set host 192.168.xx.x</span><br><span class=\"line\">set password *******</span><br><span class=\"line\">set timeout 60</span><br><span class=\"line\"></span><br><span class=\"line\">spawn ssh $user@$host</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"password:\"</span><br><span class=\"line\">send \"$password\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"monlor\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"请输入你的选择：\"</span><br><span class=\"line\">send \"04\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"1/0\"</span><br><span class=\"line\">send \"0\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">expect \"~#\"</span><br><span class=\"line\">send \"exit\\n\"</span><br><span class=\"line\"></span><br><span class=\"line\">interact</span><br></pre></td></tr></table></figure>"},{"title":"Jenkins部署项目-项目运行01","date":"2019-06-22T15:20:55.000Z","_content":"\n<center><font size=4 color=\"red\">持续集成，持续交付第二章-项目运行01</font></center>\n\n<!--more-->\n\n## GitLab连接Jenkins\n\n#### 发布项目到gitlab上\n\n1. 创建项目\n\n2. 将本机项目中的.git文件删除\n\n3. 配置gitlab与本机连接的密钥\n\n4. 将本机里的项目发布到gitlab仓库中\n\n> 注意的一个点:这里不能使用域名.只能使用ip地址.下面的jenkins克隆代码也是只能使用ip地址\n\n#### GitLab连接Jenkins\n\n1. 进入jenkins容器\n\n    `cd /usr/local/jenkins`\n\n    `docker exec -it jenkins /bin/bash`:进入容器,并以bash呈现,其实就是进入了终端\n\n2. 在容器中进入具有可执行权限的jenkins_hone目录\n\n    `cd /var/jenkins_home/`\n\n3. 在容器中生成一个SSH密钥\n\n    `ssh-keygen -t rsa -C \"hui@hui.com\" -b 4096`\n\n    查看秘钥\n\n    `cat /var/jenkins_home/.ssh/id_rsa.pub`\n\n    将查到的密钥粘贴到gitlab中,起名为Jenkins\n\n4. 将gitlab中的项目克隆到`/var/jenkins_home/`目录下\n\n    `git clone ssh://git@192.168.12.140:2222/hui/myshop.git`\n\n5. 验证是否gitlab与jenkins连接\n\n    `cd .ssh/`,如果在.ssh目录下有known_hosts,则说明连接成功\n\n## 新增一台机器\n\n这台机器我用于存放JDK(其实只需要JRE),Maven和tomcat。ip:192.168.12.146\n\n需要在这台机器的/usr/local目录下新建一个jenkins,用于jenkins访问的目录\n\n1. 进入Jenkins页面\n\n2. 系统管理-->系统设置-->Publish over SSH\n\n    添加虚拟机的私钥\n\n    `cat /var/jenkins_home/.ssh/id_rsa.pub`\n\n    将秘钥复制到\"key\"中\n\n    点击新增\n\n    ![](01.png)\n\n    这里需要把刚刚创建的一台虚拟机新增进来,访问方式是SSH方式访问\n\n    点击\"高级\",选上密码复选框,密码为新增这台虚拟机的开机密码.整体配置如下\n\n    ![](02.jpg)\n\n    点击`Test Configuration`进行测试,如果出现Success,则连接成功\n\n    最后点击应用-->保存\n\n## 使用Jenkins构建项目\n\n1. 新建任务,输入一个任务名称.我这里依然用了gitlab中的项目名称myshop,然后选择构建一个maven项目,点击确定\n\n2. 选择\"丢弃旧的构建\",保持构建的最大个数填\"10\",意思是每次都保留最新的10个构建,其他丢弃\n\n    ![](03.png)\n\n    选择\"源码管理\"\n\n    选择git,\"Repository URL\"填写gitlab中的项目地址,要把域名改为ip\n\n    ![](04.jpg)\n\n    然后点击应用-->保持\n\n3. 点击\"立即构建\"\n\n    ![](05.jpg)\n\n    可以通过构建历史查看记录\n\n    也可以通过点击那个小红点查看控制台输出\n\n    ![](06.jpg)\n\n    这是个构建失败的例子,因为我没有配置maven和JDK\n\n4. 配置JDK和Maven\n\n    系统管理-->全局工具配置\n\n    JDK,JDK的下载我是从oracle公司下载的,因此需要登录\n\n    ![](07.png)\n\n    Maven\n\n    ![](08.jpg)\n\n    应用-->保存\n\n5. 再次回到\"立即构建\",此时就会开始下载jdk和maven,然后构建项目\n\n    在\"我的视图\"里可以查看是一下情况,则构建成功\n\n    ![](09.jpg)\n\n## Jenkis连接gitlab中的项目标签\n\n1. 在gitlab的myshop项目中新建一个标签\n\n    ![](10.jpg)\n\n    点击标签,然后新建,填入标签名称:1.0.0\n\n    ![](11.png)\n\n2. 点击项目名称\n\n    ![](12.jpg)\n\n    进去后选择\"配置\"\n\n    选择参数化构建过程,配置如下,这步必须已经装上了`Extended Choice Parameter plugin`插件\n\n    ![](13.png)\n\n    Groovy Script的脚本文件\n\n    注意:要保证`/var/jenkins_home/workspace/myshop`路径正确\n\n    ```shell\n    def ver_keys = [ 'bash', '-c', 'cd /var/jenkins_home/workspace/myshop;git pull>/dev/null; git remote prune origin >/dev/null; git tag -l|sort -r |head -10 ' ]\n    ver_keys.execute().text.tokenize('\\n')\n    ```\n\n    配置这个是为了通过gitlab的标签进行参数化构建\n\n3. \"源码管理\"从git改为无\n\n4. 添加shell自动构建脚本\n\n    ![](14.png)\n\n    注意`/var/jenkins_home/workspace/myshop`路径别错了\n\n    ```shell\n    echo $RELEASE_VERSION\n    cd /var/jenkins_home/workspace/myshop\n    git checkout $RELEASE_VERSION\n    git pull origin $RELEASE_VERSION\n    mvn clean package\n    ```\n\n5. 应用-->保存\n\n6. 点击`Build with Parameters`开始构建,第一次需要同意运行脚本,同意后再次点击`Build with Parameters`开始构建\n","source":"_posts/2019-06-22-Jenkins部署项目-项目运行.md","raw":"---\ntitle: Jenkins部署项目-项目运行01\ndate: 2019-06-22 15:20:55\ncategories:\n- Jenkins\ntags:\n- gitlab\n- mysql\n- redis\n- nexus\n- jekins\n- kubernetes\n---\n\n<center><font size=4 color=\"red\">持续集成，持续交付第二章-项目运行01</font></center>\n\n<!--more-->\n\n## GitLab连接Jenkins\n\n#### 发布项目到gitlab上\n\n1. 创建项目\n\n2. 将本机项目中的.git文件删除\n\n3. 配置gitlab与本机连接的密钥\n\n4. 将本机里的项目发布到gitlab仓库中\n\n> 注意的一个点:这里不能使用域名.只能使用ip地址.下面的jenkins克隆代码也是只能使用ip地址\n\n#### GitLab连接Jenkins\n\n1. 进入jenkins容器\n\n    `cd /usr/local/jenkins`\n\n    `docker exec -it jenkins /bin/bash`:进入容器,并以bash呈现,其实就是进入了终端\n\n2. 在容器中进入具有可执行权限的jenkins_hone目录\n\n    `cd /var/jenkins_home/`\n\n3. 在容器中生成一个SSH密钥\n\n    `ssh-keygen -t rsa -C \"hui@hui.com\" -b 4096`\n\n    查看秘钥\n\n    `cat /var/jenkins_home/.ssh/id_rsa.pub`\n\n    将查到的密钥粘贴到gitlab中,起名为Jenkins\n\n4. 将gitlab中的项目克隆到`/var/jenkins_home/`目录下\n\n    `git clone ssh://git@192.168.12.140:2222/hui/myshop.git`\n\n5. 验证是否gitlab与jenkins连接\n\n    `cd .ssh/`,如果在.ssh目录下有known_hosts,则说明连接成功\n\n## 新增一台机器\n\n这台机器我用于存放JDK(其实只需要JRE),Maven和tomcat。ip:192.168.12.146\n\n需要在这台机器的/usr/local目录下新建一个jenkins,用于jenkins访问的目录\n\n1. 进入Jenkins页面\n\n2. 系统管理-->系统设置-->Publish over SSH\n\n    添加虚拟机的私钥\n\n    `cat /var/jenkins_home/.ssh/id_rsa.pub`\n\n    将秘钥复制到\"key\"中\n\n    点击新增\n\n    ![](01.png)\n\n    这里需要把刚刚创建的一台虚拟机新增进来,访问方式是SSH方式访问\n\n    点击\"高级\",选上密码复选框,密码为新增这台虚拟机的开机密码.整体配置如下\n\n    ![](02.jpg)\n\n    点击`Test Configuration`进行测试,如果出现Success,则连接成功\n\n    最后点击应用-->保存\n\n## 使用Jenkins构建项目\n\n1. 新建任务,输入一个任务名称.我这里依然用了gitlab中的项目名称myshop,然后选择构建一个maven项目,点击确定\n\n2. 选择\"丢弃旧的构建\",保持构建的最大个数填\"10\",意思是每次都保留最新的10个构建,其他丢弃\n\n    ![](03.png)\n\n    选择\"源码管理\"\n\n    选择git,\"Repository URL\"填写gitlab中的项目地址,要把域名改为ip\n\n    ![](04.jpg)\n\n    然后点击应用-->保持\n\n3. 点击\"立即构建\"\n\n    ![](05.jpg)\n\n    可以通过构建历史查看记录\n\n    也可以通过点击那个小红点查看控制台输出\n\n    ![](06.jpg)\n\n    这是个构建失败的例子,因为我没有配置maven和JDK\n\n4. 配置JDK和Maven\n\n    系统管理-->全局工具配置\n\n    JDK,JDK的下载我是从oracle公司下载的,因此需要登录\n\n    ![](07.png)\n\n    Maven\n\n    ![](08.jpg)\n\n    应用-->保存\n\n5. 再次回到\"立即构建\",此时就会开始下载jdk和maven,然后构建项目\n\n    在\"我的视图\"里可以查看是一下情况,则构建成功\n\n    ![](09.jpg)\n\n## Jenkis连接gitlab中的项目标签\n\n1. 在gitlab的myshop项目中新建一个标签\n\n    ![](10.jpg)\n\n    点击标签,然后新建,填入标签名称:1.0.0\n\n    ![](11.png)\n\n2. 点击项目名称\n\n    ![](12.jpg)\n\n    进去后选择\"配置\"\n\n    选择参数化构建过程,配置如下,这步必须已经装上了`Extended Choice Parameter plugin`插件\n\n    ![](13.png)\n\n    Groovy Script的脚本文件\n\n    注意:要保证`/var/jenkins_home/workspace/myshop`路径正确\n\n    ```shell\n    def ver_keys = [ 'bash', '-c', 'cd /var/jenkins_home/workspace/myshop;git pull>/dev/null; git remote prune origin >/dev/null; git tag -l|sort -r |head -10 ' ]\n    ver_keys.execute().text.tokenize('\\n')\n    ```\n\n    配置这个是为了通过gitlab的标签进行参数化构建\n\n3. \"源码管理\"从git改为无\n\n4. 添加shell自动构建脚本\n\n    ![](14.png)\n\n    注意`/var/jenkins_home/workspace/myshop`路径别错了\n\n    ```shell\n    echo $RELEASE_VERSION\n    cd /var/jenkins_home/workspace/myshop\n    git checkout $RELEASE_VERSION\n    git pull origin $RELEASE_VERSION\n    mvn clean package\n    ```\n\n5. 应用-->保存\n\n6. 点击`Build with Parameters`开始构建,第一次需要同意运行脚本,同意后再次点击`Build with Parameters`开始构建\n","slug":"2019-06-22-Jenkins部署项目-项目运行","published":1,"updated":"2019-08-10T04:35:46.751Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vk002354tng94cqwrx","content":"<center><font size=\"4\" color=\"red\">持续集成，持续交付第二章-项目运行01</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"GitLab连接Jenkins\"><a href=\"#GitLab连接Jenkins\" class=\"headerlink\" title=\"GitLab连接Jenkins\"></a>GitLab连接Jenkins</h2><h4 id=\"发布项目到gitlab上\"><a href=\"#发布项目到gitlab上\" class=\"headerlink\" title=\"发布项目到gitlab上\"></a>发布项目到gitlab上</h4><ol>\n<li><p>创建项目</p>\n</li>\n<li><p>将本机项目中的.git文件删除</p>\n</li>\n<li><p>配置gitlab与本机连接的密钥</p>\n</li>\n<li><p>将本机里的项目发布到gitlab仓库中</p>\n</li>\n</ol>\n<blockquote>\n<p>注意的一个点:这里不能使用域名.只能使用ip地址.下面的jenkins克隆代码也是只能使用ip地址</p>\n</blockquote>\n<h4 id=\"GitLab连接Jenkins-1\"><a href=\"#GitLab连接Jenkins-1\" class=\"headerlink\" title=\"GitLab连接Jenkins\"></a>GitLab连接Jenkins</h4><ol>\n<li><p>进入jenkins容器</p>\n<p> <code>cd /usr/local/jenkins</code></p>\n<p> <code>docker exec -it jenkins /bin/bash</code>:进入容器,并以bash呈现,其实就是进入了终端</p>\n</li>\n<li><p>在容器中进入具有可执行权限的jenkins_hone目录</p>\n<p> <code>cd /var/jenkins_home/</code></p>\n</li>\n<li><p>在容器中生成一个SSH密钥</p>\n<p> <code>ssh-keygen -t rsa -C &quot;hui@hui.com&quot; -b 4096</code></p>\n<p> 查看秘钥</p>\n<p> <code>cat /var/jenkins_home/.ssh/id_rsa.pub</code></p>\n<p> 将查到的密钥粘贴到gitlab中,起名为Jenkins</p>\n</li>\n<li><p>将gitlab中的项目克隆到<code>/var/jenkins_home/</code>目录下</p>\n<p> <code>git clone ssh://git@192.168.12.140:2222/hui/myshop.git</code></p>\n</li>\n<li><p>验证是否gitlab与jenkins连接</p>\n<p> <code>cd .ssh/</code>,如果在.ssh目录下有known_hosts,则说明连接成功</p>\n</li>\n</ol>\n<h2 id=\"新增一台机器\"><a href=\"#新增一台机器\" class=\"headerlink\" title=\"新增一台机器\"></a>新增一台机器</h2><p>这台机器我用于存放JDK(其实只需要JRE),Maven和tomcat。ip:192.168.12.146</p>\n<p>需要在这台机器的/usr/local目录下新建一个jenkins,用于jenkins访问的目录</p>\n<ol>\n<li><p>进入Jenkins页面</p>\n</li>\n<li><p>系统管理–&gt;系统设置–&gt;Publish over SSH</p>\n<p> 添加虚拟机的私钥</p>\n<p> <code>cat /var/jenkins_home/.ssh/id_rsa.pub</code></p>\n<p> 将秘钥复制到”key”中</p>\n<p> 点击新增</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/01.png\" alt></p>\n<p> 这里需要把刚刚创建的一台虚拟机新增进来,访问方式是SSH方式访问</p>\n<p> 点击”高级”,选上密码复选框,密码为新增这台虚拟机的开机密码.整体配置如下</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/02.jpg\" alt></p>\n<p> 点击<code>Test Configuration</code>进行测试,如果出现Success,则连接成功</p>\n<p> 最后点击应用–&gt;保存</p>\n</li>\n</ol>\n<h2 id=\"使用Jenkins构建项目\"><a href=\"#使用Jenkins构建项目\" class=\"headerlink\" title=\"使用Jenkins构建项目\"></a>使用Jenkins构建项目</h2><ol>\n<li><p>新建任务,输入一个任务名称.我这里依然用了gitlab中的项目名称myshop,然后选择构建一个maven项目,点击确定</p>\n</li>\n<li><p>选择”丢弃旧的构建”,保持构建的最大个数填”10”,意思是每次都保留最新的10个构建,其他丢弃</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/03.png\" alt></p>\n<p> 选择”源码管理”</p>\n<p> 选择git,”Repository URL”填写gitlab中的项目地址,要把域名改为ip</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/04.jpg\" alt></p>\n<p> 然后点击应用–&gt;保持</p>\n</li>\n<li><p>点击”立即构建”</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/05.jpg\" alt></p>\n<p> 可以通过构建历史查看记录</p>\n<p> 也可以通过点击那个小红点查看控制台输出</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/06.jpg\" alt></p>\n<p> 这是个构建失败的例子,因为我没有配置maven和JDK</p>\n</li>\n<li><p>配置JDK和Maven</p>\n<p> 系统管理–&gt;全局工具配置</p>\n<p> JDK,JDK的下载我是从oracle公司下载的,因此需要登录</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/07.png\" alt></p>\n<p> Maven</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/08.jpg\" alt></p>\n<p> 应用–&gt;保存</p>\n</li>\n<li><p>再次回到”立即构建”,此时就会开始下载jdk和maven,然后构建项目</p>\n<p> 在”我的视图”里可以查看是一下情况,则构建成功</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/09.jpg\" alt></p>\n</li>\n</ol>\n<h2 id=\"Jenkis连接gitlab中的项目标签\"><a href=\"#Jenkis连接gitlab中的项目标签\" class=\"headerlink\" title=\"Jenkis连接gitlab中的项目标签\"></a>Jenkis连接gitlab中的项目标签</h2><ol>\n<li><p>在gitlab的myshop项目中新建一个标签</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/10.jpg\" alt></p>\n<p> 点击标签,然后新建,填入标签名称:1.0.0</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/11.png\" alt></p>\n</li>\n<li><p>点击项目名称</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/12.jpg\" alt></p>\n<p> 进去后选择”配置”</p>\n<p> 选择参数化构建过程,配置如下,这步必须已经装上了<code>Extended Choice Parameter plugin</code>插件</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/13.png\" alt></p>\n<p> Groovy Script的脚本文件</p>\n<p> 注意:要保证<code>/var/jenkins_home/workspace/myshop</code>路径正确</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def ver_keys = [ 'bash', '-c', 'cd /var/jenkins_home/workspace/myshop;git pull&gt;/dev/null; git remote prune origin &gt;/dev/null; git tag -l|sort -r |head -10 ' ]</span><br><span class=\"line\">ver_keys.execute().text.tokenize('\\n')</span><br></pre></td></tr></table></figure>\n<p> 配置这个是为了通过gitlab的标签进行参数化构建</p>\n</li>\n<li><p>“源码管理”从git改为无</p>\n</li>\n<li><p>添加shell自动构建脚本</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/14.png\" alt></p>\n<p> 注意<code>/var/jenkins_home/workspace/myshop</code>路径别错了</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo $RELEASE_VERSION</span><br><span class=\"line\">cd /var/jenkins_home/workspace/myshop</span><br><span class=\"line\">git checkout $RELEASE_VERSION</span><br><span class=\"line\">git pull origin $RELEASE_VERSION</span><br><span class=\"line\">mvn clean package</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>应用–&gt;保存</p>\n</li>\n<li><p>点击<code>Build with Parameters</code>开始构建,第一次需要同意运行脚本,同意后再次点击<code>Build with Parameters</code>开始构建</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">持续集成，持续交付第二章-项目运行01</font></center>","more":"<h2 id=\"GitLab连接Jenkins\"><a href=\"#GitLab连接Jenkins\" class=\"headerlink\" title=\"GitLab连接Jenkins\"></a>GitLab连接Jenkins</h2><h4 id=\"发布项目到gitlab上\"><a href=\"#发布项目到gitlab上\" class=\"headerlink\" title=\"发布项目到gitlab上\"></a>发布项目到gitlab上</h4><ol>\n<li><p>创建项目</p>\n</li>\n<li><p>将本机项目中的.git文件删除</p>\n</li>\n<li><p>配置gitlab与本机连接的密钥</p>\n</li>\n<li><p>将本机里的项目发布到gitlab仓库中</p>\n</li>\n</ol>\n<blockquote>\n<p>注意的一个点:这里不能使用域名.只能使用ip地址.下面的jenkins克隆代码也是只能使用ip地址</p>\n</blockquote>\n<h4 id=\"GitLab连接Jenkins-1\"><a href=\"#GitLab连接Jenkins-1\" class=\"headerlink\" title=\"GitLab连接Jenkins\"></a>GitLab连接Jenkins</h4><ol>\n<li><p>进入jenkins容器</p>\n<p> <code>cd /usr/local/jenkins</code></p>\n<p> <code>docker exec -it jenkins /bin/bash</code>:进入容器,并以bash呈现,其实就是进入了终端</p>\n</li>\n<li><p>在容器中进入具有可执行权限的jenkins_hone目录</p>\n<p> <code>cd /var/jenkins_home/</code></p>\n</li>\n<li><p>在容器中生成一个SSH密钥</p>\n<p> <code>ssh-keygen -t rsa -C &quot;hui@hui.com&quot; -b 4096</code></p>\n<p> 查看秘钥</p>\n<p> <code>cat /var/jenkins_home/.ssh/id_rsa.pub</code></p>\n<p> 将查到的密钥粘贴到gitlab中,起名为Jenkins</p>\n</li>\n<li><p>将gitlab中的项目克隆到<code>/var/jenkins_home/</code>目录下</p>\n<p> <code>git clone ssh://git@192.168.12.140:2222/hui/myshop.git</code></p>\n</li>\n<li><p>验证是否gitlab与jenkins连接</p>\n<p> <code>cd .ssh/</code>,如果在.ssh目录下有known_hosts,则说明连接成功</p>\n</li>\n</ol>\n<h2 id=\"新增一台机器\"><a href=\"#新增一台机器\" class=\"headerlink\" title=\"新增一台机器\"></a>新增一台机器</h2><p>这台机器我用于存放JDK(其实只需要JRE),Maven和tomcat。ip:192.168.12.146</p>\n<p>需要在这台机器的/usr/local目录下新建一个jenkins,用于jenkins访问的目录</p>\n<ol>\n<li><p>进入Jenkins页面</p>\n</li>\n<li><p>系统管理–&gt;系统设置–&gt;Publish over SSH</p>\n<p> 添加虚拟机的私钥</p>\n<p> <code>cat /var/jenkins_home/.ssh/id_rsa.pub</code></p>\n<p> 将秘钥复制到”key”中</p>\n<p> 点击新增</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/01.png\" alt></p>\n<p> 这里需要把刚刚创建的一台虚拟机新增进来,访问方式是SSH方式访问</p>\n<p> 点击”高级”,选上密码复选框,密码为新增这台虚拟机的开机密码.整体配置如下</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/02.jpg\" alt></p>\n<p> 点击<code>Test Configuration</code>进行测试,如果出现Success,则连接成功</p>\n<p> 最后点击应用–&gt;保存</p>\n</li>\n</ol>\n<h2 id=\"使用Jenkins构建项目\"><a href=\"#使用Jenkins构建项目\" class=\"headerlink\" title=\"使用Jenkins构建项目\"></a>使用Jenkins构建项目</h2><ol>\n<li><p>新建任务,输入一个任务名称.我这里依然用了gitlab中的项目名称myshop,然后选择构建一个maven项目,点击确定</p>\n</li>\n<li><p>选择”丢弃旧的构建”,保持构建的最大个数填”10”,意思是每次都保留最新的10个构建,其他丢弃</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/03.png\" alt></p>\n<p> 选择”源码管理”</p>\n<p> 选择git,”Repository URL”填写gitlab中的项目地址,要把域名改为ip</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/04.jpg\" alt></p>\n<p> 然后点击应用–&gt;保持</p>\n</li>\n<li><p>点击”立即构建”</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/05.jpg\" alt></p>\n<p> 可以通过构建历史查看记录</p>\n<p> 也可以通过点击那个小红点查看控制台输出</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/06.jpg\" alt></p>\n<p> 这是个构建失败的例子,因为我没有配置maven和JDK</p>\n</li>\n<li><p>配置JDK和Maven</p>\n<p> 系统管理–&gt;全局工具配置</p>\n<p> JDK,JDK的下载我是从oracle公司下载的,因此需要登录</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/07.png\" alt></p>\n<p> Maven</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/08.jpg\" alt></p>\n<p> 应用–&gt;保存</p>\n</li>\n<li><p>再次回到”立即构建”,此时就会开始下载jdk和maven,然后构建项目</p>\n<p> 在”我的视图”里可以查看是一下情况,则构建成功</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/09.jpg\" alt></p>\n</li>\n</ol>\n<h2 id=\"Jenkis连接gitlab中的项目标签\"><a href=\"#Jenkis连接gitlab中的项目标签\" class=\"headerlink\" title=\"Jenkis连接gitlab中的项目标签\"></a>Jenkis连接gitlab中的项目标签</h2><ol>\n<li><p>在gitlab的myshop项目中新建一个标签</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/10.jpg\" alt></p>\n<p> 点击标签,然后新建,填入标签名称:1.0.0</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/11.png\" alt></p>\n</li>\n<li><p>点击项目名称</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/12.jpg\" alt></p>\n<p> 进去后选择”配置”</p>\n<p> 选择参数化构建过程,配置如下,这步必须已经装上了<code>Extended Choice Parameter plugin</code>插件</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/13.png\" alt></p>\n<p> Groovy Script的脚本文件</p>\n<p> 注意:要保证<code>/var/jenkins_home/workspace/myshop</code>路径正确</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def ver_keys = [ 'bash', '-c', 'cd /var/jenkins_home/workspace/myshop;git pull&gt;/dev/null; git remote prune origin &gt;/dev/null; git tag -l|sort -r |head -10 ' ]</span><br><span class=\"line\">ver_keys.execute().text.tokenize('\\n')</span><br></pre></td></tr></table></figure>\n<p> 配置这个是为了通过gitlab的标签进行参数化构建</p>\n</li>\n<li><p>“源码管理”从git改为无</p>\n</li>\n<li><p>添加shell自动构建脚本</p>\n<p> <img src=\"/2019/06/22/2019-06-22-Jenkins部署项目-项目运行/14.png\" alt></p>\n<p> 注意<code>/var/jenkins_home/workspace/myshop</code>路径别错了</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo $RELEASE_VERSION</span><br><span class=\"line\">cd /var/jenkins_home/workspace/myshop</span><br><span class=\"line\">git checkout $RELEASE_VERSION</span><br><span class=\"line\">git pull origin $RELEASE_VERSION</span><br><span class=\"line\">mvn clean package</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>应用–&gt;保存</p>\n</li>\n<li><p>点击<code>Build with Parameters</code>开始构建,第一次需要同意运行脚本,同意后再次点击<code>Build with Parameters</code>开始构建</p>\n</li>\n</ol>"},{"title":"GitFlow工作流","date":"2019-06-24T18:15:49.000Z","_content":"\n<center><font size=4 color=\"red\">GitFlow的分支介绍</font></center>\n\n<!--more-->\n\n## GitFlow分支介绍\n\n#### 历史分支\n\nmaster分支：是最终稳定能成型的代码分支。更新次数一月或者两月一次\n\ndevelop分支：开发人员用的主分支，存放经过测试后没有问题的代码分支\n\n![](01.png)\n\n#### 功能分支\n\nfeature分支：是开发人员写功能的分支，开发人员在develop分支下新建一个feature分支，例如feature-login，然后开始编写功能，最后功能测试没有问题时，将其合并到develop分支中。\n\n![](02.png)\n\n#### 发布分支\n\nrelease分支：一旦develop分支上有了一次发布的足够功能，从develop分支上fork一个release分支(基于develop分支创建)。\n\n此后：\n\n1. 该分支不能再添加新的功能，只能做Bug修复，文档生成和其它面向发布任务。\n\n2. 发布任务完成后，合并到master分支上，并打上tag\n\n3. 还有合并回develop分支一份\n\n#### 维护分支\n\nhotfix分支：修复Bug的分支，其是唯一一个可以从master分支fork的分支(基于master分支创建)。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。\n\n## 示例\n\n下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。\n\n#### 创建开发分支：\n\n第一步为master分支配套一个develop分支。简单来做可以本地创建一个空的develop分支，push到服务器上：\n\ngit branch develop\ngit push -u origin develop\n\n以后这个分支将会包含了项目的全部历史，而master分支将只包含了部分历史。其它开发者这时应该克隆中央仓库，建好develop分支的跟踪分支：\n\ngit clone ssh://user@host/path/to/repo.git\ngit checkout -b develop origin/develop\n\n现在每个开发都有了这些历史分支的本地拷贝。\n\n#### 小红和小明开始开发新功能\n\n这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于master分支，而是应该基于develop分支：\n\ngit checkout -b feature-login develop\n\n他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：\ngit status\ngit add\ngit commit\n\n#### 小红完成功能开发\n\n添加了提交后，小红觉得她的功能OK了。如果团队使用Pull Requests，这时候可以发起一个用于合并到develop分支。否则她可以直接合并到她本地的develop分支后push到中央仓库：\n\ngit pull origin develop\ngit checkout develop\ngit merge feature-login\ngit push\ngit branch -d feature-login\n\n第一条命令在合并功能前确保develop分支是最新的。注意，功能决不应该直接合并到master分支。冲突解决方法和集中式工作流一样。\n\n#### 小红开始准备发布\n\n这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：\n\ngit checkout -b release-0.1 develop\n\n这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。\n\n只要小红创建这个分支并push到中央仓库，这个发布就是功能冻结的。任何不在develop分支中的新功能都推到下个发布循环中。\n\n#### 小红完成发布\n\n一旦准备好了对外发布，小红合并修改到master分支和develop分支上，删除发布分支。合并回develop分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。另外，如果小红的团队要求Code Review，这是一个发起Pull Request的理想时机。\n\ngit checkout master\ngit merge release-0.1\ngit push\ngit checkout develop\ngit merge release-0.1\ngit push\ngit branch -d release-0.1\n\n发布分支是作为功能开发（develop分支）和对外发布（master分支）间的缓冲。只要有合并到master分支，就应该打好Tag以方便跟踪。\n\ngit tag -a 0.1 -m \"Initial public release\" master\ngit push --tags\n\nGit有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你push中央仓库的master分支时，自动构建好对外发布。\n\n#### 最终用户发现Bug\n\n对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个Ticket抱怨当前版本的一个Bug。为了处理Bug，小红（或小明）从master分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回master分支：\ngit checkout -b issue-#001 master\n\\# Fix the bug\ngit checkout master\ngit merge issue-#001\ngit push\n\n就像发布分支，维护分支中新加这些重要修改需要包含到develop分支中，所以小红要执行一个合并操作。然后就可以安全地删除这个分支了：\n\ngit checkout develop\ngit merge issue-#001\ngit push\ngit branch -d issue-#001\n\n## GitFlow的基本命令操作\n\n#### Gitflow安装\n\n```shell\n# 1.\ncurl -L -O https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh\n# 2.\nsudo bash gitflow-installer.sh\n```\n\n#### 使用\n\n* **初始化**: git flow init\n\n* **开始新Feature**: git flow feature start MYFEATURE\n\n* **Publish一个Feature(也就是push到远程)**: git flow feature publish MYFEATURE\n\n* **获取Publish的Feature**: git flow feature pull origin MYFEATURE\n\n* **完成一个Feature**: git flow feature finish MYFEATURE\n\n* **开始一个Release**: git flow release start RELEASE [BASE]\n\n* **Publish一个Release**: git flow release publish RELEASE\n\n* **发布Release**: git flow release finish RELEASE\n　别忘了git push --tags\n\n* **开始一个Hotfix**: git flow hotfix start VERSION [BASENAME]\n\n* **发布一个Hotfix**: git flow hotfix finish VERSIO\n\n```shell\ngit flow init\n```\n\n这个命令会进行一些默认的配置，可以自动创建上面介绍的所有分支：master、develop、feature、relase、hotfix等分支。\n\n完成后当前所在分支就变成 develop. 任何开发都必须从 develop 开始\n\n当进行新功能开发的时候：\n\n```shell\ngit flow feature start some_awesome_feature\n```\n\n完成功能开发之后:\n\n```shell\ngit flow feature finish some_awesome_feature\n```\n\n该命令将会把feature/some_awesome_feature合并到develope分支，然后删除功能(feature)分支。\n\n将一个 feature 分支推到远程服务器\n\n```shell\ngit flow feature publish some_awesome_feature 或者 git push origin feature/some_awesome_feature \n```\n\n当你的功能点都完成时（需要发布新版本了），就基于develop创建一个发布(release)分支。\n\n```shell\ngit flow release start v0.1.0 \n```\n\n当你在完成（finish)一个发布分支时，它会把你所作的修改合并到master分支，同时合并回develop分支，所以，你不需要担心你的master分支比develop分支更加超前。\n\n当系统出现问题的时候，需要进行紧急修改的时候，就好基于master创建一个维护（hotfix）分支。\n\n```shell\ngit flow hotfix start v0.1.0\n```\n\n当你在完成（finish)一个维护分支时，它会把你所作的修改合并到master分支，同时合并回develop分支。\n\n\n\n\n","source":"_posts/2019-06-24-GitFlow工作流.md","raw":"---\ntitle: GitFlow工作流\ndate: 2019-06-24 18:15:49\ncategories:\n- git\ntags:\n- git\n- git flow\n---\n\n<center><font size=4 color=\"red\">GitFlow的分支介绍</font></center>\n\n<!--more-->\n\n## GitFlow分支介绍\n\n#### 历史分支\n\nmaster分支：是最终稳定能成型的代码分支。更新次数一月或者两月一次\n\ndevelop分支：开发人员用的主分支，存放经过测试后没有问题的代码分支\n\n![](01.png)\n\n#### 功能分支\n\nfeature分支：是开发人员写功能的分支，开发人员在develop分支下新建一个feature分支，例如feature-login，然后开始编写功能，最后功能测试没有问题时，将其合并到develop分支中。\n\n![](02.png)\n\n#### 发布分支\n\nrelease分支：一旦develop分支上有了一次发布的足够功能，从develop分支上fork一个release分支(基于develop分支创建)。\n\n此后：\n\n1. 该分支不能再添加新的功能，只能做Bug修复，文档生成和其它面向发布任务。\n\n2. 发布任务完成后，合并到master分支上，并打上tag\n\n3. 还有合并回develop分支一份\n\n#### 维护分支\n\nhotfix分支：修复Bug的分支，其是唯一一个可以从master分支fork的分支(基于master分支创建)。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。\n\n## 示例\n\n下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。\n\n#### 创建开发分支：\n\n第一步为master分支配套一个develop分支。简单来做可以本地创建一个空的develop分支，push到服务器上：\n\ngit branch develop\ngit push -u origin develop\n\n以后这个分支将会包含了项目的全部历史，而master分支将只包含了部分历史。其它开发者这时应该克隆中央仓库，建好develop分支的跟踪分支：\n\ngit clone ssh://user@host/path/to/repo.git\ngit checkout -b develop origin/develop\n\n现在每个开发都有了这些历史分支的本地拷贝。\n\n#### 小红和小明开始开发新功能\n\n这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于master分支，而是应该基于develop分支：\n\ngit checkout -b feature-login develop\n\n他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：\ngit status\ngit add\ngit commit\n\n#### 小红完成功能开发\n\n添加了提交后，小红觉得她的功能OK了。如果团队使用Pull Requests，这时候可以发起一个用于合并到develop分支。否则她可以直接合并到她本地的develop分支后push到中央仓库：\n\ngit pull origin develop\ngit checkout develop\ngit merge feature-login\ngit push\ngit branch -d feature-login\n\n第一条命令在合并功能前确保develop分支是最新的。注意，功能决不应该直接合并到master分支。冲突解决方法和集中式工作流一样。\n\n#### 小红开始准备发布\n\n这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：\n\ngit checkout -b release-0.1 develop\n\n这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。\n\n只要小红创建这个分支并push到中央仓库，这个发布就是功能冻结的。任何不在develop分支中的新功能都推到下个发布循环中。\n\n#### 小红完成发布\n\n一旦准备好了对外发布，小红合并修改到master分支和develop分支上，删除发布分支。合并回develop分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。另外，如果小红的团队要求Code Review，这是一个发起Pull Request的理想时机。\n\ngit checkout master\ngit merge release-0.1\ngit push\ngit checkout develop\ngit merge release-0.1\ngit push\ngit branch -d release-0.1\n\n发布分支是作为功能开发（develop分支）和对外发布（master分支）间的缓冲。只要有合并到master分支，就应该打好Tag以方便跟踪。\n\ngit tag -a 0.1 -m \"Initial public release\" master\ngit push --tags\n\nGit有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你push中央仓库的master分支时，自动构建好对外发布。\n\n#### 最终用户发现Bug\n\n对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个Ticket抱怨当前版本的一个Bug。为了处理Bug，小红（或小明）从master分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回master分支：\ngit checkout -b issue-#001 master\n\\# Fix the bug\ngit checkout master\ngit merge issue-#001\ngit push\n\n就像发布分支，维护分支中新加这些重要修改需要包含到develop分支中，所以小红要执行一个合并操作。然后就可以安全地删除这个分支了：\n\ngit checkout develop\ngit merge issue-#001\ngit push\ngit branch -d issue-#001\n\n## GitFlow的基本命令操作\n\n#### Gitflow安装\n\n```shell\n# 1.\ncurl -L -O https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh\n# 2.\nsudo bash gitflow-installer.sh\n```\n\n#### 使用\n\n* **初始化**: git flow init\n\n* **开始新Feature**: git flow feature start MYFEATURE\n\n* **Publish一个Feature(也就是push到远程)**: git flow feature publish MYFEATURE\n\n* **获取Publish的Feature**: git flow feature pull origin MYFEATURE\n\n* **完成一个Feature**: git flow feature finish MYFEATURE\n\n* **开始一个Release**: git flow release start RELEASE [BASE]\n\n* **Publish一个Release**: git flow release publish RELEASE\n\n* **发布Release**: git flow release finish RELEASE\n　别忘了git push --tags\n\n* **开始一个Hotfix**: git flow hotfix start VERSION [BASENAME]\n\n* **发布一个Hotfix**: git flow hotfix finish VERSIO\n\n```shell\ngit flow init\n```\n\n这个命令会进行一些默认的配置，可以自动创建上面介绍的所有分支：master、develop、feature、relase、hotfix等分支。\n\n完成后当前所在分支就变成 develop. 任何开发都必须从 develop 开始\n\n当进行新功能开发的时候：\n\n```shell\ngit flow feature start some_awesome_feature\n```\n\n完成功能开发之后:\n\n```shell\ngit flow feature finish some_awesome_feature\n```\n\n该命令将会把feature/some_awesome_feature合并到develope分支，然后删除功能(feature)分支。\n\n将一个 feature 分支推到远程服务器\n\n```shell\ngit flow feature publish some_awesome_feature 或者 git push origin feature/some_awesome_feature \n```\n\n当你的功能点都完成时（需要发布新版本了），就基于develop创建一个发布(release)分支。\n\n```shell\ngit flow release start v0.1.0 \n```\n\n当你在完成（finish)一个发布分支时，它会把你所作的修改合并到master分支，同时合并回develop分支，所以，你不需要担心你的master分支比develop分支更加超前。\n\n当系统出现问题的时候，需要进行紧急修改的时候，就好基于master创建一个维护（hotfix）分支。\n\n```shell\ngit flow hotfix start v0.1.0\n```\n\n当你在完成（finish)一个维护分支时，它会把你所作的修改合并到master分支，同时合并回develop分支。\n\n\n\n\n","slug":"2019-06-24-GitFlow工作流","published":1,"updated":"2019-08-10T04:35:46.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vm002854tn2dmf39ej","content":"<center><font size=\"4\" color=\"red\">GitFlow的分支介绍</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"GitFlow分支介绍\"><a href=\"#GitFlow分支介绍\" class=\"headerlink\" title=\"GitFlow分支介绍\"></a>GitFlow分支介绍</h2><h4 id=\"历史分支\"><a href=\"#历史分支\" class=\"headerlink\" title=\"历史分支\"></a>历史分支</h4><p>master分支：是最终稳定能成型的代码分支。更新次数一月或者两月一次</p>\n<p>develop分支：开发人员用的主分支，存放经过测试后没有问题的代码分支</p>\n<p><img src=\"/2019/06/25/2019-06-24-GitFlow工作流/01.png\" alt></p>\n<h4 id=\"功能分支\"><a href=\"#功能分支\" class=\"headerlink\" title=\"功能分支\"></a>功能分支</h4><p>feature分支：是开发人员写功能的分支，开发人员在develop分支下新建一个feature分支，例如feature-login，然后开始编写功能，最后功能测试没有问题时，将其合并到develop分支中。</p>\n<p><img src=\"/2019/06/25/2019-06-24-GitFlow工作流/02.png\" alt></p>\n<h4 id=\"发布分支\"><a href=\"#发布分支\" class=\"headerlink\" title=\"发布分支\"></a>发布分支</h4><p>release分支：一旦develop分支上有了一次发布的足够功能，从develop分支上fork一个release分支(基于develop分支创建)。</p>\n<p>此后：</p>\n<ol>\n<li><p>该分支不能再添加新的功能，只能做Bug修复，文档生成和其它面向发布任务。</p>\n</li>\n<li><p>发布任务完成后，合并到master分支上，并打上tag</p>\n</li>\n<li><p>还有合并回develop分支一份</p>\n</li>\n</ol>\n<h4 id=\"维护分支\"><a href=\"#维护分支\" class=\"headerlink\" title=\"维护分支\"></a>维护分支</h4><p>hotfix分支：修复Bug的分支，其是唯一一个可以从master分支fork的分支(基于master分支创建)。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。</p>\n<h4 id=\"创建开发分支：\"><a href=\"#创建开发分支：\" class=\"headerlink\" title=\"创建开发分支：\"></a>创建开发分支：</h4><p>第一步为master分支配套一个develop分支。简单来做可以本地创建一个空的develop分支，push到服务器上：</p>\n<p>git branch develop<br>git push -u origin develop</p>\n<p>以后这个分支将会包含了项目的全部历史，而master分支将只包含了部分历史。其它开发者这时应该克隆中央仓库，建好develop分支的跟踪分支：</p>\n<p>git clone ssh://user@host/path/to/repo.git<br>git checkout -b develop origin/develop</p>\n<p>现在每个开发都有了这些历史分支的本地拷贝。</p>\n<h4 id=\"小红和小明开始开发新功能\"><a href=\"#小红和小明开始开发新功能\" class=\"headerlink\" title=\"小红和小明开始开发新功能\"></a>小红和小明开始开发新功能</h4><p>这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于master分支，而是应该基于develop分支：</p>\n<p>git checkout -b feature-login develop</p>\n<p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：<br>git status<br>git add<br>git commit</p>\n<h4 id=\"小红完成功能开发\"><a href=\"#小红完成功能开发\" class=\"headerlink\" title=\"小红完成功能开发\"></a>小红完成功能开发</h4><p>添加了提交后，小红觉得她的功能OK了。如果团队使用Pull Requests，这时候可以发起一个用于合并到develop分支。否则她可以直接合并到她本地的develop分支后push到中央仓库：</p>\n<p>git pull origin develop<br>git checkout develop<br>git merge feature-login<br>git push<br>git branch -d feature-login</p>\n<p>第一条命令在合并功能前确保develop分支是最新的。注意，功能决不应该直接合并到master分支。冲突解决方法和集中式工作流一样。</p>\n<h4 id=\"小红开始准备发布\"><a href=\"#小红开始准备发布\" class=\"headerlink\" title=\"小红开始准备发布\"></a>小红开始准备发布</h4><p>这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：</p>\n<p>git checkout -b release-0.1 develop</p>\n<p>这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。</p>\n<p>只要小红创建这个分支并push到中央仓库，这个发布就是功能冻结的。任何不在develop分支中的新功能都推到下个发布循环中。</p>\n<h4 id=\"小红完成发布\"><a href=\"#小红完成发布\" class=\"headerlink\" title=\"小红完成发布\"></a>小红完成发布</h4><p>一旦准备好了对外发布，小红合并修改到master分支和develop分支上，删除发布分支。合并回develop分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。另外，如果小红的团队要求Code Review，这是一个发起Pull Request的理想时机。</p>\n<p>git checkout master<br>git merge release-0.1<br>git push<br>git checkout develop<br>git merge release-0.1<br>git push<br>git branch -d release-0.1</p>\n<p>发布分支是作为功能开发（develop分支）和对外发布（master分支）间的缓冲。只要有合并到master分支，就应该打好Tag以方便跟踪。</p>\n<p>git tag -a 0.1 -m “Initial public release” master<br>git push –tags</p>\n<p>Git有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你push中央仓库的master分支时，自动构建好对外发布。</p>\n<h4 id=\"最终用户发现Bug\"><a href=\"#最终用户发现Bug\" class=\"headerlink\" title=\"最终用户发现Bug\"></a>最终用户发现Bug</h4><p>对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个Ticket抱怨当前版本的一个Bug。为了处理Bug，小红（或小明）从master分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回master分支：<br>git checkout -b issue-#001 master<br># Fix the bug<br>git checkout master<br>git merge issue-#001<br>git push</p>\n<p>就像发布分支，维护分支中新加这些重要修改需要包含到develop分支中，所以小红要执行一个合并操作。然后就可以安全地删除这个分支了：</p>\n<p>git checkout develop<br>git merge issue-#001<br>git push<br>git branch -d issue-#001</p>\n<h2 id=\"GitFlow的基本命令操作\"><a href=\"#GitFlow的基本命令操作\" class=\"headerlink\" title=\"GitFlow的基本命令操作\"></a>GitFlow的基本命令操作</h2><h4 id=\"Gitflow安装\"><a href=\"#Gitflow安装\" class=\"headerlink\" title=\"Gitflow安装\"></a>Gitflow安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 1.</span><br><span class=\"line\">curl -L -O https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 2.</span><br><span class=\"line\">sudo bash gitflow-installer.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ul>\n<li><p><strong>初始化</strong>: git flow init</p>\n</li>\n<li><p><strong>开始新Feature</strong>: git flow feature start MYFEATURE</p>\n</li>\n<li><p><strong>Publish一个Feature(也就是push到远程)</strong>: git flow feature publish MYFEATURE</p>\n</li>\n<li><p><strong>获取Publish的Feature</strong>: git flow feature pull origin MYFEATURE</p>\n</li>\n<li><p><strong>完成一个Feature</strong>: git flow feature finish MYFEATURE</p>\n</li>\n<li><p><strong>开始一个Release</strong>: git flow release start RELEASE [BASE]</p>\n</li>\n<li><p><strong>Publish一个Release</strong>: git flow release publish RELEASE</p>\n</li>\n<li><p><strong>发布Release</strong>: git flow release finish RELEASE<br>　别忘了git push –tags</p>\n</li>\n<li><p><strong>开始一个Hotfix</strong>: git flow hotfix start VERSION [BASENAME]</p>\n</li>\n<li><p><strong>发布一个Hotfix</strong>: git flow hotfix finish VERSIO</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow init</span><br></pre></td></tr></table></figure>\n<p>这个命令会进行一些默认的配置，可以自动创建上面介绍的所有分支：master、develop、feature、relase、hotfix等分支。</p>\n<p>完成后当前所在分支就变成 develop. 任何开发都必须从 develop 开始</p>\n<p>当进行新功能开发的时候：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature start some_awesome_feature</span><br></pre></td></tr></table></figure>\n<p>完成功能开发之后:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature finish some_awesome_feature</span><br></pre></td></tr></table></figure>\n<p>该命令将会把feature/some_awesome_feature合并到develope分支，然后删除功能(feature)分支。</p>\n<p>将一个 feature 分支推到远程服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature publish some_awesome_feature 或者 git push origin feature/some_awesome_feature</span><br></pre></td></tr></table></figure>\n<p>当你的功能点都完成时（需要发布新版本了），就基于develop创建一个发布(release)分支。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow release start v0.1.0</span><br></pre></td></tr></table></figure>\n<p>当你在完成（finish)一个发布分支时，它会把你所作的修改合并到master分支，同时合并回develop分支，所以，你不需要担心你的master分支比develop分支更加超前。</p>\n<p>当系统出现问题的时候，需要进行紧急修改的时候，就好基于master创建一个维护（hotfix）分支。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow hotfix start v0.1.0</span><br></pre></td></tr></table></figure>\n<p>当你在完成（finish)一个维护分支时，它会把你所作的修改合并到master分支，同时合并回develop分支。</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">GitFlow的分支介绍</font></center>","more":"<h2 id=\"GitFlow分支介绍\"><a href=\"#GitFlow分支介绍\" class=\"headerlink\" title=\"GitFlow分支介绍\"></a>GitFlow分支介绍</h2><h4 id=\"历史分支\"><a href=\"#历史分支\" class=\"headerlink\" title=\"历史分支\"></a>历史分支</h4><p>master分支：是最终稳定能成型的代码分支。更新次数一月或者两月一次</p>\n<p>develop分支：开发人员用的主分支，存放经过测试后没有问题的代码分支</p>\n<p><img src=\"/2019/06/25/2019-06-24-GitFlow工作流/01.png\" alt></p>\n<h4 id=\"功能分支\"><a href=\"#功能分支\" class=\"headerlink\" title=\"功能分支\"></a>功能分支</h4><p>feature分支：是开发人员写功能的分支，开发人员在develop分支下新建一个feature分支，例如feature-login，然后开始编写功能，最后功能测试没有问题时，将其合并到develop分支中。</p>\n<p><img src=\"/2019/06/25/2019-06-24-GitFlow工作流/02.png\" alt></p>\n<h4 id=\"发布分支\"><a href=\"#发布分支\" class=\"headerlink\" title=\"发布分支\"></a>发布分支</h4><p>release分支：一旦develop分支上有了一次发布的足够功能，从develop分支上fork一个release分支(基于develop分支创建)。</p>\n<p>此后：</p>\n<ol>\n<li><p>该分支不能再添加新的功能，只能做Bug修复，文档生成和其它面向发布任务。</p>\n</li>\n<li><p>发布任务完成后，合并到master分支上，并打上tag</p>\n</li>\n<li><p>还有合并回develop分支一份</p>\n</li>\n</ol>\n<h4 id=\"维护分支\"><a href=\"#维护分支\" class=\"headerlink\" title=\"维护分支\"></a>维护分支</h4><p>hotfix分支：修复Bug的分支，其是唯一一个可以从master分支fork的分支(基于master分支创建)。修复完成，修改应该马上合并回master分支和develop分支（当前的发布分支），master分支应该用新的版本号打好Tag。</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。</p>\n<h4 id=\"创建开发分支：\"><a href=\"#创建开发分支：\" class=\"headerlink\" title=\"创建开发分支：\"></a>创建开发分支：</h4><p>第一步为master分支配套一个develop分支。简单来做可以本地创建一个空的develop分支，push到服务器上：</p>\n<p>git branch develop<br>git push -u origin develop</p>\n<p>以后这个分支将会包含了项目的全部历史，而master分支将只包含了部分历史。其它开发者这时应该克隆中央仓库，建好develop分支的跟踪分支：</p>\n<p>git clone ssh://user@host/path/to/repo.git<br>git checkout -b develop origin/develop</p>\n<p>现在每个开发都有了这些历史分支的本地拷贝。</p>\n<h4 id=\"小红和小明开始开发新功能\"><a href=\"#小红和小明开始开发新功能\" class=\"headerlink\" title=\"小红和小明开始开发新功能\"></a>小红和小明开始开发新功能</h4><p>这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于master分支，而是应该基于develop分支：</p>\n<p>git checkout -b feature-login develop</p>\n<p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：<br>git status<br>git add<br>git commit</p>\n<h4 id=\"小红完成功能开发\"><a href=\"#小红完成功能开发\" class=\"headerlink\" title=\"小红完成功能开发\"></a>小红完成功能开发</h4><p>添加了提交后，小红觉得她的功能OK了。如果团队使用Pull Requests，这时候可以发起一个用于合并到develop分支。否则她可以直接合并到她本地的develop分支后push到中央仓库：</p>\n<p>git pull origin develop<br>git checkout develop<br>git merge feature-login<br>git push<br>git branch -d feature-login</p>\n<p>第一条命令在合并功能前确保develop分支是最新的。注意，功能决不应该直接合并到master分支。冲突解决方法和集中式工作流一样。</p>\n<h4 id=\"小红开始准备发布\"><a href=\"#小红开始准备发布\" class=\"headerlink\" title=\"小红开始准备发布\"></a>小红开始准备发布</h4><p>这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：</p>\n<p>git checkout -b release-0.1 develop</p>\n<p>这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。</p>\n<p>只要小红创建这个分支并push到中央仓库，这个发布就是功能冻结的。任何不在develop分支中的新功能都推到下个发布循环中。</p>\n<h4 id=\"小红完成发布\"><a href=\"#小红完成发布\" class=\"headerlink\" title=\"小红完成发布\"></a>小红完成发布</h4><p>一旦准备好了对外发布，小红合并修改到master分支和develop分支上，删除发布分支。合并回develop分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。另外，如果小红的团队要求Code Review，这是一个发起Pull Request的理想时机。</p>\n<p>git checkout master<br>git merge release-0.1<br>git push<br>git checkout develop<br>git merge release-0.1<br>git push<br>git branch -d release-0.1</p>\n<p>发布分支是作为功能开发（develop分支）和对外发布（master分支）间的缓冲。只要有合并到master分支，就应该打好Tag以方便跟踪。</p>\n<p>git tag -a 0.1 -m “Initial public release” master<br>git push –tags</p>\n<p>Git有提供各种勾子（hook），即仓库有事件发生时触发执行的脚本。可以配置一个勾子，在你push中央仓库的master分支时，自动构建好对外发布。</p>\n<h4 id=\"最终用户发现Bug\"><a href=\"#最终用户发现Bug\" class=\"headerlink\" title=\"最终用户发现Bug\"></a>最终用户发现Bug</h4><p>对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个Ticket抱怨当前版本的一个Bug。为了处理Bug，小红（或小明）从master分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回master分支：<br>git checkout -b issue-#001 master<br># Fix the bug<br>git checkout master<br>git merge issue-#001<br>git push</p>\n<p>就像发布分支，维护分支中新加这些重要修改需要包含到develop分支中，所以小红要执行一个合并操作。然后就可以安全地删除这个分支了：</p>\n<p>git checkout develop<br>git merge issue-#001<br>git push<br>git branch -d issue-#001</p>\n<h2 id=\"GitFlow的基本命令操作\"><a href=\"#GitFlow的基本命令操作\" class=\"headerlink\" title=\"GitFlow的基本命令操作\"></a>GitFlow的基本命令操作</h2><h4 id=\"Gitflow安装\"><a href=\"#Gitflow安装\" class=\"headerlink\" title=\"Gitflow安装\"></a>Gitflow安装</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 1.</span><br><span class=\"line\">curl -L -O https://raw.github.com/nvie/gitflow/develop/contrib/gitflow-installer.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 2.</span><br><span class=\"line\">sudo bash gitflow-installer.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><ul>\n<li><p><strong>初始化</strong>: git flow init</p>\n</li>\n<li><p><strong>开始新Feature</strong>: git flow feature start MYFEATURE</p>\n</li>\n<li><p><strong>Publish一个Feature(也就是push到远程)</strong>: git flow feature publish MYFEATURE</p>\n</li>\n<li><p><strong>获取Publish的Feature</strong>: git flow feature pull origin MYFEATURE</p>\n</li>\n<li><p><strong>完成一个Feature</strong>: git flow feature finish MYFEATURE</p>\n</li>\n<li><p><strong>开始一个Release</strong>: git flow release start RELEASE [BASE]</p>\n</li>\n<li><p><strong>Publish一个Release</strong>: git flow release publish RELEASE</p>\n</li>\n<li><p><strong>发布Release</strong>: git flow release finish RELEASE<br>　别忘了git push –tags</p>\n</li>\n<li><p><strong>开始一个Hotfix</strong>: git flow hotfix start VERSION [BASENAME]</p>\n</li>\n<li><p><strong>发布一个Hotfix</strong>: git flow hotfix finish VERSIO</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow init</span><br></pre></td></tr></table></figure>\n<p>这个命令会进行一些默认的配置，可以自动创建上面介绍的所有分支：master、develop、feature、relase、hotfix等分支。</p>\n<p>完成后当前所在分支就变成 develop. 任何开发都必须从 develop 开始</p>\n<p>当进行新功能开发的时候：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature start some_awesome_feature</span><br></pre></td></tr></table></figure>\n<p>完成功能开发之后:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature finish some_awesome_feature</span><br></pre></td></tr></table></figure>\n<p>该命令将会把feature/some_awesome_feature合并到develope分支，然后删除功能(feature)分支。</p>\n<p>将一个 feature 分支推到远程服务器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow feature publish some_awesome_feature 或者 git push origin feature/some_awesome_feature</span><br></pre></td></tr></table></figure>\n<p>当你的功能点都完成时（需要发布新版本了），就基于develop创建一个发布(release)分支。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow release start v0.1.0</span><br></pre></td></tr></table></figure>\n<p>当你在完成（finish)一个发布分支时，它会把你所作的修改合并到master分支，同时合并回develop分支，所以，你不需要担心你的master分支比develop分支更加超前。</p>\n<p>当系统出现问题的时候，需要进行紧急修改的时候，就好基于master创建一个维护（hotfix）分支。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git flow hotfix start v0.1.0</span><br></pre></td></tr></table></figure>\n<p>当你在完成（finish)一个维护分支时，它会把你所作的修改合并到master分支，同时合并回develop分支。</p>"},{"title":"Jenkins部署项目-环境搭建","date":"2019-06-20T19:46:53.000Z","_content":"\n<center><font size=4 color=\"red\">持续集成，持续交付第一章-环境搭建</font></center>\n\n<!--more-->\n\n# Jenkins部署项目-环境搭建\n\n## 部署环境\n\ngitlab             域名:gitlab.hui.com      ip:192.168.12.140    配置:1-2-2\nmysql              域名:mysql.hui.com       ip:192.168.12.141    配置:1-1-1\nnexus              域名:nexus.hui.com       ip:192.168.12.142    配置:1-1-2\nredis              域名:redis.hui.com       ip:192.168.12.143    配置:1-1-1\njenkins            域名:jenkins.hui.com     ip:192.168.12.144    配置:1-2-2\nharbor             域名:harbor.hui.com      ip:192.168.12.145    配置:2-2-4   磁盘：40G\nJDK&Maven&tomcat   域名:utils.hui.com       ip:192.168.12.146    配置:1-2-2\nk8s-base           域名:k8s-base.hui.com    ip:192.168.12.150    配置:1-2-2   k8s的基础镜像\nk8s-master         域名:k8s-master.hui.com  ip:192.168.12.151    配置:1-2-2   主节点\nk8s-node1          域名:k8s-node1.hui.com   ip:192.168.12.152    配置:1-2-2   从节点\nk8s-node2          域名:k8s-node2.hui.com   ip:192.168.12.153    配置:1-2-2   从节点\nproject            域名:myproject.hui.com   ip:192.168.12.160 \n\n配置讲解:\n\n1-1-1:处理器数量为1,每个处理器的内核数量为1,内存为1.\n\n其中的硬盘不做特殊说明，默认使用的是20GB.\n\n以上配置是要求的最低配置,如果在使用过程中不够用时,需要再加\n\n该配置需要的最低核心数为10,需要的最低内存数量为18\n\n## 准备条件\n\nVMware\n\n基础的base虚拟机一台.\n要求:虚拟机里有ssh,docker,docker-compose.其中docker-compose的版本最低要求1.8以上.\n\n自制的一个网卡,网卡自制方式:\n\n在VWware里选择`编辑`-->`虚拟网络编辑器`-->`更改设置`\n\n1. 将已经存在的网卡全部改为\"仅主机模式\"\n\n    ![](01.png)\n\n2. 添加网络-->修改ip地址-->改为NAT模式-->应用-->确定\n\n    ![](02.png)\n\n3. 在虚拟机里新建一个文件夹,把基础的base虚拟机(以下简称base)放进去,并将网卡修改为新设置的网卡\n\n    ![](03.png)\n\n4. 初始账号,密码和邮箱\n\n    账号:hui\n    密码:hui123456\n    邮箱:hui@hui.hui\n\n## GitLab环境的搭建\n\n#### 基础配置\n\n1. 右键base-->管理-->克隆-->一路下一步(使用链接克隆)-->改个名称和存储位置\n\n2. 编辑虚拟机配置-->配置改为1-1-2.查看网卡是否是自己定义的网卡,不是就修改为自己设置的\n\n    ![](04.png)\n\n3. 修改本机(个人PC机器)DNS服务器地址为`114.114.114.114` `114.114.115.115`\n\n4. 启动虚拟机\n\n5. 配置静态ip地址\n\n    `vi /etc/netplan/50-cloud-init.yaml`\n\n    如果出现以下信息,按\"e\"键就行了\n\n    ![](05.png)\n\n    修改如下:\n\n    ![](06.png)\n\n    执行`netplan apply`使文件生效\n\n6. 执行`ping www.baidu.com`验证网络,如果没有问题,就使用本机的XShll链接虚拟机\n\n7. 修改服务器名称为gitlab\n\n    ```shell\n    $ hostnamectl set-hostname gitlab\n    ```\n\n    设置结束后还需要设置`preserve-hostname:true`.进入设置文件`vi /etc/cloud/cloud.cfg`设置即可\n\n    reboot重启电脑\n\n8. 将主机与域名配在一起.因为名称虚拟机名称改为了gitlab,所以可以通过以下配置,将ip地址与域名gitlab.hui.com联系到一起\n\n    ```shell\n    $ vi /etc/hosts\n    ```\n\n    配置如下:\n\n    ![](07.png)\n\n9. 本机下载SwitchHosts.作用是在Windows机器上使用域名访问虚拟机.其是解决多个ip不污染系统的host文件.\n\n    修改权限:找到C:\\Windows\\System32\\drivers\\etc下的hosts文件.右键-->属性-->去掉\"只读\",并将\"安全\"里的所有权限都打开\n\n    ![](08.png)\n\n    然后以管理员的身份运行SwitchHosts!.exe.新增一个rules-->填入一个名称\n\n    ![](09.jpg)\n\n    配置(ip与域名间有两个空格),并打开开关\n\n    ![](10.jpg)\n\n#### 安装gitlab\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir gitlab\n\n    cd gitlab\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml` 来源: \n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\n\n    docker-compose.yml配置文件.其中将hostname改为`hostname: 'gitlab.hui.com'`,将external_url改为`external_url 'http://gitlab.hui.com:8080'`\n\n    ```shell\n    version: '3'\n    services:\n        web:\n        image: 'twang2218/gitlab-ce-zh'\n        restart: always\n        hostname: 'gitlab.hui.com'\n        environment:\n            TZ: 'Asia/Shanghai'\n            GITLAB_OMNIBUS_CONFIG: |\n            external_url 'http://gitlab.hui.com:8080'\n            gitlab_rails['gitlab_shell_ssh_port'] = 2222\n            unicorn['port'] = 8888\n            nginx['listen_port'] = 8080\n        ports:\n          - '8080:8080'\n          - '8443:443'\n          - '2222:22'\n        volumes:\n          - ./config:/etc/gitlab\n          - ./data:/var/opt/gitlab\n          - ./logs:/var/log/gitlabi\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n    镜像拉取结束后,使用`docker-compose ps`查看进程直到state的starting消失后gitlab才启动\n\n    如果等的有点急,可以通过`docker logs -f 容器名称`来查看具体进程\n\n4. 设置gitlab的账号,密码,邮箱.开始访问gitlab.hui.com:8080\n\n    账号:hui\n    密码:hui123456\n    邮箱:hui@hui.hui\n\n    第一步:设置密码界面,将以上密码填入就行\n\n    第二步:注册.将以上账号,密码,邮箱依次填入\n\n5. 汉化gitlab\n\n    右键个人小头标-->settings-->preferences-->language\n\n    由于我的这个镜像是已经汉化过的,所以不用汉化了\n\n6. 创建组\n\n    点击左上角的gitlab-->创建群组\n\n    ![](11.jpg)\n\n7. 创建项目\n\n    在已经创建的群组里创建项目\n\n    ![](12.jpg)\n\n8. 添加SSH公钥\n\n    项目创建成功后,会让添加SSH公钥\n\n    ![](13.png)\n\n    点击`新建SSH公钥`,然后点击`generate one`\n\n    ![](14.png)\n\n    选择该页面中的`ssh-keygen -t rsa -C \"your.email@example.com\" -b 4096`命令来在本机上生成公钥\n\n    ```shell\n    ssh-keygen -t rsa -C \"hui@hui.hui\" -b 4096\n    ```\n\n    执行过程如下图\n\n    ![](15.jpg)\n\n    复制公钥,粘贴到gitlab的Settings-->SSH中\n\n    添加全局设置\n\n    ```shell\n    $ git config --global user.name \"hui\"\n    $ git config --global user.email \"hui@hui.hui\"\n    ```\n\n    gitlab配置完成,接下来是整合Jenkins的过程了\n\n\n## MySql环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname mysql\n```\n\n#### 安装mysql\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir mysql\n\n    cd mysql\n\n    vi docker-compose.yml\n    ```\n\n    docker-compose.yml来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装MySql8.x即可.配置文件如下\n\n    ```yml\n    version: '3.1'\n    services:\n    db:\n        image: mysql\n        restart: always\n        environment:\n        MYSQL_ROOT_PASSWORD: 123456\n        command:\n          --default-authentication-plugin=mysql_native_password\n          --character-set-server=utf8mb4\n          --collation-server=utf8mb4_general_ci\n          --explicit_defaults_for_timestamp=true\n          --lower_case_table_names=1\n        ports:\n          - 3306:3306\n        volumes:\n          - ./data:/var/lib/mysql\n\n    adminer:\n        image: adminer\n        restart: always\n        ports:\n          - 8080:8080\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. mysql的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. 使用`http://mysql.hui.com:8080/`在本机访问mysql\n\n    ![](16.png)\n\n    用户名:root\n    密码:123456\n\n    登录进去后可以创建数据库,导入.sql的文件以及导出\n\n    ![](17.png)\n\n## Nexus环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname nexus\n```\n    \n#### 安装Nexus\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir nexus\n\n    cd nexus\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml`来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装Nexus.配置文件如下\n\n    ```yml\n    version: '3.1'\n    services:\n    nexus:\n        restart: always\n        image: sonatype/nexus3\n        container_name: nexus\n        ports:\n          - 8081:8081\n        volumes:\n          - data:/nexus-data\n\n    volumes:\n    data:\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. nexus的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. 使用`http://nexus.hui.com:8081/`访问,登录\n\n    初始账号密码:\n\n    账号:admin\n    密码:admin123\n\n    > 注意事项:如果需要本地运行,本地需要安装maven,tomcat.\n\n## Redis环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname redis\n```\n\n#### 安装Redis\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir redis\n\n    cd redis\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml`来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装redis.配置文件如下\n\n    将`container_name: redis-master`改为`container_name: redis`.来源中的redis是集群,我们没有用集群,所以就不需要起名带master了\n\n    ```yml\n    version: '3.1'\n    services:\n    master:\n        image: redis\n        container_name: redis\n        ports:\n          - 6379:6379\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. redis的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. redis似乎没有可以访问的地址\n\n## Jenkins环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname jenkins\n```\n\n#### 安装Jenkins\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir jenkins\n\n    cd jenkins\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml`来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装Jenkins.配置文件如下\n\n    ```yml\n    version: '3.1'\n    services:\n    jenkins:\n        restart: always\n        image: jenkinsci/jenkins\n        container_name: jenkins\n        ports:\n          - 8080:8080\n          - 50000:50000\n        environment:\n        TZ: Asia/Shanghai\n        volumes:\n          - data:/var/jenkins_home\n\n    volumes:\n    data:\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. jenkins的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. 使用`http://jenkins.hui.com:8080`访问jenkins\n\n#### jenkins的设置\n\n1. 设置密钥:提示给出的路径我没有找到.可以用一下简单的方法获取密钥\n\n    在/var/local/jenkins目录下执行`docker logs -f jenkins`.以下标注的地方就是密钥\n\n    ![](18.png)\n\n2. 选择插件安装\n\n    随便选择一个.我这里选择了第二个.\n\n    ![](19.jpg)\n\n    选择好后直接点击install安装.不用管是否安装上,先让其安装完,然后把没有装上的插件拍照截图,等进入系统后再逐个安装.我的安装情况如下:\n\n    ![](20.jpg)\n\n    点击Continue\n\n3. 创建第一个管理员用户\n\n    依然使用同一套账号密码邮箱:\n\n    账号:hui\n    密码:hui123456\n    邮箱:hui@hui.hui\n\n4. 示例配置\n\n    我这里只是将其配置为`http://jenkins.hui.com:8080/jenkins`\n\n    接下来一路确定就可以了\n\n5. 配置镜像加速\n\n    系统管理-->插件管理-->高级(Advanced)-->升级站点\n\n    参考网站:https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/\n\n    配置的最终URL:`https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/update-center.json`\n\n    ![](21.png)\n\n    点击提交-->点击立即获取\n\n6. 汉化\n\n    系统管理-->插件管理-->可选插件(Available)-->过滤,搜\"Locale\"-->选中后点击直接安装\n\n    > 其实这里需要装两个插件:一个是Locale,另一个是Localization:Chinese(simplified).但是Localization:Chinese(simplified)在最初的时候给我安装过了,所以这里不用再装了\n\n    ![](22.png)\n\n    汉化过程:\n\n    系统管理-->系统设置-->Locale-->Default language 填入 `zh-CN`,下面那个对号不用打勾\n\n    ![](23.png)\n\n    应用-->保存\n\n7. 几个必装的插件\n\n    ```\n    Publish Over SSH\n    Maven Integration\n    Extensible Choice Parameter\n    ```\n\n8. 逐个下载插件\n\n    这里介绍两种下载插件的方法:\n\n    第一种下载插件的方法:\n\n    系统管理-->插件管理-->可选插件(Available)-->过滤,比对着前面没有下载上的插件逐个搜索,搜到的插件前面先打上对号,不安装,等全部找齐后,点击`下载待重启后安装`\n\n    待全部下载结束后.回到虚拟机里执行`docker-compose restart`重启jenkins\n\n    第二种下载插件的方法:\n\n    进入官网:`https://plugins.jenkins.io/`,输入要下载的插件名称搜索\n\n    ![](24.jpg)\n\n    点击某个插件页面进去,然后点击右上角的Archives,选择相应的版本下载.格式是.hpi\n\n    ![](25.png)\n\n    下载好后,进入jenkins中.系统管理-->插件管理-->高级-->上传插件-->选择下载的.hpi文件-->上传-->返回首页\n\n    ![](26.jpg)\n\n## Harbor环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname Harbor\n```\n\n#### 安装Harbor\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 下载harbor，采用离线的方式安装\n\n    下载地址：`https://github.com/goharbor/harbor/releases`,下载离线版的：`Harbor offline installer`\n\n3. 将harbor传到虚拟机中\n\n    在本机切换到harbor-offline-installer-v1.8.1.tgz的下载目录下,执行\n\n    `scp harbor-offline-installer-v1.8.1.tgz root@192.168.12.145:/usr/local/`\n\n    在虚拟机解压harbor-offline-installer-v1.8.1.tgz\n\n    `tar -xzvf harbor-offline-installer-v1.8.1.tgz`\n\n    将压缩包文件删除\n\n    `rm -fr harbor-offline-installer-v1.8.1.tgz`\n\n4. 安装harbor\n\n    进入解压好的harbor目录\n\n    `cd harbor`\n\n    修改harbor.yml\n\n    `vi harbor.yml`\n\n    将`hostname: reg.mydomain.com`改为`hostname: harbor.hui.com`\n\n    解决无法登录问题:默认登录的网址是`https://harbor.hui.com`.是`https`而不是`http`.这样就出现了找不到的情况.解决方案\n\n    先执行以下:\n\n    ```shell\n    cat > /etc/docker/daemon.json << EOF\n    { \"insecure-registries\":[\"harbor.hui.com\"] }\n    EOF\n    ```\n\n    再执行`./install.sh`脚本开始安装\n\n    使用`http://harbor.hui.com`来访问harbor\n\n    初始用户名密码:\n\n    用户名:admin\n    密码:Harbor12345\n\n#### push和pull\n\n1. 在本机haibor网页新建一个项目,选择公开即可\n\n2. 在虚拟机中登录harbor\n\n    `docker login harbor.hui.com`\n\n    账号:admin\n    密码:Harbor12345\n\n3. push镜像\n\n    push镜像的意思是把docker里的镜像push到harbor里,我这里下载了一个hello-world的镜像用于测试\n\n    `docker pull hello-world`\n\n    以下是官网提供的push方式:\n\n    ![](27.png)\n\n    例子:\n\n    先给镜像重新一个名称:\n\n    `docker tag hello-world:latest harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    然后push镜像\n\n    `docker push harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    在本机刷新以下页面,可以看到harbor里已经有了myproject/hello-world:v1.0.0\n\n4. pull镜像\n\n    pull镜像是把harbor里的镜像拉到docker里\n\n    测试步骤:先把docker里的hello-world镜像删除\n\n    `docker rmi hello-world:latest`\n    `docker rmi harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    pull镜像\n\n    `docker pull harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    如果docker images可以看到刚刚拉取的镜像,就说明没有问题了\n\n## Kubernetes的搭建\n\nKubernetes使用一主两从的方式搭建\n\n首先先完整克隆一个基础的Kubernetes虚拟机,然后在这台机器上做一些基础配置,这些配置是主节点和从节点的机器都要配置的.基础配置后,克隆时就不需要每台都配置了.\n\n#### Kubernetes的基础配置\n\n参考网址:\nhttps://funtl.com/zh/service-mesh-kubernetes/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4.html\n\n1. 检查docker,docker-compose,交换空间.我这里用的基础镜像已经全部配过了,所以不会有大的问题,不过还是要检查一下.(基础虚拟机镜像的配置参考我的博客虚拟机那部分)\n\n2. 基础镜像ip我使用的是`192.168.12.150`\n\n3. 其他基础的准备工作和gitlab的准备工作一样\n\n4. 安装 kubeadm，kubelet，kubectl\n\n    ```shell\n    # 安装系统工具\n    apt-get update && apt-get install -y apt-transport-https\n\n    # 安装 GPG 证书\n    curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -\n\n    # 写入软件源；注意：我们用系统代号为 bionic，但目前阿里云不支持，所以沿用 16.04 的 xenial\n    cat << EOF >/etc/apt/sources.list.d/kubernetes.list\n    > deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\n    > EOF\n\n    # 安装\n    apt-get update && apt-get install -y kubelet kubeadm kubectl\n    ```\n\n    执行结束后,在最后可以看到一些版本号信息\n\n    ```shell\n    Setting up kubelet (1.15.0-00) ...\n    Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /lib/systemd/system/kubelet.service.\n    Setting up kubectl (1.15.0-00) ...\n    Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n    Setting up kubeadm (1.15.0-00) ...\n    ```\n\n    > 在这里要记住kubeadm的版本号为1.15.0-00,因为kubernetes的版本号要和他的一致\n\n5. 同步时间\n\n    设置时区\n\n    `$ dpkg-reconfigure tzdata`\n\n    选择 Asia（亚洲）-->选择 Shanghai（上海）\n\n    时间同步\n\n    ```shell\n    # 安装 ntpdate\n    apt-get install ntpdate\n\n    # 设置系统时间与网络时间同步（cn.pool.ntp.org 位于中国的公共 NTP 服务器）\n    ntpdate cn.pool.ntp.org\n\n    # 将系统时间写入硬件时间\n    hwclock --systohc\n    ```\n\n    如果在执行`apt-get install ntpdate`中遇到以下问题\n\n    ```shell\n    E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)\n    E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?\n    ```\n\n    可以通过下面的方式解决\n\n    ```shell\n    sudo rm /var/lib/apt/lists/lock\n    sudo rm /var/cache/apt/archives/lock\n    sudo apt update\n    ```\n\n    然后再执行`apt-get install ntpdate`\n\n    确认时间\n\n    `$ date`\n\n    输出以下格式就是正常的\n\n    `Sat Jun 22 12:23:16 CST 2019`\n\n6. 配置 IPVS\n\n    ```shell\n    # 安装系统工具\n    apt-get install -y ipset ipvsadm\n\n    # 配置并加载 IPVS 模块\n    mkdir -p /etc/sysconfig/modules/\n    vi /etc/sysconfig/modules/ipvs.modules\n\n    # 输入如下内容\n    #!/bin/bash\n    modprobe -- ip_vs\n    modprobe -- ip_vs_rr\n    modprobe -- ip_vs_wrr\n    modprobe -- ip_vs_sh\n    modprobe -- nf_conntrack_ipv4\n\n    # 执行脚本，注意：如果重启虚拟机则需要重新运行该脚本\n    chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4\n\n    # 执行脚本输出如下\n    ip_vs_sh               16384  0\n    ip_vs_wrr              16384  0\n    ip_vs_rr               16384  0\n    ip_vs                 147456  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr\n    nf_conntrack_ipv4      16384  3\n    nf_defrag_ipv4         16384  1 nf_conntrack_ipv4\n    nf_conntrack          131072  8 xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4,nf_nat,ipt_MASQUERADE,nf_nat_ipv4,nf_conntrack_netlink,ip_vs\n    libcrc32c              16384  4 nf_conntrack,nf_nat,raid456,ip_vs\n    ```\n\n    > 注意:每次重启虚拟机,主节点和从节点虚拟机都要重新执行`chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4`\n\n7. 配置内核参数\n\n    ```shell\n    # 配置参数\n    vi /etc/sysctl.d/k8s.conf\n\n    # 输入如下内容\n    net.bridge.bridge-nf-call-ip6tables = 1\n    net.bridge.bridge-nf-call-iptables = 1\n    net.ipv4.ip_nonlocal_bind = 1\n    net.ipv4.ip_forward = 1\n    vm.swappiness=0\n\n    # 应用参数\n    sysctl --system\n\n    # 应用参数输出如下（找到 Applying /etc/sysctl.d/k8s.conf 开头的日志）\n    * Applying /etc/sysctl.d/10-console-messages.conf ...\n    kernel.printk = 4 4 1 7\n    * Applying /etc/sysctl.d/10-ipv6-privacy.conf ...\n    * Applying /etc/sysctl.d/10-kernel-hardening.conf ...\n    kernel.kptr_restrict = 1\n    * Applying /etc/sysctl.d/10-link-restrictions.conf ...\n    fs.protected_hardlinks = 1\n    fs.protected_symlinks = 1\n    * Applying /etc/sysctl.d/10-lxd-inotify.conf ...\n    fs.inotify.max_user_instances = 1024\n    * Applying /etc/sysctl.d/10-magic-sysrq.conf ...\n    kernel.sysrq = 176\n    * Applying /etc/sysctl.d/10-network-security.conf ...\n    net.ipv4.conf.default.rp_filter = 1\n    net.ipv4.conf.all.rp_filter = 1\n    net.ipv4.tcp_syncookies = 1\n    * Applying /etc/sysctl.d/10-ptrace.conf ...\n    kernel.yama.ptrace_scope = 1\n    * Applying /etc/sysctl.d/10-zeropage.conf ...\n    vm.mmap_min_addr = 65536\n    * Applying /usr/lib/sysctl.d/50-default.conf ...\n    net.ipv4.conf.all.promote_secondaries = 1\n    net.core.default_qdisc = fq_codel\n    * Applying /etc/sysctl.d/99-sysctl.conf ...\n    * Applying /etc/sysctl.d/k8s.conf ...\n    net.bridge.bridge-nf-call-ip6tables = 1\n    net.bridge.bridge-nf-call-iptables = 1\n    net.ipv4.ip_nonlocal_bind = 1\n    net.ipv4.ip_forward = 1\n    vm.swappiness = 0\n    * Applying /etc/sysctl.conf ...\n    ```\n\n8. 至此,基础的kubernetes镜像已经做好,先做个快照,接下来链接克隆3台机器,一个为master节点机器,两个node节点机器\n\n#### Kubernetes集群的搭建(在master机器上操作)\n\n1. 先对3台虚拟机进行基础配置,注意就是修改一下静态ip和域名\n\n    master:192.168.12.151  k8s-master.hui.com\n    node1: 192.168.12.152  k8s-node1.hui.com\n    node2: 192.168.12.153  k8s-node2.hui.com\n\n2. 在master节点上配置kubeadm\n\n    参考网址:\n    https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE-kubeadm.html\n\n    在/usr/local下创建一个名为kubernetes新的文件夹\n\n    ```shell\n    mkdir -p /usr/local/kubernetes\n    cd /usr/local/kubernetes\n    ```\n\n3. 创建并修改配置\n\n    ```shell\n    # 导出配置文件\n    kubeadm config print init-defaults --kubeconfig ClusterConfiguration > kubeadm.yml\n    ```\n\n    这步执行结束后会在/usr/local/kubernetes文件夹下得到一个kubeadm.yml配置文件\n\n    修改配置文件的一些参数:\n\n    1)`advertiseAddress: 1.2.3.4`,将ip地址修改为本机ip地址\n    修改结果:`advertiseAddress: 192.168.12.151`\n\n    2)将`imageRepository: k8s.gcr.io`修改为`imageRepository: registry.aliyuncs.com/google_containers`\n\n    3)将`kubernetesVersion: v1.14.0`的版本改成和基础配置里的`kubeadm (1.15.0-00)`的版本一样,修改结果为`kubernetesVersion: v1.15.0`\n\n    4)添加Calico网段,在dnsDomain和serviceSubnet之间添加podSubnet: \"10.244.0.0/16\"具体如下:\n\n    ```shell\n    dnsDomain: cluster.local\n    # 配置成 Calico 的默认网段\n    podSubnet: \"10.244.0.0/16\"\n    serviceSubnet: 10.96.0.0/12\n    ```\n\n    5)在最后添加开启 IPVS 模式\n\n    ```shell\n    ---\n    # 开启 IPVS 模式\n    apiVersion: kubeproxy.config.k8s.io/v1alpha1\n    kind: KubeProxyConfiguration\n    featureGates:\n    SupportIPVSProxyMode: true\n    mode: ipvs\n    ```\n\n4. 查看和拉取镜像\n\n    ```shell\n    # 查看所需镜像列表\n    kubeadm config images list --config kubeadm.yml\n    # 拉取镜像\n    kubeadm config images pull --config kubeadm.yml\n    ```\n\n#### 使用 kubeadm 搭建 kubernetes 集群\n\n> 除了将node节点加入master的一条命令外,其他都在master节点上执行\n\n参考链接:\nhttps://funtl.com/zh/service-mesh-kubernetes/%E4%BD%BF%E7%94%A8-kubeadm.html\n\n安装 kubernetes 主节点\n\n`kubeadm init --config=kubeadm.yml --experimental-upload-certs | tee kubeadm-init.log`\n\n成功后会看到以下内容\n\n```shell\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\nhttps://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0\n```\n\n按照以上内容的提示信息配置 kubectl\n\n```shell\nmkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n验证是否成功\n\n```shell\nkubectl get node\n\n# 能够打印出节点信息即表示成功\nNAME                STATUS     ROLES    AGE     VERSION\nkubernetes-master   NotReady   master   8m40s   v1.14.1\n```\n\n> 接下来的一步要在node节点的机器上操作.执行以上提示信息的最后一句将node节点的机器加入到master节点中\n\n```shell\nkubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0\n```\n\n验证是否加入成功\n\n```shell\nkubectl get node\n\n# 能够打印出节点信息即表示成功\nNAME        STATUS     ROLES    AGE    VERSION\nk8s-base    NotReady   master   8m1s   v1.15.0\nk8s-node1   NotReady   <none>   56s    v1.15.0\nk8s-node2   NotReady   <none>   23s    v1.15.0\n```\n\n#### 配置网络\n\n参考网址:\nhttps://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C.html\n\n安装网络插件 Calico\n\n```shell\n# 在 Master 节点操作即可\nkubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml\n```\n\n确认安装是否成功\n\n```shell\nwatch kubectl get pods --all-namespaces\n\n# 需要等待所有状态为 Running，注意时间可能较久，3 - 5 分钟的样子\nEvery 2.0s: kubectl get pods --all-namespaces                                                                                                    kubernetes-master: Fri May 10 18:16:51 2019\n\nNAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE\nkube-system   calico-kube-controllers-8646dd497f-g2lln    1/1     Running   0          50m\nkube-system   calico-node-8jrtp                           1/1     Running   0          50m\nkube-system   coredns-8686dcc4fd-mhwfn                    1/1     Running   0          51m\nkube-system   coredns-8686dcc4fd-xsxwk                    1/1     Running   0          51m\nkube-system   etcd-kubernetes-master                      1/1     Running   0          50m\nkube-system   kube-apiserver-kubernetes-master            1/1     Running   0          51m\nkube-system   kube-controller-manager-kubernetes-master   1/1     Running   0          51m\nkube-system   kube-proxy-p8mdw                            1/1     Running   0          51m\nkube-system   kube-scheduler-kubernetes-master            1/1     Running   0          51m\n```\n\n#### 配置Calico.yaml文件\n\n1. 下载Calico.yaml\n\n    在/usr/local/kubernetes下执行\n\n    `wget https://docs.projectcalico.org/V3.7/manifests/calico.yaml`\n\n    查看该文件夹下有没有calico.yaml的文件\n\n    然后编辑该文件`vi calico.yaml`.文件较长,可以在编辑文件里按`\\CALICO_IPV4POOL_CIDR`,然后按确定键直接锁定位置\n\n    按i编辑,将value的值该为:`10.244.0.0/16`\n\n#### 最后注意事项\n\n> 每次重启虚拟机,主节点和从节点虚拟机都要重新执行`chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4`\n\n至此基本环境已部署完毕\n\n\n","source":"_posts/2019-06-20-Jenkins部署项目-环境搭建.md","raw":"---\ntitle: Jenkins部署项目-环境搭建\ndate: 2019-06-20 19:46:53\ncategories:\n- Jenkins\ntags:\n- gitlab\n- mysql\n- redis\n- nexus\n- jekins\n- kubernetes\n---\n\n<center><font size=4 color=\"red\">持续集成，持续交付第一章-环境搭建</font></center>\n\n<!--more-->\n\n# Jenkins部署项目-环境搭建\n\n## 部署环境\n\ngitlab             域名:gitlab.hui.com      ip:192.168.12.140    配置:1-2-2\nmysql              域名:mysql.hui.com       ip:192.168.12.141    配置:1-1-1\nnexus              域名:nexus.hui.com       ip:192.168.12.142    配置:1-1-2\nredis              域名:redis.hui.com       ip:192.168.12.143    配置:1-1-1\njenkins            域名:jenkins.hui.com     ip:192.168.12.144    配置:1-2-2\nharbor             域名:harbor.hui.com      ip:192.168.12.145    配置:2-2-4   磁盘：40G\nJDK&Maven&tomcat   域名:utils.hui.com       ip:192.168.12.146    配置:1-2-2\nk8s-base           域名:k8s-base.hui.com    ip:192.168.12.150    配置:1-2-2   k8s的基础镜像\nk8s-master         域名:k8s-master.hui.com  ip:192.168.12.151    配置:1-2-2   主节点\nk8s-node1          域名:k8s-node1.hui.com   ip:192.168.12.152    配置:1-2-2   从节点\nk8s-node2          域名:k8s-node2.hui.com   ip:192.168.12.153    配置:1-2-2   从节点\nproject            域名:myproject.hui.com   ip:192.168.12.160 \n\n配置讲解:\n\n1-1-1:处理器数量为1,每个处理器的内核数量为1,内存为1.\n\n其中的硬盘不做特殊说明，默认使用的是20GB.\n\n以上配置是要求的最低配置,如果在使用过程中不够用时,需要再加\n\n该配置需要的最低核心数为10,需要的最低内存数量为18\n\n## 准备条件\n\nVMware\n\n基础的base虚拟机一台.\n要求:虚拟机里有ssh,docker,docker-compose.其中docker-compose的版本最低要求1.8以上.\n\n自制的一个网卡,网卡自制方式:\n\n在VWware里选择`编辑`-->`虚拟网络编辑器`-->`更改设置`\n\n1. 将已经存在的网卡全部改为\"仅主机模式\"\n\n    ![](01.png)\n\n2. 添加网络-->修改ip地址-->改为NAT模式-->应用-->确定\n\n    ![](02.png)\n\n3. 在虚拟机里新建一个文件夹,把基础的base虚拟机(以下简称base)放进去,并将网卡修改为新设置的网卡\n\n    ![](03.png)\n\n4. 初始账号,密码和邮箱\n\n    账号:hui\n    密码:hui123456\n    邮箱:hui@hui.hui\n\n## GitLab环境的搭建\n\n#### 基础配置\n\n1. 右键base-->管理-->克隆-->一路下一步(使用链接克隆)-->改个名称和存储位置\n\n2. 编辑虚拟机配置-->配置改为1-1-2.查看网卡是否是自己定义的网卡,不是就修改为自己设置的\n\n    ![](04.png)\n\n3. 修改本机(个人PC机器)DNS服务器地址为`114.114.114.114` `114.114.115.115`\n\n4. 启动虚拟机\n\n5. 配置静态ip地址\n\n    `vi /etc/netplan/50-cloud-init.yaml`\n\n    如果出现以下信息,按\"e\"键就行了\n\n    ![](05.png)\n\n    修改如下:\n\n    ![](06.png)\n\n    执行`netplan apply`使文件生效\n\n6. 执行`ping www.baidu.com`验证网络,如果没有问题,就使用本机的XShll链接虚拟机\n\n7. 修改服务器名称为gitlab\n\n    ```shell\n    $ hostnamectl set-hostname gitlab\n    ```\n\n    设置结束后还需要设置`preserve-hostname:true`.进入设置文件`vi /etc/cloud/cloud.cfg`设置即可\n\n    reboot重启电脑\n\n8. 将主机与域名配在一起.因为名称虚拟机名称改为了gitlab,所以可以通过以下配置,将ip地址与域名gitlab.hui.com联系到一起\n\n    ```shell\n    $ vi /etc/hosts\n    ```\n\n    配置如下:\n\n    ![](07.png)\n\n9. 本机下载SwitchHosts.作用是在Windows机器上使用域名访问虚拟机.其是解决多个ip不污染系统的host文件.\n\n    修改权限:找到C:\\Windows\\System32\\drivers\\etc下的hosts文件.右键-->属性-->去掉\"只读\",并将\"安全\"里的所有权限都打开\n\n    ![](08.png)\n\n    然后以管理员的身份运行SwitchHosts!.exe.新增一个rules-->填入一个名称\n\n    ![](09.jpg)\n\n    配置(ip与域名间有两个空格),并打开开关\n\n    ![](10.jpg)\n\n#### 安装gitlab\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir gitlab\n\n    cd gitlab\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml` 来源: \n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\n\n    docker-compose.yml配置文件.其中将hostname改为`hostname: 'gitlab.hui.com'`,将external_url改为`external_url 'http://gitlab.hui.com:8080'`\n\n    ```shell\n    version: '3'\n    services:\n        web:\n        image: 'twang2218/gitlab-ce-zh'\n        restart: always\n        hostname: 'gitlab.hui.com'\n        environment:\n            TZ: 'Asia/Shanghai'\n            GITLAB_OMNIBUS_CONFIG: |\n            external_url 'http://gitlab.hui.com:8080'\n            gitlab_rails['gitlab_shell_ssh_port'] = 2222\n            unicorn['port'] = 8888\n            nginx['listen_port'] = 8080\n        ports:\n          - '8080:8080'\n          - '8443:443'\n          - '2222:22'\n        volumes:\n          - ./config:/etc/gitlab\n          - ./data:/var/opt/gitlab\n          - ./logs:/var/log/gitlabi\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n    镜像拉取结束后,使用`docker-compose ps`查看进程直到state的starting消失后gitlab才启动\n\n    如果等的有点急,可以通过`docker logs -f 容器名称`来查看具体进程\n\n4. 设置gitlab的账号,密码,邮箱.开始访问gitlab.hui.com:8080\n\n    账号:hui\n    密码:hui123456\n    邮箱:hui@hui.hui\n\n    第一步:设置密码界面,将以上密码填入就行\n\n    第二步:注册.将以上账号,密码,邮箱依次填入\n\n5. 汉化gitlab\n\n    右键个人小头标-->settings-->preferences-->language\n\n    由于我的这个镜像是已经汉化过的,所以不用汉化了\n\n6. 创建组\n\n    点击左上角的gitlab-->创建群组\n\n    ![](11.jpg)\n\n7. 创建项目\n\n    在已经创建的群组里创建项目\n\n    ![](12.jpg)\n\n8. 添加SSH公钥\n\n    项目创建成功后,会让添加SSH公钥\n\n    ![](13.png)\n\n    点击`新建SSH公钥`,然后点击`generate one`\n\n    ![](14.png)\n\n    选择该页面中的`ssh-keygen -t rsa -C \"your.email@example.com\" -b 4096`命令来在本机上生成公钥\n\n    ```shell\n    ssh-keygen -t rsa -C \"hui@hui.hui\" -b 4096\n    ```\n\n    执行过程如下图\n\n    ![](15.jpg)\n\n    复制公钥,粘贴到gitlab的Settings-->SSH中\n\n    添加全局设置\n\n    ```shell\n    $ git config --global user.name \"hui\"\n    $ git config --global user.email \"hui@hui.hui\"\n    ```\n\n    gitlab配置完成,接下来是整合Jenkins的过程了\n\n\n## MySql环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname mysql\n```\n\n#### 安装mysql\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir mysql\n\n    cd mysql\n\n    vi docker-compose.yml\n    ```\n\n    docker-compose.yml来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装MySql8.x即可.配置文件如下\n\n    ```yml\n    version: '3.1'\n    services:\n    db:\n        image: mysql\n        restart: always\n        environment:\n        MYSQL_ROOT_PASSWORD: 123456\n        command:\n          --default-authentication-plugin=mysql_native_password\n          --character-set-server=utf8mb4\n          --collation-server=utf8mb4_general_ci\n          --explicit_defaults_for_timestamp=true\n          --lower_case_table_names=1\n        ports:\n          - 3306:3306\n        volumes:\n          - ./data:/var/lib/mysql\n\n    adminer:\n        image: adminer\n        restart: always\n        ports:\n          - 8080:8080\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. mysql的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. 使用`http://mysql.hui.com:8080/`在本机访问mysql\n\n    ![](16.png)\n\n    用户名:root\n    密码:123456\n\n    登录进去后可以创建数据库,导入.sql的文件以及导出\n\n    ![](17.png)\n\n## Nexus环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname nexus\n```\n    \n#### 安装Nexus\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir nexus\n\n    cd nexus\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml`来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装Nexus.配置文件如下\n\n    ```yml\n    version: '3.1'\n    services:\n    nexus:\n        restart: always\n        image: sonatype/nexus3\n        container_name: nexus\n        ports:\n          - 8081:8081\n        volumes:\n          - data:/nexus-data\n\n    volumes:\n    data:\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. nexus的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. 使用`http://nexus.hui.com:8081/`访问,登录\n\n    初始账号密码:\n\n    账号:admin\n    密码:admin123\n\n    > 注意事项:如果需要本地运行,本地需要安装maven,tomcat.\n\n## Redis环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname redis\n```\n\n#### 安装Redis\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir redis\n\n    cd redis\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml`来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装redis.配置文件如下\n\n    将`container_name: redis-master`改为`container_name: redis`.来源中的redis是集群,我们没有用集群,所以就不需要起名带master了\n\n    ```yml\n    version: '3.1'\n    services:\n    master:\n        image: redis\n        container_name: redis\n        ports:\n          - 6379:6379\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. redis的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. redis似乎没有可以访问的地址\n\n## Jenkins环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname jenkins\n```\n\n#### 安装Jenkins\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 配置docker-compose.yml文件\n\n    ```shell\n    cd /usr/local\n\n    mkdir jenkins\n\n    cd jenkins\n\n    vi docker-compose.yml\n    ```\n\n    `docker-compose.yml`来源:\n    https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html \n\n    安装Jenkins.配置文件如下\n\n    ```yml\n    version: '3.1'\n    services:\n    jenkins:\n        restart: always\n        image: jenkinsci/jenkins\n        container_name: jenkins\n        ports:\n          - 8080:8080\n          - 50000:50000\n        environment:\n        TZ: Asia/Shanghai\n        volumes:\n          - data:/var/jenkins_home\n\n    volumes:\n    data:\n    ```\n\n3. 启动docker-compose\n\n    ```shell\n    docker-compose up -d\n    ```\n\n4. jenkins的设置启动速度较快.可以使用`docker-compose ps`查看一下即可\n\n5. 使用`http://jenkins.hui.com:8080`访问jenkins\n\n#### jenkins的设置\n\n1. 设置密钥:提示给出的路径我没有找到.可以用一下简单的方法获取密钥\n\n    在/var/local/jenkins目录下执行`docker logs -f jenkins`.以下标注的地方就是密钥\n\n    ![](18.png)\n\n2. 选择插件安装\n\n    随便选择一个.我这里选择了第二个.\n\n    ![](19.jpg)\n\n    选择好后直接点击install安装.不用管是否安装上,先让其安装完,然后把没有装上的插件拍照截图,等进入系统后再逐个安装.我的安装情况如下:\n\n    ![](20.jpg)\n\n    点击Continue\n\n3. 创建第一个管理员用户\n\n    依然使用同一套账号密码邮箱:\n\n    账号:hui\n    密码:hui123456\n    邮箱:hui@hui.hui\n\n4. 示例配置\n\n    我这里只是将其配置为`http://jenkins.hui.com:8080/jenkins`\n\n    接下来一路确定就可以了\n\n5. 配置镜像加速\n\n    系统管理-->插件管理-->高级(Advanced)-->升级站点\n\n    参考网站:https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/\n\n    配置的最终URL:`https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/update-center.json`\n\n    ![](21.png)\n\n    点击提交-->点击立即获取\n\n6. 汉化\n\n    系统管理-->插件管理-->可选插件(Available)-->过滤,搜\"Locale\"-->选中后点击直接安装\n\n    > 其实这里需要装两个插件:一个是Locale,另一个是Localization:Chinese(simplified).但是Localization:Chinese(simplified)在最初的时候给我安装过了,所以这里不用再装了\n\n    ![](22.png)\n\n    汉化过程:\n\n    系统管理-->系统设置-->Locale-->Default language 填入 `zh-CN`,下面那个对号不用打勾\n\n    ![](23.png)\n\n    应用-->保存\n\n7. 几个必装的插件\n\n    ```\n    Publish Over SSH\n    Maven Integration\n    Extensible Choice Parameter\n    ```\n\n8. 逐个下载插件\n\n    这里介绍两种下载插件的方法:\n\n    第一种下载插件的方法:\n\n    系统管理-->插件管理-->可选插件(Available)-->过滤,比对着前面没有下载上的插件逐个搜索,搜到的插件前面先打上对号,不安装,等全部找齐后,点击`下载待重启后安装`\n\n    待全部下载结束后.回到虚拟机里执行`docker-compose restart`重启jenkins\n\n    第二种下载插件的方法:\n\n    进入官网:`https://plugins.jenkins.io/`,输入要下载的插件名称搜索\n\n    ![](24.jpg)\n\n    点击某个插件页面进去,然后点击右上角的Archives,选择相应的版本下载.格式是.hpi\n\n    ![](25.png)\n\n    下载好后,进入jenkins中.系统管理-->插件管理-->高级-->上传插件-->选择下载的.hpi文件-->上传-->返回首页\n\n    ![](26.jpg)\n\n## Harbor环境的搭建\n\n准备步骤和gitlab的**基础配置**是一样的\n\n在修改服务器名称时改为：\n\n```shell\n$ hostnamectl set-hostname Harbor\n```\n\n#### 安装Harbor\n\n1. 检查docker和docker-compose是否正常\n\n    ```shell\n    root@ubuntu:~# docker --version\n    Docker version 18.09.6, build 481bc77\n    root@ubuntu:~# docker-compose --version\n    docker-compose version 1.24.0, build 0aa5906\n    ```\n\n2. 下载harbor，采用离线的方式安装\n\n    下载地址：`https://github.com/goharbor/harbor/releases`,下载离线版的：`Harbor offline installer`\n\n3. 将harbor传到虚拟机中\n\n    在本机切换到harbor-offline-installer-v1.8.1.tgz的下载目录下,执行\n\n    `scp harbor-offline-installer-v1.8.1.tgz root@192.168.12.145:/usr/local/`\n\n    在虚拟机解压harbor-offline-installer-v1.8.1.tgz\n\n    `tar -xzvf harbor-offline-installer-v1.8.1.tgz`\n\n    将压缩包文件删除\n\n    `rm -fr harbor-offline-installer-v1.8.1.tgz`\n\n4. 安装harbor\n\n    进入解压好的harbor目录\n\n    `cd harbor`\n\n    修改harbor.yml\n\n    `vi harbor.yml`\n\n    将`hostname: reg.mydomain.com`改为`hostname: harbor.hui.com`\n\n    解决无法登录问题:默认登录的网址是`https://harbor.hui.com`.是`https`而不是`http`.这样就出现了找不到的情况.解决方案\n\n    先执行以下:\n\n    ```shell\n    cat > /etc/docker/daemon.json << EOF\n    { \"insecure-registries\":[\"harbor.hui.com\"] }\n    EOF\n    ```\n\n    再执行`./install.sh`脚本开始安装\n\n    使用`http://harbor.hui.com`来访问harbor\n\n    初始用户名密码:\n\n    用户名:admin\n    密码:Harbor12345\n\n#### push和pull\n\n1. 在本机haibor网页新建一个项目,选择公开即可\n\n2. 在虚拟机中登录harbor\n\n    `docker login harbor.hui.com`\n\n    账号:admin\n    密码:Harbor12345\n\n3. push镜像\n\n    push镜像的意思是把docker里的镜像push到harbor里,我这里下载了一个hello-world的镜像用于测试\n\n    `docker pull hello-world`\n\n    以下是官网提供的push方式:\n\n    ![](27.png)\n\n    例子:\n\n    先给镜像重新一个名称:\n\n    `docker tag hello-world:latest harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    然后push镜像\n\n    `docker push harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    在本机刷新以下页面,可以看到harbor里已经有了myproject/hello-world:v1.0.0\n\n4. pull镜像\n\n    pull镜像是把harbor里的镜像拉到docker里\n\n    测试步骤:先把docker里的hello-world镜像删除\n\n    `docker rmi hello-world:latest`\n    `docker rmi harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    pull镜像\n\n    `docker pull harbor.hui.com/myproject/hello-world:v1.0.0`\n\n    如果docker images可以看到刚刚拉取的镜像,就说明没有问题了\n\n## Kubernetes的搭建\n\nKubernetes使用一主两从的方式搭建\n\n首先先完整克隆一个基础的Kubernetes虚拟机,然后在这台机器上做一些基础配置,这些配置是主节点和从节点的机器都要配置的.基础配置后,克隆时就不需要每台都配置了.\n\n#### Kubernetes的基础配置\n\n参考网址:\nhttps://funtl.com/zh/service-mesh-kubernetes/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4.html\n\n1. 检查docker,docker-compose,交换空间.我这里用的基础镜像已经全部配过了,所以不会有大的问题,不过还是要检查一下.(基础虚拟机镜像的配置参考我的博客虚拟机那部分)\n\n2. 基础镜像ip我使用的是`192.168.12.150`\n\n3. 其他基础的准备工作和gitlab的准备工作一样\n\n4. 安装 kubeadm，kubelet，kubectl\n\n    ```shell\n    # 安装系统工具\n    apt-get update && apt-get install -y apt-transport-https\n\n    # 安装 GPG 证书\n    curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -\n\n    # 写入软件源；注意：我们用系统代号为 bionic，但目前阿里云不支持，所以沿用 16.04 的 xenial\n    cat << EOF >/etc/apt/sources.list.d/kubernetes.list\n    > deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\n    > EOF\n\n    # 安装\n    apt-get update && apt-get install -y kubelet kubeadm kubectl\n    ```\n\n    执行结束后,在最后可以看到一些版本号信息\n\n    ```shell\n    Setting up kubelet (1.15.0-00) ...\n    Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /lib/systemd/system/kubelet.service.\n    Setting up kubectl (1.15.0-00) ...\n    Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n    Setting up kubeadm (1.15.0-00) ...\n    ```\n\n    > 在这里要记住kubeadm的版本号为1.15.0-00,因为kubernetes的版本号要和他的一致\n\n5. 同步时间\n\n    设置时区\n\n    `$ dpkg-reconfigure tzdata`\n\n    选择 Asia（亚洲）-->选择 Shanghai（上海）\n\n    时间同步\n\n    ```shell\n    # 安装 ntpdate\n    apt-get install ntpdate\n\n    # 设置系统时间与网络时间同步（cn.pool.ntp.org 位于中国的公共 NTP 服务器）\n    ntpdate cn.pool.ntp.org\n\n    # 将系统时间写入硬件时间\n    hwclock --systohc\n    ```\n\n    如果在执行`apt-get install ntpdate`中遇到以下问题\n\n    ```shell\n    E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)\n    E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?\n    ```\n\n    可以通过下面的方式解决\n\n    ```shell\n    sudo rm /var/lib/apt/lists/lock\n    sudo rm /var/cache/apt/archives/lock\n    sudo apt update\n    ```\n\n    然后再执行`apt-get install ntpdate`\n\n    确认时间\n\n    `$ date`\n\n    输出以下格式就是正常的\n\n    `Sat Jun 22 12:23:16 CST 2019`\n\n6. 配置 IPVS\n\n    ```shell\n    # 安装系统工具\n    apt-get install -y ipset ipvsadm\n\n    # 配置并加载 IPVS 模块\n    mkdir -p /etc/sysconfig/modules/\n    vi /etc/sysconfig/modules/ipvs.modules\n\n    # 输入如下内容\n    #!/bin/bash\n    modprobe -- ip_vs\n    modprobe -- ip_vs_rr\n    modprobe -- ip_vs_wrr\n    modprobe -- ip_vs_sh\n    modprobe -- nf_conntrack_ipv4\n\n    # 执行脚本，注意：如果重启虚拟机则需要重新运行该脚本\n    chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4\n\n    # 执行脚本输出如下\n    ip_vs_sh               16384  0\n    ip_vs_wrr              16384  0\n    ip_vs_rr               16384  0\n    ip_vs                 147456  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr\n    nf_conntrack_ipv4      16384  3\n    nf_defrag_ipv4         16384  1 nf_conntrack_ipv4\n    nf_conntrack          131072  8 xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4,nf_nat,ipt_MASQUERADE,nf_nat_ipv4,nf_conntrack_netlink,ip_vs\n    libcrc32c              16384  4 nf_conntrack,nf_nat,raid456,ip_vs\n    ```\n\n    > 注意:每次重启虚拟机,主节点和从节点虚拟机都要重新执行`chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4`\n\n7. 配置内核参数\n\n    ```shell\n    # 配置参数\n    vi /etc/sysctl.d/k8s.conf\n\n    # 输入如下内容\n    net.bridge.bridge-nf-call-ip6tables = 1\n    net.bridge.bridge-nf-call-iptables = 1\n    net.ipv4.ip_nonlocal_bind = 1\n    net.ipv4.ip_forward = 1\n    vm.swappiness=0\n\n    # 应用参数\n    sysctl --system\n\n    # 应用参数输出如下（找到 Applying /etc/sysctl.d/k8s.conf 开头的日志）\n    * Applying /etc/sysctl.d/10-console-messages.conf ...\n    kernel.printk = 4 4 1 7\n    * Applying /etc/sysctl.d/10-ipv6-privacy.conf ...\n    * Applying /etc/sysctl.d/10-kernel-hardening.conf ...\n    kernel.kptr_restrict = 1\n    * Applying /etc/sysctl.d/10-link-restrictions.conf ...\n    fs.protected_hardlinks = 1\n    fs.protected_symlinks = 1\n    * Applying /etc/sysctl.d/10-lxd-inotify.conf ...\n    fs.inotify.max_user_instances = 1024\n    * Applying /etc/sysctl.d/10-magic-sysrq.conf ...\n    kernel.sysrq = 176\n    * Applying /etc/sysctl.d/10-network-security.conf ...\n    net.ipv4.conf.default.rp_filter = 1\n    net.ipv4.conf.all.rp_filter = 1\n    net.ipv4.tcp_syncookies = 1\n    * Applying /etc/sysctl.d/10-ptrace.conf ...\n    kernel.yama.ptrace_scope = 1\n    * Applying /etc/sysctl.d/10-zeropage.conf ...\n    vm.mmap_min_addr = 65536\n    * Applying /usr/lib/sysctl.d/50-default.conf ...\n    net.ipv4.conf.all.promote_secondaries = 1\n    net.core.default_qdisc = fq_codel\n    * Applying /etc/sysctl.d/99-sysctl.conf ...\n    * Applying /etc/sysctl.d/k8s.conf ...\n    net.bridge.bridge-nf-call-ip6tables = 1\n    net.bridge.bridge-nf-call-iptables = 1\n    net.ipv4.ip_nonlocal_bind = 1\n    net.ipv4.ip_forward = 1\n    vm.swappiness = 0\n    * Applying /etc/sysctl.conf ...\n    ```\n\n8. 至此,基础的kubernetes镜像已经做好,先做个快照,接下来链接克隆3台机器,一个为master节点机器,两个node节点机器\n\n#### Kubernetes集群的搭建(在master机器上操作)\n\n1. 先对3台虚拟机进行基础配置,注意就是修改一下静态ip和域名\n\n    master:192.168.12.151  k8s-master.hui.com\n    node1: 192.168.12.152  k8s-node1.hui.com\n    node2: 192.168.12.153  k8s-node2.hui.com\n\n2. 在master节点上配置kubeadm\n\n    参考网址:\n    https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE-kubeadm.html\n\n    在/usr/local下创建一个名为kubernetes新的文件夹\n\n    ```shell\n    mkdir -p /usr/local/kubernetes\n    cd /usr/local/kubernetes\n    ```\n\n3. 创建并修改配置\n\n    ```shell\n    # 导出配置文件\n    kubeadm config print init-defaults --kubeconfig ClusterConfiguration > kubeadm.yml\n    ```\n\n    这步执行结束后会在/usr/local/kubernetes文件夹下得到一个kubeadm.yml配置文件\n\n    修改配置文件的一些参数:\n\n    1)`advertiseAddress: 1.2.3.4`,将ip地址修改为本机ip地址\n    修改结果:`advertiseAddress: 192.168.12.151`\n\n    2)将`imageRepository: k8s.gcr.io`修改为`imageRepository: registry.aliyuncs.com/google_containers`\n\n    3)将`kubernetesVersion: v1.14.0`的版本改成和基础配置里的`kubeadm (1.15.0-00)`的版本一样,修改结果为`kubernetesVersion: v1.15.0`\n\n    4)添加Calico网段,在dnsDomain和serviceSubnet之间添加podSubnet: \"10.244.0.0/16\"具体如下:\n\n    ```shell\n    dnsDomain: cluster.local\n    # 配置成 Calico 的默认网段\n    podSubnet: \"10.244.0.0/16\"\n    serviceSubnet: 10.96.0.0/12\n    ```\n\n    5)在最后添加开启 IPVS 模式\n\n    ```shell\n    ---\n    # 开启 IPVS 模式\n    apiVersion: kubeproxy.config.k8s.io/v1alpha1\n    kind: KubeProxyConfiguration\n    featureGates:\n    SupportIPVSProxyMode: true\n    mode: ipvs\n    ```\n\n4. 查看和拉取镜像\n\n    ```shell\n    # 查看所需镜像列表\n    kubeadm config images list --config kubeadm.yml\n    # 拉取镜像\n    kubeadm config images pull --config kubeadm.yml\n    ```\n\n#### 使用 kubeadm 搭建 kubernetes 集群\n\n> 除了将node节点加入master的一条命令外,其他都在master节点上执行\n\n参考链接:\nhttps://funtl.com/zh/service-mesh-kubernetes/%E4%BD%BF%E7%94%A8-kubeadm.html\n\n安装 kubernetes 主节点\n\n`kubeadm init --config=kubeadm.yml --experimental-upload-certs | tee kubeadm-init.log`\n\n成功后会看到以下内容\n\n```shell\nYour Kubernetes control-plane has initialized successfully!\n\nTo start using your cluster, you need to run the following as a regular user:\n\nmkdir -p $HOME/.kube\nsudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nsudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:\nhttps://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can join any number of worker nodes by running the following on each as root:\n\nkubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0\n```\n\n按照以上内容的提示信息配置 kubectl\n\n```shell\nmkdir -p $HOME/.kube\ncp -i /etc/kubernetes/admin.conf $HOME/.kube/config\nchown $(id -u):$(id -g) $HOME/.kube/config\n```\n\n验证是否成功\n\n```shell\nkubectl get node\n\n# 能够打印出节点信息即表示成功\nNAME                STATUS     ROLES    AGE     VERSION\nkubernetes-master   NotReady   master   8m40s   v1.14.1\n```\n\n> 接下来的一步要在node节点的机器上操作.执行以上提示信息的最后一句将node节点的机器加入到master节点中\n\n```shell\nkubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0\n```\n\n验证是否加入成功\n\n```shell\nkubectl get node\n\n# 能够打印出节点信息即表示成功\nNAME        STATUS     ROLES    AGE    VERSION\nk8s-base    NotReady   master   8m1s   v1.15.0\nk8s-node1   NotReady   <none>   56s    v1.15.0\nk8s-node2   NotReady   <none>   23s    v1.15.0\n```\n\n#### 配置网络\n\n参考网址:\nhttps://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C.html\n\n安装网络插件 Calico\n\n```shell\n# 在 Master 节点操作即可\nkubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml\n```\n\n确认安装是否成功\n\n```shell\nwatch kubectl get pods --all-namespaces\n\n# 需要等待所有状态为 Running，注意时间可能较久，3 - 5 分钟的样子\nEvery 2.0s: kubectl get pods --all-namespaces                                                                                                    kubernetes-master: Fri May 10 18:16:51 2019\n\nNAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE\nkube-system   calico-kube-controllers-8646dd497f-g2lln    1/1     Running   0          50m\nkube-system   calico-node-8jrtp                           1/1     Running   0          50m\nkube-system   coredns-8686dcc4fd-mhwfn                    1/1     Running   0          51m\nkube-system   coredns-8686dcc4fd-xsxwk                    1/1     Running   0          51m\nkube-system   etcd-kubernetes-master                      1/1     Running   0          50m\nkube-system   kube-apiserver-kubernetes-master            1/1     Running   0          51m\nkube-system   kube-controller-manager-kubernetes-master   1/1     Running   0          51m\nkube-system   kube-proxy-p8mdw                            1/1     Running   0          51m\nkube-system   kube-scheduler-kubernetes-master            1/1     Running   0          51m\n```\n\n#### 配置Calico.yaml文件\n\n1. 下载Calico.yaml\n\n    在/usr/local/kubernetes下执行\n\n    `wget https://docs.projectcalico.org/V3.7/manifests/calico.yaml`\n\n    查看该文件夹下有没有calico.yaml的文件\n\n    然后编辑该文件`vi calico.yaml`.文件较长,可以在编辑文件里按`\\CALICO_IPV4POOL_CIDR`,然后按确定键直接锁定位置\n\n    按i编辑,将value的值该为:`10.244.0.0/16`\n\n#### 最后注意事项\n\n> 每次重启虚拟机,主节点和从节点虚拟机都要重新执行`chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4`\n\n至此基本环境已部署完毕\n\n\n","slug":"2019-06-20-Jenkins部署项目-环境搭建","published":1,"updated":"2020-02-09T13:54:50.159Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vn002954tnv77xfqtf","content":"<center><font size=\"4\" color=\"red\">持续集成，持续交付第一章-环境搭建</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Jenkins部署项目-环境搭建\"><a href=\"#Jenkins部署项目-环境搭建\" class=\"headerlink\" title=\"Jenkins部署项目-环境搭建\"></a>Jenkins部署项目-环境搭建</h1><h2 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h2><p>gitlab             域名:gitlab.hui.com      ip:192.168.12.140    配置:1-2-2<br>mysql              域名:mysql.hui.com       ip:192.168.12.141    配置:1-1-1<br>nexus              域名:nexus.hui.com       ip:192.168.12.142    配置:1-1-2<br>redis              域名:redis.hui.com       ip:192.168.12.143    配置:1-1-1<br>jenkins            域名:jenkins.hui.com     ip:192.168.12.144    配置:1-2-2<br>harbor             域名:harbor.hui.com      ip:192.168.12.145    配置:2-2-4   磁盘：40G<br>JDK&amp;Maven&amp;tomcat   域名:utils.hui.com       ip:192.168.12.146    配置:1-2-2<br>k8s-base           域名:k8s-base.hui.com    ip:192.168.12.150    配置:1-2-2   k8s的基础镜像<br>k8s-master         域名:k8s-master.hui.com  ip:192.168.12.151    配置:1-2-2   主节点<br>k8s-node1          域名:k8s-node1.hui.com   ip:192.168.12.152    配置:1-2-2   从节点<br>k8s-node2          域名:k8s-node2.hui.com   ip:192.168.12.153    配置:1-2-2   从节点<br>project            域名:myproject.hui.com   ip:192.168.12.160 </p>\n<p>配置讲解:</p>\n<p>1-1-1:处理器数量为1,每个处理器的内核数量为1,内存为1.</p>\n<p>其中的硬盘不做特殊说明，默认使用的是20GB.</p>\n<p>以上配置是要求的最低配置,如果在使用过程中不够用时,需要再加</p>\n<p>该配置需要的最低核心数为10,需要的最低内存数量为18</p>\n<h2 id=\"准备条件\"><a href=\"#准备条件\" class=\"headerlink\" title=\"准备条件\"></a>准备条件</h2><p>VMware</p>\n<p>基础的base虚拟机一台.<br>要求:虚拟机里有ssh,docker,docker-compose.其中docker-compose的版本最低要求1.8以上.</p>\n<p>自制的一个网卡,网卡自制方式:</p>\n<p>在VWware里选择<code>编辑</code>–&gt;<code>虚拟网络编辑器</code>–&gt;<code>更改设置</code></p>\n<ol>\n<li><p>将已经存在的网卡全部改为”仅主机模式”</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/01.png\" alt></p>\n</li>\n<li><p>添加网络–&gt;修改ip地址–&gt;改为NAT模式–&gt;应用–&gt;确定</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/02.png\" alt></p>\n</li>\n<li><p>在虚拟机里新建一个文件夹,把基础的base虚拟机(以下简称base)放进去,并将网卡修改为新设置的网卡</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/03.png\" alt></p>\n</li>\n<li><p>初始账号,密码和邮箱</p>\n<p> 账号:hui<br> 密码:hui123456<br> 邮箱:<a href=\"mailto:hui@hui.hui\" target=\"_blank\" rel=\"noopener\">hui@hui.hui</a></p>\n</li>\n</ol>\n<h2 id=\"GitLab环境的搭建\"><a href=\"#GitLab环境的搭建\" class=\"headerlink\" title=\"GitLab环境的搭建\"></a>GitLab环境的搭建</h2><h4 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h4><ol>\n<li><p>右键base–&gt;管理–&gt;克隆–&gt;一路下一步(使用链接克隆)–&gt;改个名称和存储位置</p>\n</li>\n<li><p>编辑虚拟机配置–&gt;配置改为1-1-2.查看网卡是否是自己定义的网卡,不是就修改为自己设置的</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/04.png\" alt></p>\n</li>\n<li><p>修改本机(个人PC机器)DNS服务器地址为<code>114.114.114.114</code> <code>114.114.115.115</code></p>\n</li>\n<li><p>启动虚拟机</p>\n</li>\n<li><p>配置静态ip地址</p>\n<p> <code>vi /etc/netplan/50-cloud-init.yaml</code></p>\n<p> 如果出现以下信息,按”e”键就行了</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/05.png\" alt></p>\n<p> 修改如下:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/06.png\" alt></p>\n<p> 执行<code>netplan apply</code>使文件生效</p>\n</li>\n<li><p>执行<code>ping www.baidu.com</code>验证网络,如果没有问题,就使用本机的XShll链接虚拟机</p>\n</li>\n<li><p>修改服务器名称为gitlab</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname gitlab</span><br></pre></td></tr></table></figure>\n<p> 设置结束后还需要设置<code>preserve-hostname:true</code>.进入设置文件<code>vi /etc/cloud/cloud.cfg</code>设置即可</p>\n<p> reboot重启电脑</p>\n</li>\n<li><p>将主机与域名配在一起.因为名称虚拟机名称改为了gitlab,所以可以通过以下配置,将ip地址与域名gitlab.hui.com联系到一起</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vi /etc/hosts</span><br></pre></td></tr></table></figure>\n<p> 配置如下:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/07.png\" alt></p>\n</li>\n<li><p>本机下载SwitchHosts.作用是在Windows机器上使用域名访问虚拟机.其是解决多个ip不污染系统的host文件.</p>\n<p> 修改权限:找到C:\\Windows\\System32\\drivers\\etc下的hosts文件.右键–&gt;属性–&gt;去掉”只读”,并将”安全”里的所有权限都打开</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/08.png\" alt></p>\n<p> 然后以管理员的身份运行SwitchHosts!.exe.新增一个rules–&gt;填入一个名称</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/09.jpg\" alt></p>\n<p> 配置(ip与域名间有两个空格),并打开开关</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/10.jpg\" alt></p>\n</li>\n</ol>\n<h4 id=\"安装gitlab\"><a href=\"#安装gitlab\" class=\"headerlink\" title=\"安装gitlab\"></a>安装gitlab</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gitlab</span><br><span class=\"line\"></span><br><span class=\"line\">cd gitlab</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code> 来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a></p>\n<p> docker-compose.yml配置文件.其中将hostname改为<code>hostname: &#39;gitlab.hui.com&#39;</code>,将external_url改为<code>external_url &#39;http://gitlab.hui.com:8080&#39;</code></p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: '3'</span><br><span class=\"line\">services:</span><br><span class=\"line\">    web:</span><br><span class=\"line\">    image: 'twang2218/gitlab-ce-zh'</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    hostname: 'gitlab.hui.com'</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">        TZ: 'Asia/Shanghai'</span><br><span class=\"line\">        GITLAB_OMNIBUS_CONFIG: |</span><br><span class=\"line\">        external_url 'http://gitlab.hui.com:8080'</span><br><span class=\"line\">        gitlab_rails['gitlab_shell_ssh_port'] = 2222</span><br><span class=\"line\">        unicorn['port'] = 8888</span><br><span class=\"line\">        nginx['listen_port'] = 8080</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - '8080:8080'</span><br><span class=\"line\">      - '8443:443'</span><br><span class=\"line\">      - '2222:22'</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./config:/etc/gitlab</span><br><span class=\"line\">      - ./data:/var/opt/gitlab</span><br><span class=\"line\">      - ./logs:/var/log/gitlabi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<p> 镜像拉取结束后,使用<code>docker-compose ps</code>查看进程直到state的starting消失后gitlab才启动</p>\n<p> 如果等的有点急,可以通过<code>docker logs -f 容器名称</code>来查看具体进程</p>\n</li>\n<li><p>设置gitlab的账号,密码,邮箱.开始访问gitlab.hui.com:8080</p>\n<p> 账号:hui<br> 密码:hui123456<br> 邮箱:<a href=\"mailto:hui@hui.hui\" target=\"_blank\" rel=\"noopener\">hui@hui.hui</a></p>\n<p> 第一步:设置密码界面,将以上密码填入就行</p>\n<p> 第二步:注册.将以上账号,密码,邮箱依次填入</p>\n</li>\n<li><p>汉化gitlab</p>\n<p> 右键个人小头标–&gt;settings–&gt;preferences–&gt;language</p>\n<p> 由于我的这个镜像是已经汉化过的,所以不用汉化了</p>\n</li>\n<li><p>创建组</p>\n<p> 点击左上角的gitlab–&gt;创建群组</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/11.jpg\" alt></p>\n</li>\n<li><p>创建项目</p>\n<p> 在已经创建的群组里创建项目</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/12.jpg\" alt></p>\n</li>\n<li><p>添加SSH公钥</p>\n<p> 项目创建成功后,会让添加SSH公钥</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/13.png\" alt></p>\n<p> 点击<code>新建SSH公钥</code>,然后点击<code>generate one</code></p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/14.png\" alt></p>\n<p> 选择该页面中的<code>ssh-keygen -t rsa -C &quot;your.email@example.com&quot; -b 4096</code>命令来在本机上生成公钥</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C \"hui@hui.hui\" -b 4096</span><br></pre></td></tr></table></figure>\n<p> 执行过程如下图</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/15.jpg\" alt></p>\n<p> 复制公钥,粘贴到gitlab的Settings–&gt;SSH中</p>\n<p> 添加全局设置</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --global user.name \"hui\"</span><br><span class=\"line\"><span class=\"meta\">$</span> git config --global user.email \"hui@hui.hui\"</span><br></pre></td></tr></table></figure>\n<p> gitlab配置完成,接下来是整合Jenkins的过程了</p>\n</li>\n</ol>\n<h2 id=\"MySql环境的搭建\"><a href=\"#MySql环境的搭建\" class=\"headerlink\" title=\"MySql环境的搭建\"></a>MySql环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname mysql</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir mysql</span><br><span class=\"line\"></span><br><span class=\"line\">cd mysql</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> docker-compose.yml来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装MySql8.x即可.配置文件如下</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">db:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    environment:</span></span><br><span class=\"line\"><span class=\"attr\">    MYSQL_ROOT_PASSWORD:</span> <span class=\"number\">123456</span></span><br><span class=\"line\"><span class=\"attr\">    command:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-default-authentication-plugin=mysql_native_password</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-character-set-server=utf8mb4</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-collation-server=utf8mb4_general_ci</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-explicit_defaults_for_timestamp=true</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-lower_case_table_names=1</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">3306</span><span class=\"string\">:3306</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./data:/var/lib/mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">adminer:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">adminer</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8080</span><span class=\"string\">:8080</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mysql的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>使用<code>http://mysql.hui.com:8080/</code>在本机访问mysql</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/16.png\" alt></p>\n<p> 用户名:root<br> 密码:123456</p>\n<p> 登录进去后可以创建数据库,导入.sql的文件以及导出</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/17.png\" alt></p>\n</li>\n</ol>\n<h2 id=\"Nexus环境的搭建\"><a href=\"#Nexus环境的搭建\" class=\"headerlink\" title=\"Nexus环境的搭建\"></a>Nexus环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname nexus</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Nexus\"><a href=\"#安装Nexus\" class=\"headerlink\" title=\"安装Nexus\"></a>安装Nexus</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir nexus</span><br><span class=\"line\"></span><br><span class=\"line\">cd nexus</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code>来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装Nexus.配置文件如下</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">nexus:</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">sonatype/nexus3</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">nexus</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8081</span><span class=\"string\">:8081</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"attr\">      - data:</span><span class=\"string\">/nexus-data</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>nexus的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>使用<code>http://nexus.hui.com:8081/</code>访问,登录</p>\n<p> 初始账号密码:</p>\n<p> 账号:admin<br> 密码:admin123</p>\n<blockquote>\n<p>注意事项:如果需要本地运行,本地需要安装maven,tomcat.</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"Redis环境的搭建\"><a href=\"#Redis环境的搭建\" class=\"headerlink\" title=\"Redis环境的搭建\"></a>Redis环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname redis</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir redis</span><br><span class=\"line\"></span><br><span class=\"line\">cd redis</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code>来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装redis.配置文件如下</p>\n<p> 将<code>container_name: redis-master</code>改为<code>container_name: redis</code>.来源中的redis是集群,我们没有用集群,所以就不需要起名带master了</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">master:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">6379</span><span class=\"string\">:6379</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>redis的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>redis似乎没有可以访问的地址</p>\n</li>\n</ol>\n<h2 id=\"Jenkins环境的搭建\"><a href=\"#Jenkins环境的搭建\" class=\"headerlink\" title=\"Jenkins环境的搭建\"></a>Jenkins环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname jenkins</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Jenkins\"><a href=\"#安装Jenkins\" class=\"headerlink\" title=\"安装Jenkins\"></a>安装Jenkins</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">cd jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code>来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装Jenkins.配置文件如下</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">jenkins:</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">jenkinsci/jenkins</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">jenkins</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8080</span><span class=\"string\">:8080</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">50000</span><span class=\"string\">:50000</span></span><br><span class=\"line\"><span class=\"attr\">    environment:</span></span><br><span class=\"line\"><span class=\"attr\">    TZ:</span> <span class=\"string\">Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"attr\">      - data:</span><span class=\"string\">/var/jenkins_home</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>jenkins的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>使用<code>http://jenkins.hui.com:8080</code>访问jenkins</p>\n</li>\n</ol>\n<h4 id=\"jenkins的设置\"><a href=\"#jenkins的设置\" class=\"headerlink\" title=\"jenkins的设置\"></a>jenkins的设置</h4><ol>\n<li><p>设置密钥:提示给出的路径我没有找到.可以用一下简单的方法获取密钥</p>\n<p> 在/var/local/jenkins目录下执行<code>docker logs -f jenkins</code>.以下标注的地方就是密钥</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/18.png\" alt></p>\n</li>\n<li><p>选择插件安装</p>\n<p> 随便选择一个.我这里选择了第二个.</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/19.jpg\" alt></p>\n<p> 选择好后直接点击install安装.不用管是否安装上,先让其安装完,然后把没有装上的插件拍照截图,等进入系统后再逐个安装.我的安装情况如下:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/20.jpg\" alt></p>\n<p> 点击Continue</p>\n</li>\n<li><p>创建第一个管理员用户</p>\n<p> 依然使用同一套账号密码邮箱:</p>\n<p> 账号:hui<br> 密码:hui123456<br> 邮箱:<a href=\"mailto:hui@hui.hui\" target=\"_blank\" rel=\"noopener\">hui@hui.hui</a></p>\n</li>\n<li><p>示例配置</p>\n<p> 我这里只是将其配置为<code>http://jenkins.hui.com:8080/jenkins</code></p>\n<p> 接下来一路确定就可以了</p>\n</li>\n<li><p>配置镜像加速</p>\n<p> 系统管理–&gt;插件管理–&gt;高级(Advanced)–&gt;升级站点</p>\n<p> 参考网站:<a href=\"https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/</a></p>\n<p> 配置的最终URL:<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/update-center.json</code></p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/21.png\" alt></p>\n<p> 点击提交–&gt;点击立即获取</p>\n</li>\n<li><p>汉化</p>\n<p> 系统管理–&gt;插件管理–&gt;可选插件(Available)–&gt;过滤,搜”Locale”–&gt;选中后点击直接安装</p>\n<blockquote>\n<p>其实这里需要装两个插件:一个是Locale,另一个是Localization:Chinese(simplified).但是Localization:Chinese(simplified)在最初的时候给我安装过了,所以这里不用再装了</p>\n</blockquote>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/22.png\" alt></p>\n<p> 汉化过程:</p>\n<p> 系统管理–&gt;系统设置–&gt;Locale–&gt;Default language 填入 <code>zh-CN</code>,下面那个对号不用打勾</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/23.png\" alt></p>\n<p> 应用–&gt;保存</p>\n</li>\n<li><p>几个必装的插件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Publish Over SSH</span><br><span class=\"line\">Maven Integration</span><br><span class=\"line\">Extensible Choice Parameter</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>逐个下载插件</p>\n<p> 这里介绍两种下载插件的方法:</p>\n<p> 第一种下载插件的方法:</p>\n<p> 系统管理–&gt;插件管理–&gt;可选插件(Available)–&gt;过滤,比对着前面没有下载上的插件逐个搜索,搜到的插件前面先打上对号,不安装,等全部找齐后,点击<code>下载待重启后安装</code></p>\n<p> 待全部下载结束后.回到虚拟机里执行<code>docker-compose restart</code>重启jenkins</p>\n<p> 第二种下载插件的方法:</p>\n<p> 进入官网:<code>https://plugins.jenkins.io/</code>,输入要下载的插件名称搜索</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/24.jpg\" alt></p>\n<p> 点击某个插件页面进去,然后点击右上角的Archives,选择相应的版本下载.格式是.hpi</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/25.png\" alt></p>\n<p> 下载好后,进入jenkins中.系统管理–&gt;插件管理–&gt;高级–&gt;上传插件–&gt;选择下载的.hpi文件–&gt;上传–&gt;返回首页</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/26.jpg\" alt></p>\n</li>\n</ol>\n<h2 id=\"Harbor环境的搭建\"><a href=\"#Harbor环境的搭建\" class=\"headerlink\" title=\"Harbor环境的搭建\"></a>Harbor环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname Harbor</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Harbor\"><a href=\"#安装Harbor\" class=\"headerlink\" title=\"安装Harbor\"></a>安装Harbor</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载harbor，采用离线的方式安装</p>\n<p> 下载地址：<code>https://github.com/goharbor/harbor/releases</code>,下载离线版的：<code>Harbor offline installer</code></p>\n</li>\n<li><p>将harbor传到虚拟机中</p>\n<p> 在本机切换到harbor-offline-installer-v1.8.1.tgz的下载目录下,执行</p>\n<p> <code>scp harbor-offline-installer-v1.8.1.tgz root@192.168.12.145:/usr/local/</code></p>\n<p> 在虚拟机解压harbor-offline-installer-v1.8.1.tgz</p>\n<p> <code>tar -xzvf harbor-offline-installer-v1.8.1.tgz</code></p>\n<p> 将压缩包文件删除</p>\n<p> <code>rm -fr harbor-offline-installer-v1.8.1.tgz</code></p>\n</li>\n<li><p>安装harbor</p>\n<p> 进入解压好的harbor目录</p>\n<p> <code>cd harbor</code></p>\n<p> 修改harbor.yml</p>\n<p> <code>vi harbor.yml</code></p>\n<p> 将<code>hostname: reg.mydomain.com</code>改为<code>hostname: harbor.hui.com</code></p>\n<p> 解决无法登录问题:默认登录的网址是<code>https://harbor.hui.com</code>.是<code>https</code>而不是<code>http</code>.这样就出现了找不到的情况.解决方案</p>\n<p> 先执行以下:</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class=\"line\">&#123; \"insecure-registries\":[\"harbor.hui.com\"] &#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p> 再执行<code>./install.sh</code>脚本开始安装</p>\n<p> 使用<code>http://harbor.hui.com</code>来访问harbor</p>\n<p> 初始用户名密码:</p>\n<p> 用户名:admin<br> 密码:Harbor12345</p>\n</li>\n</ol>\n<h4 id=\"push和pull\"><a href=\"#push和pull\" class=\"headerlink\" title=\"push和pull\"></a>push和pull</h4><ol>\n<li><p>在本机haibor网页新建一个项目,选择公开即可</p>\n</li>\n<li><p>在虚拟机中登录harbor</p>\n<p> <code>docker login harbor.hui.com</code></p>\n<p> 账号:admin<br> 密码:Harbor12345</p>\n</li>\n<li><p>push镜像</p>\n<p> push镜像的意思是把docker里的镜像push到harbor里,我这里下载了一个hello-world的镜像用于测试</p>\n<p> <code>docker pull hello-world</code></p>\n<p> 以下是官网提供的push方式:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/27.png\" alt></p>\n<p> 例子:</p>\n<p> 先给镜像重新一个名称:</p>\n<p> <code>docker tag hello-world:latest harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> 然后push镜像</p>\n<p> <code>docker push harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> 在本机刷新以下页面,可以看到harbor里已经有了myproject/hello-world:v1.0.0</p>\n</li>\n<li><p>pull镜像</p>\n<p> pull镜像是把harbor里的镜像拉到docker里</p>\n<p> 测试步骤:先把docker里的hello-world镜像删除</p>\n<p> <code>docker rmi hello-world:latest</code><br> <code>docker rmi harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> pull镜像</p>\n<p> <code>docker pull harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> 如果docker images可以看到刚刚拉取的镜像,就说明没有问题了</p>\n</li>\n</ol>\n<h2 id=\"Kubernetes的搭建\"><a href=\"#Kubernetes的搭建\" class=\"headerlink\" title=\"Kubernetes的搭建\"></a>Kubernetes的搭建</h2><p>Kubernetes使用一主两从的方式搭建</p>\n<p>首先先完整克隆一个基础的Kubernetes虚拟机,然后在这台机器上做一些基础配置,这些配置是主节点和从节点的机器都要配置的.基础配置后,克隆时就不需要每台都配置了.</p>\n<h4 id=\"Kubernetes的基础配置\"><a href=\"#Kubernetes的基础配置\" class=\"headerlink\" title=\"Kubernetes的基础配置\"></a>Kubernetes的基础配置</h4><p>参考网址:<br><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4.html</a></p>\n<ol>\n<li><p>检查docker,docker-compose,交换空间.我这里用的基础镜像已经全部配过了,所以不会有大的问题,不过还是要检查一下.(基础虚拟机镜像的配置参考我的博客虚拟机那部分)</p>\n</li>\n<li><p>基础镜像ip我使用的是<code>192.168.12.150</code></p>\n</li>\n<li><p>其他基础的准备工作和gitlab的准备工作一样</p>\n</li>\n<li><p>安装 kubeadm，kubelet，kubectl</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装系统工具</span><br><span class=\"line\">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 GPG 证书</span><br><span class=\"line\">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 写入软件源；注意：我们用系统代号为 bionic，但目前阿里云不支持，所以沿用 16.04 的 xenial</span><br><span class=\"line\">cat &lt;&lt; EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 安装</span><br><span class=\"line\">apt-get update &amp;&amp; apt-get install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure>\n<p> 执行结束后,在最后可以看到一些版本号信息</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Setting up kubelet (1.15.0-00) ...</span><br><span class=\"line\">Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /lib/systemd/system/kubelet.service.</span><br><span class=\"line\">Setting up kubectl (1.15.0-00) ...</span><br><span class=\"line\">Processing triggers for man-db (2.8.3-2ubuntu0.1) ...</span><br><span class=\"line\">Setting up kubeadm (1.15.0-00) ...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在这里要记住kubeadm的版本号为1.15.0-00,因为kubernetes的版本号要和他的一致</p>\n</blockquote>\n</li>\n<li><p>同步时间</p>\n<p> 设置时区</p>\n<p> <code>$ dpkg-reconfigure tzdata</code></p>\n<p> 选择 Asia（亚洲）–&gt;选择 Shanghai（上海）</p>\n<p> 时间同步</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装 ntpdate</span><br><span class=\"line\">apt-get install ntpdate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 设置系统时间与网络时间同步（cn.pool.ntp.org 位于中国的公共 NTP 服务器）</span><br><span class=\"line\">ntpdate cn.pool.ntp.org</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 将系统时间写入硬件时间</span><br><span class=\"line\">hwclock --systohc</span><br></pre></td></tr></table></figure>\n<p> 如果在执行<code>apt-get install ntpdate</code>中遇到以下问题</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)</span><br><span class=\"line\">E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</span><br></pre></td></tr></table></figure>\n<p> 可以通过下面的方式解决</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm /var/lib/apt/lists/lock</span><br><span class=\"line\">sudo rm /var/cache/apt/archives/lock</span><br><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<p> 然后再执行<code>apt-get install ntpdate</code></p>\n<p> 确认时间</p>\n<p> <code>$ date</code></p>\n<p> 输出以下格式就是正常的</p>\n<p> <code>Sat Jun 22 12:23:16 CST 2019</code></p>\n</li>\n<li><p>配置 IPVS</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装系统工具</span><br><span class=\"line\">apt-get install -y ipset ipvsadm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 配置并加载 IPVS 模块</span><br><span class=\"line\">mkdir -p /etc/sysconfig/modules/</span><br><span class=\"line\">vi /etc/sysconfig/modules/ipvs.modules</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 输入如下内容</span><br><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- nf_conntrack_ipv4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 执行脚本，注意：如果重启虚拟机则需要重新运行该脚本</span><br><span class=\"line\">chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 执行脚本输出如下</span><br><span class=\"line\">ip_vs_sh               16384  0</span><br><span class=\"line\">ip_vs_wrr              16384  0</span><br><span class=\"line\">ip_vs_rr               16384  0</span><br><span class=\"line\">ip_vs                 147456  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class=\"line\">nf_conntrack_ipv4      16384  3</span><br><span class=\"line\">nf_defrag_ipv4         16384  1 nf_conntrack_ipv4</span><br><span class=\"line\">nf_conntrack          131072  8 xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4,nf_nat,ipt_MASQUERADE,nf_nat_ipv4,nf_conntrack_netlink,ip_vs</span><br><span class=\"line\">libcrc32c              16384  4 nf_conntrack,nf_nat,raid456,ip_vs</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意:每次重启虚拟机,主节点和从节点虚拟机都要重新执行<code>chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code></p>\n</blockquote>\n</li>\n<li><p>配置内核参数</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 配置参数</span><br><span class=\"line\">vi /etc/sysctl.d/k8s.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 输入如下内容</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_nonlocal_bind = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 应用参数</span><br><span class=\"line\">sysctl --system</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 应用参数输出如下（找到 Applying /etc/sysctl.d/k8s.conf 开头的日志）</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-console-messages.conf ...</span><br><span class=\"line\">kernel.printk = 4 4 1 7</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-ipv6-privacy.conf ...</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-kernel-hardening.conf ...</span><br><span class=\"line\">kernel.kptr_restrict = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-link-restrictions.conf ...</span><br><span class=\"line\">fs.protected_hardlinks = 1</span><br><span class=\"line\">fs.protected_symlinks = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-lxd-inotify.conf ...</span><br><span class=\"line\">fs.inotify.max_user_instances = 1024</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-magic-sysrq.conf ...</span><br><span class=\"line\">kernel.sysrq = 176</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-network-security.conf ...</span><br><span class=\"line\">net.ipv4.conf.default.rp_filter = 1</span><br><span class=\"line\">net.ipv4.conf.all.rp_filter = 1</span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-ptrace.conf ...</span><br><span class=\"line\">kernel.yama.ptrace_scope = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-zeropage.conf ...</span><br><span class=\"line\">vm.mmap_min_addr = 65536</span><br><span class=\"line\">* Applying /usr/lib/sysctl.d/50-default.conf ...</span><br><span class=\"line\">net.ipv4.conf.all.promote_secondaries = 1</span><br><span class=\"line\">net.core.default_qdisc = fq_codel</span><br><span class=\"line\">* Applying /etc/sysctl.d/99-sysctl.conf ...</span><br><span class=\"line\">* Applying /etc/sysctl.d/k8s.conf ...</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_nonlocal_bind = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness = 0</span><br><span class=\"line\">* Applying /etc/sysctl.conf ...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>至此,基础的kubernetes镜像已经做好,先做个快照,接下来链接克隆3台机器,一个为master节点机器,两个node节点机器</p>\n</li>\n</ol>\n<h4 id=\"Kubernetes集群的搭建-在master机器上操作\"><a href=\"#Kubernetes集群的搭建-在master机器上操作\" class=\"headerlink\" title=\"Kubernetes集群的搭建(在master机器上操作)\"></a>Kubernetes集群的搭建(在master机器上操作)</h4><ol>\n<li><p>先对3台虚拟机进行基础配置,注意就是修改一下静态ip和域名</p>\n<p> master:192.168.12.151  k8s-master.hui.com<br> node1: 192.168.12.152  k8s-node1.hui.com<br> node2: 192.168.12.153  k8s-node2.hui.com</p>\n</li>\n<li><p>在master节点上配置kubeadm</p>\n<p> 参考网址:<br> <a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE-kubeadm.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE-kubeadm.html</a></p>\n<p> 在/usr/local下创建一个名为kubernetes新的文件夹</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /usr/local/kubernetes</span><br><span class=\"line\">cd /usr/local/kubernetes</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建并修改配置</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 导出配置文件</span><br><span class=\"line\">kubeadm config print init-defaults --kubeconfig ClusterConfiguration &gt; kubeadm.yml</span><br></pre></td></tr></table></figure>\n<p> 这步执行结束后会在/usr/local/kubernetes文件夹下得到一个kubeadm.yml配置文件</p>\n<p> 修改配置文件的一些参数:</p>\n<p> 1)<code>advertiseAddress: 1.2.3.4</code>,将ip地址修改为本机ip地址<br> 修改结果:<code>advertiseAddress: 192.168.12.151</code></p>\n<p> 2)将<code>imageRepository: k8s.gcr.io</code>修改为<code>imageRepository: registry.aliyuncs.com/google_containers</code></p>\n<p> 3)将<code>kubernetesVersion: v1.14.0</code>的版本改成和基础配置里的<code>kubeadm (1.15.0-00)</code>的版本一样,修改结果为<code>kubernetesVersion: v1.15.0</code></p>\n<p> 4)添加Calico网段,在dnsDomain和serviceSubnet之间添加podSubnet: “10.244.0.0/16”具体如下:</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnsDomain: cluster.local</span><br><span class=\"line\"><span class=\"meta\">#</span> 配置成 Calico 的默认网段</span><br><span class=\"line\">podSubnet: \"10.244.0.0/16\"</span><br><span class=\"line\">serviceSubnet: 10.96.0.0/12</span><br></pre></td></tr></table></figure>\n<p> 5)在最后添加开启 IPVS 模式</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"meta\">#</span> 开启 IPVS 模式</span><br><span class=\"line\">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class=\"line\">kind: KubeProxyConfiguration</span><br><span class=\"line\">featureGates:</span><br><span class=\"line\">SupportIPVSProxyMode: true</span><br><span class=\"line\">mode: ipvs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看和拉取镜像</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 查看所需镜像列表</span><br><span class=\"line\">kubeadm config images list --config kubeadm.yml</span><br><span class=\"line\"><span class=\"meta\">#</span> 拉取镜像</span><br><span class=\"line\">kubeadm config images pull --config kubeadm.yml</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"使用-kubeadm-搭建-kubernetes-集群\"><a href=\"#使用-kubeadm-搭建-kubernetes-集群\" class=\"headerlink\" title=\"使用 kubeadm 搭建 kubernetes 集群\"></a>使用 kubeadm 搭建 kubernetes 集群</h4><blockquote>\n<p>除了将node节点加入master的一条命令外,其他都在master节点上执行</p>\n</blockquote>\n<p>参考链接:<br><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E4%BD%BF%E7%94%A8-kubeadm.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E4%BD%BF%E7%94%A8-kubeadm.html</a></p>\n<p>安装 kubernetes 主节点</p>\n<p><code>kubeadm init --config=kubeadm.yml --experimental-upload-certs | tee kubeadm-init.log</code></p>\n<p>成功后会看到以下内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p $HOME/.kube</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class=\"line\">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:</span><br><span class=\"line\">https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0</span><br></pre></td></tr></table></figure>\n<p>按照以上内容的提示信息配置 kubectl</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p $HOME/.kube</span><br><span class=\"line\">cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class=\"line\">chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>\n<p>验证是否成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 能够打印出节点信息即表示成功</span><br><span class=\"line\">NAME                STATUS     ROLES    AGE     VERSION</span><br><span class=\"line\">kubernetes-master   NotReady   master   8m40s   v1.14.1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>接下来的一步要在node节点的机器上操作.执行以上提示信息的最后一句将node节点的机器加入到master节点中</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0</span><br></pre></td></tr></table></figure>\n<p>验证是否加入成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 能够打印出节点信息即表示成功</span><br><span class=\"line\">NAME        STATUS     ROLES    AGE    VERSION</span><br><span class=\"line\">k8s-base    NotReady   master   8m1s   v1.15.0</span><br><span class=\"line\">k8s-node1   NotReady   &lt;none&gt;   56s    v1.15.0</span><br><span class=\"line\">k8s-node2   NotReady   &lt;none&gt;   23s    v1.15.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置网络\"><a href=\"#配置网络\" class=\"headerlink\" title=\"配置网络\"></a>配置网络</h4><p>参考网址:<br><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C.html</a></p>\n<p>安装网络插件 Calico</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 在 Master 节点操作即可</span><br><span class=\"line\">kubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml</span><br></pre></td></tr></table></figure>\n<p>确认安装是否成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch kubectl get pods --all-namespaces</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 需要等待所有状态为 Running，注意时间可能较久，3 - 5 分钟的样子</span><br><span class=\"line\">Every 2.0s: kubectl get pods --all-namespaces                                                                                                    kubernetes-master: Fri May 10 18:16:51 2019</span><br><span class=\"line\"></span><br><span class=\"line\">NAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">kube-system   calico-kube-controllers-8646dd497f-g2lln    1/1     Running   0          50m</span><br><span class=\"line\">kube-system   calico-node-8jrtp                           1/1     Running   0          50m</span><br><span class=\"line\">kube-system   coredns-8686dcc4fd-mhwfn                    1/1     Running   0          51m</span><br><span class=\"line\">kube-system   coredns-8686dcc4fd-xsxwk                    1/1     Running   0          51m</span><br><span class=\"line\">kube-system   etcd-kubernetes-master                      1/1     Running   0          50m</span><br><span class=\"line\">kube-system   kube-apiserver-kubernetes-master            1/1     Running   0          51m</span><br><span class=\"line\">kube-system   kube-controller-manager-kubernetes-master   1/1     Running   0          51m</span><br><span class=\"line\">kube-system   kube-proxy-p8mdw                            1/1     Running   0          51m</span><br><span class=\"line\">kube-system   kube-scheduler-kubernetes-master            1/1     Running   0          51m</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置Calico-yaml文件\"><a href=\"#配置Calico-yaml文件\" class=\"headerlink\" title=\"配置Calico.yaml文件\"></a>配置Calico.yaml文件</h4><ol>\n<li><p>下载Calico.yaml</p>\n<p> 在/usr/local/kubernetes下执行</p>\n<p> <code>wget https://docs.projectcalico.org/V3.7/manifests/calico.yaml</code></p>\n<p> 查看该文件夹下有没有calico.yaml的文件</p>\n<p> 然后编辑该文件<code>vi calico.yaml</code>.文件较长,可以在编辑文件里按<code>\\CALICO_IPV4POOL_CIDR</code>,然后按确定键直接锁定位置</p>\n<p> 按i编辑,将value的值该为:<code>10.244.0.0/16</code></p>\n</li>\n</ol>\n<h4 id=\"最后注意事项\"><a href=\"#最后注意事项\" class=\"headerlink\" title=\"最后注意事项\"></a>最后注意事项</h4><blockquote>\n<p>每次重启虚拟机,主节点和从节点虚拟机都要重新执行<code>chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code></p>\n</blockquote>\n<p>至此基本环境已部署完毕</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">持续集成，持续交付第一章-环境搭建</font></center>","more":"<h1 id=\"Jenkins部署项目-环境搭建\"><a href=\"#Jenkins部署项目-环境搭建\" class=\"headerlink\" title=\"Jenkins部署项目-环境搭建\"></a>Jenkins部署项目-环境搭建</h1><h2 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h2><p>gitlab             域名:gitlab.hui.com      ip:192.168.12.140    配置:1-2-2<br>mysql              域名:mysql.hui.com       ip:192.168.12.141    配置:1-1-1<br>nexus              域名:nexus.hui.com       ip:192.168.12.142    配置:1-1-2<br>redis              域名:redis.hui.com       ip:192.168.12.143    配置:1-1-1<br>jenkins            域名:jenkins.hui.com     ip:192.168.12.144    配置:1-2-2<br>harbor             域名:harbor.hui.com      ip:192.168.12.145    配置:2-2-4   磁盘：40G<br>JDK&amp;Maven&amp;tomcat   域名:utils.hui.com       ip:192.168.12.146    配置:1-2-2<br>k8s-base           域名:k8s-base.hui.com    ip:192.168.12.150    配置:1-2-2   k8s的基础镜像<br>k8s-master         域名:k8s-master.hui.com  ip:192.168.12.151    配置:1-2-2   主节点<br>k8s-node1          域名:k8s-node1.hui.com   ip:192.168.12.152    配置:1-2-2   从节点<br>k8s-node2          域名:k8s-node2.hui.com   ip:192.168.12.153    配置:1-2-2   从节点<br>project            域名:myproject.hui.com   ip:192.168.12.160 </p>\n<p>配置讲解:</p>\n<p>1-1-1:处理器数量为1,每个处理器的内核数量为1,内存为1.</p>\n<p>其中的硬盘不做特殊说明，默认使用的是20GB.</p>\n<p>以上配置是要求的最低配置,如果在使用过程中不够用时,需要再加</p>\n<p>该配置需要的最低核心数为10,需要的最低内存数量为18</p>\n<h2 id=\"准备条件\"><a href=\"#准备条件\" class=\"headerlink\" title=\"准备条件\"></a>准备条件</h2><p>VMware</p>\n<p>基础的base虚拟机一台.<br>要求:虚拟机里有ssh,docker,docker-compose.其中docker-compose的版本最低要求1.8以上.</p>\n<p>自制的一个网卡,网卡自制方式:</p>\n<p>在VWware里选择<code>编辑</code>–&gt;<code>虚拟网络编辑器</code>–&gt;<code>更改设置</code></p>\n<ol>\n<li><p>将已经存在的网卡全部改为”仅主机模式”</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/01.png\" alt></p>\n</li>\n<li><p>添加网络–&gt;修改ip地址–&gt;改为NAT模式–&gt;应用–&gt;确定</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/02.png\" alt></p>\n</li>\n<li><p>在虚拟机里新建一个文件夹,把基础的base虚拟机(以下简称base)放进去,并将网卡修改为新设置的网卡</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/03.png\" alt></p>\n</li>\n<li><p>初始账号,密码和邮箱</p>\n<p> 账号:hui<br> 密码:hui123456<br> 邮箱:<a href=\"mailto:hui@hui.hui\" target=\"_blank\" rel=\"noopener\">hui@hui.hui</a></p>\n</li>\n</ol>\n<h2 id=\"GitLab环境的搭建\"><a href=\"#GitLab环境的搭建\" class=\"headerlink\" title=\"GitLab环境的搭建\"></a>GitLab环境的搭建</h2><h4 id=\"基础配置\"><a href=\"#基础配置\" class=\"headerlink\" title=\"基础配置\"></a>基础配置</h4><ol>\n<li><p>右键base–&gt;管理–&gt;克隆–&gt;一路下一步(使用链接克隆)–&gt;改个名称和存储位置</p>\n</li>\n<li><p>编辑虚拟机配置–&gt;配置改为1-1-2.查看网卡是否是自己定义的网卡,不是就修改为自己设置的</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/04.png\" alt></p>\n</li>\n<li><p>修改本机(个人PC机器)DNS服务器地址为<code>114.114.114.114</code> <code>114.114.115.115</code></p>\n</li>\n<li><p>启动虚拟机</p>\n</li>\n<li><p>配置静态ip地址</p>\n<p> <code>vi /etc/netplan/50-cloud-init.yaml</code></p>\n<p> 如果出现以下信息,按”e”键就行了</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/05.png\" alt></p>\n<p> 修改如下:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/06.png\" alt></p>\n<p> 执行<code>netplan apply</code>使文件生效</p>\n</li>\n<li><p>执行<code>ping www.baidu.com</code>验证网络,如果没有问题,就使用本机的XShll链接虚拟机</p>\n</li>\n<li><p>修改服务器名称为gitlab</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname gitlab</span><br></pre></td></tr></table></figure>\n<p> 设置结束后还需要设置<code>preserve-hostname:true</code>.进入设置文件<code>vi /etc/cloud/cloud.cfg</code>设置即可</p>\n<p> reboot重启电脑</p>\n</li>\n<li><p>将主机与域名配在一起.因为名称虚拟机名称改为了gitlab,所以可以通过以下配置,将ip地址与域名gitlab.hui.com联系到一起</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> vi /etc/hosts</span><br></pre></td></tr></table></figure>\n<p> 配置如下:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/07.png\" alt></p>\n</li>\n<li><p>本机下载SwitchHosts.作用是在Windows机器上使用域名访问虚拟机.其是解决多个ip不污染系统的host文件.</p>\n<p> 修改权限:找到C:\\Windows\\System32\\drivers\\etc下的hosts文件.右键–&gt;属性–&gt;去掉”只读”,并将”安全”里的所有权限都打开</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/08.png\" alt></p>\n<p> 然后以管理员的身份运行SwitchHosts!.exe.新增一个rules–&gt;填入一个名称</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/09.jpg\" alt></p>\n<p> 配置(ip与域名间有两个空格),并打开开关</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/10.jpg\" alt></p>\n</li>\n</ol>\n<h4 id=\"安装gitlab\"><a href=\"#安装gitlab\" class=\"headerlink\" title=\"安装gitlab\"></a>安装gitlab</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir gitlab</span><br><span class=\"line\"></span><br><span class=\"line\">cd gitlab</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code> 来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a></p>\n<p> docker-compose.yml配置文件.其中将hostname改为<code>hostname: &#39;gitlab.hui.com&#39;</code>,将external_url改为<code>external_url &#39;http://gitlab.hui.com:8080&#39;</code></p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: '3'</span><br><span class=\"line\">services:</span><br><span class=\"line\">    web:</span><br><span class=\"line\">    image: 'twang2218/gitlab-ce-zh'</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    hostname: 'gitlab.hui.com'</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">        TZ: 'Asia/Shanghai'</span><br><span class=\"line\">        GITLAB_OMNIBUS_CONFIG: |</span><br><span class=\"line\">        external_url 'http://gitlab.hui.com:8080'</span><br><span class=\"line\">        gitlab_rails['gitlab_shell_ssh_port'] = 2222</span><br><span class=\"line\">        unicorn['port'] = 8888</span><br><span class=\"line\">        nginx['listen_port'] = 8080</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - '8080:8080'</span><br><span class=\"line\">      - '8443:443'</span><br><span class=\"line\">      - '2222:22'</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - ./config:/etc/gitlab</span><br><span class=\"line\">      - ./data:/var/opt/gitlab</span><br><span class=\"line\">      - ./logs:/var/log/gitlabi</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<p> 镜像拉取结束后,使用<code>docker-compose ps</code>查看进程直到state的starting消失后gitlab才启动</p>\n<p> 如果等的有点急,可以通过<code>docker logs -f 容器名称</code>来查看具体进程</p>\n</li>\n<li><p>设置gitlab的账号,密码,邮箱.开始访问gitlab.hui.com:8080</p>\n<p> 账号:hui<br> 密码:hui123456<br> 邮箱:<a href=\"mailto:hui@hui.hui\" target=\"_blank\" rel=\"noopener\">hui@hui.hui</a></p>\n<p> 第一步:设置密码界面,将以上密码填入就行</p>\n<p> 第二步:注册.将以上账号,密码,邮箱依次填入</p>\n</li>\n<li><p>汉化gitlab</p>\n<p> 右键个人小头标–&gt;settings–&gt;preferences–&gt;language</p>\n<p> 由于我的这个镜像是已经汉化过的,所以不用汉化了</p>\n</li>\n<li><p>创建组</p>\n<p> 点击左上角的gitlab–&gt;创建群组</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/11.jpg\" alt></p>\n</li>\n<li><p>创建项目</p>\n<p> 在已经创建的群组里创建项目</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/12.jpg\" alt></p>\n</li>\n<li><p>添加SSH公钥</p>\n<p> 项目创建成功后,会让添加SSH公钥</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/13.png\" alt></p>\n<p> 点击<code>新建SSH公钥</code>,然后点击<code>generate one</code></p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/14.png\" alt></p>\n<p> 选择该页面中的<code>ssh-keygen -t rsa -C &quot;your.email@example.com&quot; -b 4096</code>命令来在本机上生成公钥</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C \"hui@hui.hui\" -b 4096</span><br></pre></td></tr></table></figure>\n<p> 执行过程如下图</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/15.jpg\" alt></p>\n<p> 复制公钥,粘贴到gitlab的Settings–&gt;SSH中</p>\n<p> 添加全局设置</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> git config --global user.name \"hui\"</span><br><span class=\"line\"><span class=\"meta\">$</span> git config --global user.email \"hui@hui.hui\"</span><br></pre></td></tr></table></figure>\n<p> gitlab配置完成,接下来是整合Jenkins的过程了</p>\n</li>\n</ol>\n<h2 id=\"MySql环境的搭建\"><a href=\"#MySql环境的搭建\" class=\"headerlink\" title=\"MySql环境的搭建\"></a>MySql环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname mysql</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装mysql\"><a href=\"#安装mysql\" class=\"headerlink\" title=\"安装mysql\"></a>安装mysql</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir mysql</span><br><span class=\"line\"></span><br><span class=\"line\">cd mysql</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> docker-compose.yml来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装MySql8.x即可.配置文件如下</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">db:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    environment:</span></span><br><span class=\"line\"><span class=\"attr\">    MYSQL_ROOT_PASSWORD:</span> <span class=\"number\">123456</span></span><br><span class=\"line\"><span class=\"attr\">    command:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-default-authentication-plugin=mysql_native_password</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-character-set-server=utf8mb4</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-collation-server=utf8mb4_general_ci</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-explicit_defaults_for_timestamp=true</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span><span class=\"bullet\">-lower_case_table_names=1</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">3306</span><span class=\"string\">:3306</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./data:/var/lib/mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">adminer:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">adminer</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8080</span><span class=\"string\">:8080</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>mysql的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>使用<code>http://mysql.hui.com:8080/</code>在本机访问mysql</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/16.png\" alt></p>\n<p> 用户名:root<br> 密码:123456</p>\n<p> 登录进去后可以创建数据库,导入.sql的文件以及导出</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/17.png\" alt></p>\n</li>\n</ol>\n<h2 id=\"Nexus环境的搭建\"><a href=\"#Nexus环境的搭建\" class=\"headerlink\" title=\"Nexus环境的搭建\"></a>Nexus环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname nexus</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Nexus\"><a href=\"#安装Nexus\" class=\"headerlink\" title=\"安装Nexus\"></a>安装Nexus</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir nexus</span><br><span class=\"line\"></span><br><span class=\"line\">cd nexus</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code>来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装Nexus.配置文件如下</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">nexus:</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">sonatype/nexus3</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">nexus</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8081</span><span class=\"string\">:8081</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"attr\">      - data:</span><span class=\"string\">/nexus-data</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>nexus的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>使用<code>http://nexus.hui.com:8081/</code>访问,登录</p>\n<p> 初始账号密码:</p>\n<p> 账号:admin<br> 密码:admin123</p>\n<blockquote>\n<p>注意事项:如果需要本地运行,本地需要安装maven,tomcat.</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"Redis环境的搭建\"><a href=\"#Redis环境的搭建\" class=\"headerlink\" title=\"Redis环境的搭建\"></a>Redis环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname redis</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Redis\"><a href=\"#安装Redis\" class=\"headerlink\" title=\"安装Redis\"></a>安装Redis</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir redis</span><br><span class=\"line\"></span><br><span class=\"line\">cd redis</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code>来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装redis.配置文件如下</p>\n<p> 将<code>container_name: redis-master</code>改为<code>container_name: redis</code>.来源中的redis是集群,我们没有用集群,所以就不需要起名带master了</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">master:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">redis</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">6379</span><span class=\"string\">:6379</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>redis的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>redis似乎没有可以访问的地址</p>\n</li>\n</ol>\n<h2 id=\"Jenkins环境的搭建\"><a href=\"#Jenkins环境的搭建\" class=\"headerlink\" title=\"Jenkins环境的搭建\"></a>Jenkins环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname jenkins</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Jenkins\"><a href=\"#安装Jenkins\" class=\"headerlink\" title=\"安装Jenkins\"></a>安装Jenkins</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>配置docker-compose.yml文件</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">cd jenkins</span><br><span class=\"line\"></span><br><span class=\"line\">vi docker-compose.yml</span><br></pre></td></tr></table></figure>\n<p> <code>docker-compose.yml</code>来源:<br> <a href=\"https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/spring-cloud-alibaba-myshop/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD.html</a> </p>\n<p> 安装Jenkins.配置文件如下</p>\n <figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3.1'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">jenkins:</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">jenkinsci/jenkins</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">jenkins</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">8080</span><span class=\"string\">:8080</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"number\">50000</span><span class=\"string\">:50000</span></span><br><span class=\"line\"><span class=\"attr\">    environment:</span></span><br><span class=\"line\"><span class=\"attr\">    TZ:</span> <span class=\"string\">Asia/Shanghai</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"attr\">      - data:</span><span class=\"string\">/var/jenkins_home</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\"><span class=\"attr\">data:</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动docker-compose</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>jenkins的设置启动速度较快.可以使用<code>docker-compose ps</code>查看一下即可</p>\n</li>\n<li><p>使用<code>http://jenkins.hui.com:8080</code>访问jenkins</p>\n</li>\n</ol>\n<h4 id=\"jenkins的设置\"><a href=\"#jenkins的设置\" class=\"headerlink\" title=\"jenkins的设置\"></a>jenkins的设置</h4><ol>\n<li><p>设置密钥:提示给出的路径我没有找到.可以用一下简单的方法获取密钥</p>\n<p> 在/var/local/jenkins目录下执行<code>docker logs -f jenkins</code>.以下标注的地方就是密钥</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/18.png\" alt></p>\n</li>\n<li><p>选择插件安装</p>\n<p> 随便选择一个.我这里选择了第二个.</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/19.jpg\" alt></p>\n<p> 选择好后直接点击install安装.不用管是否安装上,先让其安装完,然后把没有装上的插件拍照截图,等进入系统后再逐个安装.我的安装情况如下:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/20.jpg\" alt></p>\n<p> 点击Continue</p>\n</li>\n<li><p>创建第一个管理员用户</p>\n<p> 依然使用同一套账号密码邮箱:</p>\n<p> 账号:hui<br> 密码:hui123456<br> 邮箱:<a href=\"mailto:hui@hui.hui\" target=\"_blank\" rel=\"noopener\">hui@hui.hui</a></p>\n</li>\n<li><p>示例配置</p>\n<p> 我这里只是将其配置为<code>http://jenkins.hui.com:8080/jenkins</code></p>\n<p> 接下来一路确定就可以了</p>\n</li>\n<li><p>配置镜像加速</p>\n<p> 系统管理–&gt;插件管理–&gt;高级(Advanced)–&gt;升级站点</p>\n<p> 参考网站:<a href=\"https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/</a></p>\n<p> 配置的最终URL:<code>https://mirrors.tuna.tsinghua.edu.cn/jenkins/updates/2.150/update-center.json</code></p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/21.png\" alt></p>\n<p> 点击提交–&gt;点击立即获取</p>\n</li>\n<li><p>汉化</p>\n<p> 系统管理–&gt;插件管理–&gt;可选插件(Available)–&gt;过滤,搜”Locale”–&gt;选中后点击直接安装</p>\n<blockquote>\n<p>其实这里需要装两个插件:一个是Locale,另一个是Localization:Chinese(simplified).但是Localization:Chinese(simplified)在最初的时候给我安装过了,所以这里不用再装了</p>\n</blockquote>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/22.png\" alt></p>\n<p> 汉化过程:</p>\n<p> 系统管理–&gt;系统设置–&gt;Locale–&gt;Default language 填入 <code>zh-CN</code>,下面那个对号不用打勾</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/23.png\" alt></p>\n<p> 应用–&gt;保存</p>\n</li>\n<li><p>几个必装的插件</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Publish Over SSH</span><br><span class=\"line\">Maven Integration</span><br><span class=\"line\">Extensible Choice Parameter</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>逐个下载插件</p>\n<p> 这里介绍两种下载插件的方法:</p>\n<p> 第一种下载插件的方法:</p>\n<p> 系统管理–&gt;插件管理–&gt;可选插件(Available)–&gt;过滤,比对着前面没有下载上的插件逐个搜索,搜到的插件前面先打上对号,不安装,等全部找齐后,点击<code>下载待重启后安装</code></p>\n<p> 待全部下载结束后.回到虚拟机里执行<code>docker-compose restart</code>重启jenkins</p>\n<p> 第二种下载插件的方法:</p>\n<p> 进入官网:<code>https://plugins.jenkins.io/</code>,输入要下载的插件名称搜索</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/24.jpg\" alt></p>\n<p> 点击某个插件页面进去,然后点击右上角的Archives,选择相应的版本下载.格式是.hpi</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/25.png\" alt></p>\n<p> 下载好后,进入jenkins中.系统管理–&gt;插件管理–&gt;高级–&gt;上传插件–&gt;选择下载的.hpi文件–&gt;上传–&gt;返回首页</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/26.jpg\" alt></p>\n</li>\n</ol>\n<h2 id=\"Harbor环境的搭建\"><a href=\"#Harbor环境的搭建\" class=\"headerlink\" title=\"Harbor环境的搭建\"></a>Harbor环境的搭建</h2><p>准备步骤和gitlab的<strong>基础配置</strong>是一样的</p>\n<p>在修改服务器名称时改为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> hostnamectl set-hostname Harbor</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装Harbor\"><a href=\"#安装Harbor\" class=\"headerlink\" title=\"安装Harbor\"></a>安装Harbor</h4><ol>\n<li><p>检查docker和docker-compose是否正常</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ubuntu:~# docker --version</span><br><span class=\"line\">Docker version 18.09.6, build 481bc77</span><br><span class=\"line\">root@ubuntu:~# docker-compose --version</span><br><span class=\"line\">docker-compose version 1.24.0, build 0aa5906</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载harbor，采用离线的方式安装</p>\n<p> 下载地址：<code>https://github.com/goharbor/harbor/releases</code>,下载离线版的：<code>Harbor offline installer</code></p>\n</li>\n<li><p>将harbor传到虚拟机中</p>\n<p> 在本机切换到harbor-offline-installer-v1.8.1.tgz的下载目录下,执行</p>\n<p> <code>scp harbor-offline-installer-v1.8.1.tgz root@192.168.12.145:/usr/local/</code></p>\n<p> 在虚拟机解压harbor-offline-installer-v1.8.1.tgz</p>\n<p> <code>tar -xzvf harbor-offline-installer-v1.8.1.tgz</code></p>\n<p> 将压缩包文件删除</p>\n<p> <code>rm -fr harbor-offline-installer-v1.8.1.tgz</code></p>\n</li>\n<li><p>安装harbor</p>\n<p> 进入解压好的harbor目录</p>\n<p> <code>cd harbor</code></p>\n<p> 修改harbor.yml</p>\n<p> <code>vi harbor.yml</code></p>\n<p> 将<code>hostname: reg.mydomain.com</code>改为<code>hostname: harbor.hui.com</code></p>\n<p> 解决无法登录问题:默认登录的网址是<code>https://harbor.hui.com</code>.是<code>https</code>而不是<code>http</code>.这样就出现了找不到的情况.解决方案</p>\n<p> 先执行以下:</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class=\"line\">&#123; \"insecure-registries\":[\"harbor.hui.com\"] &#125;</span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n<p> 再执行<code>./install.sh</code>脚本开始安装</p>\n<p> 使用<code>http://harbor.hui.com</code>来访问harbor</p>\n<p> 初始用户名密码:</p>\n<p> 用户名:admin<br> 密码:Harbor12345</p>\n</li>\n</ol>\n<h4 id=\"push和pull\"><a href=\"#push和pull\" class=\"headerlink\" title=\"push和pull\"></a>push和pull</h4><ol>\n<li><p>在本机haibor网页新建一个项目,选择公开即可</p>\n</li>\n<li><p>在虚拟机中登录harbor</p>\n<p> <code>docker login harbor.hui.com</code></p>\n<p> 账号:admin<br> 密码:Harbor12345</p>\n</li>\n<li><p>push镜像</p>\n<p> push镜像的意思是把docker里的镜像push到harbor里,我这里下载了一个hello-world的镜像用于测试</p>\n<p> <code>docker pull hello-world</code></p>\n<p> 以下是官网提供的push方式:</p>\n<p> <img src=\"/2019/06/21/2019-06-20-Jenkins部署项目-环境搭建/27.png\" alt></p>\n<p> 例子:</p>\n<p> 先给镜像重新一个名称:</p>\n<p> <code>docker tag hello-world:latest harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> 然后push镜像</p>\n<p> <code>docker push harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> 在本机刷新以下页面,可以看到harbor里已经有了myproject/hello-world:v1.0.0</p>\n</li>\n<li><p>pull镜像</p>\n<p> pull镜像是把harbor里的镜像拉到docker里</p>\n<p> 测试步骤:先把docker里的hello-world镜像删除</p>\n<p> <code>docker rmi hello-world:latest</code><br> <code>docker rmi harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> pull镜像</p>\n<p> <code>docker pull harbor.hui.com/myproject/hello-world:v1.0.0</code></p>\n<p> 如果docker images可以看到刚刚拉取的镜像,就说明没有问题了</p>\n</li>\n</ol>\n<h2 id=\"Kubernetes的搭建\"><a href=\"#Kubernetes的搭建\" class=\"headerlink\" title=\"Kubernetes的搭建\"></a>Kubernetes的搭建</h2><p>Kubernetes使用一主两从的方式搭建</p>\n<p>首先先完整克隆一个基础的Kubernetes虚拟机,然后在这台机器上做一些基础配置,这些配置是主节点和从节点的机器都要配置的.基础配置后,克隆时就不需要每台都配置了.</p>\n<h4 id=\"Kubernetes的基础配置\"><a href=\"#Kubernetes的基础配置\" class=\"headerlink\" title=\"Kubernetes的基础配置\"></a>Kubernetes的基础配置</h4><p>参考网址:<br><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4.html</a></p>\n<ol>\n<li><p>检查docker,docker-compose,交换空间.我这里用的基础镜像已经全部配过了,所以不会有大的问题,不过还是要检查一下.(基础虚拟机镜像的配置参考我的博客虚拟机那部分)</p>\n</li>\n<li><p>基础镜像ip我使用的是<code>192.168.12.150</code></p>\n</li>\n<li><p>其他基础的准备工作和gitlab的准备工作一样</p>\n</li>\n<li><p>安装 kubeadm，kubelet，kubectl</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装系统工具</span><br><span class=\"line\">apt-get update &amp;&amp; apt-get install -y apt-transport-https</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 GPG 证书</span><br><span class=\"line\">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add -</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 写入软件源；注意：我们用系统代号为 bionic，但目前阿里云不支持，所以沿用 16.04 的 xenial</span><br><span class=\"line\">cat &lt;&lt; EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main</span><br><span class=\"line\"><span class=\"meta\">&gt;</span> EOF</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 安装</span><br><span class=\"line\">apt-get update &amp;&amp; apt-get install -y kubelet kubeadm kubectl</span><br></pre></td></tr></table></figure>\n<p> 执行结束后,在最后可以看到一些版本号信息</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Setting up kubelet (1.15.0-00) ...</span><br><span class=\"line\">Created symlink /etc/systemd/system/multi-user.target.wants/kubelet.service → /lib/systemd/system/kubelet.service.</span><br><span class=\"line\">Setting up kubectl (1.15.0-00) ...</span><br><span class=\"line\">Processing triggers for man-db (2.8.3-2ubuntu0.1) ...</span><br><span class=\"line\">Setting up kubeadm (1.15.0-00) ...</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在这里要记住kubeadm的版本号为1.15.0-00,因为kubernetes的版本号要和他的一致</p>\n</blockquote>\n</li>\n<li><p>同步时间</p>\n<p> 设置时区</p>\n<p> <code>$ dpkg-reconfigure tzdata</code></p>\n<p> 选择 Asia（亚洲）–&gt;选择 Shanghai（上海）</p>\n<p> 时间同步</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装 ntpdate</span><br><span class=\"line\">apt-get install ntpdate</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 设置系统时间与网络时间同步（cn.pool.ntp.org 位于中国的公共 NTP 服务器）</span><br><span class=\"line\">ntpdate cn.pool.ntp.org</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 将系统时间写入硬件时间</span><br><span class=\"line\">hwclock --systohc</span><br></pre></td></tr></table></figure>\n<p> 如果在执行<code>apt-get install ntpdate</code>中遇到以下问题</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E: Could not get lock /var/lib/dpkg/lock-frontend - open (11: Resource temporarily unavailable)</span><br><span class=\"line\">E: Unable to acquire the dpkg frontend lock (/var/lib/dpkg/lock-frontend), is another process using it?</span><br></pre></td></tr></table></figure>\n<p> 可以通过下面的方式解决</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm /var/lib/apt/lists/lock</span><br><span class=\"line\">sudo rm /var/cache/apt/archives/lock</span><br><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<p> 然后再执行<code>apt-get install ntpdate</code></p>\n<p> 确认时间</p>\n<p> <code>$ date</code></p>\n<p> 输出以下格式就是正常的</p>\n<p> <code>Sat Jun 22 12:23:16 CST 2019</code></p>\n</li>\n<li><p>配置 IPVS</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 安装系统工具</span><br><span class=\"line\">apt-get install -y ipset ipvsadm</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 配置并加载 IPVS 模块</span><br><span class=\"line\">mkdir -p /etc/sysconfig/modules/</span><br><span class=\"line\">vi /etc/sysconfig/modules/ipvs.modules</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 输入如下内容</span><br><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\">modprobe -- ip_vs</span><br><span class=\"line\">modprobe -- ip_vs_rr</span><br><span class=\"line\">modprobe -- ip_vs_wrr</span><br><span class=\"line\">modprobe -- ip_vs_sh</span><br><span class=\"line\">modprobe -- nf_conntrack_ipv4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 执行脚本，注意：如果重启虚拟机则需要重新运行该脚本</span><br><span class=\"line\">chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 执行脚本输出如下</span><br><span class=\"line\">ip_vs_sh               16384  0</span><br><span class=\"line\">ip_vs_wrr              16384  0</span><br><span class=\"line\">ip_vs_rr               16384  0</span><br><span class=\"line\">ip_vs                 147456  6 ip_vs_rr,ip_vs_sh,ip_vs_wrr</span><br><span class=\"line\">nf_conntrack_ipv4      16384  3</span><br><span class=\"line\">nf_defrag_ipv4         16384  1 nf_conntrack_ipv4</span><br><span class=\"line\">nf_conntrack          131072  8 xt_conntrack,nf_nat_masquerade_ipv4,nf_conntrack_ipv4,nf_nat,ipt_MASQUERADE,nf_nat_ipv4,nf_conntrack_netlink,ip_vs</span><br><span class=\"line\">libcrc32c              16384  4 nf_conntrack,nf_nat,raid456,ip_vs</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意:每次重启虚拟机,主节点和从节点虚拟机都要重新执行<code>chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code></p>\n</blockquote>\n</li>\n<li><p>配置内核参数</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 配置参数</span><br><span class=\"line\">vi /etc/sysctl.d/k8s.conf</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 输入如下内容</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_nonlocal_bind = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness=0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 应用参数</span><br><span class=\"line\">sysctl --system</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 应用参数输出如下（找到 Applying /etc/sysctl.d/k8s.conf 开头的日志）</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-console-messages.conf ...</span><br><span class=\"line\">kernel.printk = 4 4 1 7</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-ipv6-privacy.conf ...</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-kernel-hardening.conf ...</span><br><span class=\"line\">kernel.kptr_restrict = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-link-restrictions.conf ...</span><br><span class=\"line\">fs.protected_hardlinks = 1</span><br><span class=\"line\">fs.protected_symlinks = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-lxd-inotify.conf ...</span><br><span class=\"line\">fs.inotify.max_user_instances = 1024</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-magic-sysrq.conf ...</span><br><span class=\"line\">kernel.sysrq = 176</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-network-security.conf ...</span><br><span class=\"line\">net.ipv4.conf.default.rp_filter = 1</span><br><span class=\"line\">net.ipv4.conf.all.rp_filter = 1</span><br><span class=\"line\">net.ipv4.tcp_syncookies = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-ptrace.conf ...</span><br><span class=\"line\">kernel.yama.ptrace_scope = 1</span><br><span class=\"line\">* Applying /etc/sysctl.d/10-zeropage.conf ...</span><br><span class=\"line\">vm.mmap_min_addr = 65536</span><br><span class=\"line\">* Applying /usr/lib/sysctl.d/50-default.conf ...</span><br><span class=\"line\">net.ipv4.conf.all.promote_secondaries = 1</span><br><span class=\"line\">net.core.default_qdisc = fq_codel</span><br><span class=\"line\">* Applying /etc/sysctl.d/99-sysctl.conf ...</span><br><span class=\"line\">* Applying /etc/sysctl.d/k8s.conf ...</span><br><span class=\"line\">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class=\"line\">net.bridge.bridge-nf-call-iptables = 1</span><br><span class=\"line\">net.ipv4.ip_nonlocal_bind = 1</span><br><span class=\"line\">net.ipv4.ip_forward = 1</span><br><span class=\"line\">vm.swappiness = 0</span><br><span class=\"line\">* Applying /etc/sysctl.conf ...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>至此,基础的kubernetes镜像已经做好,先做个快照,接下来链接克隆3台机器,一个为master节点机器,两个node节点机器</p>\n</li>\n</ol>\n<h4 id=\"Kubernetes集群的搭建-在master机器上操作\"><a href=\"#Kubernetes集群的搭建-在master机器上操作\" class=\"headerlink\" title=\"Kubernetes集群的搭建(在master机器上操作)\"></a>Kubernetes集群的搭建(在master机器上操作)</h4><ol>\n<li><p>先对3台虚拟机进行基础配置,注意就是修改一下静态ip和域名</p>\n<p> master:192.168.12.151  k8s-master.hui.com<br> node1: 192.168.12.152  k8s-node1.hui.com<br> node2: 192.168.12.153  k8s-node2.hui.com</p>\n</li>\n<li><p>在master节点上配置kubeadm</p>\n<p> 参考网址:<br> <a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE-kubeadm.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE-kubeadm.html</a></p>\n<p> 在/usr/local下创建一个名为kubernetes新的文件夹</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p /usr/local/kubernetes</span><br><span class=\"line\">cd /usr/local/kubernetes</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建并修改配置</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 导出配置文件</span><br><span class=\"line\">kubeadm config print init-defaults --kubeconfig ClusterConfiguration &gt; kubeadm.yml</span><br></pre></td></tr></table></figure>\n<p> 这步执行结束后会在/usr/local/kubernetes文件夹下得到一个kubeadm.yml配置文件</p>\n<p> 修改配置文件的一些参数:</p>\n<p> 1)<code>advertiseAddress: 1.2.3.4</code>,将ip地址修改为本机ip地址<br> 修改结果:<code>advertiseAddress: 192.168.12.151</code></p>\n<p> 2)将<code>imageRepository: k8s.gcr.io</code>修改为<code>imageRepository: registry.aliyuncs.com/google_containers</code></p>\n<p> 3)将<code>kubernetesVersion: v1.14.0</code>的版本改成和基础配置里的<code>kubeadm (1.15.0-00)</code>的版本一样,修改结果为<code>kubernetesVersion: v1.15.0</code></p>\n<p> 4)添加Calico网段,在dnsDomain和serviceSubnet之间添加podSubnet: “10.244.0.0/16”具体如下:</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dnsDomain: cluster.local</span><br><span class=\"line\"><span class=\"meta\">#</span> 配置成 Calico 的默认网段</span><br><span class=\"line\">podSubnet: \"10.244.0.0/16\"</span><br><span class=\"line\">serviceSubnet: 10.96.0.0/12</span><br></pre></td></tr></table></figure>\n<p> 5)在最后添加开启 IPVS 模式</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\"><span class=\"meta\">#</span> 开启 IPVS 模式</span><br><span class=\"line\">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class=\"line\">kind: KubeProxyConfiguration</span><br><span class=\"line\">featureGates:</span><br><span class=\"line\">SupportIPVSProxyMode: true</span><br><span class=\"line\">mode: ipvs</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>查看和拉取镜像</p>\n <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 查看所需镜像列表</span><br><span class=\"line\">kubeadm config images list --config kubeadm.yml</span><br><span class=\"line\"><span class=\"meta\">#</span> 拉取镜像</span><br><span class=\"line\">kubeadm config images pull --config kubeadm.yml</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"使用-kubeadm-搭建-kubernetes-集群\"><a href=\"#使用-kubeadm-搭建-kubernetes-集群\" class=\"headerlink\" title=\"使用 kubeadm 搭建 kubernetes 集群\"></a>使用 kubeadm 搭建 kubernetes 集群</h4><blockquote>\n<p>除了将node节点加入master的一条命令外,其他都在master节点上执行</p>\n</blockquote>\n<p>参考链接:<br><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E4%BD%BF%E7%94%A8-kubeadm.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E4%BD%BF%E7%94%A8-kubeadm.html</a></p>\n<p>安装 kubernetes 主节点</p>\n<p><code>kubeadm init --config=kubeadm.yml --experimental-upload-certs | tee kubeadm-init.log</code></p>\n<p>成功后会看到以下内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Your Kubernetes control-plane has initialized successfully!</span><br><span class=\"line\"></span><br><span class=\"line\">To start using your cluster, you need to run the following as a regular user:</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p $HOME/.kube</span><br><span class=\"line\">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class=\"line\">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br><span class=\"line\"></span><br><span class=\"line\">You should now deploy a pod network to the cluster.</span><br><span class=\"line\">Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at:</span><br><span class=\"line\">https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class=\"line\"></span><br><span class=\"line\">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class=\"line\"></span><br><span class=\"line\">kubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0</span><br></pre></td></tr></table></figure>\n<p>按照以上内容的提示信息配置 kubectl</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir -p $HOME/.kube</span><br><span class=\"line\">cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class=\"line\">chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>\n<p>验证是否成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 能够打印出节点信息即表示成功</span><br><span class=\"line\">NAME                STATUS     ROLES    AGE     VERSION</span><br><span class=\"line\">kubernetes-master   NotReady   master   8m40s   v1.14.1</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>接下来的一步要在node节点的机器上操作.执行以上提示信息的最后一句将node节点的机器加入到master节点中</p>\n</blockquote>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubeadm join 192.168.12.151:6443 --token abcdef.0123456789abcdef \\</span><br><span class=\"line\">    --discovery-token-ca-cert-hash sha256:2f25eb2088d88bda22946e63de889557dca90f4a2180d0d0495d5ff4f71a4db0</span><br></pre></td></tr></table></figure>\n<p>验证是否加入成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kubectl get node</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 能够打印出节点信息即表示成功</span><br><span class=\"line\">NAME        STATUS     ROLES    AGE    VERSION</span><br><span class=\"line\">k8s-base    NotReady   master   8m1s   v1.15.0</span><br><span class=\"line\">k8s-node1   NotReady   &lt;none&gt;   56s    v1.15.0</span><br><span class=\"line\">k8s-node2   NotReady   &lt;none&gt;   23s    v1.15.0</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置网络\"><a href=\"#配置网络\" class=\"headerlink\" title=\"配置网络\"></a>配置网络</h4><p>参考网址:<br><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C.html\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C.html</a></p>\n<p>安装网络插件 Calico</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 在 Master 节点操作即可</span><br><span class=\"line\">kubectl apply -f https://docs.projectcalico.org/v3.7/manifests/calico.yaml</span><br></pre></td></tr></table></figure>\n<p>确认安装是否成功</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">watch kubectl get pods --all-namespaces</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 需要等待所有状态为 Running，注意时间可能较久，3 - 5 分钟的样子</span><br><span class=\"line\">Every 2.0s: kubectl get pods --all-namespaces                                                                                                    kubernetes-master: Fri May 10 18:16:51 2019</span><br><span class=\"line\"></span><br><span class=\"line\">NAMESPACE     NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class=\"line\">kube-system   calico-kube-controllers-8646dd497f-g2lln    1/1     Running   0          50m</span><br><span class=\"line\">kube-system   calico-node-8jrtp                           1/1     Running   0          50m</span><br><span class=\"line\">kube-system   coredns-8686dcc4fd-mhwfn                    1/1     Running   0          51m</span><br><span class=\"line\">kube-system   coredns-8686dcc4fd-xsxwk                    1/1     Running   0          51m</span><br><span class=\"line\">kube-system   etcd-kubernetes-master                      1/1     Running   0          50m</span><br><span class=\"line\">kube-system   kube-apiserver-kubernetes-master            1/1     Running   0          51m</span><br><span class=\"line\">kube-system   kube-controller-manager-kubernetes-master   1/1     Running   0          51m</span><br><span class=\"line\">kube-system   kube-proxy-p8mdw                            1/1     Running   0          51m</span><br><span class=\"line\">kube-system   kube-scheduler-kubernetes-master            1/1     Running   0          51m</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置Calico-yaml文件\"><a href=\"#配置Calico-yaml文件\" class=\"headerlink\" title=\"配置Calico.yaml文件\"></a>配置Calico.yaml文件</h4><ol>\n<li><p>下载Calico.yaml</p>\n<p> 在/usr/local/kubernetes下执行</p>\n<p> <code>wget https://docs.projectcalico.org/V3.7/manifests/calico.yaml</code></p>\n<p> 查看该文件夹下有没有calico.yaml的文件</p>\n<p> 然后编辑该文件<code>vi calico.yaml</code>.文件较长,可以在编辑文件里按<code>\\CALICO_IPV4POOL_CIDR</code>,然后按确定键直接锁定位置</p>\n<p> 按i编辑,将value的值该为:<code>10.244.0.0/16</code></p>\n</li>\n</ol>\n<h4 id=\"最后注意事项\"><a href=\"#最后注意事项\" class=\"headerlink\" title=\"最后注意事项\"></a>最后注意事项</h4><blockquote>\n<p>每次重启虚拟机,主节点和从节点虚拟机都要重新执行<code>chmod 755 /etc/sysconfig/modules/ipvs.modules &amp;&amp; bash /etc/sysconfig/modules/ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4</code></p>\n</blockquote>\n<p>至此基本环境已部署完毕</p>"},{"title":"Git常用教程","date":"2019-06-25T20:39:11.000Z","_content":"\n<center><font size=4 color=\"red\">git的流程，commit规则，图标意义，连接多个ssh方法</font></center>\n\n<!--more-->\n\n# Git 常用教程\n\n`$ git config --global user.name \"Firstname Lastname\"`\n\n`$ git config --global user.email \"your_email@example.com\"`\n\n配置在下面文件:`~/.gitconfig`\n\n输出内容显示:\n`git config --global color.ui auto`\n\n设置SSH Key\n\n`ssh-keygen -t rsa -C \"your_email@example.com\"`\n`cat ~/.ssh/id_rsa.pub`\n添加到远程Git服务网站\n`ssh -T git@github.com`\n\n第一次:\n\n```shell\ngit clone git@github.com:hirocastest/Hello-World.git\n\ntouch hello_world.php && vim hello_world.php\n\n<?php\n    echo \"Hello World!\";\n?>\n\ncd Hello-World\n\ngit status\n\ngit add hello_world.php\n\ngit commit -m \"Add hello world script by php\"\n\ngit log\n\ngit push\n```\n\n## 标准流程\n\n* 开发或修正:develop->feature branches\n* 合并:feature branches->develop\n* 发布:release branches\n* 合并:release branches->master 然后打Tag发布\n* 发现BUG:master->hotflixes\n\n## 工具\n\n[git-flow](https://github.com/nvie/gitﬂow)\n\nMac安装:`brew install git-flow`\n\n## 仓库初始化\n\nGithub->Git仓库->Add README.md->blog\n\n`git clone` \n\n`git flow init -d`\n\n`git branch -a`\n\n`git push -u origin develop`\n\n`git branch -a`\n\n## 模拟 Git Flow\n\n`git pull`\n\n创建feature分支add-user\n`git flow feature start add-user`\n\n`git branch`\n\n`git push origin feature/add-user`\n\nPR的要点:\n\n* 没有测试or测试未通过\n* 违反编码规则\n* 代码品质过低(命名不明确,方法冗长等)\n* 还有重构的余地\n* 有重复的部分\n\n切换分支,保证develop最新\ndevelop是默认分支\n\n`git checkout develop`\n\n`git pull`\n\n发布\n`git checkout develop`\n\n`git pull`\n\n`git flow release start '1.0.0'`\n\n`git flow release finish '1.0.0'`\n\n`git tag`\n\n更新到远程仓库\n\n`git push origin develop`\n\n`git checkout master`\n\n`git push origin master`\n\n`git push --tags`\n\n在hotfix分支工作\n\n`git fetch origin`\n\n`git flow hotfix start '1.0.1' '1.0.0'`\n\n`git push origin hotfix/1.0.1`\n\n查看Tag\n\n`git fetch origin`\n\n`git tag`\n\n版本号的分配规则\n\nx.y.z格式进行版本管理\n\nx在重大功能变更或新版本不向下兼容时加1,此时y与z的数字归0\n\ny在添加新功能或者删除已有功能时加1, 此时z的数字归0\n\nz只在进行内部修改后加1\n\n具体例子:\n1.0.0 最初发布的版本\n1.0.1 修正了轻微BUG\n1.0.2 修复漏洞\n1.1.0 添加新功能\n2.0.0 更新整体UI并添加新功能\n\n\n**Commit Message Guidelines**\n\nhttps://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits\n\nhttps://www.conventionalcommits.org/en/v1.0.0-beta.4/\n\ngit commit cp 规范\n\nhttps://github.com/Dolov/git-commit-cp\n\nhttp://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\n\nhttps://udacity.github.io/git-styleguide/\n\nhttps://juejin.im/post/5afc5242f265da0b7f44bee4\n\nhttps://www.jianshu.com/p/b9d5a0711528\n\nCommit message(提交说明)\n\n-m 参数 指定commit message 的\n\n多行 git commit\n\n清晰明了 说明目的\n\n格式:\n\n三个部分:Header,Body和Footer\n\n`<type>(<scope>): <subject>`\n// 空一行\n`<body>`\n// 空一行\n`<footer>`\n\nHeader 是必须\nBody和Footer 可用省略\n\n任何一行都不能超过72个字符(或100个字符) 避免换行\n\nHeader: type(必需)、scope(可选)、subject(必需)\n\ntype: 说明commit的类别,只允许使用下面7个标示\n\nfeat：新功能（feature）\nfix：修补bug\ndocs：文档（documentation）\nstyle： 格式（不影响代码运行的变动）\nrefactor：重构（即不是新增功能，也不是修改bug的代码变动）\ntest：增加测试\nchore：构建过程或辅助工具的变动\n\n如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要\n\nscope\n\nscope 用于说明commit影响的范围, 比如数据层、控制层、视图层等,视项目不同而不同\n\nsubject\n\nsubject是commit目的的简短描述, 不超过50个字符\n\n以动词开头，使用第一人称现在时，比如change，而不是changed或changes\n第一个字母小写\n结尾不加句号（.）\n\nBody\n\nBody部分是对本次commit的详细描述, 可以分成多行.\n\n示例:\n\nMore detailed explanatory text, if necessary.  Wrap it to \nabout 72 characters or so. \n\nFurther paragraphs come after blank lines.\n\n- Bullet points are okay, too\n- Use a hanging indent\n\n**注意点:**\n\n使用第一人称现在时，比如使用change而不是changed或changes。\n\n应该说明代码变动的动机，以及与以前行为的对比。\n\nFooter\n\nFooter 部分只用于两种情况\n\n* 不兼容变动\n\n如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。\n\nBREAKING CHANGE: isolate scope bindings definition has changed.\n\nTo migrate the code follow the example below:\n\nBefore:\n\n```shell\nscope: {\n    myAttr: 'attribute',\n}\n```\n\nAfter:\n\n```shell\nscope: {\n    myAttr: '@',\n}\n```\n\nThe removed `inject` wasn't generaly useful for directives so there should be no code using it.\n\n\n\n* 关闭Issue\n\n如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue.\n\nCloses #234\n\n也可以一次关闭多个 issue\n\nCloses #123, #245, #992\n\nRevert\n\n还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。\n\nrevert: feat(pencil): add 'graphiteWidth' option\n\nThis reverts commit 667ecc1654a317a13331b17617d973392f415f02.\n\nBody部分的格式是固定的，必须写成This reverts commit &lt;hash>.，其中的hash是被撤销 commit 的 SHA 标识符。\n\n如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。\n\n编写工具\n\nCommitizen:https://github.com/commitizen/cz-cli\n\nhttp://commitizen.github.io/cz-cli/\n\n`npm install -g commitizen`\n\ncommitizen init cz-conventional-changelog --save --save-exact\n\n`git add .`\n\n`git cz`\n\n检查Commit message 是否符合格式\n\nvalidate-commit-msg:https://github.com/kentcdodds/validate-commit-msg\n\nhttps://github.com/kentcdodds/validate-commit-msg/blob/master/index.js\n\n重命名为下面名字\nvalidate-commit-msg.js\n\n加入Git的hook\n\npackage.json->ghooks:http://npm.im/ghooks\n\n```shell\n\"config\": {\n    \"ghooks\": {\n      \"commit-msg\": \"./validate-commit-msg.js\"\n    }\n}\n```\n\nexample\n\n`$ git add -A `\n`$ git commit -m \"edit markdown\" `\nINVALID COMMIT MSG: does not match \"<type>(<scope>): <subject>\" ! was: edit markdown\n\n\nCommit Message -> Change log\n\n三部分组成:\n\nNew features\nBug fixes\nBreaking changes.\n\n工具:\n\nconventional-changelog \n\n```shell\n$ npm install -g conventional-changelog\n$ cd my-project\n$ conventional-changelog -p angular -i CHANGELOG.md -w\n```\n\nCHANGELOG.md\n\n生成所有发布的 Change log\n\n`$ conventional-changelog -p angular -i CHANGELOG.md -w -r 0`\n\npackage.json\n\n```shell\n{\n  \"scripts\": {\n    \"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -w -r 0\"\n  }\n}\n```\n\n`$ npm run changelog`\n\n\n工具链:\n\n commitizen/cz-cli \n commitizen/cz-conventional-changelog\n conventional-changelog/standard-version \n \n 持续集成:\n \n marionebl/commitlint\n \n \n Git 的表情使用\n \n https://mkblog.cn/872/\n \n https://gitmoji.carloscuesta.me/\n \n \n🎨 - 改进结构和代码格式\n⚡️ - 优化性能\n🔥 - 移除代码或文件\n🐛 - 修复 bug\n✨ - 引入新功能\n🍎 - 修复 MacOS 下的问题\n📝 - 写文档\n🚀 - 部署新功能\n\n✅ - 添加测试用例\n🔖 - 发版/版本标签\n🔒 - 修复安全问题\n🐧 - 修复 Linux 下的问题\n🚨 - 移除 linter 的警告\n🚧 - 工作在进行中\n💚 - 修复 CI 构建问题\n⬇️ - 降级依赖库\n\n🏁 - 修复 Windows 下的问题\n⬆️ - 升级依赖库\n👷 - 添加 CI 构建系统\n🔧 - 改变配置文件\n🔨 - 大重构\n🎉 - 初次提交\n💄 - 升级 UI 和样式文件\n\nGit README 编写\n\nhttps://github.com/kefranabg/readme-md-generator\n\n增加 .gitignore\n\nhttps://github.com/github/gitignore.git\n\n增加 license\n\nhttps://blog.csdn.net/testcs_dn/article/details/38496107\n\nGit 配置 多个 SSH Key\n\n`ssh-keygen -t rsa -C 'xxxxx@company.com' -f ~/.ssh/gitee_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/github_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/gitlab_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/gitlab_own_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/bitbucket_id_rsa`\n\n`touch ~/.ssh/config`\n\n```shell\n# gitee\nHost gitee.com\nHostName gitee.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitee_id_rsa\n# github\nHost github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/github_id_rsa\n# gitlab\nHost gitlab.com\nHostName gitlab.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitlab_id_rsa\n# gitlab own\nHost gitlab.crm.com\nHostName gitlab.crm.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitlab_own_id_rsa\n# bitbucket\nHost bitbucket.org\nHostName bitbucket.org\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/bitbucket_id_rsa\n```\n\n`$ ssh -T git@gitee.com`\n`$ ssh -T git@github.com`\n`$ ssh -T git@gitlab.com`\n`$ ssh -T git@gitlab.crm.com`\n`$ ssh -T git@bitbucket.org`\n\n1个项目push多个远程仓库\n\n`git remote add github https://github.com/yhyangjiabin/test.git`\n`git remote add gitee https://gitee.com/yhyangjiabin/test.git`\n`git remote add gitlab https://gitlab.com/yhyangjiabin/test.git`\n`git remote add gitlab_own https://gitlab.crm.com/yhyangjiabin/test.git`\n`git remote add bitbucket https://bitbucket.org/yhyangjiabin/test.git`\n\n`git push -u github master`\n`git push -u gitee master`\n`git push -u gitlab master`\n`git push -u github_own master`\n`git push -u bitbucket master`\n\n`git remote`\n\n`git remote -v`\n\n移除\n`git remote rm gitee`\n\n项目命名 Repository name\n\nhttps://sinkcup.github.io/programming-project-name-best-practice\n\nhttps://en.wikipedia.org/wiki/Clean_URL\n\n* 凡是会出现在链接中的名字（用户名、组织名、项目名、branch名、tag名），都一定不要使用下划线，而使用中横线。原因：下划线会与浏览器默认样式重合，导致看起来像空格。\n* 优先全小写，而不要使用驼峰。原因：便于用户手动输入。\n* 项目起名和域名无关。原因：买到更好的域名时，域名就换了。\n* 语义化后缀，看名字就知道是什么项目。\n\n举例:\n\n电子书项目\n\n产品线 ebook\n接口 ebook-api\nJS的网站 ebook-web-app\n微信小程序 ebook-wechat-mini-program\n安卓APP ebook-android-app\n苹果APP ebook-ios-app\n管理员后台网站（假如是PHP/Python等前后端混合的） ebook-admin-web\n管理员后台JS网站（假如是JS前后端分离的） ebook-admin-web-app\n管理员后台接口（假如是JS前后端分离的） ebook-admin-api\n\nGUI 客户端\n\nGitHub Desktop:https://desktop.github.com/\nSourceTree:https://www.sourcetreeapp.com/\n","source":"_posts/2019-06-25-Git常用教程.md","raw":"---\ntitle: Git常用教程\ndate: 2019-06-25 20:39:11\ncategories:\n- git\ntags:\n- 流程\n- commit\n- 图标\n- ssh\n---\n\n<center><font size=4 color=\"red\">git的流程，commit规则，图标意义，连接多个ssh方法</font></center>\n\n<!--more-->\n\n# Git 常用教程\n\n`$ git config --global user.name \"Firstname Lastname\"`\n\n`$ git config --global user.email \"your_email@example.com\"`\n\n配置在下面文件:`~/.gitconfig`\n\n输出内容显示:\n`git config --global color.ui auto`\n\n设置SSH Key\n\n`ssh-keygen -t rsa -C \"your_email@example.com\"`\n`cat ~/.ssh/id_rsa.pub`\n添加到远程Git服务网站\n`ssh -T git@github.com`\n\n第一次:\n\n```shell\ngit clone git@github.com:hirocastest/Hello-World.git\n\ntouch hello_world.php && vim hello_world.php\n\n<?php\n    echo \"Hello World!\";\n?>\n\ncd Hello-World\n\ngit status\n\ngit add hello_world.php\n\ngit commit -m \"Add hello world script by php\"\n\ngit log\n\ngit push\n```\n\n## 标准流程\n\n* 开发或修正:develop->feature branches\n* 合并:feature branches->develop\n* 发布:release branches\n* 合并:release branches->master 然后打Tag发布\n* 发现BUG:master->hotflixes\n\n## 工具\n\n[git-flow](https://github.com/nvie/gitﬂow)\n\nMac安装:`brew install git-flow`\n\n## 仓库初始化\n\nGithub->Git仓库->Add README.md->blog\n\n`git clone` \n\n`git flow init -d`\n\n`git branch -a`\n\n`git push -u origin develop`\n\n`git branch -a`\n\n## 模拟 Git Flow\n\n`git pull`\n\n创建feature分支add-user\n`git flow feature start add-user`\n\n`git branch`\n\n`git push origin feature/add-user`\n\nPR的要点:\n\n* 没有测试or测试未通过\n* 违反编码规则\n* 代码品质过低(命名不明确,方法冗长等)\n* 还有重构的余地\n* 有重复的部分\n\n切换分支,保证develop最新\ndevelop是默认分支\n\n`git checkout develop`\n\n`git pull`\n\n发布\n`git checkout develop`\n\n`git pull`\n\n`git flow release start '1.0.0'`\n\n`git flow release finish '1.0.0'`\n\n`git tag`\n\n更新到远程仓库\n\n`git push origin develop`\n\n`git checkout master`\n\n`git push origin master`\n\n`git push --tags`\n\n在hotfix分支工作\n\n`git fetch origin`\n\n`git flow hotfix start '1.0.1' '1.0.0'`\n\n`git push origin hotfix/1.0.1`\n\n查看Tag\n\n`git fetch origin`\n\n`git tag`\n\n版本号的分配规则\n\nx.y.z格式进行版本管理\n\nx在重大功能变更或新版本不向下兼容时加1,此时y与z的数字归0\n\ny在添加新功能或者删除已有功能时加1, 此时z的数字归0\n\nz只在进行内部修改后加1\n\n具体例子:\n1.0.0 最初发布的版本\n1.0.1 修正了轻微BUG\n1.0.2 修复漏洞\n1.1.0 添加新功能\n2.0.0 更新整体UI并添加新功能\n\n\n**Commit Message Guidelines**\n\nhttps://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits\n\nhttps://www.conventionalcommits.org/en/v1.0.0-beta.4/\n\ngit commit cp 规范\n\nhttps://github.com/Dolov/git-commit-cp\n\nhttp://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\n\nhttps://udacity.github.io/git-styleguide/\n\nhttps://juejin.im/post/5afc5242f265da0b7f44bee4\n\nhttps://www.jianshu.com/p/b9d5a0711528\n\nCommit message(提交说明)\n\n-m 参数 指定commit message 的\n\n多行 git commit\n\n清晰明了 说明目的\n\n格式:\n\n三个部分:Header,Body和Footer\n\n`<type>(<scope>): <subject>`\n// 空一行\n`<body>`\n// 空一行\n`<footer>`\n\nHeader 是必须\nBody和Footer 可用省略\n\n任何一行都不能超过72个字符(或100个字符) 避免换行\n\nHeader: type(必需)、scope(可选)、subject(必需)\n\ntype: 说明commit的类别,只允许使用下面7个标示\n\nfeat：新功能（feature）\nfix：修补bug\ndocs：文档（documentation）\nstyle： 格式（不影响代码运行的变动）\nrefactor：重构（即不是新增功能，也不是修改bug的代码变动）\ntest：增加测试\nchore：构建过程或辅助工具的变动\n\n如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要\n\nscope\n\nscope 用于说明commit影响的范围, 比如数据层、控制层、视图层等,视项目不同而不同\n\nsubject\n\nsubject是commit目的的简短描述, 不超过50个字符\n\n以动词开头，使用第一人称现在时，比如change，而不是changed或changes\n第一个字母小写\n结尾不加句号（.）\n\nBody\n\nBody部分是对本次commit的详细描述, 可以分成多行.\n\n示例:\n\nMore detailed explanatory text, if necessary.  Wrap it to \nabout 72 characters or so. \n\nFurther paragraphs come after blank lines.\n\n- Bullet points are okay, too\n- Use a hanging indent\n\n**注意点:**\n\n使用第一人称现在时，比如使用change而不是changed或changes。\n\n应该说明代码变动的动机，以及与以前行为的对比。\n\nFooter\n\nFooter 部分只用于两种情况\n\n* 不兼容变动\n\n如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。\n\nBREAKING CHANGE: isolate scope bindings definition has changed.\n\nTo migrate the code follow the example below:\n\nBefore:\n\n```shell\nscope: {\n    myAttr: 'attribute',\n}\n```\n\nAfter:\n\n```shell\nscope: {\n    myAttr: '@',\n}\n```\n\nThe removed `inject` wasn't generaly useful for directives so there should be no code using it.\n\n\n\n* 关闭Issue\n\n如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue.\n\nCloses #234\n\n也可以一次关闭多个 issue\n\nCloses #123, #245, #992\n\nRevert\n\n还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。\n\nrevert: feat(pencil): add 'graphiteWidth' option\n\nThis reverts commit 667ecc1654a317a13331b17617d973392f415f02.\n\nBody部分的格式是固定的，必须写成This reverts commit &lt;hash>.，其中的hash是被撤销 commit 的 SHA 标识符。\n\n如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。\n\n编写工具\n\nCommitizen:https://github.com/commitizen/cz-cli\n\nhttp://commitizen.github.io/cz-cli/\n\n`npm install -g commitizen`\n\ncommitizen init cz-conventional-changelog --save --save-exact\n\n`git add .`\n\n`git cz`\n\n检查Commit message 是否符合格式\n\nvalidate-commit-msg:https://github.com/kentcdodds/validate-commit-msg\n\nhttps://github.com/kentcdodds/validate-commit-msg/blob/master/index.js\n\n重命名为下面名字\nvalidate-commit-msg.js\n\n加入Git的hook\n\npackage.json->ghooks:http://npm.im/ghooks\n\n```shell\n\"config\": {\n    \"ghooks\": {\n      \"commit-msg\": \"./validate-commit-msg.js\"\n    }\n}\n```\n\nexample\n\n`$ git add -A `\n`$ git commit -m \"edit markdown\" `\nINVALID COMMIT MSG: does not match \"<type>(<scope>): <subject>\" ! was: edit markdown\n\n\nCommit Message -> Change log\n\n三部分组成:\n\nNew features\nBug fixes\nBreaking changes.\n\n工具:\n\nconventional-changelog \n\n```shell\n$ npm install -g conventional-changelog\n$ cd my-project\n$ conventional-changelog -p angular -i CHANGELOG.md -w\n```\n\nCHANGELOG.md\n\n生成所有发布的 Change log\n\n`$ conventional-changelog -p angular -i CHANGELOG.md -w -r 0`\n\npackage.json\n\n```shell\n{\n  \"scripts\": {\n    \"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -w -r 0\"\n  }\n}\n```\n\n`$ npm run changelog`\n\n\n工具链:\n\n commitizen/cz-cli \n commitizen/cz-conventional-changelog\n conventional-changelog/standard-version \n \n 持续集成:\n \n marionebl/commitlint\n \n \n Git 的表情使用\n \n https://mkblog.cn/872/\n \n https://gitmoji.carloscuesta.me/\n \n \n🎨 - 改进结构和代码格式\n⚡️ - 优化性能\n🔥 - 移除代码或文件\n🐛 - 修复 bug\n✨ - 引入新功能\n🍎 - 修复 MacOS 下的问题\n📝 - 写文档\n🚀 - 部署新功能\n\n✅ - 添加测试用例\n🔖 - 发版/版本标签\n🔒 - 修复安全问题\n🐧 - 修复 Linux 下的问题\n🚨 - 移除 linter 的警告\n🚧 - 工作在进行中\n💚 - 修复 CI 构建问题\n⬇️ - 降级依赖库\n\n🏁 - 修复 Windows 下的问题\n⬆️ - 升级依赖库\n👷 - 添加 CI 构建系统\n🔧 - 改变配置文件\n🔨 - 大重构\n🎉 - 初次提交\n💄 - 升级 UI 和样式文件\n\nGit README 编写\n\nhttps://github.com/kefranabg/readme-md-generator\n\n增加 .gitignore\n\nhttps://github.com/github/gitignore.git\n\n增加 license\n\nhttps://blog.csdn.net/testcs_dn/article/details/38496107\n\nGit 配置 多个 SSH Key\n\n`ssh-keygen -t rsa -C 'xxxxx@company.com' -f ~/.ssh/gitee_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/github_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/gitlab_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/gitlab_own_id_rsa`\n\n`ssh-keygen -t rsa -C 'xxxxx@qq.com' -f ~/.ssh/bitbucket_id_rsa`\n\n`touch ~/.ssh/config`\n\n```shell\n# gitee\nHost gitee.com\nHostName gitee.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitee_id_rsa\n# github\nHost github.com\nHostName github.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/github_id_rsa\n# gitlab\nHost gitlab.com\nHostName gitlab.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitlab_id_rsa\n# gitlab own\nHost gitlab.crm.com\nHostName gitlab.crm.com\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/gitlab_own_id_rsa\n# bitbucket\nHost bitbucket.org\nHostName bitbucket.org\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/bitbucket_id_rsa\n```\n\n`$ ssh -T git@gitee.com`\n`$ ssh -T git@github.com`\n`$ ssh -T git@gitlab.com`\n`$ ssh -T git@gitlab.crm.com`\n`$ ssh -T git@bitbucket.org`\n\n1个项目push多个远程仓库\n\n`git remote add github https://github.com/yhyangjiabin/test.git`\n`git remote add gitee https://gitee.com/yhyangjiabin/test.git`\n`git remote add gitlab https://gitlab.com/yhyangjiabin/test.git`\n`git remote add gitlab_own https://gitlab.crm.com/yhyangjiabin/test.git`\n`git remote add bitbucket https://bitbucket.org/yhyangjiabin/test.git`\n\n`git push -u github master`\n`git push -u gitee master`\n`git push -u gitlab master`\n`git push -u github_own master`\n`git push -u bitbucket master`\n\n`git remote`\n\n`git remote -v`\n\n移除\n`git remote rm gitee`\n\n项目命名 Repository name\n\nhttps://sinkcup.github.io/programming-project-name-best-practice\n\nhttps://en.wikipedia.org/wiki/Clean_URL\n\n* 凡是会出现在链接中的名字（用户名、组织名、项目名、branch名、tag名），都一定不要使用下划线，而使用中横线。原因：下划线会与浏览器默认样式重合，导致看起来像空格。\n* 优先全小写，而不要使用驼峰。原因：便于用户手动输入。\n* 项目起名和域名无关。原因：买到更好的域名时，域名就换了。\n* 语义化后缀，看名字就知道是什么项目。\n\n举例:\n\n电子书项目\n\n产品线 ebook\n接口 ebook-api\nJS的网站 ebook-web-app\n微信小程序 ebook-wechat-mini-program\n安卓APP ebook-android-app\n苹果APP ebook-ios-app\n管理员后台网站（假如是PHP/Python等前后端混合的） ebook-admin-web\n管理员后台JS网站（假如是JS前后端分离的） ebook-admin-web-app\n管理员后台接口（假如是JS前后端分离的） ebook-admin-api\n\nGUI 客户端\n\nGitHub Desktop:https://desktop.github.com/\nSourceTree:https://www.sourcetreeapp.com/\n","slug":"2019-06-25-Git常用教程","published":1,"updated":"2019-08-10T04:35:46.759Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vo002d54tnv4njketx","content":"<center><font size=\"4\" color=\"red\">git的流程，commit规则，图标意义，连接多个ssh方法</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Git-常用教程\"><a href=\"#Git-常用教程\" class=\"headerlink\" title=\"Git 常用教程\"></a>Git 常用教程</h1><p><code>$ git config --global user.name &quot;Firstname Lastname&quot;</code></p>\n<p><code>$ git config --global user.email &quot;your_email@example.com&quot;</code></p>\n<p>配置在下面文件:<code>~/.gitconfig</code></p>\n<p>输出内容显示:<br><code>git config --global color.ui auto</code></p>\n<p>设置SSH Key</p>\n<p><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code><br><code>cat ~/.ssh/id_rsa.pub</code><br>添加到远程Git服务网站<br><code>ssh -T git@github.com</code></p>\n<p>第一次:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:hirocastest/Hello-World.git</span><br><span class=\"line\"></span><br><span class=\"line\">touch hello_world.php &amp;&amp; vim hello_world.php</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">    echo \"Hello World!\";</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">cd Hello-World</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">git add hello_world.php</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m \"Add hello world script by php\"</span><br><span class=\"line\"></span><br><span class=\"line\">git log</span><br><span class=\"line\"></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<h2 id=\"标准流程\"><a href=\"#标准流程\" class=\"headerlink\" title=\"标准流程\"></a>标准流程</h2><ul>\n<li>开发或修正:develop-&gt;feature branches</li>\n<li>合并:feature branches-&gt;develop</li>\n<li>发布:release branches</li>\n<li>合并:release branches-&gt;master 然后打Tag发布</li>\n<li>发现BUG:master-&gt;hotflixes</li>\n</ul>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p><a href=\"https://github.com/nvie/gitﬂow\" target=\"_blank\" rel=\"noopener\">git-flow</a></p>\n<p>Mac安装:<code>brew install git-flow</code></p>\n<h2 id=\"仓库初始化\"><a href=\"#仓库初始化\" class=\"headerlink\" title=\"仓库初始化\"></a>仓库初始化</h2><p>Github-&gt;Git仓库-&gt;Add README.md-&gt;blog</p>\n<p><code>git clone</code> </p>\n<p><code>git flow init -d</code></p>\n<p><code>git branch -a</code></p>\n<p><code>git push -u origin develop</code></p>\n<p><code>git branch -a</code></p>\n<h2 id=\"模拟-Git-Flow\"><a href=\"#模拟-Git-Flow\" class=\"headerlink\" title=\"模拟 Git Flow\"></a>模拟 Git Flow</h2><p><code>git pull</code></p>\n<p>创建feature分支add-user<br><code>git flow feature start add-user</code></p>\n<p><code>git branch</code></p>\n<p><code>git push origin feature/add-user</code></p>\n<p>PR的要点:</p>\n<ul>\n<li>没有测试or测试未通过</li>\n<li>违反编码规则</li>\n<li>代码品质过低(命名不明确,方法冗长等)</li>\n<li>还有重构的余地</li>\n<li>有重复的部分</li>\n</ul>\n<p>切换分支,保证develop最新<br>develop是默认分支</p>\n<p><code>git checkout develop</code></p>\n<p><code>git pull</code></p>\n<p>发布<br><code>git checkout develop</code></p>\n<p><code>git pull</code></p>\n<p><code>git flow release start &#39;1.0.0&#39;</code></p>\n<p><code>git flow release finish &#39;1.0.0&#39;</code></p>\n<p><code>git tag</code></p>\n<p>更新到远程仓库</p>\n<p><code>git push origin develop</code></p>\n<p><code>git checkout master</code></p>\n<p><code>git push origin master</code></p>\n<p><code>git push --tags</code></p>\n<p>在hotfix分支工作</p>\n<p><code>git fetch origin</code></p>\n<p><code>git flow hotfix start &#39;1.0.1&#39; &#39;1.0.0&#39;</code></p>\n<p><code>git push origin hotfix/1.0.1</code></p>\n<p>查看Tag</p>\n<p><code>git fetch origin</code></p>\n<p><code>git tag</code></p>\n<p>版本号的分配规则</p>\n<p>x.y.z格式进行版本管理</p>\n<p>x在重大功能变更或新版本不向下兼容时加1,此时y与z的数字归0</p>\n<p>y在添加新功能或者删除已有功能时加1, 此时z的数字归0</p>\n<p>z只在进行内部修改后加1</p>\n<p>具体例子:<br>1.0.0 最初发布的版本<br>1.0.1 修正了轻微BUG<br>1.0.2 修复漏洞<br>1.1.0 添加新功能<br>2.0.0 更新整体UI并添加新功能</p>\n<p><strong>Commit Message Guidelines</strong></p>\n<p><a href=\"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits\" target=\"_blank\" rel=\"noopener\">https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits</a></p>\n<p><a href=\"https://www.conventionalcommits.org/en/v1.0.0-beta.4/\" target=\"_blank\" rel=\"noopener\">https://www.conventionalcommits.org/en/v1.0.0-beta.4/</a></p>\n<p>git commit cp 规范</p>\n<p><a href=\"https://github.com/Dolov/git-commit-cp\" target=\"_blank\" rel=\"noopener\">https://github.com/Dolov/git-commit-cp</a></p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html</a></p>\n<p><a href=\"https://udacity.github.io/git-styleguide/\" target=\"_blank\" rel=\"noopener\">https://udacity.github.io/git-styleguide/</a></p>\n<p><a href=\"https://juejin.im/post/5afc5242f265da0b7f44bee4\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5afc5242f265da0b7f44bee4</a></p>\n<p><a href=\"https://www.jianshu.com/p/b9d5a0711528\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/b9d5a0711528</a></p>\n<p>Commit message(提交说明)</p>\n<p>-m 参数 指定commit message 的</p>\n<p>多行 git commit</p>\n<p>清晰明了 说明目的</p>\n<p>格式:</p>\n<p>三个部分:Header,Body和Footer</p>\n<p><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</code><br>// 空一行<br><code>&lt;body&gt;</code><br>// 空一行<br><code>&lt;footer&gt;</code></p>\n<p>Header 是必须<br>Body和Footer 可用省略</p>\n<p>任何一行都不能超过72个字符(或100个字符) 避免换行</p>\n<p>Header: type(必需)、scope(可选)、subject(必需)</p>\n<p>type: 说明commit的类别,只允许使用下面7个标示</p>\n<p>feat：新功能（feature）<br>fix：修补bug<br>docs：文档（documentation）<br>style： 格式（不影响代码运行的变动）<br>refactor：重构（即不是新增功能，也不是修改bug的代码变动）<br>test：增加测试<br>chore：构建过程或辅助工具的变动</p>\n<p>如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要</p>\n<p>scope</p>\n<p>scope 用于说明commit影响的范围, 比如数据层、控制层、视图层等,视项目不同而不同</p>\n<p>subject</p>\n<p>subject是commit目的的简短描述, 不超过50个字符</p>\n<p>以动词开头，使用第一人称现在时，比如change，而不是changed或changes<br>第一个字母小写<br>结尾不加句号（.）</p>\n<p>Body</p>\n<p>Body部分是对本次commit的详细描述, 可以分成多行.</p>\n<p>示例:</p>\n<p>More detailed explanatory text, if necessary.  Wrap it to<br>about 72 characters or so. </p>\n<p>Further paragraphs come after blank lines.</p>\n<ul>\n<li>Bullet points are okay, too</li>\n<li>Use a hanging indent</li>\n</ul>\n<p><strong>注意点:</strong></p>\n<p>使用第一人称现在时，比如使用change而不是changed或changes。</p>\n<p>应该说明代码变动的动机，以及与以前行为的对比。</p>\n<p>Footer</p>\n<p>Footer 部分只用于两种情况</p>\n<ul>\n<li>不兼容变动</li>\n</ul>\n<p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p>\n<p>BREAKING CHANGE: isolate scope bindings definition has changed.</p>\n<p>To migrate the code follow the example below:</p>\n<p>Before:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope: &#123;</span><br><span class=\"line\">    myAttr: 'attribute',</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>After:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope: &#123;</span><br><span class=\"line\">    myAttr: '@',</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The removed <code>inject</code> wasn’t generaly useful for directives so there should be no code using it.</p>\n<ul>\n<li>关闭Issue</li>\n</ul>\n<p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue.</p>\n<p>Closes #234</p>\n<p>也可以一次关闭多个 issue</p>\n<p>Closes #123, #245, #992</p>\n<p>Revert</p>\n<p>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。</p>\n<p>revert: feat(pencil): add ‘graphiteWidth’ option</p>\n<p>This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</p>\n<p>Body部分的格式是固定的，必须写成This reverts commit &lt;hash&gt;.，其中的hash是被撤销 commit 的 SHA 标识符。</p>\n<p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</p>\n<p>编写工具</p>\n<p>Commitizen:<a href=\"https://github.com/commitizen/cz-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/commitizen/cz-cli</a></p>\n<p><a href=\"http://commitizen.github.io/cz-cli/\" target=\"_blank\" rel=\"noopener\">http://commitizen.github.io/cz-cli/</a></p>\n<p><code>npm install -g commitizen</code></p>\n<p>commitizen init cz-conventional-changelog –save –save-exact</p>\n<p><code>git add .</code></p>\n<p><code>git cz</code></p>\n<p>检查Commit message 是否符合格式</p>\n<p>validate-commit-msg:<a href=\"https://github.com/kentcdodds/validate-commit-msg\" target=\"_blank\" rel=\"noopener\">https://github.com/kentcdodds/validate-commit-msg</a></p>\n<p><a href=\"https://github.com/kentcdodds/validate-commit-msg/blob/master/index.js\" target=\"_blank\" rel=\"noopener\">https://github.com/kentcdodds/validate-commit-msg/blob/master/index.js</a></p>\n<p>重命名为下面名字<br>validate-commit-msg.js</p>\n<p>加入Git的hook</p>\n<p>package.json-&gt;ghooks:<a href=\"http://npm.im/ghooks\" target=\"_blank\" rel=\"noopener\">http://npm.im/ghooks</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"config\": &#123;</span><br><span class=\"line\">    \"ghooks\": &#123;</span><br><span class=\"line\">      \"commit-msg\": \"./validate-commit-msg.js\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<p><code>$ git add -A</code><br><code>$ git commit -m &quot;edit markdown&quot;</code><br>INVALID COMMIT MSG: does not match “<type>(<scope>): <subject>“ ! was: edit markdown</subject></scope></type></p>\n<p>Commit Message -&gt; Change log</p>\n<p>三部分组成:</p>\n<p>New features<br>Bug fixes<br>Breaking changes.</p>\n<p>工具:</p>\n<p>conventional-changelog </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install -g conventional-changelog</span><br><span class=\"line\"><span class=\"meta\">$</span> cd my-project</span><br><span class=\"line\"><span class=\"meta\">$</span> conventional-changelog -p angular -i CHANGELOG.md -w</span><br></pre></td></tr></table></figure>\n<p>CHANGELOG.md</p>\n<p>生成所有发布的 Change log</p>\n<p><code>$ conventional-changelog -p angular -i CHANGELOG.md -w -r 0</code></p>\n<p>package.json</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -w -r 0\"</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>$ npm run changelog</code></p>\n<p>工具链:</p>\n<p> commitizen/cz-cli<br> commitizen/cz-conventional-changelog<br> conventional-changelog/standard-version </p>\n<p> 持续集成:</p>\n<p> marionebl/commitlint</p>\n<p> Git 的表情使用</p>\n<p> <a href=\"https://mkblog.cn/872/\" target=\"_blank\" rel=\"noopener\">https://mkblog.cn/872/</a></p>\n<p> <a href=\"https://gitmoji.carloscuesta.me/\" target=\"_blank\" rel=\"noopener\">https://gitmoji.carloscuesta.me/</a></p>\n<p>🎨 - 改进结构和代码格式<br>⚡️ - 优化性能<br>🔥 - 移除代码或文件<br>🐛 - 修复 bug<br>✨ - 引入新功能<br>🍎 - 修复 MacOS 下的问题<br>📝 - 写文档<br>🚀 - 部署新功能</p>\n<p>✅ - 添加测试用例<br>🔖 - 发版/版本标签<br>🔒 - 修复安全问题<br>🐧 - 修复 Linux 下的问题<br>🚨 - 移除 linter 的警告<br>🚧 - 工作在进行中<br>💚 - 修复 CI 构建问题<br>⬇️ - 降级依赖库</p>\n<p>🏁 - 修复 Windows 下的问题<br>⬆️ - 升级依赖库<br>👷 - 添加 CI 构建系统<br>🔧 - 改变配置文件<br>🔨 - 大重构<br>🎉 - 初次提交<br>💄 - 升级 UI 和样式文件</p>\n<p>Git README 编写</p>\n<p><a href=\"https://github.com/kefranabg/readme-md-generator\" target=\"_blank\" rel=\"noopener\">https://github.com/kefranabg/readme-md-generator</a></p>\n<p>增加 .gitignore</p>\n<p><a href=\"https://github.com/github/gitignore.git\" target=\"_blank\" rel=\"noopener\">https://github.com/github/gitignore.git</a></p>\n<p>增加 license</p>\n<p><a href=\"https://blog.csdn.net/testcs_dn/article/details/38496107\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/testcs_dn/article/details/38496107</a></p>\n<p>Git 配置 多个 SSH Key</p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@company.com&#39; -f ~/.ssh/gitee_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/github_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/gitlab_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/gitlab_own_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/bitbucket_id_rsa</code></p>\n<p><code>touch ~/.ssh/config</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> gitee</span><br><span class=\"line\">Host gitee.com</span><br><span class=\"line\">HostName gitee.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/gitee_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> github</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/github_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> gitlab</span><br><span class=\"line\">Host gitlab.com</span><br><span class=\"line\">HostName gitlab.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/gitlab_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> gitlab own</span><br><span class=\"line\">Host gitlab.crm.com</span><br><span class=\"line\">HostName gitlab.crm.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/gitlab_own_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> bitbucket</span><br><span class=\"line\">Host bitbucket.org</span><br><span class=\"line\">HostName bitbucket.org</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/bitbucket_id_rsa</span><br></pre></td></tr></table></figure>\n<p><code>$ ssh -T git@gitee.com</code><br><code>$ ssh -T git@github.com</code><br><code>$ ssh -T git@gitlab.com</code><br><code>$ ssh -T git@gitlab.crm.com</code><br><code>$ ssh -T git@bitbucket.org</code></p>\n<p>1个项目push多个远程仓库</p>\n<p><code>git remote add github https://github.com/yhyangjiabin/test.git</code><br><code>git remote add gitee https://gitee.com/yhyangjiabin/test.git</code><br><code>git remote add gitlab https://gitlab.com/yhyangjiabin/test.git</code><br><code>git remote add gitlab_own https://gitlab.crm.com/yhyangjiabin/test.git</code><br><code>git remote add bitbucket https://bitbucket.org/yhyangjiabin/test.git</code></p>\n<p><code>git push -u github master</code><br><code>git push -u gitee master</code><br><code>git push -u gitlab master</code><br><code>git push -u github_own master</code><br><code>git push -u bitbucket master</code></p>\n<p><code>git remote</code></p>\n<p><code>git remote -v</code></p>\n<p>移除<br><code>git remote rm gitee</code></p>\n<p>项目命名 Repository name</p>\n<p><a href=\"https://sinkcup.github.io/programming-project-name-best-practice\" target=\"_blank\" rel=\"noopener\">https://sinkcup.github.io/programming-project-name-best-practice</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Clean_URL\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Clean_URL</a></p>\n<ul>\n<li>凡是会出现在链接中的名字（用户名、组织名、项目名、branch名、tag名），都一定不要使用下划线，而使用中横线。原因：下划线会与浏览器默认样式重合，导致看起来像空格。</li>\n<li>优先全小写，而不要使用驼峰。原因：便于用户手动输入。</li>\n<li>项目起名和域名无关。原因：买到更好的域名时，域名就换了。</li>\n<li>语义化后缀，看名字就知道是什么项目。</li>\n</ul>\n<p>举例:</p>\n<p>电子书项目</p>\n<p>产品线 ebook<br>接口 ebook-api<br>JS的网站 ebook-web-app<br>微信小程序 ebook-wechat-mini-program<br>安卓APP ebook-android-app<br>苹果APP ebook-ios-app<br>管理员后台网站（假如是PHP/Python等前后端混合的） ebook-admin-web<br>管理员后台JS网站（假如是JS前后端分离的） ebook-admin-web-app<br>管理员后台接口（假如是JS前后端分离的） ebook-admin-api</p>\n<p>GUI 客户端</p>\n<p>GitHub Desktop:<a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">https://desktop.github.com/</a><br>SourceTree:<a href=\"https://www.sourcetreeapp.com/\" target=\"_blank\" rel=\"noopener\">https://www.sourcetreeapp.com/</a></p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">git的流程，commit规则，图标意义，连接多个ssh方法</font></center>","more":"<h1 id=\"Git-常用教程\"><a href=\"#Git-常用教程\" class=\"headerlink\" title=\"Git 常用教程\"></a>Git 常用教程</h1><p><code>$ git config --global user.name &quot;Firstname Lastname&quot;</code></p>\n<p><code>$ git config --global user.email &quot;your_email@example.com&quot;</code></p>\n<p>配置在下面文件:<code>~/.gitconfig</code></p>\n<p>输出内容显示:<br><code>git config --global color.ui auto</code></p>\n<p>设置SSH Key</p>\n<p><code>ssh-keygen -t rsa -C &quot;your_email@example.com&quot;</code><br><code>cat ~/.ssh/id_rsa.pub</code><br>添加到远程Git服务网站<br><code>ssh -T git@github.com</code></p>\n<p>第一次:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@github.com:hirocastest/Hello-World.git</span><br><span class=\"line\"></span><br><span class=\"line\">touch hello_world.php &amp;&amp; vim hello_world.php</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">    echo \"Hello World!\";</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">cd Hello-World</span><br><span class=\"line\"></span><br><span class=\"line\">git status</span><br><span class=\"line\"></span><br><span class=\"line\">git add hello_world.php</span><br><span class=\"line\"></span><br><span class=\"line\">git commit -m \"Add hello world script by php\"</span><br><span class=\"line\"></span><br><span class=\"line\">git log</span><br><span class=\"line\"></span><br><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n<h2 id=\"标准流程\"><a href=\"#标准流程\" class=\"headerlink\" title=\"标准流程\"></a>标准流程</h2><ul>\n<li>开发或修正:develop-&gt;feature branches</li>\n<li>合并:feature branches-&gt;develop</li>\n<li>发布:release branches</li>\n<li>合并:release branches-&gt;master 然后打Tag发布</li>\n<li>发现BUG:master-&gt;hotflixes</li>\n</ul>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p><a href=\"https://github.com/nvie/gitﬂow\" target=\"_blank\" rel=\"noopener\">git-flow</a></p>\n<p>Mac安装:<code>brew install git-flow</code></p>\n<h2 id=\"仓库初始化\"><a href=\"#仓库初始化\" class=\"headerlink\" title=\"仓库初始化\"></a>仓库初始化</h2><p>Github-&gt;Git仓库-&gt;Add README.md-&gt;blog</p>\n<p><code>git clone</code> </p>\n<p><code>git flow init -d</code></p>\n<p><code>git branch -a</code></p>\n<p><code>git push -u origin develop</code></p>\n<p><code>git branch -a</code></p>\n<h2 id=\"模拟-Git-Flow\"><a href=\"#模拟-Git-Flow\" class=\"headerlink\" title=\"模拟 Git Flow\"></a>模拟 Git Flow</h2><p><code>git pull</code></p>\n<p>创建feature分支add-user<br><code>git flow feature start add-user</code></p>\n<p><code>git branch</code></p>\n<p><code>git push origin feature/add-user</code></p>\n<p>PR的要点:</p>\n<ul>\n<li>没有测试or测试未通过</li>\n<li>违反编码规则</li>\n<li>代码品质过低(命名不明确,方法冗长等)</li>\n<li>还有重构的余地</li>\n<li>有重复的部分</li>\n</ul>\n<p>切换分支,保证develop最新<br>develop是默认分支</p>\n<p><code>git checkout develop</code></p>\n<p><code>git pull</code></p>\n<p>发布<br><code>git checkout develop</code></p>\n<p><code>git pull</code></p>\n<p><code>git flow release start &#39;1.0.0&#39;</code></p>\n<p><code>git flow release finish &#39;1.0.0&#39;</code></p>\n<p><code>git tag</code></p>\n<p>更新到远程仓库</p>\n<p><code>git push origin develop</code></p>\n<p><code>git checkout master</code></p>\n<p><code>git push origin master</code></p>\n<p><code>git push --tags</code></p>\n<p>在hotfix分支工作</p>\n<p><code>git fetch origin</code></p>\n<p><code>git flow hotfix start &#39;1.0.1&#39; &#39;1.0.0&#39;</code></p>\n<p><code>git push origin hotfix/1.0.1</code></p>\n<p>查看Tag</p>\n<p><code>git fetch origin</code></p>\n<p><code>git tag</code></p>\n<p>版本号的分配规则</p>\n<p>x.y.z格式进行版本管理</p>\n<p>x在重大功能变更或新版本不向下兼容时加1,此时y与z的数字归0</p>\n<p>y在添加新功能或者删除已有功能时加1, 此时z的数字归0</p>\n<p>z只在进行内部修改后加1</p>\n<p>具体例子:<br>1.0.0 最初发布的版本<br>1.0.1 修正了轻微BUG<br>1.0.2 修复漏洞<br>1.1.0 添加新功能<br>2.0.0 更新整体UI并添加新功能</p>\n<p><strong>Commit Message Guidelines</strong></p>\n<p><a href=\"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits\" target=\"_blank\" rel=\"noopener\">https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits</a></p>\n<p><a href=\"https://www.conventionalcommits.org/en/v1.0.0-beta.4/\" target=\"_blank\" rel=\"noopener\">https://www.conventionalcommits.org/en/v1.0.0-beta.4/</a></p>\n<p>git commit cp 规范</p>\n<p><a href=\"https://github.com/Dolov/git-commit-cp\" target=\"_blank\" rel=\"noopener\">https://github.com/Dolov/git-commit-cp</a></p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2016/01/commit_message_change_log.html</a></p>\n<p><a href=\"https://udacity.github.io/git-styleguide/\" target=\"_blank\" rel=\"noopener\">https://udacity.github.io/git-styleguide/</a></p>\n<p><a href=\"https://juejin.im/post/5afc5242f265da0b7f44bee4\" target=\"_blank\" rel=\"noopener\">https://juejin.im/post/5afc5242f265da0b7f44bee4</a></p>\n<p><a href=\"https://www.jianshu.com/p/b9d5a0711528\" target=\"_blank\" rel=\"noopener\">https://www.jianshu.com/p/b9d5a0711528</a></p>\n<p>Commit message(提交说明)</p>\n<p>-m 参数 指定commit message 的</p>\n<p>多行 git commit</p>\n<p>清晰明了 说明目的</p>\n<p>格式:</p>\n<p>三个部分:Header,Body和Footer</p>\n<p><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</code><br>// 空一行<br><code>&lt;body&gt;</code><br>// 空一行<br><code>&lt;footer&gt;</code></p>\n<p>Header 是必须<br>Body和Footer 可用省略</p>\n<p>任何一行都不能超过72个字符(或100个字符) 避免换行</p>\n<p>Header: type(必需)、scope(可选)、subject(必需)</p>\n<p>type: 说明commit的类别,只允许使用下面7个标示</p>\n<p>feat：新功能（feature）<br>fix：修补bug<br>docs：文档（documentation）<br>style： 格式（不影响代码运行的变动）<br>refactor：重构（即不是新增功能，也不是修改bug的代码变动）<br>test：增加测试<br>chore：构建过程或辅助工具的变动</p>\n<p>如果type为feat和fix，则该 commit 将肯定出现在 Change log 之中。其他情况（docs、chore、style、refactor、test）由你决定，要不要放入 Change log，建议是不要</p>\n<p>scope</p>\n<p>scope 用于说明commit影响的范围, 比如数据层、控制层、视图层等,视项目不同而不同</p>\n<p>subject</p>\n<p>subject是commit目的的简短描述, 不超过50个字符</p>\n<p>以动词开头，使用第一人称现在时，比如change，而不是changed或changes<br>第一个字母小写<br>结尾不加句号（.）</p>\n<p>Body</p>\n<p>Body部分是对本次commit的详细描述, 可以分成多行.</p>\n<p>示例:</p>\n<p>More detailed explanatory text, if necessary.  Wrap it to<br>about 72 characters or so. </p>\n<p>Further paragraphs come after blank lines.</p>\n<ul>\n<li>Bullet points are okay, too</li>\n<li>Use a hanging indent</li>\n</ul>\n<p><strong>注意点:</strong></p>\n<p>使用第一人称现在时，比如使用change而不是changed或changes。</p>\n<p>应该说明代码变动的动机，以及与以前行为的对比。</p>\n<p>Footer</p>\n<p>Footer 部分只用于两种情况</p>\n<ul>\n<li>不兼容变动</li>\n</ul>\n<p>如果当前代码与上一个版本不兼容，则 Footer 部分以BREAKING CHANGE开头，后面是对变动的描述、以及变动理由和迁移方法。</p>\n<p>BREAKING CHANGE: isolate scope bindings definition has changed.</p>\n<p>To migrate the code follow the example below:</p>\n<p>Before:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope: &#123;</span><br><span class=\"line\">    myAttr: 'attribute',</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>After:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scope: &#123;</span><br><span class=\"line\">    myAttr: '@',</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The removed <code>inject</code> wasn’t generaly useful for directives so there should be no code using it.</p>\n<ul>\n<li>关闭Issue</li>\n</ul>\n<p>如果当前 commit 针对某个issue，那么可以在 Footer 部分关闭这个 issue.</p>\n<p>Closes #234</p>\n<p>也可以一次关闭多个 issue</p>\n<p>Closes #123, #245, #992</p>\n<p>Revert</p>\n<p>还有一种特殊情况，如果当前 commit 用于撤销以前的 commit，则必须以revert:开头，后面跟着被撤销 Commit 的 Header。</p>\n<p>revert: feat(pencil): add ‘graphiteWidth’ option</p>\n<p>This reverts commit 667ecc1654a317a13331b17617d973392f415f02.</p>\n<p>Body部分的格式是固定的，必须写成This reverts commit &lt;hash&gt;.，其中的hash是被撤销 commit 的 SHA 标识符。</p>\n<p>如果当前 commit 与被撤销的 commit，在同一个发布（release）里面，那么它们都不会出现在 Change log 里面。如果两者在不同的发布，那么当前 commit，会出现在 Change log 的Reverts小标题下面。</p>\n<p>编写工具</p>\n<p>Commitizen:<a href=\"https://github.com/commitizen/cz-cli\" target=\"_blank\" rel=\"noopener\">https://github.com/commitizen/cz-cli</a></p>\n<p><a href=\"http://commitizen.github.io/cz-cli/\" target=\"_blank\" rel=\"noopener\">http://commitizen.github.io/cz-cli/</a></p>\n<p><code>npm install -g commitizen</code></p>\n<p>commitizen init cz-conventional-changelog –save –save-exact</p>\n<p><code>git add .</code></p>\n<p><code>git cz</code></p>\n<p>检查Commit message 是否符合格式</p>\n<p>validate-commit-msg:<a href=\"https://github.com/kentcdodds/validate-commit-msg\" target=\"_blank\" rel=\"noopener\">https://github.com/kentcdodds/validate-commit-msg</a></p>\n<p><a href=\"https://github.com/kentcdodds/validate-commit-msg/blob/master/index.js\" target=\"_blank\" rel=\"noopener\">https://github.com/kentcdodds/validate-commit-msg/blob/master/index.js</a></p>\n<p>重命名为下面名字<br>validate-commit-msg.js</p>\n<p>加入Git的hook</p>\n<p>package.json-&gt;ghooks:<a href=\"http://npm.im/ghooks\" target=\"_blank\" rel=\"noopener\">http://npm.im/ghooks</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"config\": &#123;</span><br><span class=\"line\">    \"ghooks\": &#123;</span><br><span class=\"line\">      \"commit-msg\": \"./validate-commit-msg.js\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>example</p>\n<p><code>$ git add -A</code><br><code>$ git commit -m &quot;edit markdown&quot;</code><br>INVALID COMMIT MSG: does not match “<type>(<scope>): <subject>“ ! was: edit markdown</subject></scope></type></p>\n<p>Commit Message -&gt; Change log</p>\n<p>三部分组成:</p>\n<p>New features<br>Bug fixes<br>Breaking changes.</p>\n<p>工具:</p>\n<p>conventional-changelog </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install -g conventional-changelog</span><br><span class=\"line\"><span class=\"meta\">$</span> cd my-project</span><br><span class=\"line\"><span class=\"meta\">$</span> conventional-changelog -p angular -i CHANGELOG.md -w</span><br></pre></td></tr></table></figure>\n<p>CHANGELOG.md</p>\n<p>生成所有发布的 Change log</p>\n<p><code>$ conventional-changelog -p angular -i CHANGELOG.md -w -r 0</code></p>\n<p>package.json</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  \"scripts\": &#123;</span><br><span class=\"line\">    \"changelog\": \"conventional-changelog -p angular -i CHANGELOG.md -w -r 0\"</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>$ npm run changelog</code></p>\n<p>工具链:</p>\n<p> commitizen/cz-cli<br> commitizen/cz-conventional-changelog<br> conventional-changelog/standard-version </p>\n<p> 持续集成:</p>\n<p> marionebl/commitlint</p>\n<p> Git 的表情使用</p>\n<p> <a href=\"https://mkblog.cn/872/\" target=\"_blank\" rel=\"noopener\">https://mkblog.cn/872/</a></p>\n<p> <a href=\"https://gitmoji.carloscuesta.me/\" target=\"_blank\" rel=\"noopener\">https://gitmoji.carloscuesta.me/</a></p>\n<p>🎨 - 改进结构和代码格式<br>⚡️ - 优化性能<br>🔥 - 移除代码或文件<br>🐛 - 修复 bug<br>✨ - 引入新功能<br>🍎 - 修复 MacOS 下的问题<br>📝 - 写文档<br>🚀 - 部署新功能</p>\n<p>✅ - 添加测试用例<br>🔖 - 发版/版本标签<br>🔒 - 修复安全问题<br>🐧 - 修复 Linux 下的问题<br>🚨 - 移除 linter 的警告<br>🚧 - 工作在进行中<br>💚 - 修复 CI 构建问题<br>⬇️ - 降级依赖库</p>\n<p>🏁 - 修复 Windows 下的问题<br>⬆️ - 升级依赖库<br>👷 - 添加 CI 构建系统<br>🔧 - 改变配置文件<br>🔨 - 大重构<br>🎉 - 初次提交<br>💄 - 升级 UI 和样式文件</p>\n<p>Git README 编写</p>\n<p><a href=\"https://github.com/kefranabg/readme-md-generator\" target=\"_blank\" rel=\"noopener\">https://github.com/kefranabg/readme-md-generator</a></p>\n<p>增加 .gitignore</p>\n<p><a href=\"https://github.com/github/gitignore.git\" target=\"_blank\" rel=\"noopener\">https://github.com/github/gitignore.git</a></p>\n<p>增加 license</p>\n<p><a href=\"https://blog.csdn.net/testcs_dn/article/details/38496107\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/testcs_dn/article/details/38496107</a></p>\n<p>Git 配置 多个 SSH Key</p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@company.com&#39; -f ~/.ssh/gitee_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/github_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/gitlab_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/gitlab_own_id_rsa</code></p>\n<p><code>ssh-keygen -t rsa -C &#39;xxxxx@qq.com&#39; -f ~/.ssh/bitbucket_id_rsa</code></p>\n<p><code>touch ~/.ssh/config</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> gitee</span><br><span class=\"line\">Host gitee.com</span><br><span class=\"line\">HostName gitee.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/gitee_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> github</span><br><span class=\"line\">Host github.com</span><br><span class=\"line\">HostName github.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/github_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> gitlab</span><br><span class=\"line\">Host gitlab.com</span><br><span class=\"line\">HostName gitlab.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/gitlab_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> gitlab own</span><br><span class=\"line\">Host gitlab.crm.com</span><br><span class=\"line\">HostName gitlab.crm.com</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/gitlab_own_id_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span> bitbucket</span><br><span class=\"line\">Host bitbucket.org</span><br><span class=\"line\">HostName bitbucket.org</span><br><span class=\"line\">PreferredAuthentications publickey</span><br><span class=\"line\">IdentityFile ~/.ssh/bitbucket_id_rsa</span><br></pre></td></tr></table></figure>\n<p><code>$ ssh -T git@gitee.com</code><br><code>$ ssh -T git@github.com</code><br><code>$ ssh -T git@gitlab.com</code><br><code>$ ssh -T git@gitlab.crm.com</code><br><code>$ ssh -T git@bitbucket.org</code></p>\n<p>1个项目push多个远程仓库</p>\n<p><code>git remote add github https://github.com/yhyangjiabin/test.git</code><br><code>git remote add gitee https://gitee.com/yhyangjiabin/test.git</code><br><code>git remote add gitlab https://gitlab.com/yhyangjiabin/test.git</code><br><code>git remote add gitlab_own https://gitlab.crm.com/yhyangjiabin/test.git</code><br><code>git remote add bitbucket https://bitbucket.org/yhyangjiabin/test.git</code></p>\n<p><code>git push -u github master</code><br><code>git push -u gitee master</code><br><code>git push -u gitlab master</code><br><code>git push -u github_own master</code><br><code>git push -u bitbucket master</code></p>\n<p><code>git remote</code></p>\n<p><code>git remote -v</code></p>\n<p>移除<br><code>git remote rm gitee</code></p>\n<p>项目命名 Repository name</p>\n<p><a href=\"https://sinkcup.github.io/programming-project-name-best-practice\" target=\"_blank\" rel=\"noopener\">https://sinkcup.github.io/programming-project-name-best-practice</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Clean_URL\" target=\"_blank\" rel=\"noopener\">https://en.wikipedia.org/wiki/Clean_URL</a></p>\n<ul>\n<li>凡是会出现在链接中的名字（用户名、组织名、项目名、branch名、tag名），都一定不要使用下划线，而使用中横线。原因：下划线会与浏览器默认样式重合，导致看起来像空格。</li>\n<li>优先全小写，而不要使用驼峰。原因：便于用户手动输入。</li>\n<li>项目起名和域名无关。原因：买到更好的域名时，域名就换了。</li>\n<li>语义化后缀，看名字就知道是什么项目。</li>\n</ul>\n<p>举例:</p>\n<p>电子书项目</p>\n<p>产品线 ebook<br>接口 ebook-api<br>JS的网站 ebook-web-app<br>微信小程序 ebook-wechat-mini-program<br>安卓APP ebook-android-app<br>苹果APP ebook-ios-app<br>管理员后台网站（假如是PHP/Python等前后端混合的） ebook-admin-web<br>管理员后台JS网站（假如是JS前后端分离的） ebook-admin-web-app<br>管理员后台接口（假如是JS前后端分离的） ebook-admin-api</p>\n<p>GUI 客户端</p>\n<p>GitHub Desktop:<a href=\"https://desktop.github.com/\" target=\"_blank\" rel=\"noopener\">https://desktop.github.com/</a><br>SourceTree:<a href=\"https://www.sourcetreeapp.com/\" target=\"_blank\" rel=\"noopener\">https://www.sourcetreeapp.com/</a></p>"},{"title":"Jenkins部署项目-项目运行02","date":"2019-06-25T20:46:26.000Z","_content":"\n<center><font size=4 color=\"red\">持续集成，持续交付第二章-项目运行02</font></center>\n\n<!--more-->\n\n## jenkins使用触发远程构建连接gitlab\n\n在jenkins中新建项目-->选择pipeline\n\n配置-->Discard old builds(填写保留10)-->选触发远程构建\n\n身份令牌:123456(随便设置的)\n\n![](01.png)\n\n在全局安全设置里需要设置:\n\n1. 匿名用户具有可读权限打钩\n\n2. 防止跨站点请求伪造去掉钩\n\n![](02.png)\n\n进入gitlab,找到需要构建的项目-->设置-->集成(导入所有仓库)\n\nURL:填写图1中的链接(填写ip地址,token为令牌密码)\n\n![](03.png)\n\n如果test不成功,则使用root用户登录gitlab\n\n![](04.png)\n\n如图设置\n\n![](05.png)\n\n设置一下网络\n\n![](06.png)\n\n配置pipeline脚本\n\n在jenkins里选择项目-->配置-->流水线\n\n然后在pipeline的脚本里写\n\n```shell\npipeline{\n    agent any\n    tools{\n        maven 'Maven 3'\n    }\n    environment{\n        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"\n    }\n\n    stages{\n        stage('获取代码') {\n            steps {\n                echo \"start fetch code from git:${REPOSITORY}\"\n                deleteDir()\n                git \"${REPOSITORY}\"\n            }\n        }\n        stage('代码静态检查') {\n            steps {\n                echo \"start code check\"\n            }\n        }\n        stage('编译+单元测试') {\n            steps {\n                echo \"start compile\"\n                sh \"mvn -B -DskipTests clean package\"\n            }\n        }\n        stage('构建镜像') {\n            steps {\n                echo \"start build image\"\n            }\n        }\n        stage('发布系统') {\n            steps {\n                echo \"start deploy\"\n            }\n        }\n    }  \n}\n```\n\n注意以下两点:\n\n```shell\nagent any\n    tools{\n        maven 'Maven 3'\n    }\n    environment{\n        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"\n    }\n```\n\nmaven的名称来源于jenkins中maven的配置中的name\n\nManage Jenkins-->全局工具配置\n\n![](07.png)\n\n`REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/`来源于gitlab中的项目\n\n#### 设置docker的远程访问\n\n凡是装有docker,并需要远程访问的虚拟机都要设置,我这里以设置jenkins虚拟机为例子\n\n`vi /etc/systemd/system/multi-user.target.wants/docker.service`\n\n将`# for containers run by docker`下改为:\n\n`ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock`\n\n关闭防火墙\n\n`ufw disable`\n\n重启docker\n\n```shell\n$ systemctl daemon-reload\n$ sudo service docker restart\n```\n\n在Jenkins中安装`docker插件`\n\nManage Jenkins-->系统设置-->云-->新增一个docker云\n\n起个name,后面用的到.name:docker-jenkins\n\n`Docker Host URI:tcp://192.168.21.143:2375`:ip为开启的远程docekr的机器ip\n\n测试-->出现docker版本号就说明连接成功了\n\n#### jenkins连接harbor\n\nManage Jenkins-->系统设置-->Pipeline Model Definition\n\n`Docker Label:harbor`\n\n`Docker registry URL:http://192.168.21.xx`(这个是harbor虚拟机的ip地址)\n\n添加Jenkins\n\n","source":"_posts/2019-06-25-Jenkins部署项目-项目运行02.md","raw":"---\ntitle: Jenkins部署项目-项目运行02\ndate: 2019-06-25 20:46:26\ncategories:\n- Jenkins\ntags:\n- gitlab\n- mysql\n- redis\n- nexus\n- jekins\n- kubernetes\n---\n\n<center><font size=4 color=\"red\">持续集成，持续交付第二章-项目运行02</font></center>\n\n<!--more-->\n\n## jenkins使用触发远程构建连接gitlab\n\n在jenkins中新建项目-->选择pipeline\n\n配置-->Discard old builds(填写保留10)-->选触发远程构建\n\n身份令牌:123456(随便设置的)\n\n![](01.png)\n\n在全局安全设置里需要设置:\n\n1. 匿名用户具有可读权限打钩\n\n2. 防止跨站点请求伪造去掉钩\n\n![](02.png)\n\n进入gitlab,找到需要构建的项目-->设置-->集成(导入所有仓库)\n\nURL:填写图1中的链接(填写ip地址,token为令牌密码)\n\n![](03.png)\n\n如果test不成功,则使用root用户登录gitlab\n\n![](04.png)\n\n如图设置\n\n![](05.png)\n\n设置一下网络\n\n![](06.png)\n\n配置pipeline脚本\n\n在jenkins里选择项目-->配置-->流水线\n\n然后在pipeline的脚本里写\n\n```shell\npipeline{\n    agent any\n    tools{\n        maven 'Maven 3'\n    }\n    environment{\n        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"\n    }\n\n    stages{\n        stage('获取代码') {\n            steps {\n                echo \"start fetch code from git:${REPOSITORY}\"\n                deleteDir()\n                git \"${REPOSITORY}\"\n            }\n        }\n        stage('代码静态检查') {\n            steps {\n                echo \"start code check\"\n            }\n        }\n        stage('编译+单元测试') {\n            steps {\n                echo \"start compile\"\n                sh \"mvn -B -DskipTests clean package\"\n            }\n        }\n        stage('构建镜像') {\n            steps {\n                echo \"start build image\"\n            }\n        }\n        stage('发布系统') {\n            steps {\n                echo \"start deploy\"\n            }\n        }\n    }  \n}\n```\n\n注意以下两点:\n\n```shell\nagent any\n    tools{\n        maven 'Maven 3'\n    }\n    environment{\n        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"\n    }\n```\n\nmaven的名称来源于jenkins中maven的配置中的name\n\nManage Jenkins-->全局工具配置\n\n![](07.png)\n\n`REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/`来源于gitlab中的项目\n\n#### 设置docker的远程访问\n\n凡是装有docker,并需要远程访问的虚拟机都要设置,我这里以设置jenkins虚拟机为例子\n\n`vi /etc/systemd/system/multi-user.target.wants/docker.service`\n\n将`# for containers run by docker`下改为:\n\n`ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock`\n\n关闭防火墙\n\n`ufw disable`\n\n重启docker\n\n```shell\n$ systemctl daemon-reload\n$ sudo service docker restart\n```\n\n在Jenkins中安装`docker插件`\n\nManage Jenkins-->系统设置-->云-->新增一个docker云\n\n起个name,后面用的到.name:docker-jenkins\n\n`Docker Host URI:tcp://192.168.21.143:2375`:ip为开启的远程docekr的机器ip\n\n测试-->出现docker版本号就说明连接成功了\n\n#### jenkins连接harbor\n\nManage Jenkins-->系统设置-->Pipeline Model Definition\n\n`Docker Label:harbor`\n\n`Docker registry URL:http://192.168.21.xx`(这个是harbor虚拟机的ip地址)\n\n添加Jenkins\n\n","slug":"2019-06-25-Jenkins部署项目-项目运行02","published":1,"updated":"2019-08-10T04:35:46.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vp002e54tnasnnf5w6","content":"<center><font size=\"4\" color=\"red\">持续集成，持续交付第二章-项目运行02</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"jenkins使用触发远程构建连接gitlab\"><a href=\"#jenkins使用触发远程构建连接gitlab\" class=\"headerlink\" title=\"jenkins使用触发远程构建连接gitlab\"></a>jenkins使用触发远程构建连接gitlab</h2><p>在jenkins中新建项目–&gt;选择pipeline</p>\n<p>配置–&gt;Discard old builds(填写保留10)–&gt;选触发远程构建</p>\n<p>身份令牌:123456(随便设置的)</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/01.png\" alt></p>\n<p>在全局安全设置里需要设置:</p>\n<ol>\n<li><p>匿名用户具有可读权限打钩</p>\n</li>\n<li><p>防止跨站点请求伪造去掉钩</p>\n</li>\n</ol>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/02.png\" alt></p>\n<p>进入gitlab,找到需要构建的项目–&gt;设置–&gt;集成(导入所有仓库)</p>\n<p>URL:填写图1中的链接(填写ip地址,token为令牌密码)</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/03.png\" alt></p>\n<p>如果test不成功,则使用root用户登录gitlab</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/04.png\" alt></p>\n<p>如图设置</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/05.png\" alt></p>\n<p>设置一下网络</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/06.png\" alt></p>\n<p>配置pipeline脚本</p>\n<p>在jenkins里选择项目–&gt;配置–&gt;流水线</p>\n<p>然后在pipeline的脚本里写</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline&#123;</span><br><span class=\"line\">    agent any</span><br><span class=\"line\">    tools&#123;</span><br><span class=\"line\">        maven 'Maven 3'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    environment&#123;</span><br><span class=\"line\">        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stages&#123;</span><br><span class=\"line\">        stage('获取代码') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start fetch code from git:$&#123;REPOSITORY&#125;\"</span><br><span class=\"line\">                deleteDir()</span><br><span class=\"line\">                git \"$&#123;REPOSITORY&#125;\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('代码静态检查') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start code check\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('编译+单元测试') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start compile\"</span><br><span class=\"line\">                sh \"mvn -B -DskipTests clean package\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('构建镜像') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start build image\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('发布系统') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start deploy\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意以下两点:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">agent any</span><br><span class=\"line\">    tools&#123;</span><br><span class=\"line\">        maven 'Maven 3'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    environment&#123;</span><br><span class=\"line\">        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>maven的名称来源于jenkins中maven的配置中的name</p>\n<p>Manage Jenkins–&gt;全局工具配置</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/07.png\" alt></p>\n<p><code>REPOSITORY=&quot;ssh://git@192.168.10.140:2222/my-shop/</code>来源于gitlab中的项目</p>\n<h4 id=\"设置docker的远程访问\"><a href=\"#设置docker的远程访问\" class=\"headerlink\" title=\"设置docker的远程访问\"></a>设置docker的远程访问</h4><p>凡是装有docker,并需要远程访问的虚拟机都要设置,我这里以设置jenkins虚拟机为例子</p>\n<p><code>vi /etc/systemd/system/multi-user.target.wants/docker.service</code></p>\n<p>将<code># for containers run by docker</code>下改为:</p>\n<p><code>ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock</code></p>\n<p>关闭防火墙</p>\n<p><code>ufw disable</code></p>\n<p>重启docker</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> systemctl daemon-reload</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo service docker restart</span><br></pre></td></tr></table></figure>\n<p>在Jenkins中安装<code>docker插件</code></p>\n<p>Manage Jenkins–&gt;系统设置–&gt;云–&gt;新增一个docker云</p>\n<p>起个name,后面用的到.name:docker-jenkins</p>\n<p><code>Docker Host URI:tcp://192.168.21.143:2375</code>:ip为开启的远程docekr的机器ip</p>\n<p>测试–&gt;出现docker版本号就说明连接成功了</p>\n<h4 id=\"jenkins连接harbor\"><a href=\"#jenkins连接harbor\" class=\"headerlink\" title=\"jenkins连接harbor\"></a>jenkins连接harbor</h4><p>Manage Jenkins–&gt;系统设置–&gt;Pipeline Model Definition</p>\n<p><code>Docker Label:harbor</code></p>\n<p><code>Docker registry URL:http://192.168.21.xx</code>(这个是harbor虚拟机的ip地址)</p>\n<p>添加Jenkins</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">持续集成，持续交付第二章-项目运行02</font></center>","more":"<h2 id=\"jenkins使用触发远程构建连接gitlab\"><a href=\"#jenkins使用触发远程构建连接gitlab\" class=\"headerlink\" title=\"jenkins使用触发远程构建连接gitlab\"></a>jenkins使用触发远程构建连接gitlab</h2><p>在jenkins中新建项目–&gt;选择pipeline</p>\n<p>配置–&gt;Discard old builds(填写保留10)–&gt;选触发远程构建</p>\n<p>身份令牌:123456(随便设置的)</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/01.png\" alt></p>\n<p>在全局安全设置里需要设置:</p>\n<ol>\n<li><p>匿名用户具有可读权限打钩</p>\n</li>\n<li><p>防止跨站点请求伪造去掉钩</p>\n</li>\n</ol>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/02.png\" alt></p>\n<p>进入gitlab,找到需要构建的项目–&gt;设置–&gt;集成(导入所有仓库)</p>\n<p>URL:填写图1中的链接(填写ip地址,token为令牌密码)</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/03.png\" alt></p>\n<p>如果test不成功,则使用root用户登录gitlab</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/04.png\" alt></p>\n<p>如图设置</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/05.png\" alt></p>\n<p>设置一下网络</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/06.png\" alt></p>\n<p>配置pipeline脚本</p>\n<p>在jenkins里选择项目–&gt;配置–&gt;流水线</p>\n<p>然后在pipeline的脚本里写</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pipeline&#123;</span><br><span class=\"line\">    agent any</span><br><span class=\"line\">    tools&#123;</span><br><span class=\"line\">        maven 'Maven 3'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    environment&#123;</span><br><span class=\"line\">        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    stages&#123;</span><br><span class=\"line\">        stage('获取代码') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start fetch code from git:$&#123;REPOSITORY&#125;\"</span><br><span class=\"line\">                deleteDir()</span><br><span class=\"line\">                git \"$&#123;REPOSITORY&#125;\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('代码静态检查') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start code check\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('编译+单元测试') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start compile\"</span><br><span class=\"line\">                sh \"mvn -B -DskipTests clean package\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('构建镜像') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start build image\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stage('发布系统') &#123;</span><br><span class=\"line\">            steps &#123;</span><br><span class=\"line\">                echo \"start deploy\"</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>注意以下两点:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">agent any</span><br><span class=\"line\">    tools&#123;</span><br><span class=\"line\">        maven 'Maven 3'</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    environment&#123;</span><br><span class=\"line\">        REPOSITORY=\"ssh://git@192.168.10.140:2222/my-shop/myshop-dependencies.git\"</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>maven的名称来源于jenkins中maven的配置中的name</p>\n<p>Manage Jenkins–&gt;全局工具配置</p>\n<p><img src=\"/2019/06/26/2019-06-25-Jenkins部署项目-项目运行02/07.png\" alt></p>\n<p><code>REPOSITORY=&quot;ssh://git@192.168.10.140:2222/my-shop/</code>来源于gitlab中的项目</p>\n<h4 id=\"设置docker的远程访问\"><a href=\"#设置docker的远程访问\" class=\"headerlink\" title=\"设置docker的远程访问\"></a>设置docker的远程访问</h4><p>凡是装有docker,并需要远程访问的虚拟机都要设置,我这里以设置jenkins虚拟机为例子</p>\n<p><code>vi /etc/systemd/system/multi-user.target.wants/docker.service</code></p>\n<p>将<code># for containers run by docker</code>下改为:</p>\n<p><code>ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock</code></p>\n<p>关闭防火墙</p>\n<p><code>ufw disable</code></p>\n<p>重启docker</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> systemctl daemon-reload</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo service docker restart</span><br></pre></td></tr></table></figure>\n<p>在Jenkins中安装<code>docker插件</code></p>\n<p>Manage Jenkins–&gt;系统设置–&gt;云–&gt;新增一个docker云</p>\n<p>起个name,后面用的到.name:docker-jenkins</p>\n<p><code>Docker Host URI:tcp://192.168.21.143:2375</code>:ip为开启的远程docekr的机器ip</p>\n<p>测试–&gt;出现docker版本号就说明连接成功了</p>\n<h4 id=\"jenkins连接harbor\"><a href=\"#jenkins连接harbor\" class=\"headerlink\" title=\"jenkins连接harbor\"></a>jenkins连接harbor</h4><p>Manage Jenkins–&gt;系统设置–&gt;Pipeline Model Definition</p>\n<p><code>Docker Label:harbor</code></p>\n<p><code>Docker registry URL:http://192.168.21.xx</code>(这个是harbor虚拟机的ip地址)</p>\n<p>添加Jenkins</p>"},{"title":"01_vue的入门","date":"2019-11-20T18:53:54.000Z","_content":"\n<center><font size=4 color=\"red\">01_vue的入门</font></center>\n\n<!--more-->\n\n## MVC和MVVM关系图\n\n![](01.png)\n\n#### MVVM详解\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <script src=\"https://cdn.staticfile.org/vue/2.2.2/vue.min.js\"></script>\n</head>\n<body>\n    <!-- MVVM中的M -->\n    <div id=\"app\">\n        <p>{{ massage }}</p>\n    </div>\n\n    <script>\n        //MVVM中的MV\n        new Vue({\n            el:'#app',  //标记属性，指定是使用的哪个M\n            //MVVM中的V\n            data:{     //数据交互\n                massage:'欢迎来到Vue'\n            }\n        })\n    </script>\n</body>\n</html>\n```\n\n#### Vue常用语法\n\n1. v-html  : 获取html格式的数据\n\n```html\n<body>\n    <div id=\"app\">\n        <div v-html=\"massage\"></div>\n    </div>\n    \n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'<h1>这是个标题</h1>'\n            }\n        })\n    </script>\n</body>\n```\n\n2. v-bind: 用于绑定属性\n\n```html\n<style>\n    .testfont{\n        font-size: 300%\n    }\n</style>\n<body>\n    <div id=\"app\">\n        <label for=\"haha\">修改大小</label>\n        <input type=\"checkbox\" v-model=\"use\" id=\"haha\">\n        <div v-bind:class=\"{'testfont':use}\">\n            wanghui\n        </div>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                use:false\n            }\n        })\n    </script>\n</body>\n```\n\n3. 字符串先拆分成数组，再反转，再合并\n\n```html\n<body>\n    <div id=\"app\">\n        {{ massage.split('').reverse().join('')}}\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'helloworld'\n            }\n        })\n    </script>\n</body>\n```\n\n4. v-if:用于做判断\n\n```html\n<body>\n    <div id=\"app\">\n        <label for=\"haha\">点击显示和消失</label>\n        <input type=\"checkbox\" v-model=\"flag\" id=\"haha\">\n        <h1 v-if=flag>精忠报国</h1>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                flag:false\n            }\n        })\n    </script>\n</body>\n```\n\n5. 参数\n\n参数要跟着指令后面\n\n```html\n<body>\n    <div id=\"app\">\n        <a v-bind:href=\"url\">百度</a>\n        <br>\n        <a href=\"https://www.baidu.com\">百度链接</a>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                url:'https://www.baidu.com'\n            }\n        })\n    </script>\n</body>\n```\n\n6. v-model\n\n用于数据的双向绑定\n\n```html\n<body>\n    <div id=\"app\">\n        <p>{{ message }}</p>\n        <input v-model=\"message\">\n    </div>\n            \n    <script>\n    new Vue({\n        el: '#app',\n        data: {\n        message: 'Runoob!'\n        }\n    })\n    </script>\n</body>\n```\n\n\n#### v-bind和v-model的区别\n\nv-bind是数据的单向绑定，被v-bind绑定的数据，如果在M数据层修改了数据，那在V视图层也会被修改。v-bind可以省略，只写：\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ massage }}</div>\n        <!-- <input type=\"text\" value=\"massage\">  这样写没有吧massage绑定到value上-->\n        <!-- 单向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为数据没有同步到M数据层\n             ，所以<div>{{ massage }}</div>中的massage不会改变\n        -->\n        <input type=\"text\" v-bind:value=\"massage\">\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'hellword!!!'\n            }\n        })\n    </script>\n</body>\n```\n\nv-model是数据的双向绑定，被v-model绑定的数据，在M数据层修改，在V视图层会被修改。在V视图层修改的数据，在M数据层也会被修改\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ massage }}</div>\n        <!-- <input type=\"text\" value=\"massage\">  这样写没有吧massage绑定到value上-->\n        <!-- 双向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为是双向绑定，数据同步到M数据层\n                ，而<div>{{ massage }}</div>中的massage就是从M层获取的，所以也会跟着改变\n\n            写了v-model后，就不用写value了\n            v-model使用场合：\n            只能用于表单元素中，例如：\n            input{radio,text,address,email...}   select   checkbox   textarea\n        -->\n        <input type=\"text\" v-model=\"massage\">\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'hellword!!!'\n            }\n        })\n    </script>\n</body>\n```\n\n#### v-if和v-show的区别\n\n```html\n<body>\n    <div id=\"app\">\n        <input type=\"button\" @click=\"cli\" value=\"按钮\">\n        <!-- v-if是每次都是DOM的删除或者新增 相当于<pre v-if=\"seen\"><h1>HelloWorld</h1></pre>被完全删除或者新增-->\n        <!-- v-if 有较高的切换性能消耗 使用场合：如果元素可能永远不会被显示出来被客户看到，推荐v-if -->\n        <pre v-if=\"seen\"><h1>HelloWorld</h1></pre>\n        <!-- v-show不会删除DOM，只是把属性改成display=none -->\n        <!-- v-show有较高的初始渲染消耗 使用场合：元素频繁被切换，推荐v-show，而不用v-if -->\n        <pre v-show=\"seen\"><h1>HelloWorld</h1></pre>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                seen:false\n            },\n            methods:{\n                cli(){\n                    this.seen=!this.seen\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### v-for\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 普通的循环 -->\n        <div v-for=\"site in sites\">\n            {{ site.name }}\n        </div>\n        <!-- 循环出来key和value 数组-->\n        <li v-for=\"(key,value) in sites\">\n            {{key}}:{{value}}\n        </li>\n        <!-- 对象 -->\n        <li v-for=\"(key,value) in object\">\n            {{key}}:{{value}}\n        </li>\n        <!-- index为索引 -->\n        <li v-for=\"(key,value,index) in object\">\n            {{index}}:{{key}}:{{value}}\n        </li>\n        <!-- 循环数字 -->\n        <div v-for=\"n in 10\">\n            {{n}}\n        </div>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                sites:[\n                    {'name':\"zhangsan\"},\n                    {'name':'lisi'},\n                    {'name':'wangwu'}\n                ],\n                object:{\n                    name:'zhangsan',\n                    age:18,\n                    address:'中国'\n                }\n            }\n        })\n    </script>\n</body>\n```\n","source":"_posts/2019-11-20-01-vue的入门.md","raw":"---\ntitle: 01_vue的入门\ndate: 2019-11-20 18:53:54\ncategories:\n- Vue\ntags:\n- MVVM\n- vue base\n---\n\n<center><font size=4 color=\"red\">01_vue的入门</font></center>\n\n<!--more-->\n\n## MVC和MVVM关系图\n\n![](01.png)\n\n#### MVVM详解\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <script src=\"https://cdn.staticfile.org/vue/2.2.2/vue.min.js\"></script>\n</head>\n<body>\n    <!-- MVVM中的M -->\n    <div id=\"app\">\n        <p>{{ massage }}</p>\n    </div>\n\n    <script>\n        //MVVM中的MV\n        new Vue({\n            el:'#app',  //标记属性，指定是使用的哪个M\n            //MVVM中的V\n            data:{     //数据交互\n                massage:'欢迎来到Vue'\n            }\n        })\n    </script>\n</body>\n</html>\n```\n\n#### Vue常用语法\n\n1. v-html  : 获取html格式的数据\n\n```html\n<body>\n    <div id=\"app\">\n        <div v-html=\"massage\"></div>\n    </div>\n    \n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'<h1>这是个标题</h1>'\n            }\n        })\n    </script>\n</body>\n```\n\n2. v-bind: 用于绑定属性\n\n```html\n<style>\n    .testfont{\n        font-size: 300%\n    }\n</style>\n<body>\n    <div id=\"app\">\n        <label for=\"haha\">修改大小</label>\n        <input type=\"checkbox\" v-model=\"use\" id=\"haha\">\n        <div v-bind:class=\"{'testfont':use}\">\n            wanghui\n        </div>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                use:false\n            }\n        })\n    </script>\n</body>\n```\n\n3. 字符串先拆分成数组，再反转，再合并\n\n```html\n<body>\n    <div id=\"app\">\n        {{ massage.split('').reverse().join('')}}\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'helloworld'\n            }\n        })\n    </script>\n</body>\n```\n\n4. v-if:用于做判断\n\n```html\n<body>\n    <div id=\"app\">\n        <label for=\"haha\">点击显示和消失</label>\n        <input type=\"checkbox\" v-model=\"flag\" id=\"haha\">\n        <h1 v-if=flag>精忠报国</h1>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                flag:false\n            }\n        })\n    </script>\n</body>\n```\n\n5. 参数\n\n参数要跟着指令后面\n\n```html\n<body>\n    <div id=\"app\">\n        <a v-bind:href=\"url\">百度</a>\n        <br>\n        <a href=\"https://www.baidu.com\">百度链接</a>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                url:'https://www.baidu.com'\n            }\n        })\n    </script>\n</body>\n```\n\n6. v-model\n\n用于数据的双向绑定\n\n```html\n<body>\n    <div id=\"app\">\n        <p>{{ message }}</p>\n        <input v-model=\"message\">\n    </div>\n            \n    <script>\n    new Vue({\n        el: '#app',\n        data: {\n        message: 'Runoob!'\n        }\n    })\n    </script>\n</body>\n```\n\n\n#### v-bind和v-model的区别\n\nv-bind是数据的单向绑定，被v-bind绑定的数据，如果在M数据层修改了数据，那在V视图层也会被修改。v-bind可以省略，只写：\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ massage }}</div>\n        <!-- <input type=\"text\" value=\"massage\">  这样写没有吧massage绑定到value上-->\n        <!-- 单向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为数据没有同步到M数据层\n             ，所以<div>{{ massage }}</div>中的massage不会改变\n        -->\n        <input type=\"text\" v-bind:value=\"massage\">\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'hellword!!!'\n            }\n        })\n    </script>\n</body>\n```\n\nv-model是数据的双向绑定，被v-model绑定的数据，在M数据层修改，在V视图层会被修改。在V视图层修改的数据，在M数据层也会被修改\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ massage }}</div>\n        <!-- <input type=\"text\" value=\"massage\">  这样写没有吧massage绑定到value上-->\n        <!-- 双向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为是双向绑定，数据同步到M数据层\n                ，而<div>{{ massage }}</div>中的massage就是从M层获取的，所以也会跟着改变\n\n            写了v-model后，就不用写value了\n            v-model使用场合：\n            只能用于表单元素中，例如：\n            input{radio,text,address,email...}   select   checkbox   textarea\n        -->\n        <input type=\"text\" v-model=\"massage\">\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'hellword!!!'\n            }\n        })\n    </script>\n</body>\n```\n\n#### v-if和v-show的区别\n\n```html\n<body>\n    <div id=\"app\">\n        <input type=\"button\" @click=\"cli\" value=\"按钮\">\n        <!-- v-if是每次都是DOM的删除或者新增 相当于<pre v-if=\"seen\"><h1>HelloWorld</h1></pre>被完全删除或者新增-->\n        <!-- v-if 有较高的切换性能消耗 使用场合：如果元素可能永远不会被显示出来被客户看到，推荐v-if -->\n        <pre v-if=\"seen\"><h1>HelloWorld</h1></pre>\n        <!-- v-show不会删除DOM，只是把属性改成display=none -->\n        <!-- v-show有较高的初始渲染消耗 使用场合：元素频繁被切换，推荐v-show，而不用v-if -->\n        <pre v-show=\"seen\"><h1>HelloWorld</h1></pre>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                seen:false\n            },\n            methods:{\n                cli(){\n                    this.seen=!this.seen\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### v-for\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 普通的循环 -->\n        <div v-for=\"site in sites\">\n            {{ site.name }}\n        </div>\n        <!-- 循环出来key和value 数组-->\n        <li v-for=\"(key,value) in sites\">\n            {{key}}:{{value}}\n        </li>\n        <!-- 对象 -->\n        <li v-for=\"(key,value) in object\">\n            {{key}}:{{value}}\n        </li>\n        <!-- index为索引 -->\n        <li v-for=\"(key,value,index) in object\">\n            {{index}}:{{key}}:{{value}}\n        </li>\n        <!-- 循环数字 -->\n        <div v-for=\"n in 10\">\n            {{n}}\n        </div>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                sites:[\n                    {'name':\"zhangsan\"},\n                    {'name':'lisi'},\n                    {'name':'wangwu'}\n                ],\n                object:{\n                    name:'zhangsan',\n                    age:18,\n                    address:'中国'\n                }\n            }\n        })\n    </script>\n</body>\n```\n","slug":"2019-11-20-01-vue的入门","published":1,"updated":"2020-01-11T02:21:08.625Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vq002g54tn5ofn8276","content":"<center><font size=\"4\" color=\"red\">01_vue的入门</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"MVC和MVVM关系图\"><a href=\"#MVC和MVVM关系图\" class=\"headerlink\" title=\"MVC和MVVM关系图\"></a>MVC和MVVM关系图</h2><p><img src=\"/2019/11/21/2019-11-20-01-vue的入门/01.png\" alt></p>\n<h4 id=\"MVVM详解\"><a href=\"#MVVM详解\" class=\"headerlink\" title=\"MVVM详解\"></a>MVVM详解</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdn.staticfile.org/vue/2.2.2/vue.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- MVVM中的M --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; massage &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //MVVM中的MV</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',  //标记属性，指定是使用的哪个M</span><br><span class=\"line\">            //MVVM中的V</span><br><span class=\"line\">            data:&#123;     //数据交互</span><br><span class=\"line\">                massage:'欢迎来到Vue'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Vue常用语法\"><a href=\"#Vue常用语法\" class=\"headerlink\" title=\"Vue常用语法\"></a>Vue常用语法</h4><ol>\n<li>v-html  : 获取html格式的数据</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"massage\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\"><span class=\"xml\">                massage:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>v-bind: 用于绑定属性</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    .testfont&#123;</span><br><span class=\"line\">        font-size: 300%</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"haha\"</span>&gt;</span>修改大小<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"use\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"haha\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind:class</span>=<span class=\"string\">\"&#123;'testfont':use&#125;\"</span>&gt;</span></span><br><span class=\"line\">            wanghui</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                use:false</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>字符串先拆分成数组，再反转，再合并</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123; massage.split('').reverse().join('')&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'helloworld'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>v-if:用于做判断</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"haha\"</span>&gt;</span>点击显示和消失<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"flag\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"haha\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">flag</span>&gt;</span>精忠报国<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                flag:false</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>参数</li>\n</ol>\n<p>参数要跟着指令后面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">\"url\"</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://www.baidu.com\"</span>&gt;</span>百度链接<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                url:'https://www.baidu.com'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>v-model</li>\n</ol>\n<p>用于数据的双向绑定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"message\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    new Vue(&#123;</span><br><span class=\"line\">        el: '#app',</span><br><span class=\"line\">        data: &#123;</span><br><span class=\"line\">        message: 'Runoob!'</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-bind和v-model的区别\"><a href=\"#v-bind和v-model的区别\" class=\"headerlink\" title=\"v-bind和v-model的区别\"></a>v-bind和v-model的区别</h4><p>v-bind是数据的单向绑定，被v-bind绑定的数据，如果在M数据层修改了数据，那在V视图层也会被修改。v-bind可以省略，只写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; massage &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;input type=\"text\" value=\"massage\"&gt;  这样写没有吧massage绑定到value上--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 单向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为数据没有同步到M数据层</span></span><br><span class=\"line\"><span class=\"comment\">             ，所以&lt;div&gt;&#123;&#123; massage &#125;&#125;&lt;/div&gt;中的massage不会改变</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">\"massage\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'hellword!!!'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>v-model是数据的双向绑定，被v-model绑定的数据，在M数据层修改，在V视图层会被修改。在V视图层修改的数据，在M数据层也会被修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; massage &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;input type=\"text\" value=\"massage\"&gt;  这样写没有吧massage绑定到value上--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 双向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为是双向绑定，数据同步到M数据层</span></span><br><span class=\"line\"><span class=\"comment\">                ，而&lt;div&gt;&#123;&#123; massage &#125;&#125;&lt;/div&gt;中的massage就是从M层获取的，所以也会跟着改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            写了v-model后，就不用写value了</span></span><br><span class=\"line\"><span class=\"comment\">            v-model使用场合：</span></span><br><span class=\"line\"><span class=\"comment\">            只能用于表单元素中，例如：</span></span><br><span class=\"line\"><span class=\"comment\">            input&#123;radio,text,address,email...&#125;   select   checkbox   textarea</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"massage\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'hellword!!!'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-if和v-show的区别\"><a href=\"#v-if和v-show的区别\" class=\"headerlink\" title=\"v-if和v-show的区别\"></a>v-if和v-show的区别</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"cli\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"按钮\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-if是每次都是DOM的删除或者新增 相当于&lt;pre v-if=\"seen\"&gt;&lt;h1&gt;HelloWorld&lt;/h1&gt;&lt;/pre&gt;被完全删除或者新增--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-if 有较高的切换性能消耗 使用场合：如果元素可能永远不会被显示出来被客户看到，推荐v-if --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"seen\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-show不会删除DOM，只是把属性改成display=none --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-show有较高的初始渲染消耗 使用场合：元素频繁被切换，推荐v-show，而不用v-if --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"seen\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                seen:false</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                cli()&#123;</span><br><span class=\"line\">                    this.seen=!this.seen</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 普通的循环 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"site in sites\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123; site.name &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 循环出来key和value 数组--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key,value) in sites\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 对象 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key,value) in object\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- index为索引 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key,value,index) in object\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;index&#125;&#125;:&#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 循环数字 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in 10\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;n&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                sites:[</span><br><span class=\"line\">                    &#123;'name':\"zhangsan\"&#125;,</span><br><span class=\"line\">                    &#123;'name':'lisi'&#125;,</span><br><span class=\"line\">                    &#123;'name':'wangwu'&#125;</span><br><span class=\"line\">                ],</span><br><span class=\"line\">                object:&#123;</span><br><span class=\"line\">                    name:'zhangsan',</span><br><span class=\"line\">                    age:18,</span><br><span class=\"line\">                    address:'中国'</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">01_vue的入门</font></center>","more":"<h2 id=\"MVC和MVVM关系图\"><a href=\"#MVC和MVVM关系图\" class=\"headerlink\" title=\"MVC和MVVM关系图\"></a>MVC和MVVM关系图</h2><p><img src=\"/2019/11/21/2019-11-20-01-vue的入门/01.png\" alt></p>\n<h4 id=\"MVVM详解\"><a href=\"#MVVM详解\" class=\"headerlink\" title=\"MVVM详解\"></a>MVVM详解</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://cdn.staticfile.org/vue/2.2.2/vue.min.js\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- MVVM中的M --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; massage &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //MVVM中的MV</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',  //标记属性，指定是使用的哪个M</span><br><span class=\"line\">            //MVVM中的V</span><br><span class=\"line\">            data:&#123;     //数据交互</span><br><span class=\"line\">                massage:'欢迎来到Vue'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Vue常用语法\"><a href=\"#Vue常用语法\" class=\"headerlink\" title=\"Vue常用语法\"></a>Vue常用语法</h4><ol>\n<li>v-html  : 获取html格式的数据</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-html</span>=<span class=\"string\">\"massage\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\"><span class=\"xml\">                massage:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是个标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>v-bind: 用于绑定属性</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    .testfont&#123;</span><br><span class=\"line\">        font-size: 300%</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"haha\"</span>&gt;</span>修改大小<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"use\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"haha\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-bind:class</span>=<span class=\"string\">\"&#123;'testfont':use&#125;\"</span>&gt;</span></span><br><span class=\"line\">            wanghui</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                use:false</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>字符串先拆分成数组，再反转，再合并</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        &#123;&#123; massage.split('').reverse().join('')&#125;&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'helloworld'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>v-if:用于做判断</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"haha\"</span>&gt;</span>点击显示和消失<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"flag\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"haha\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">v-if</span>=<span class=\"string\">flag</span>&gt;</span>精忠报国<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                flag:false</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>参数</li>\n</ol>\n<p>参数要跟着指令后面</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">v-bind:href</span>=<span class=\"string\">\"url\"</span>&gt;</span>百度<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"https://www.baidu.com\"</span>&gt;</span>百度链接<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                url:'https://www.baidu.com'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>v-model</li>\n</ol>\n<p>用于数据的双向绑定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"message\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    new Vue(&#123;</span><br><span class=\"line\">        el: '#app',</span><br><span class=\"line\">        data: &#123;</span><br><span class=\"line\">        message: 'Runoob!'</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-bind和v-model的区别\"><a href=\"#v-bind和v-model的区别\" class=\"headerlink\" title=\"v-bind和v-model的区别\"></a>v-bind和v-model的区别</h4><p>v-bind是数据的单向绑定，被v-bind绑定的数据，如果在M数据层修改了数据，那在V视图层也会被修改。v-bind可以省略，只写：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; massage &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;input type=\"text\" value=\"massage\"&gt;  这样写没有吧massage绑定到value上--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 单向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为数据没有同步到M数据层</span></span><br><span class=\"line\"><span class=\"comment\">             ，所以&lt;div&gt;&#123;&#123; massage &#125;&#125;&lt;/div&gt;中的massage不会改变</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-bind:value</span>=<span class=\"string\">\"massage\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'hellword!!!'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>v-model是数据的双向绑定，被v-model绑定的数据，在M数据层修改，在V视图层会被修改。在V视图层修改的数据，在M数据层也会被修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; massage &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;input type=\"text\" value=\"massage\"&gt;  这样写没有吧massage绑定到value上--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 双向绑定的解释：massage是显示在V视图层上的，此时修改text里的值，就是修改V视图上的值，因为是双向绑定，数据同步到M数据层</span></span><br><span class=\"line\"><span class=\"comment\">                ，而&lt;div&gt;&#123;&#123; massage &#125;&#125;&lt;/div&gt;中的massage就是从M层获取的，所以也会跟着改变</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">            写了v-model后，就不用写value了</span></span><br><span class=\"line\"><span class=\"comment\">            v-model使用场合：</span></span><br><span class=\"line\"><span class=\"comment\">            只能用于表单元素中，例如：</span></span><br><span class=\"line\"><span class=\"comment\">            input&#123;radio,text,address,email...&#125;   select   checkbox   textarea</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"massage\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'hellword!!!'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-if和v-show的区别\"><a href=\"#v-if和v-show的区别\" class=\"headerlink\" title=\"v-if和v-show的区别\"></a>v-if和v-show的区别</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"cli\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"按钮\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-if是每次都是DOM的删除或者新增 相当于&lt;pre v-if=\"seen\"&gt;&lt;h1&gt;HelloWorld&lt;/h1&gt;&lt;/pre&gt;被完全删除或者新增--&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-if 有较高的切换性能消耗 使用场合：如果元素可能永远不会被显示出来被客户看到，推荐v-if --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">v-if</span>=<span class=\"string\">\"seen\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-show不会删除DOM，只是把属性改成display=none --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- v-show有较高的初始渲染消耗 使用场合：元素频繁被切换，推荐v-show，而不用v-if --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">v-show</span>=<span class=\"string\">\"seen\"</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>HelloWorld<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                seen:false</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                cli()&#123;</span><br><span class=\"line\">                    this.seen=!this.seen</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"v-for\"><a href=\"#v-for\" class=\"headerlink\" title=\"v-for\"></a>v-for</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 普通的循环 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"site in sites\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123; site.name &#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 循环出来key和value 数组--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key,value) in sites\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 对象 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key,value) in object\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- index为索引 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">li</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"(key,value,index) in object\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;index&#125;&#125;:&#123;&#123;key&#125;&#125;:&#123;&#123;value&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 循环数字 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">v-for</span>=<span class=\"string\">\"n in 10\"</span>&gt;</span></span><br><span class=\"line\">            &#123;&#123;n&#125;&#125;</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                sites:[</span><br><span class=\"line\">                    &#123;'name':\"zhangsan\"&#125;,</span><br><span class=\"line\">                    &#123;'name':'lisi'&#125;,</span><br><span class=\"line\">                    &#123;'name':'wangwu'&#125;</span><br><span class=\"line\">                ],</span><br><span class=\"line\">                object:&#123;</span><br><span class=\"line\">                    name:'zhangsan',</span><br><span class=\"line\">                    age:18,</span><br><span class=\"line\">                    address:'中国'</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"02_vue的class属性绑定","date":"2019-11-20T19:00:35.000Z","_content":"\n<center><font size=4 color=\"red\">02_vue的class属性绑定</font></center>\n\n<!--more-->\n\n## vue的calss属性绑定\n\nvue一共有四种属性绑定的方式\n\n* 1. 使用数组\n\n* 2. 使用三元表达式\n\n* 3. 使用对象\n\n* 4. 将对象写到data里\n\n```html\n<style>\n    .color{\n        color: red;\n    }\n    .font{\n        font-size: 300%\n    }\n</style>\n<body>\n    <div id=\"app\">\n        <!-- :class实际上是v-bind:class -->\n        <!-- 1.数组的形式 数组里要是字符串的形式，所以加'' -->\n        <h3>1.使用数组</h3>\n        <pre :class=\"['color','font']\">{{massage}}</pre>\n        <!-- 用于改变flag的值 -->\n        <label for=\"haha\">点击查看样式</label>\n        <input type=\"checkbox\" v-model=\"flag\" id=\"haha\">\n        <!-- 2.数组中写三元表达式的形式 -->\n        <h3>2.三元表达式</h3>\n        <pre :class=\"['color',flag?'font':'']\">{{massage}}</pre>\n        <!-- 3.使用对象,使用对象时，''可加可不加 -->\n        <h3>3.使用对象</h3>\n        <pre :class=\"{color:true,font:flag}\">{{massage}}</pre>\n        <!-- 4.对象写到data里 -->\n        <h3>4.对象写到data里</h3>\n        <pre :class=\"classStyle\">{{massage}}</pre>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'精忠报国',\n                flag:false,\n                //{color:true,font:true}是对象，不能加''\n                classStyle:{color:true,font:true}\n            }\n        })\n    </script>\n</body>\n```\n","source":"_posts/2019-11-20-02-vue的class属性绑定.md","raw":"---\ntitle: 02_vue的class属性绑定\ndate: 2019-11-20 19:00:35\ncategories:\n- Vue\ntags:\n- css\n- vue\n---\n\n<center><font size=4 color=\"red\">02_vue的class属性绑定</font></center>\n\n<!--more-->\n\n## vue的calss属性绑定\n\nvue一共有四种属性绑定的方式\n\n* 1. 使用数组\n\n* 2. 使用三元表达式\n\n* 3. 使用对象\n\n* 4. 将对象写到data里\n\n```html\n<style>\n    .color{\n        color: red;\n    }\n    .font{\n        font-size: 300%\n    }\n</style>\n<body>\n    <div id=\"app\">\n        <!-- :class实际上是v-bind:class -->\n        <!-- 1.数组的形式 数组里要是字符串的形式，所以加'' -->\n        <h3>1.使用数组</h3>\n        <pre :class=\"['color','font']\">{{massage}}</pre>\n        <!-- 用于改变flag的值 -->\n        <label for=\"haha\">点击查看样式</label>\n        <input type=\"checkbox\" v-model=\"flag\" id=\"haha\">\n        <!-- 2.数组中写三元表达式的形式 -->\n        <h3>2.三元表达式</h3>\n        <pre :class=\"['color',flag?'font':'']\">{{massage}}</pre>\n        <!-- 3.使用对象,使用对象时，''可加可不加 -->\n        <h3>3.使用对象</h3>\n        <pre :class=\"{color:true,font:flag}\">{{massage}}</pre>\n        <!-- 4.对象写到data里 -->\n        <h3>4.对象写到data里</h3>\n        <pre :class=\"classStyle\">{{massage}}</pre>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                massage:'精忠报国',\n                flag:false,\n                //{color:true,font:true}是对象，不能加''\n                classStyle:{color:true,font:true}\n            }\n        })\n    </script>\n</body>\n```\n","slug":"2019-11-20-02-vue的class属性绑定","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vs002k54tnx55hjkq5","content":"<center><font size=\"4\" color=\"red\">02_vue的class属性绑定</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"vue的calss属性绑定\"><a href=\"#vue的calss属性绑定\" class=\"headerlink\" title=\"vue的calss属性绑定\"></a>vue的calss属性绑定</h2><p>vue一共有四种属性绑定的方式</p>\n<ul>\n<li><ol>\n<li>使用数组</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>使用三元表达式</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>使用对象</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>将对象写到data里</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    .color&#123;</span><br><span class=\"line\">        color: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .font&#123;</span><br><span class=\"line\">        font-size: 300%</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- :class实际上是v-bind:class --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 1.数组的形式 数组里要是字符串的形式，所以加'' --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>1.使用数组<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"['color','font']\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 用于改变flag的值 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"haha\"</span>&gt;</span>点击查看样式<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"flag\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"haha\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 2.数组中写三元表达式的形式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>2.三元表达式<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"['color',flag?'font':'']\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 3.使用对象,使用对象时，''可加可不加 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>3.使用对象<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;color:true,font:flag&#125;\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 4.对象写到data里 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>4.对象写到data里<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"classStyle\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'精忠报国',</span><br><span class=\"line\">                flag:false,</span><br><span class=\"line\">                //&#123;color:true,font:true&#125;是对象，不能加''</span><br><span class=\"line\">                classStyle:&#123;color:true,font:true&#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">02_vue的class属性绑定</font></center>","more":"<h2 id=\"vue的calss属性绑定\"><a href=\"#vue的calss属性绑定\" class=\"headerlink\" title=\"vue的calss属性绑定\"></a>vue的calss属性绑定</h2><p>vue一共有四种属性绑定的方式</p>\n<ul>\n<li><ol>\n<li>使用数组</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>使用三元表达式</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>使用对象</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>将对象写到data里</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">    .color&#123;</span><br><span class=\"line\">        color: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .font&#123;</span><br><span class=\"line\">        font-size: 300%</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- :class实际上是v-bind:class --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 1.数组的形式 数组里要是字符串的形式，所以加'' --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>1.使用数组<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"['color','font']\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 用于改变flag的值 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">\"haha\"</span>&gt;</span>点击查看样式<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"checkbox\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"flag\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"haha\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 2.数组中写三元表达式的形式 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>2.三元表达式<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"['color',flag?'font':'']\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 3.使用对象,使用对象时，''可加可不加 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>3.使用对象<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"&#123;color:true,font:flag&#125;\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 4.对象写到data里 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>4.对象写到data里<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">pre</span> <span class=\"attr\">:class</span>=<span class=\"string\">\"classStyle\"</span>&gt;</span>&#123;&#123;massage&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">pre</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                massage:'精忠报国',</span><br><span class=\"line\">                flag:false,</span><br><span class=\"line\">                //&#123;color:true,font:true&#125;是对象，不能加''</span><br><span class=\"line\">                classStyle:&#123;color:true,font:true&#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"03_vue常用属性","date":"2019-11-20T19:02:31.000Z","_content":"\n<center><font size=4 color=\"red\">03_vue常用属性</font></center>\n\n<!--more-->\n\n## vue常用属性\n\n#### 过滤器\n\n<font color=\"red\">该概念的应用还不熟悉</font>\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ message | filter}}</div>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                message:'helloworld'\n            },\n            filters:{\n                filter:function(value){\n                    if(!value) return ''\n                    value=value.toString()\n                    return value.charAt(0).toUpperCase() + value.slice(1)\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### 计算属性\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ site }}</div>\n    </div>\n    <script>\n        var vm=new Vue({\n            el:'#app',\n            data:{\n                name:'google',\n                url:'http://www.google.com',\n                \n            },\n            //计算属性使用get时可以这样写\n            // computed:{\n            //     site:function(){\n            //         return this.message + '==' + this.addredd\n            //     }\n            // }\n            computed:{\n                site:{\n                    get:function(){\n                        return this.name + ':' + this.url\n                    },\n                    set:function(newvalue){\n                        //split(' ')是按照空格分割\n                        var names=newvalue.split(' ')\n                        this.names=names\n                        this.name=names[0]\n                        this.url = names[names.length - 1]\n                    }\n                }\n            } \n        })\n        //在运行 vm.site = '菜鸟教程 http://www.runoob.com'; 时，setter 会被调用， vm.name 和 vm.url 也会被对应更新\n        vm.site='菜鸟教程 http://www.runoob.com';\n        document.write('names:'+vm.names);\n        document.write('<br>');\n        document.write('name:'+vm.name);\n        document.write('<br>');\n        document.write('url: ' + vm.url);\n    </script>\n</body>\n```\n\n#### 计算属性和不带返回值方法以及带返回值方法的使用\n\n```html\n<body>\n    <div id=\"app\">\n        <button @click=\"fun\">点击</button>\n        <h2>{{msg}}</h2>\n        <h1>{{func()}}</h1>\n        <h1>{{funcom}}</h1>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                msg:1\n            },\n            methods:{\n                //带有返回值的\n                func:function(){\n                    return '你好'\n                },\n                //不带返回值的\n                fun:function(){\n                    this.msg=this.msg+1\n                }\n            },\n            computed:{\n                funcom:function(){\n                    return '你好啊'\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### 监听属性\n\n```html\n<body>\n    <div id=\"app\">\n        米：<input type=\"text\" v-model=\"meters\">\n        千米：<input type=\"text\" v-model=\"kilometers\">\n    </div>\n    <script>\n        var vm=new Vue({\n            el:'#app',\n            data:{\n                meters : 0,\n                kilometers : 0\n            },\n            watch:{\n                meters:function(val){\n                    this.kilometers=val/1000;\n                    this.meters=kilometers;\n                },\n                kilometers:function(val){\n                    this.meters=val*1000;\n                    this.kilometers=meters\n                }\n            }\n        });\n        //$watch是一个实例方法\n        //function(newValue,oldValue)留意一下newValue和oldValue的位置，不能反\n        vm.$watch('meters',function(newValue,oldValue){\n            alert('米修改前：'+oldValue+'    '+'米修改后:'+newValue)\n        })\n    </script>\n</body>\n```\n\n\n","source":"_posts/2019-11-20-03-vue常用属性.md","raw":"---\ntitle: 03_vue常用属性\ndate: 2019-11-20 19:02:31\ncategories:\n- Vue\ntags:\n- 过滤器\n- 计算属性\n- 监听\n- 方法\n---\n\n<center><font size=4 color=\"red\">03_vue常用属性</font></center>\n\n<!--more-->\n\n## vue常用属性\n\n#### 过滤器\n\n<font color=\"red\">该概念的应用还不熟悉</font>\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ message | filter}}</div>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                message:'helloworld'\n            },\n            filters:{\n                filter:function(value){\n                    if(!value) return ''\n                    value=value.toString()\n                    return value.charAt(0).toUpperCase() + value.slice(1)\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### 计算属性\n\n```html\n<body>\n    <div id=\"app\">\n        <div>{{ site }}</div>\n    </div>\n    <script>\n        var vm=new Vue({\n            el:'#app',\n            data:{\n                name:'google',\n                url:'http://www.google.com',\n                \n            },\n            //计算属性使用get时可以这样写\n            // computed:{\n            //     site:function(){\n            //         return this.message + '==' + this.addredd\n            //     }\n            // }\n            computed:{\n                site:{\n                    get:function(){\n                        return this.name + ':' + this.url\n                    },\n                    set:function(newvalue){\n                        //split(' ')是按照空格分割\n                        var names=newvalue.split(' ')\n                        this.names=names\n                        this.name=names[0]\n                        this.url = names[names.length - 1]\n                    }\n                }\n            } \n        })\n        //在运行 vm.site = '菜鸟教程 http://www.runoob.com'; 时，setter 会被调用， vm.name 和 vm.url 也会被对应更新\n        vm.site='菜鸟教程 http://www.runoob.com';\n        document.write('names:'+vm.names);\n        document.write('<br>');\n        document.write('name:'+vm.name);\n        document.write('<br>');\n        document.write('url: ' + vm.url);\n    </script>\n</body>\n```\n\n#### 计算属性和不带返回值方法以及带返回值方法的使用\n\n```html\n<body>\n    <div id=\"app\">\n        <button @click=\"fun\">点击</button>\n        <h2>{{msg}}</h2>\n        <h1>{{func()}}</h1>\n        <h1>{{funcom}}</h1>\n    </div>\n    <script>\n        new Vue({\n            el:'#app',\n            data:{\n                msg:1\n            },\n            methods:{\n                //带有返回值的\n                func:function(){\n                    return '你好'\n                },\n                //不带返回值的\n                fun:function(){\n                    this.msg=this.msg+1\n                }\n            },\n            computed:{\n                funcom:function(){\n                    return '你好啊'\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### 监听属性\n\n```html\n<body>\n    <div id=\"app\">\n        米：<input type=\"text\" v-model=\"meters\">\n        千米：<input type=\"text\" v-model=\"kilometers\">\n    </div>\n    <script>\n        var vm=new Vue({\n            el:'#app',\n            data:{\n                meters : 0,\n                kilometers : 0\n            },\n            watch:{\n                meters:function(val){\n                    this.kilometers=val/1000;\n                    this.meters=kilometers;\n                },\n                kilometers:function(val){\n                    this.meters=val*1000;\n                    this.kilometers=meters\n                }\n            }\n        });\n        //$watch是一个实例方法\n        //function(newValue,oldValue)留意一下newValue和oldValue的位置，不能反\n        vm.$watch('meters',function(newValue,oldValue){\n            alert('米修改前：'+oldValue+'    '+'米修改后:'+newValue)\n        })\n    </script>\n</body>\n```\n\n\n","slug":"2019-11-20-03-vue常用属性","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vt002m54tnlbzq0jkd","content":"<center><font size=\"4\" color=\"red\">03_vue常用属性</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"vue常用属性\"><a href=\"#vue常用属性\" class=\"headerlink\" title=\"vue常用属性\"></a>vue常用属性</h2><h4 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h4><font color=\"red\">该概念的应用还不熟悉</font>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; message | filter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                message:'helloworld'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            filters:&#123;</span><br><span class=\"line\">                filter:function(value)&#123;</span><br><span class=\"line\">                    if(!value) return ''</span><br><span class=\"line\">                    value=value.toString()</span><br><span class=\"line\">                    return value.charAt(0).toUpperCase() + value.slice(1)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"计算属性\"><a href=\"#计算属性\" class=\"headerlink\" title=\"计算属性\"></a>计算属性</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; site &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var vm=new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                name:'google',</span><br><span class=\"line\">                url:'http://www.google.com',</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            //计算属性使用get时可以这样写</span><br><span class=\"line\">            // computed:&#123;</span><br><span class=\"line\">            //     site:function()&#123;</span><br><span class=\"line\">            //         return this.message + '==' + this.addredd</span><br><span class=\"line\">            //     &#125;</span><br><span class=\"line\">            // &#125;</span><br><span class=\"line\">            computed:&#123;</span><br><span class=\"line\">                site:&#123;</span><br><span class=\"line\">                    get:function()&#123;</span><br><span class=\"line\">                        return this.name + ':' + this.url</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    set:function(newvalue)&#123;</span><br><span class=\"line\">                        //split(' ')是按照空格分割</span><br><span class=\"line\">                        var names=newvalue.split(' ')</span><br><span class=\"line\">                        this.names=names</span><br><span class=\"line\">                        this.name=names[0]</span><br><span class=\"line\">                        this.url = names[names.length - 1]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        //在运行 vm.site = '菜鸟教程 http://www.runoob.com'; 时，setter 会被调用， vm.name 和 vm.url 也会被对应更新</span><br><span class=\"line\">        vm.site='菜鸟教程 http://www.runoob.com';</span><br><span class=\"line\">        document.write('names:'+vm.names);</span><br><span class=\"line\"><span class=\"xml\">        document.write('<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>');</span></span><br><span class=\"line\">        document.write('name:'+vm.name);</span><br><span class=\"line\"><span class=\"xml\">        document.write('<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>');</span></span><br><span class=\"line\">        document.write('url: ' + vm.url);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"计算属性和不带返回值方法以及带返回值方法的使用\"><a href=\"#计算属性和不带返回值方法以及带返回值方法的使用\" class=\"headerlink\" title=\"计算属性和不带返回值方法以及带返回值方法的使用\"></a>计算属性和不带返回值方法以及带返回值方法的使用</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"fun\"</span>&gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;func()&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;funcom&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                msg:1</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                //带有返回值的</span><br><span class=\"line\">                func:function()&#123;</span><br><span class=\"line\">                    return '你好'</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                //不带返回值的</span><br><span class=\"line\">                fun:function()&#123;</span><br><span class=\"line\">                    this.msg=this.msg+1</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            computed:&#123;</span><br><span class=\"line\">                funcom:function()&#123;</span><br><span class=\"line\">                    return '你好啊'</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"监听属性\"><a href=\"#监听属性\" class=\"headerlink\" title=\"监听属性\"></a>监听属性</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        米：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"meters\"</span>&gt;</span></span><br><span class=\"line\">        千米：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"kilometers\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var vm=new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                meters : 0,</span><br><span class=\"line\">                kilometers : 0</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            watch:&#123;</span><br><span class=\"line\">                meters:function(val)&#123;</span><br><span class=\"line\">                    this.kilometers=val/1000;</span><br><span class=\"line\">                    this.meters=kilometers;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                kilometers:function(val)&#123;</span><br><span class=\"line\">                    this.meters=val*1000;</span><br><span class=\"line\">                    this.kilometers=meters</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        //$watch是一个实例方法</span><br><span class=\"line\">        //function(newValue,oldValue)留意一下newValue和oldValue的位置，不能反</span><br><span class=\"line\">        vm.$watch('meters',function(newValue,oldValue)&#123;</span><br><span class=\"line\">            alert('米修改前：'+oldValue+'    '+'米修改后:'+newValue)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">03_vue常用属性</font></center>","more":"<h2 id=\"vue常用属性\"><a href=\"#vue常用属性\" class=\"headerlink\" title=\"vue常用属性\"></a>vue常用属性</h2><h4 id=\"过滤器\"><a href=\"#过滤器\" class=\"headerlink\" title=\"过滤器\"></a>过滤器</h4><font color=\"red\">该概念的应用还不熟悉</font>\n\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; message | filter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                message:'helloworld'</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            filters:&#123;</span><br><span class=\"line\">                filter:function(value)&#123;</span><br><span class=\"line\">                    if(!value) return ''</span><br><span class=\"line\">                    value=value.toString()</span><br><span class=\"line\">                    return value.charAt(0).toUpperCase() + value.slice(1)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"计算属性\"><a href=\"#计算属性\" class=\"headerlink\" title=\"计算属性\"></a>计算属性</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;&#123; site &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var vm=new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                name:'google',</span><br><span class=\"line\">                url:'http://www.google.com',</span><br><span class=\"line\">                </span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            //计算属性使用get时可以这样写</span><br><span class=\"line\">            // computed:&#123;</span><br><span class=\"line\">            //     site:function()&#123;</span><br><span class=\"line\">            //         return this.message + '==' + this.addredd</span><br><span class=\"line\">            //     &#125;</span><br><span class=\"line\">            // &#125;</span><br><span class=\"line\">            computed:&#123;</span><br><span class=\"line\">                site:&#123;</span><br><span class=\"line\">                    get:function()&#123;</span><br><span class=\"line\">                        return this.name + ':' + this.url</span><br><span class=\"line\">                    &#125;,</span><br><span class=\"line\">                    set:function(newvalue)&#123;</span><br><span class=\"line\">                        //split(' ')是按照空格分割</span><br><span class=\"line\">                        var names=newvalue.split(' ')</span><br><span class=\"line\">                        this.names=names</span><br><span class=\"line\">                        this.name=names[0]</span><br><span class=\"line\">                        this.url = names[names.length - 1]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        //在运行 vm.site = '菜鸟教程 http://www.runoob.com'; 时，setter 会被调用， vm.name 和 vm.url 也会被对应更新</span><br><span class=\"line\">        vm.site='菜鸟教程 http://www.runoob.com';</span><br><span class=\"line\">        document.write('names:'+vm.names);</span><br><span class=\"line\"><span class=\"xml\">        document.write('<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>');</span></span><br><span class=\"line\">        document.write('name:'+vm.name);</span><br><span class=\"line\"><span class=\"xml\">        document.write('<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span>');</span></span><br><span class=\"line\">        document.write('url: ' + vm.url);</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"计算属性和不带返回值方法以及带返回值方法的使用\"><a href=\"#计算属性和不带返回值方法以及带返回值方法的使用\" class=\"headerlink\" title=\"计算属性和不带返回值方法以及带返回值方法的使用\"></a>计算属性和不带返回值方法以及带返回值方法的使用</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">\"fun\"</span>&gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h2</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h2</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;func()&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;funcom&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                msg:1</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                //带有返回值的</span><br><span class=\"line\">                func:function()&#123;</span><br><span class=\"line\">                    return '你好'</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                //不带返回值的</span><br><span class=\"line\">                fun:function()&#123;</span><br><span class=\"line\">                    this.msg=this.msg+1</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            computed:&#123;</span><br><span class=\"line\">                funcom:function()&#123;</span><br><span class=\"line\">                    return '你好啊'</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"监听属性\"><a href=\"#监听属性\" class=\"headerlink\" title=\"监听属性\"></a>监听属性</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        米：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"meters\"</span>&gt;</span></span><br><span class=\"line\">        千米：<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">v-model</span>=<span class=\"string\">\"kilometers\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var vm=new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                meters : 0,</span><br><span class=\"line\">                kilometers : 0</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            watch:&#123;</span><br><span class=\"line\">                meters:function(val)&#123;</span><br><span class=\"line\">                    this.kilometers=val/1000;</span><br><span class=\"line\">                    this.meters=kilometers;</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                kilometers:function(val)&#123;</span><br><span class=\"line\">                    this.meters=val*1000;</span><br><span class=\"line\">                    this.kilometers=meters</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        //$watch是一个实例方法</span><br><span class=\"line\">        //function(newValue,oldValue)留意一下newValue和oldValue的位置，不能反</span><br><span class=\"line\">        vm.$watch('meters',function(newValue,oldValue)&#123;</span><br><span class=\"line\">            alert('米修改前：'+oldValue+'    '+'米修改后:'+newValue)</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"04_vue组件和路由","date":"2019-11-20T19:04:34.000Z","_content":"\n<center><font size=4 color=\"red\">04_vue组件和路由</font></center>\n\n<!--more-->\n\n## Vue的组件和路由\n\n#### 全局组件和局部组件\n\n```html\n<body>\n    <div id=\"app\">\n        <global></global>\n        <local></local>\n    </div>\n    <script>\n        //这个是全局组件\n        Vue.component('global',{\n            template:'<h1>自定义全局组件</h1>'\n        })\n        var vm = new Vue({\n            el:'#app',\n            //local这个组件是定义在app里的，所以是局部的\n            components:{\n                'local':{\n                    template:'<h1>自定义局部组件</h1>'\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### props属性\n\n用于传递组件间的数据\n\n```html\n<body>\n    <div id=\"app\">\n        <comp v-bind:msg=\"site\"></comp>\n    </div>\n    <script>\n        Vue.component('comp',{\n            //把父组件的数据传递到子组件里\n            props:['msg'],\n            //使用这个数据\n            template:'<h1>{{msg}}</h1>'\n        })\n        new Vue({\n            el:'#app',\n            data:{\n                site:'helloworld'\n            }\n            \n        })\n    </script>\n</body>\n```\n\n#### prop验证\n\n```html\nVue.component('my-component', {\n  props: {\n    // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)\n    propA: Number,\n    // 多个可能的类型\n    propB: [String, Number],\n    // 必填的字符串\n    propC: {\n      type: String,\n      required: true\n    },\n    // 带有默认值的数字\n    propD: {\n      type: Number,\n      default: 100\n    },\n    // 带有默认值的对象\n    propE: {\n      type: Object,\n      // 对象或数组默认值必须从一个工厂函数获取\n      default: function () {\n        return { message: 'hello' }\n      }\n    },\n    // 自定义验证函数\n    propF: {\n      validator: function (value) {\n        // 这个值必须匹配下列字符串中的一个\n        return ['success', 'warning', 'danger'].indexOf(value) !== -1\n      }\n    }\n  }\n})\n```\n\n#### 组件中的data\n\n```html\n<body>\n    <div id=\"app\">\n        <mycom></mycom>\n    </div>\n    <script>\n        Vue.component('mycom',{\n            template:'<h1>这是个全局组件---{{msg}}</h1>',\n            //1.在组件中也可以定义data，但是data不能是对象类型，只能是函数类型，而且必须有返回值，且返回值为对象\n            //2.组件中的data数据使用方式和实例中data的使用方式一样\n            data:function(){\n                return {\n                    msg:'这是组件data中的数据'\n                }\n            }\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{}\n        })\n    </script>\n</body>\n```\n\n#### emit将子组件数据传递给父组件数据\n\n```html\n<body>\n    <div id=\"app\">\n        <div id=\"conter-event-example\">\n            <!-- 6.值增加 -->\n            <p>{{total}}</p>\n            <!-- 4.到父组件后执行函数countertotal -->\n            <button-conter v-on:counterzj=\"countertotal\"></button-conter>\n            <button-conter v-on:counterzj=\"countertotal\"></button-conter>\n        </div>\n    </div>\n    <script>\n        Vue.component('button-conter',{\n            //1.点击button按钮，触发函数clickta\n            template:'<button v-on:click=\"clickta\">{{counter}}</button>',\n            data:function(){\n                return {\n                    counter:0\n                }\n            },\n            methods:{\n                //2.触发的函数clickta，实现自增\n                clickta:function(){\n                    this.counter+=1,\n                    //3.emit用于触发事件，用于把子组件数据传递给父组件，这一步直接执行父组件的counterzj\n                    this.$emit('counterzj')\n                }\n            }\n        })\n        new Vue({\n            el:'#conter-event-example',\n            data:{\n                total:0\n            },\n            methods:{\n                //5.函数countertotal实现自增\n                countertotal:function(){\n                    this.total+=1\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### 路由的基本使用\n\n* 访问路由后面加/login,可以访问跳转到登录组件\n\n`file:///D:/Hui/Persion/Application/vue/code/v-route.html#/login`\n\n* 访问路由后面加/register，可以访问跳转到注册组件\n\n`file:///D:/Hui/Persion/Application/vue/code/v-route.html#/register`\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 -->\n        <router-view></router-view>\n    </div>\n    <script>\n        //解释：什么是组件的模板对象，什么是组件的引用名称\n        //组件的模板对象,这里的login就是模板对象\n        var login={\n            template:'<h1>登录组件</h1>'\n        }\n        var register={\n            template:'<h1>注册组件</h1>'\n        }\n        //组件的引用名称，这里的login就是引用名称\n        Vue.component('login',{\n            template:'<h1>登录组件</h1>'\n        })\n        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter\n        var routerobj=new VueRouter({\n           // route 这个配置对象中的route表示[路由匹配规则]的意思\n           routes:[     //routes表示多个路由匹配规则\n                //每个路由匹配规则都有一个对象，每个对象都两个属性\n                //path:表示监听，路由的链接地址\n                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件\n                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称\n                {path:'/login',component:login},\n                {path:'/register',component:register}\n           ]\n        })\n\n        var vm = new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件\n            router:routerobj\n        })\n    </script>\n</body>\n```\n\n#### 组件的访问方式\n\n```html\n<div id=\"app\">\n        <!-- 这是一般的写法，前面必须加# -->\n        <!-- <a href=\"#/login\">登录</a>\n        <a href=\"#/register\">注册</a> -->\n\n        <!-- 这是官方的写法,推荐使用.router-link渲染出来是a标签，如果想要渲染为span标签，可以加上tag=\"span\" -->\n        <router-link to=\"/login\">登录</router-link>\n        <router-link to=\"/register\" tag=\"span\">注册</router-link>\n        \n        <!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 -->\n        <router-view></router-view>\n    </div>\n```\n\n#### 修改初始页面加载的组件\n\n两种方法：\n\n```html\n//加这一步是为了加载初始页面时直接跳转到login组件\n{path:'/',component:login},\n//但是访问路径是根路径，组件是登录组件，这样不太合理，不推荐\n```\n\n```html\n//这一步可以直接在初始加载时进入的路径和组件都是登录组件\n{path:'/',redirect:'login'},\n```\n\n实例：\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 这是一般的写法，前面必须加# -->\n        <!-- <a href=\"#/login\">登录</a>\n        <a href=\"#/register\">注册</a> -->\n\n        <!-- 这是官方的写法,推荐使用 -->\n        <router-link to=\"/login\">登录</router-link>\n        <router-link to=\"/register\" tag=\"span\">注册</router-link>\n\n        <!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 -->\n        <router-view></router-view>\n    </div>\n    <script>\n        //解释：什么是组件的模板对象，什么是组件的引用名称\n        //组件的模板对象,这里的login就是模板对象\n        var login={\n            template:'<h1>登录组件</h1>'\n        }\n        var register={\n            template:'<h1>注册组件</h1>'\n        }\n        //组件的引用名称，这里的login就是引用名称\n        Vue.component('login',{\n            template:'<h1>登录组件</h1>'\n        })\n        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter\n        var routerobj=new VueRouter({\n           // route 这个配置对象中的route表示[路由匹配规则]的意思\n           routes:[     //routes表示多个路由匹配规则\n                //每个路由匹配规则都有一个对象，每个对象都两个属性\n                //path:表示监听，路由的链接地址\n                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件\n                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称\n\n                //加这一步是为了加载初始页面时直接跳转到login组件\n                // {path:'/',component:login},\n\n                //这一步可以直接在初始加载时进入的路径和组件都是登录组件\n                {path:'/',redirect:'login'},\n\n                {path:'/login',component:login},\n                {path:'/register',component:register}\n           ]\n        })\n\n        var vm = new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件\n            router:routerobj\n        })\n    </script>\n</body>\n```\n\n#### 路由样式的设置\n\n路由默认样式class：router-link-active\n\n直接在样式中设置：\n\n```html\n<style>\n        .router-link-active{\n            color:red;\n            font-weight: 800;\n            font-size: 200%;\n\n        }\n</style>\n```\n\n如果想要修改默认的router-link-active，可以在路由构造函数中使用自己定义的样式\n\n`linkActiveClass:'mystyle'`\n\n#### 路由规则中定义参数方式一：query\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.query.id和this.$route.query.name。this可以省去 -->\n        <router-link to=\"/login?id=2&name=zhangsan\">登录</router-link>\n        <router-link to=\"/register\">注册</router-link>\n        <router-view></router-view>\n    </div>\n    <script>\n        var login={\n            template:'<h1>登录 --- {{$route.query.id}} --- {{this.$route.query.name}}</h1>'\n        }\n\n        var register={\n            template:'<h1>注册</h1>'\n        }\n        var router=new VueRouter({\n            routes:[\n                {path:'/login',component:login},\n                {path:'/register',component:register},\n            ]\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //本是写成router:router，但由于是一样的，所以可以直接写router\n            router\n        })\n    </script>\n</body>\n```\n\n#### 路由规则中定义参数方式一：params\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.params.id和this.$route.params.name -->\n        <router-link to=\"/login/3/lisi\">登录</router-link>\n        <router-link to=\"/register\">注册</router-link>\n        <router-view></router-view>\n    </div>\n    <script>\n        var login={\n            template:'<h1>登录 --- {{$route.params.id}} --- {{$route.params.name}}</h1>'\n        }\n\n        var register={\n            template:'<h1>注册</h1>'\n        }\n        var router=new VueRouter({\n            routes:[\n                //:id表示占位符\n                {path:'/login/:id/:name',component:login},\n                {path:'/register',component:register},\n            ]\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //本是写成router:router，但由于是一样的，所以可以直接写router\n            router\n        })\n    </script>\n</body>\n```\n\n#### 使用children实现路由的嵌套\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 跳转 -->\n        <router-link to=\"/index\">首页</router-link>\n        <!-- 显示路由 -->\n        <router-view></router-view>\n\n    </div>\n\n    <template id=\"temp\">\n        <div>\n            <h1>首页</h1>\n            <!-- router-link一定要被div或者什么属性包裹，否则无法显示 -->\n            <router-link to=\"/index/login\">登录</router-link>\n            <router-link to=\"/index/register\">注册</router-link>\n            <!-- 子组件的显示容器 -->\n            <router-view></router-view>\n        </div>  \n    </template>\n\n    <script>\n\n\n        var index={\n            template:'#temp'\n        }\n        var login={\n            template:'<h3>登录</h3>'\n        }\n        var register={\n            template:'<h3>注册</h3>'\n        }\n        //定义路由\n        var router=new VueRouter({\n            routes:[\n                {   path:'/index',\n                    component:index,\n                    children:[\n                        //子组件中不能加/\n                        {path:'login',component:login},\n                        {path:'register',component:register}\n                    ]\n                }\n            ]\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            router\n        })\n    </script>\n</body>\n```\n","source":"_posts/2019-11-20-04-vue组件和路由.md","raw":"---\ntitle: 04_vue组件和路由\ndate: 2019-11-20 19:04:34\ncategories:\n- Vue\ntags:\n- 组件\n- 路由\n---\n\n<center><font size=4 color=\"red\">04_vue组件和路由</font></center>\n\n<!--more-->\n\n## Vue的组件和路由\n\n#### 全局组件和局部组件\n\n```html\n<body>\n    <div id=\"app\">\n        <global></global>\n        <local></local>\n    </div>\n    <script>\n        //这个是全局组件\n        Vue.component('global',{\n            template:'<h1>自定义全局组件</h1>'\n        })\n        var vm = new Vue({\n            el:'#app',\n            //local这个组件是定义在app里的，所以是局部的\n            components:{\n                'local':{\n                    template:'<h1>自定义局部组件</h1>'\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### props属性\n\n用于传递组件间的数据\n\n```html\n<body>\n    <div id=\"app\">\n        <comp v-bind:msg=\"site\"></comp>\n    </div>\n    <script>\n        Vue.component('comp',{\n            //把父组件的数据传递到子组件里\n            props:['msg'],\n            //使用这个数据\n            template:'<h1>{{msg}}</h1>'\n        })\n        new Vue({\n            el:'#app',\n            data:{\n                site:'helloworld'\n            }\n            \n        })\n    </script>\n</body>\n```\n\n#### prop验证\n\n```html\nVue.component('my-component', {\n  props: {\n    // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)\n    propA: Number,\n    // 多个可能的类型\n    propB: [String, Number],\n    // 必填的字符串\n    propC: {\n      type: String,\n      required: true\n    },\n    // 带有默认值的数字\n    propD: {\n      type: Number,\n      default: 100\n    },\n    // 带有默认值的对象\n    propE: {\n      type: Object,\n      // 对象或数组默认值必须从一个工厂函数获取\n      default: function () {\n        return { message: 'hello' }\n      }\n    },\n    // 自定义验证函数\n    propF: {\n      validator: function (value) {\n        // 这个值必须匹配下列字符串中的一个\n        return ['success', 'warning', 'danger'].indexOf(value) !== -1\n      }\n    }\n  }\n})\n```\n\n#### 组件中的data\n\n```html\n<body>\n    <div id=\"app\">\n        <mycom></mycom>\n    </div>\n    <script>\n        Vue.component('mycom',{\n            template:'<h1>这是个全局组件---{{msg}}</h1>',\n            //1.在组件中也可以定义data，但是data不能是对象类型，只能是函数类型，而且必须有返回值，且返回值为对象\n            //2.组件中的data数据使用方式和实例中data的使用方式一样\n            data:function(){\n                return {\n                    msg:'这是组件data中的数据'\n                }\n            }\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{}\n        })\n    </script>\n</body>\n```\n\n#### emit将子组件数据传递给父组件数据\n\n```html\n<body>\n    <div id=\"app\">\n        <div id=\"conter-event-example\">\n            <!-- 6.值增加 -->\n            <p>{{total}}</p>\n            <!-- 4.到父组件后执行函数countertotal -->\n            <button-conter v-on:counterzj=\"countertotal\"></button-conter>\n            <button-conter v-on:counterzj=\"countertotal\"></button-conter>\n        </div>\n    </div>\n    <script>\n        Vue.component('button-conter',{\n            //1.点击button按钮，触发函数clickta\n            template:'<button v-on:click=\"clickta\">{{counter}}</button>',\n            data:function(){\n                return {\n                    counter:0\n                }\n            },\n            methods:{\n                //2.触发的函数clickta，实现自增\n                clickta:function(){\n                    this.counter+=1,\n                    //3.emit用于触发事件，用于把子组件数据传递给父组件，这一步直接执行父组件的counterzj\n                    this.$emit('counterzj')\n                }\n            }\n        })\n        new Vue({\n            el:'#conter-event-example',\n            data:{\n                total:0\n            },\n            methods:{\n                //5.函数countertotal实现自增\n                countertotal:function(){\n                    this.total+=1\n                }\n            }\n        })\n    </script>\n</body>\n```\n\n#### 路由的基本使用\n\n* 访问路由后面加/login,可以访问跳转到登录组件\n\n`file:///D:/Hui/Persion/Application/vue/code/v-route.html#/login`\n\n* 访问路由后面加/register，可以访问跳转到注册组件\n\n`file:///D:/Hui/Persion/Application/vue/code/v-route.html#/register`\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 -->\n        <router-view></router-view>\n    </div>\n    <script>\n        //解释：什么是组件的模板对象，什么是组件的引用名称\n        //组件的模板对象,这里的login就是模板对象\n        var login={\n            template:'<h1>登录组件</h1>'\n        }\n        var register={\n            template:'<h1>注册组件</h1>'\n        }\n        //组件的引用名称，这里的login就是引用名称\n        Vue.component('login',{\n            template:'<h1>登录组件</h1>'\n        })\n        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter\n        var routerobj=new VueRouter({\n           // route 这个配置对象中的route表示[路由匹配规则]的意思\n           routes:[     //routes表示多个路由匹配规则\n                //每个路由匹配规则都有一个对象，每个对象都两个属性\n                //path:表示监听，路由的链接地址\n                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件\n                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称\n                {path:'/login',component:login},\n                {path:'/register',component:register}\n           ]\n        })\n\n        var vm = new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件\n            router:routerobj\n        })\n    </script>\n</body>\n```\n\n#### 组件的访问方式\n\n```html\n<div id=\"app\">\n        <!-- 这是一般的写法，前面必须加# -->\n        <!-- <a href=\"#/login\">登录</a>\n        <a href=\"#/register\">注册</a> -->\n\n        <!-- 这是官方的写法,推荐使用.router-link渲染出来是a标签，如果想要渲染为span标签，可以加上tag=\"span\" -->\n        <router-link to=\"/login\">登录</router-link>\n        <router-link to=\"/register\" tag=\"span\">注册</router-link>\n        \n        <!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 -->\n        <router-view></router-view>\n    </div>\n```\n\n#### 修改初始页面加载的组件\n\n两种方法：\n\n```html\n//加这一步是为了加载初始页面时直接跳转到login组件\n{path:'/',component:login},\n//但是访问路径是根路径，组件是登录组件，这样不太合理，不推荐\n```\n\n```html\n//这一步可以直接在初始加载时进入的路径和组件都是登录组件\n{path:'/',redirect:'login'},\n```\n\n实例：\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 这是一般的写法，前面必须加# -->\n        <!-- <a href=\"#/login\">登录</a>\n        <a href=\"#/register\">注册</a> -->\n\n        <!-- 这是官方的写法,推荐使用 -->\n        <router-link to=\"/login\">登录</router-link>\n        <router-link to=\"/register\" tag=\"span\">注册</router-link>\n\n        <!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 -->\n        <router-view></router-view>\n    </div>\n    <script>\n        //解释：什么是组件的模板对象，什么是组件的引用名称\n        //组件的模板对象,这里的login就是模板对象\n        var login={\n            template:'<h1>登录组件</h1>'\n        }\n        var register={\n            template:'<h1>注册组件</h1>'\n        }\n        //组件的引用名称，这里的login就是引用名称\n        Vue.component('login',{\n            template:'<h1>登录组件</h1>'\n        })\n        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter\n        var routerobj=new VueRouter({\n           // route 这个配置对象中的route表示[路由匹配规则]的意思\n           routes:[     //routes表示多个路由匹配规则\n                //每个路由匹配规则都有一个对象，每个对象都两个属性\n                //path:表示监听，路由的链接地址\n                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件\n                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称\n\n                //加这一步是为了加载初始页面时直接跳转到login组件\n                // {path:'/',component:login},\n\n                //这一步可以直接在初始加载时进入的路径和组件都是登录组件\n                {path:'/',redirect:'login'},\n\n                {path:'/login',component:login},\n                {path:'/register',component:register}\n           ]\n        })\n\n        var vm = new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件\n            router:routerobj\n        })\n    </script>\n</body>\n```\n\n#### 路由样式的设置\n\n路由默认样式class：router-link-active\n\n直接在样式中设置：\n\n```html\n<style>\n        .router-link-active{\n            color:red;\n            font-weight: 800;\n            font-size: 200%;\n\n        }\n</style>\n```\n\n如果想要修改默认的router-link-active，可以在路由构造函数中使用自己定义的样式\n\n`linkActiveClass:'mystyle'`\n\n#### 路由规则中定义参数方式一：query\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.query.id和this.$route.query.name。this可以省去 -->\n        <router-link to=\"/login?id=2&name=zhangsan\">登录</router-link>\n        <router-link to=\"/register\">注册</router-link>\n        <router-view></router-view>\n    </div>\n    <script>\n        var login={\n            template:'<h1>登录 --- {{$route.query.id}} --- {{this.$route.query.name}}</h1>'\n        }\n\n        var register={\n            template:'<h1>注册</h1>'\n        }\n        var router=new VueRouter({\n            routes:[\n                {path:'/login',component:login},\n                {path:'/register',component:register},\n            ]\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //本是写成router:router，但由于是一样的，所以可以直接写router\n            router\n        })\n    </script>\n</body>\n```\n\n#### 路由规则中定义参数方式一：params\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.params.id和this.$route.params.name -->\n        <router-link to=\"/login/3/lisi\">登录</router-link>\n        <router-link to=\"/register\">注册</router-link>\n        <router-view></router-view>\n    </div>\n    <script>\n        var login={\n            template:'<h1>登录 --- {{$route.params.id}} --- {{$route.params.name}}</h1>'\n        }\n\n        var register={\n            template:'<h1>注册</h1>'\n        }\n        var router=new VueRouter({\n            routes:[\n                //:id表示占位符\n                {path:'/login/:id/:name',component:login},\n                {path:'/register',component:register},\n            ]\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            //本是写成router:router，但由于是一样的，所以可以直接写router\n            router\n        })\n    </script>\n</body>\n```\n\n#### 使用children实现路由的嵌套\n\n```html\n<body>\n    <div id=\"app\">\n        <!-- 跳转 -->\n        <router-link to=\"/index\">首页</router-link>\n        <!-- 显示路由 -->\n        <router-view></router-view>\n\n    </div>\n\n    <template id=\"temp\">\n        <div>\n            <h1>首页</h1>\n            <!-- router-link一定要被div或者什么属性包裹，否则无法显示 -->\n            <router-link to=\"/index/login\">登录</router-link>\n            <router-link to=\"/index/register\">注册</router-link>\n            <!-- 子组件的显示容器 -->\n            <router-view></router-view>\n        </div>  \n    </template>\n\n    <script>\n\n\n        var index={\n            template:'#temp'\n        }\n        var login={\n            template:'<h3>登录</h3>'\n        }\n        var register={\n            template:'<h3>注册</h3>'\n        }\n        //定义路由\n        var router=new VueRouter({\n            routes:[\n                {   path:'/index',\n                    component:index,\n                    children:[\n                        //子组件中不能加/\n                        {path:'login',component:login},\n                        {path:'register',component:register}\n                    ]\n                }\n            ]\n        })\n        new Vue({\n            el:'#app',\n            data:{},\n            methods:{},\n            router\n        })\n    </script>\n</body>\n```\n","slug":"2019-11-20-04-vue组件和路由","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vv002r54tng87umvz3","content":"<center><font size=\"4\" color=\"red\">04_vue组件和路由</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Vue的组件和路由\"><a href=\"#Vue的组件和路由\" class=\"headerlink\" title=\"Vue的组件和路由\"></a>Vue的组件和路由</h2><h4 id=\"全局组件和局部组件\"><a href=\"#全局组件和局部组件\" class=\"headerlink\" title=\"全局组件和局部组件\"></a>全局组件和局部组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">global</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">global</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">local</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">local</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //这个是全局组件</span><br><span class=\"line\">        Vue.component('global',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>自定义全局组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            //local这个组件是定义在app里的，所以是局部的</span><br><span class=\"line\">            components:&#123;</span><br><span class=\"line\">                'local':&#123;</span><br><span class=\"line\"><span class=\"xml\">                    template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>自定义局部组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"props属性\"><a href=\"#props属性\" class=\"headerlink\" title=\"props属性\"></a>props属性</h4><p>用于传递组件间的数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-bind:msg</span>=<span class=\"string\">\"site\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        Vue.component('comp',&#123;</span><br><span class=\"line\">            //把父组件的数据传递到子组件里</span><br><span class=\"line\">            props:['msg'],</span><br><span class=\"line\">            //使用这个数据</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                site:'helloworld'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"prop验证\"><a href=\"#prop验证\" class=\"headerlink\" title=\"prop验证\"></a>prop验证</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component('my-component', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)</span><br><span class=\"line\">    propA: Number,</span><br><span class=\"line\">    // 多个可能的类型</span><br><span class=\"line\">    propB: [String, Number],</span><br><span class=\"line\">    // 必填的字符串</span><br><span class=\"line\">    propC: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 带有默认值的数字</span><br><span class=\"line\">    propD: &#123;</span><br><span class=\"line\">      type: Number,</span><br><span class=\"line\">      default: 100</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 带有默认值的对象</span><br><span class=\"line\">    propE: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      // 对象或数组默认值必须从一个工厂函数获取</span><br><span class=\"line\">      default: function () &#123;</span><br><span class=\"line\">        return &#123; message: 'hello' &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 自定义验证函数</span><br><span class=\"line\">    propF: &#123;</span><br><span class=\"line\">      validator: function (value) &#123;</span><br><span class=\"line\">        // 这个值必须匹配下列字符串中的一个</span><br><span class=\"line\">        return ['success', 'warning', 'danger'].indexOf(value) !== -1</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"组件中的data\"><a href=\"#组件中的data\" class=\"headerlink\" title=\"组件中的data\"></a>组件中的data</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mycom</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">mycom</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        Vue.component('mycom',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是个全局组件---&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>',</span></span><br><span class=\"line\">            //1.在组件中也可以定义data，但是data不能是对象类型，只能是函数类型，而且必须有返回值，且返回值为对象</span><br><span class=\"line\">            //2.组件中的data数据使用方式和实例中data的使用方式一样</span><br><span class=\"line\">            data:function()&#123;</span><br><span class=\"line\">                return &#123;</span><br><span class=\"line\">                    msg:'这是组件data中的数据'</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"emit将子组件数据传递给父组件数据\"><a href=\"#emit将子组件数据传递给父组件数据\" class=\"headerlink\" title=\"emit将子组件数据传递给父组件数据\"></a>emit将子组件数据传递给父组件数据</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"conter-event-example\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 6.值增加 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;total&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 4.到父组件后执行函数countertotal --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button-conter</span> <span class=\"attr\">v-on:counterzj</span>=<span class=\"string\">\"countertotal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-conter</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button-conter</span> <span class=\"attr\">v-on:counterzj</span>=<span class=\"string\">\"countertotal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-conter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        Vue.component('button-conter',&#123;</span><br><span class=\"line\">            //1.点击button按钮，触发函数clickta</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"clickta\"</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span>',</span></span><br><span class=\"line\">            data:function()&#123;</span><br><span class=\"line\">                return &#123;</span><br><span class=\"line\">                    counter:0</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                //2.触发的函数clickta，实现自增</span><br><span class=\"line\">                clickta:function()&#123;</span><br><span class=\"line\">                    this.counter+=1,</span><br><span class=\"line\">                    //3.emit用于触发事件，用于把子组件数据传递给父组件，这一步直接执行父组件的counterzj</span><br><span class=\"line\">                    this.$emit('counterzj')</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#conter-event-example',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                total:0</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                //5.函数countertotal实现自增</span><br><span class=\"line\">                countertotal:function()&#123;</span><br><span class=\"line\">                    this.total+=1</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由的基本使用\"><a href=\"#路由的基本使用\" class=\"headerlink\" title=\"路由的基本使用\"></a>路由的基本使用</h4><ul>\n<li>访问路由后面加/login,可以访问跳转到登录组件</li>\n</ul>\n<p><code>file:///D:/Hui/Persion/Application/vue/code/v-route.html#/login</code></p>\n<ul>\n<li>访问路由后面加/register，可以访问跳转到注册组件</li>\n</ul>\n<p><code>file:///D:/Hui/Persion/Application/vue/code/v-route.html#/register</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //解释：什么是组件的模板对象，什么是组件的引用名称</span><br><span class=\"line\">        //组件的模板对象,这里的login就是模板对象</span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //组件的引用名称，这里的login就是引用名称</span><br><span class=\"line\">        Vue.component('login',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter</span><br><span class=\"line\">        var routerobj=new VueRouter(&#123;</span><br><span class=\"line\">           // route 这个配置对象中的route表示[路由匹配规则]的意思</span><br><span class=\"line\">           routes:[     //routes表示多个路由匹配规则</span><br><span class=\"line\">                //每个路由匹配规则都有一个对象，每个对象都两个属性</span><br><span class=\"line\">                //path:表示监听，路由的链接地址</span><br><span class=\"line\">                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件</span><br><span class=\"line\">                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称</span><br><span class=\"line\">                &#123;path:'/login',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件</span><br><span class=\"line\">            router:routerobj</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"组件的访问方式\"><a href=\"#组件的访问方式\" class=\"headerlink\" title=\"组件的访问方式\"></a>组件的访问方式</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是一般的写法，前面必须加# --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;a href=\"#/login\"&gt;登录&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;a href=\"#/register\"&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是官方的写法,推荐使用.router-link渲染出来是a标签，如果想要渲染为span标签，可以加上tag=\"span\" --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span> <span class=\"attr\">tag</span>=<span class=\"string\">\"span\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"修改初始页面加载的组件\"><a href=\"#修改初始页面加载的组件\" class=\"headerlink\" title=\"修改初始页面加载的组件\"></a>修改初始页面加载的组件</h4><p>两种方法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//加这一步是为了加载初始页面时直接跳转到login组件</span><br><span class=\"line\">&#123;path:'/',component:login&#125;,</span><br><span class=\"line\">//但是访问路径是根路径，组件是登录组件，这样不太合理，不推荐</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//这一步可以直接在初始加载时进入的路径和组件都是登录组件</span><br><span class=\"line\">&#123;path:'/',redirect:'login'&#125;,</span><br></pre></td></tr></table></figure>\n<p>实例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是一般的写法，前面必须加# --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;a href=\"#/login\"&gt;登录&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;a href=\"#/register\"&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是官方的写法,推荐使用 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span> <span class=\"attr\">tag</span>=<span class=\"string\">\"span\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //解释：什么是组件的模板对象，什么是组件的引用名称</span><br><span class=\"line\">        //组件的模板对象,这里的login就是模板对象</span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //组件的引用名称，这里的login就是引用名称</span><br><span class=\"line\">        Vue.component('login',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter</span><br><span class=\"line\">        var routerobj=new VueRouter(&#123;</span><br><span class=\"line\">           // route 这个配置对象中的route表示[路由匹配规则]的意思</span><br><span class=\"line\">           routes:[     //routes表示多个路由匹配规则</span><br><span class=\"line\">                //每个路由匹配规则都有一个对象，每个对象都两个属性</span><br><span class=\"line\">                //path:表示监听，路由的链接地址</span><br><span class=\"line\">                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件</span><br><span class=\"line\">                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称</span><br><span class=\"line\"></span><br><span class=\"line\">                //加这一步是为了加载初始页面时直接跳转到login组件</span><br><span class=\"line\">                // &#123;path:'/',component:login&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">                //这一步可以直接在初始加载时进入的路径和组件都是登录组件</span><br><span class=\"line\">                &#123;path:'/',redirect:'login'&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">                &#123;path:'/login',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件</span><br><span class=\"line\">            router:routerobj</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由样式的设置\"><a href=\"#路由样式的设置\" class=\"headerlink\" title=\"路由样式的设置\"></a>路由样式的设置</h4><p>路由默认样式class：router-link-active</p>\n<p>直接在样式中设置：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .router-link-active&#123;</span><br><span class=\"line\">            color:red;</span><br><span class=\"line\">            font-weight: 800;</span><br><span class=\"line\">            font-size: 200%;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如果想要修改默认的router-link-active，可以在路由构造函数中使用自己定义的样式</p>\n<p><code>linkActiveClass:&#39;mystyle&#39;</code></p>\n<h4 id=\"路由规则中定义参数方式一：query\"><a href=\"#路由规则中定义参数方式一：query\" class=\"headerlink\" title=\"路由规则中定义参数方式一：query\"></a>路由规则中定义参数方式一：query</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.query.id和this.$route.query.name。this可以省去 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login?id=2&amp;name=zhangsan\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录 --- &#123;&#123;$route.query.id&#125;&#125; --- &#123;&#123;this.$route.query.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var router=new VueRouter(&#123;</span><br><span class=\"line\">            routes:[</span><br><span class=\"line\">                &#123;path:'/login',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //本是写成router:router，但由于是一样的，所以可以直接写router</span><br><span class=\"line\">            router</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由规则中定义参数方式一：params\"><a href=\"#路由规则中定义参数方式一：params\" class=\"headerlink\" title=\"路由规则中定义参数方式一：params\"></a>路由规则中定义参数方式一：params</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.params.id和this.$route.params.name --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login/3/lisi\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录 --- &#123;&#123;$route.params.id&#125;&#125; --- &#123;&#123;$route.params.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var router=new VueRouter(&#123;</span><br><span class=\"line\">            routes:[</span><br><span class=\"line\">                //:id表示占位符</span><br><span class=\"line\">                &#123;path:'/login/:id/:name',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //本是写成router:router，但由于是一样的，所以可以直接写router</span><br><span class=\"line\">            router</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用children实现路由的嵌套\"><a href=\"#使用children实现路由的嵌套\" class=\"headerlink\" title=\"使用children实现路由的嵌套\"></a>使用children实现路由的嵌套</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 跳转 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/index\"</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 显示路由 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">\"temp\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- router-link一定要被div或者什么属性包裹，否则无法显示 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/index/login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/index/register\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 子组件的显示容器 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        var index=&#123;</span><br><span class=\"line\">            template:'#temp'</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //定义路由</span><br><span class=\"line\">        var router=new VueRouter(&#123;</span><br><span class=\"line\">            routes:[</span><br><span class=\"line\">                &#123;   path:'/index',</span><br><span class=\"line\">                    component:index,</span><br><span class=\"line\">                    children:[</span><br><span class=\"line\">                        //子组件中不能加/</span><br><span class=\"line\">                        &#123;path:'login',component:login&#125;,</span><br><span class=\"line\">                        &#123;path:'register',component:register&#125;</span><br><span class=\"line\">                    ]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            router</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">04_vue组件和路由</font></center>","more":"<h2 id=\"Vue的组件和路由\"><a href=\"#Vue的组件和路由\" class=\"headerlink\" title=\"Vue的组件和路由\"></a>Vue的组件和路由</h2><h4 id=\"全局组件和局部组件\"><a href=\"#全局组件和局部组件\" class=\"headerlink\" title=\"全局组件和局部组件\"></a>全局组件和局部组件</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">global</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">global</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">local</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">local</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //这个是全局组件</span><br><span class=\"line\">        Vue.component('global',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>自定义全局组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            //local这个组件是定义在app里的，所以是局部的</span><br><span class=\"line\">            components:&#123;</span><br><span class=\"line\">                'local':&#123;</span><br><span class=\"line\"><span class=\"xml\">                    template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>自定义局部组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"props属性\"><a href=\"#props属性\" class=\"headerlink\" title=\"props属性\"></a>props属性</h4><p>用于传递组件间的数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">comp</span> <span class=\"attr\">v-bind:msg</span>=<span class=\"string\">\"site\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">comp</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        Vue.component('comp',&#123;</span><br><span class=\"line\">            //把父组件的数据传递到子组件里</span><br><span class=\"line\">            props:['msg'],</span><br><span class=\"line\">            //使用这个数据</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                site:'helloworld'</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"prop验证\"><a href=\"#prop验证\" class=\"headerlink\" title=\"prop验证\"></a>prop验证</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.component('my-component', &#123;</span><br><span class=\"line\">  props: &#123;</span><br><span class=\"line\">    // 基础的类型检查 (`null` 和 `undefined` 会通过任何类型验证)</span><br><span class=\"line\">    propA: Number,</span><br><span class=\"line\">    // 多个可能的类型</span><br><span class=\"line\">    propB: [String, Number],</span><br><span class=\"line\">    // 必填的字符串</span><br><span class=\"line\">    propC: &#123;</span><br><span class=\"line\">      type: String,</span><br><span class=\"line\">      required: true</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 带有默认值的数字</span><br><span class=\"line\">    propD: &#123;</span><br><span class=\"line\">      type: Number,</span><br><span class=\"line\">      default: 100</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 带有默认值的对象</span><br><span class=\"line\">    propE: &#123;</span><br><span class=\"line\">      type: Object,</span><br><span class=\"line\">      // 对象或数组默认值必须从一个工厂函数获取</span><br><span class=\"line\">      default: function () &#123;</span><br><span class=\"line\">        return &#123; message: 'hello' &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 自定义验证函数</span><br><span class=\"line\">    propF: &#123;</span><br><span class=\"line\">      validator: function (value) &#123;</span><br><span class=\"line\">        // 这个值必须匹配下列字符串中的一个</span><br><span class=\"line\">        return ['success', 'warning', 'danger'].indexOf(value) !== -1</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"组件中的data\"><a href=\"#组件中的data\" class=\"headerlink\" title=\"组件中的data\"></a>组件中的data</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mycom</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">mycom</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        Vue.component('mycom',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>这是个全局组件---&#123;&#123;msg&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>',</span></span><br><span class=\"line\">            //1.在组件中也可以定义data，但是data不能是对象类型，只能是函数类型，而且必须有返回值，且返回值为对象</span><br><span class=\"line\">            //2.组件中的data数据使用方式和实例中data的使用方式一样</span><br><span class=\"line\">            data:function()&#123;</span><br><span class=\"line\">                return &#123;</span><br><span class=\"line\">                    msg:'这是组件data中的数据'</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"emit将子组件数据传递给父组件数据\"><a href=\"#emit将子组件数据传递给父组件数据\" class=\"headerlink\" title=\"emit将子组件数据传递给父组件数据\"></a>emit将子组件数据传递给父组件数据</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"conter-event-example\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 6.值增加 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>&#123;&#123;total&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 4.到父组件后执行函数countertotal --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button-conter</span> <span class=\"attr\">v-on:counterzj</span>=<span class=\"string\">\"countertotal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-conter</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">button-conter</span> <span class=\"attr\">v-on:counterzj</span>=<span class=\"string\">\"countertotal\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">button-conter</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        Vue.component('button-conter',&#123;</span><br><span class=\"line\">            //1.点击button按钮，触发函数clickta</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">v-on:click</span>=<span class=\"string\">\"clickta\"</span>&gt;</span>&#123;&#123;counter&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span>',</span></span><br><span class=\"line\">            data:function()&#123;</span><br><span class=\"line\">                return &#123;</span><br><span class=\"line\">                    counter:0</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                //2.触发的函数clickta，实现自增</span><br><span class=\"line\">                clickta:function()&#123;</span><br><span class=\"line\">                    this.counter+=1,</span><br><span class=\"line\">                    //3.emit用于触发事件，用于把子组件数据传递给父组件，这一步直接执行父组件的counterzj</span><br><span class=\"line\">                    this.$emit('counterzj')</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#conter-event-example',</span><br><span class=\"line\">            data:&#123;</span><br><span class=\"line\">                total:0</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            methods:&#123;</span><br><span class=\"line\">                //5.函数countertotal实现自增</span><br><span class=\"line\">                countertotal:function()&#123;</span><br><span class=\"line\">                    this.total+=1</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由的基本使用\"><a href=\"#路由的基本使用\" class=\"headerlink\" title=\"路由的基本使用\"></a>路由的基本使用</h4><ul>\n<li>访问路由后面加/login,可以访问跳转到登录组件</li>\n</ul>\n<p><code>file:///D:/Hui/Persion/Application/vue/code/v-route.html#/login</code></p>\n<ul>\n<li>访问路由后面加/register，可以访问跳转到注册组件</li>\n</ul>\n<p><code>file:///D:/Hui/Persion/Application/vue/code/v-route.html#/register</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //解释：什么是组件的模板对象，什么是组件的引用名称</span><br><span class=\"line\">        //组件的模板对象,这里的login就是模板对象</span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //组件的引用名称，这里的login就是引用名称</span><br><span class=\"line\">        Vue.component('login',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter</span><br><span class=\"line\">        var routerobj=new VueRouter(&#123;</span><br><span class=\"line\">           // route 这个配置对象中的route表示[路由匹配规则]的意思</span><br><span class=\"line\">           routes:[     //routes表示多个路由匹配规则</span><br><span class=\"line\">                //每个路由匹配规则都有一个对象，每个对象都两个属性</span><br><span class=\"line\">                //path:表示监听，路由的链接地址</span><br><span class=\"line\">                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件</span><br><span class=\"line\">                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称</span><br><span class=\"line\">                &#123;path:'/login',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件</span><br><span class=\"line\">            router:routerobj</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"组件的访问方式\"><a href=\"#组件的访问方式\" class=\"headerlink\" title=\"组件的访问方式\"></a>组件的访问方式</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是一般的写法，前面必须加# --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;a href=\"#/login\"&gt;登录&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;a href=\"#/register\"&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是官方的写法,推荐使用.router-link渲染出来是a标签，如果想要渲染为span标签，可以加上tag=\"span\" --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span> <span class=\"attr\">tag</span>=<span class=\"string\">\"span\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"修改初始页面加载的组件\"><a href=\"#修改初始页面加载的组件\" class=\"headerlink\" title=\"修改初始页面加载的组件\"></a>修改初始页面加载的组件</h4><p>两种方法：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//加这一步是为了加载初始页面时直接跳转到login组件</span><br><span class=\"line\">&#123;path:'/',component:login&#125;,</span><br><span class=\"line\">//但是访问路径是根路径，组件是登录组件，这样不太合理，不推荐</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//这一步可以直接在初始加载时进入的路径和组件都是登录组件</span><br><span class=\"line\">&#123;path:'/',redirect:'login'&#125;,</span><br></pre></td></tr></table></figure>\n<p>实例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是一般的写法，前面必须加# --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- &lt;a href=\"#/login\"&gt;登录&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;a href=\"#/register\"&gt;注册&lt;/a&gt; --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 这是官方的写法,推荐使用 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span> <span class=\"attr\">tag</span>=<span class=\"string\">\"span\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 路由规则匹配的组件，是放到router-view里的，可以理解为一个DOM或者容器，用于存放路由匹配到的组件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        //解释：什么是组件的模板对象，什么是组件的引用名称</span><br><span class=\"line\">        //组件的模板对象,这里的login就是模板对象</span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //组件的引用名称，这里的login就是引用名称</span><br><span class=\"line\">        Vue.component('login',&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录组件<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        //在导入vue-router包之后，在windows全局对象中，就有了一个路由的构造函数，叫做VueRouter</span><br><span class=\"line\">        var routerobj=new VueRouter(&#123;</span><br><span class=\"line\">           // route 这个配置对象中的route表示[路由匹配规则]的意思</span><br><span class=\"line\">           routes:[     //routes表示多个路由匹配规则</span><br><span class=\"line\">                //每个路由匹配规则都有一个对象，每个对象都两个属性</span><br><span class=\"line\">                //path:表示监听，路由的链接地址</span><br><span class=\"line\">                //component：表示如果路由是前面匹配的path，就展示component属性对应的组件</span><br><span class=\"line\">                //注意：component属性值，必须是一个组件的模板对象，不能是组件的引用名称</span><br><span class=\"line\"></span><br><span class=\"line\">                //加这一步是为了加载初始页面时直接跳转到login组件</span><br><span class=\"line\">                // &#123;path:'/',component:login&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">                //这一步可以直接在初始加载时进入的路径和组件都是登录组件</span><br><span class=\"line\">                &#123;path:'/',redirect:'login'&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">                &#123;path:'/login',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">        var vm = new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //将路由规则和实例对象关联，注册到vm实例上，用于监听url地址的变化，然后展示对应组件</span><br><span class=\"line\">            router:routerobj</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由样式的设置\"><a href=\"#路由样式的设置\" class=\"headerlink\" title=\"路由样式的设置\"></a>路由样式的设置</h4><p>路由默认样式class：router-link-active</p>\n<p>直接在样式中设置：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">        .router-link-active&#123;</span><br><span class=\"line\">            color:red;</span><br><span class=\"line\">            font-weight: 800;</span><br><span class=\"line\">            font-size: 200%;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>如果想要修改默认的router-link-active，可以在路由构造函数中使用自己定义的样式</p>\n<p><code>linkActiveClass:&#39;mystyle&#39;</code></p>\n<h4 id=\"路由规则中定义参数方式一：query\"><a href=\"#路由规则中定义参数方式一：query\" class=\"headerlink\" title=\"路由规则中定义参数方式一：query\"></a>路由规则中定义参数方式一：query</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.query.id和this.$route.query.name。this可以省去 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login?id=2&amp;name=zhangsan\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录 --- &#123;&#123;$route.query.id&#125;&#125; --- &#123;&#123;this.$route.query.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var router=new VueRouter(&#123;</span><br><span class=\"line\">            routes:[</span><br><span class=\"line\">                &#123;path:'/login',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //本是写成router:router，但由于是一样的，所以可以直接写router</span><br><span class=\"line\">            router</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"路由规则中定义参数方式一：params\"><a href=\"#路由规则中定义参数方式一：params\" class=\"headerlink\" title=\"路由规则中定义参数方式一：params\"></a>路由规则中定义参数方式一：params</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 可以在to属性的地址后面加请求参数,要获取该值，可以使用this.$route.params.id和this.$route.params.name --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/login/3/lisi\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/register\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>登录 --- &#123;&#123;$route.params.id&#125;&#125; --- &#123;&#123;$route.params.name&#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var router=new VueRouter(&#123;</span><br><span class=\"line\">            routes:[</span><br><span class=\"line\">                //:id表示占位符</span><br><span class=\"line\">                &#123;path:'/login/:id/:name',component:login&#125;,</span><br><span class=\"line\">                &#123;path:'/register',component:register&#125;,</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            //本是写成router:router，但由于是一样的，所以可以直接写router</span><br><span class=\"line\">            router</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"使用children实现路由的嵌套\"><a href=\"#使用children实现路由的嵌套\" class=\"headerlink\" title=\"使用children实现路由的嵌套\"></a>使用children实现路由的嵌套</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 跳转 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/index\"</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 显示路由 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">\"temp\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>首页<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- router-link一定要被div或者什么属性包裹，否则无法显示 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/index/login\"</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-link</span> <span class=\"attr\">to</span>=<span class=\"string\">\"/index/register\"</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">router-link</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 子组件的显示容器 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">router-view</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        var index=&#123;</span><br><span class=\"line\">            template:'#temp'</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var login=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>登录<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        var register=&#123;</span><br><span class=\"line\"><span class=\"xml\">            template:'<span class=\"tag\">&lt;<span class=\"name\">h3</span>&gt;</span>注册<span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span>'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        //定义路由</span><br><span class=\"line\">        var router=new VueRouter(&#123;</span><br><span class=\"line\">            routes:[</span><br><span class=\"line\">                &#123;   path:'/index',</span><br><span class=\"line\">                    component:index,</span><br><span class=\"line\">                    children:[</span><br><span class=\"line\">                        //子组件中不能加/</span><br><span class=\"line\">                        &#123;path:'login',component:login&#125;,</span><br><span class=\"line\">                        &#123;path:'register',component:register&#125;</span><br><span class=\"line\">                    ]</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        new Vue(&#123;</span><br><span class=\"line\">            el:'#app',</span><br><span class=\"line\">            data:&#123;&#125;,</span><br><span class=\"line\">            methods:&#123;&#125;,</span><br><span class=\"line\">            router</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"05_webpack","date":"2019-11-20T19:05:58.000Z","_content":"\n<center><font size=4 color=\"red\">05_webpack</font></center>\n\n<!--more-->\n\n## webpack\n\n#### webpack的安装方法\n\n1. 运行`npm i webpack -g`,全局安装webpack，这样可以在全局使用webpack的命令\n\n2. 在项目根目录中运行`npm i webpack --save-dev`安装到项目依赖中\n\n#### 使用npm在根目录下安装Jquery\n\n1. 先init一下`npm init -y`\n\n2. 安装Jquery `npm i jquery -s`\n\n#### 使用webpack打包\n\n方式一：\n\n`webpack ./src/main.js ./dist/bundle.js`\n\n方式二：\n\n在webpack.config.js中配置打包的路径\n\n```js\nconst path=require('path')\n\nmodule.exports={\n    //设置文件入口\n    entry:path.join(__dirname,'./src/main.js'),\n    //设置文件出口\n    output:{\n        path:path.join(__dirname,'./dist'),  //指定打包好的文件，输出到哪个目录中\n        filename:'bundle.js'   //指定输出文件的名称\n    }\n}\n```\n\n3. 目的：使用了html-webpack-plugin后，在index.html中可以不再导入bundle.js\n\n即`<script src=\"./bundle.js\"></script>`可以去掉\n\n> 注意：__dirname前面是两个_\n\n如果使用第二种方式，在控制台只需要输入`webpack`就可以实现打包\n\n#### 使用webpack-dev-server工具实现自动打包编译\n\n1. 在本地项目下执行`npm i webpack-dev-server -D`,安装\n\n2. 但是由于我们是在本地项目中安装的webpack-dev-server，所以无法把它当作脚本文件执行（只有安装到全局-g的才能在powershell中执行）\n\n3. 此时如果想要执行该脚本，在package.json中添加上webpack-dev-server，然后在本地项目下运行`npm run dev`\n\n![](01.png)\n\n4. 如果无法运行的话，需要本地项目下安装webpack\n5. webpack打包好的bundle.js文件没有放到硬盘中，而是放到了内存中\n6. 在浏览器中输入`http://localhost:8080/`\n\n![](02.png)\n\n#### webpack-dev-server下的一些参数\n\n* --open:执行完`npm run dev`自动打开浏览器\n* --port 3000:修改端口为3000\n* --contenBase src:打开的浏览器为index.html页面内容\n* --hot：有两个作用\n\t* 1. 修改样式是不会再创建一个bundle.js，而是保留原有bundle.js，然后做些修改\n\t* 2. 修改样式时浏览器页面不刷新\n\n* 参数加的位置\n\n```js\n\"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"dev\": \"webpack-dev-server --open --prot 3000 --contenBase src --hot\"\n  },\n```\n\n* 然后重新执行`npm run dev`\n\n#### html-webpack-plugin的作用\n\n1. 安装插件，在项目下执行`npm i html-webpack-plugin -D`\n\n2. 配置\n\n![](03.png)\n\n第一步：在webpack.config.js中导入插件\n\n`const htmlWebpackPlugin=require('html-webpack-plugin')`\n\n第二步：在webpack.config.js中配置插件\n\n```js\n        new htmlWebpackPlugin({\n            //指定模板路径，将来会根据指定的页面路径，生成内存中的页面\n            template:path.join(__dirname,'./src/index.html'),\n            //指定在内存中生成的页面的名称\n            filename:'index.html'\n        })\n```\n\n","source":"_posts/2019-11-20-05-webpack.md","raw":"---\ntitle: 05_webpack\ndate: 2019-11-20 19:05:58\ncategories:\n- Vue\ntags:\n- webpack\n- webpack-dev-server\n- html-webpack-plugin\n---\n\n<center><font size=4 color=\"red\">05_webpack</font></center>\n\n<!--more-->\n\n## webpack\n\n#### webpack的安装方法\n\n1. 运行`npm i webpack -g`,全局安装webpack，这样可以在全局使用webpack的命令\n\n2. 在项目根目录中运行`npm i webpack --save-dev`安装到项目依赖中\n\n#### 使用npm在根目录下安装Jquery\n\n1. 先init一下`npm init -y`\n\n2. 安装Jquery `npm i jquery -s`\n\n#### 使用webpack打包\n\n方式一：\n\n`webpack ./src/main.js ./dist/bundle.js`\n\n方式二：\n\n在webpack.config.js中配置打包的路径\n\n```js\nconst path=require('path')\n\nmodule.exports={\n    //设置文件入口\n    entry:path.join(__dirname,'./src/main.js'),\n    //设置文件出口\n    output:{\n        path:path.join(__dirname,'./dist'),  //指定打包好的文件，输出到哪个目录中\n        filename:'bundle.js'   //指定输出文件的名称\n    }\n}\n```\n\n3. 目的：使用了html-webpack-plugin后，在index.html中可以不再导入bundle.js\n\n即`<script src=\"./bundle.js\"></script>`可以去掉\n\n> 注意：__dirname前面是两个_\n\n如果使用第二种方式，在控制台只需要输入`webpack`就可以实现打包\n\n#### 使用webpack-dev-server工具实现自动打包编译\n\n1. 在本地项目下执行`npm i webpack-dev-server -D`,安装\n\n2. 但是由于我们是在本地项目中安装的webpack-dev-server，所以无法把它当作脚本文件执行（只有安装到全局-g的才能在powershell中执行）\n\n3. 此时如果想要执行该脚本，在package.json中添加上webpack-dev-server，然后在本地项目下运行`npm run dev`\n\n![](01.png)\n\n4. 如果无法运行的话，需要本地项目下安装webpack\n5. webpack打包好的bundle.js文件没有放到硬盘中，而是放到了内存中\n6. 在浏览器中输入`http://localhost:8080/`\n\n![](02.png)\n\n#### webpack-dev-server下的一些参数\n\n* --open:执行完`npm run dev`自动打开浏览器\n* --port 3000:修改端口为3000\n* --contenBase src:打开的浏览器为index.html页面内容\n* --hot：有两个作用\n\t* 1. 修改样式是不会再创建一个bundle.js，而是保留原有bundle.js，然后做些修改\n\t* 2. 修改样式时浏览器页面不刷新\n\n* 参数加的位置\n\n```js\n\"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"dev\": \"webpack-dev-server --open --prot 3000 --contenBase src --hot\"\n  },\n```\n\n* 然后重新执行`npm run dev`\n\n#### html-webpack-plugin的作用\n\n1. 安装插件，在项目下执行`npm i html-webpack-plugin -D`\n\n2. 配置\n\n![](03.png)\n\n第一步：在webpack.config.js中导入插件\n\n`const htmlWebpackPlugin=require('html-webpack-plugin')`\n\n第二步：在webpack.config.js中配置插件\n\n```js\n        new htmlWebpackPlugin({\n            //指定模板路径，将来会根据指定的页面路径，生成内存中的页面\n            template:path.join(__dirname,'./src/index.html'),\n            //指定在内存中生成的页面的名称\n            filename:'index.html'\n        })\n```\n\n","slug":"2019-11-20-05-webpack","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vw002t54tnsm0sct3c","content":"<center><font size=\"4\" color=\"red\">05_webpack</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><h4 id=\"webpack的安装方法\"><a href=\"#webpack的安装方法\" class=\"headerlink\" title=\"webpack的安装方法\"></a>webpack的安装方法</h4><ol>\n<li><p>运行<code>npm i webpack -g</code>,全局安装webpack，这样可以在全局使用webpack的命令</p>\n</li>\n<li><p>在项目根目录中运行<code>npm i webpack --save-dev</code>安装到项目依赖中</p>\n</li>\n</ol>\n<h4 id=\"使用npm在根目录下安装Jquery\"><a href=\"#使用npm在根目录下安装Jquery\" class=\"headerlink\" title=\"使用npm在根目录下安装Jquery\"></a>使用npm在根目录下安装Jquery</h4><ol>\n<li><p>先init一下<code>npm init -y</code></p>\n</li>\n<li><p>安装Jquery <code>npm i jquery -s</code></p>\n</li>\n</ol>\n<h4 id=\"使用webpack打包\"><a href=\"#使用webpack打包\" class=\"headerlink\" title=\"使用webpack打包\"></a>使用webpack打包</h4><p>方式一：</p>\n<p><code>webpack ./src/main.js ./dist/bundle.js</code></p>\n<p>方式二：</p>\n<p>在webpack.config.js中配置打包的路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置文件入口</span></span><br><span class=\"line\">    entry:path.join(__dirname,<span class=\"string\">'./src/main.js'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//设置文件出口</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path:path.join(__dirname,<span class=\"string\">'./dist'</span>),  <span class=\"comment\">//指定打包好的文件，输出到哪个目录中</span></span><br><span class=\"line\">        filename:<span class=\"string\">'bundle.js'</span>   <span class=\"comment\">//指定输出文件的名称</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>目的：使用了html-webpack-plugin后，在index.html中可以不再导入bundle.js</li>\n</ol>\n<p>即<code>&lt;script src=&quot;./bundle.js&quot;&gt;&lt;/script&gt;</code>可以去掉</p>\n<blockquote>\n<p>注意：__dirname前面是两个_</p>\n</blockquote>\n<p>如果使用第二种方式，在控制台只需要输入<code>webpack</code>就可以实现打包</p>\n<h4 id=\"使用webpack-dev-server工具实现自动打包编译\"><a href=\"#使用webpack-dev-server工具实现自动打包编译\" class=\"headerlink\" title=\"使用webpack-dev-server工具实现自动打包编译\"></a>使用webpack-dev-server工具实现自动打包编译</h4><ol>\n<li><p>在本地项目下执行<code>npm i webpack-dev-server -D</code>,安装</p>\n</li>\n<li><p>但是由于我们是在本地项目中安装的webpack-dev-server，所以无法把它当作脚本文件执行（只有安装到全局-g的才能在powershell中执行）</p>\n</li>\n<li><p>此时如果想要执行该脚本，在package.json中添加上webpack-dev-server，然后在本地项目下运行<code>npm run dev</code></p>\n</li>\n</ol>\n<p><img src=\"/2019/11/21/2019-11-20-05-webpack/01.png\" alt></p>\n<ol start=\"4\">\n<li>如果无法运行的话，需要本地项目下安装webpack</li>\n<li>webpack打包好的bundle.js文件没有放到硬盘中，而是放到了内存中</li>\n<li>在浏览器中输入<code>http://localhost:8080/</code></li>\n</ol>\n<p><img src=\"/2019/11/21/2019-11-20-05-webpack/02.png\" alt></p>\n<h4 id=\"webpack-dev-server下的一些参数\"><a href=\"#webpack-dev-server下的一些参数\" class=\"headerlink\" title=\"webpack-dev-server下的一些参数\"></a>webpack-dev-server下的一些参数</h4><ul>\n<li>–open:执行完<code>npm run dev</code>自动打开浏览器</li>\n<li>–port 3000:修改端口为3000</li>\n<li>–contenBase src:打开的浏览器为index.html页面内容</li>\n<li><p>–hot：有两个作用</p>\n<ul>\n<li><ol>\n<li>修改样式是不会再创建一个bundle.js，而是保留原有bundle.js，然后做些修改</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>修改样式时浏览器页面不刷新</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>参数加的位置</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --open --prot 3000 --contenBase src --hot\"</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后重新执行<code>npm run dev</code></li>\n</ul>\n<h4 id=\"html-webpack-plugin的作用\"><a href=\"#html-webpack-plugin的作用\" class=\"headerlink\" title=\"html-webpack-plugin的作用\"></a>html-webpack-plugin的作用</h4><ol>\n<li><p>安装插件，在项目下执行<code>npm i html-webpack-plugin -D</code></p>\n</li>\n<li><p>配置</p>\n</li>\n</ol>\n<p><img src=\"/2019/11/21/2019-11-20-05-webpack/03.png\" alt></p>\n<p>第一步：在webpack.config.js中导入插件</p>\n<p><code>const htmlWebpackPlugin=require(&#39;html-webpack-plugin&#39;)</code></p>\n<p>第二步：在webpack.config.js中配置插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> htmlWebpackPlugin(&#123;</span><br><span class=\"line\">    <span class=\"comment\">//指定模板路径，将来会根据指定的页面路径，生成内存中的页面</span></span><br><span class=\"line\">    template:path.join(__dirname,<span class=\"string\">'./src/index.html'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//指定在内存中生成的页面的名称</span></span><br><span class=\"line\">    filename:<span class=\"string\">'index.html'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">05_webpack</font></center>","more":"<h2 id=\"webpack\"><a href=\"#webpack\" class=\"headerlink\" title=\"webpack\"></a>webpack</h2><h4 id=\"webpack的安装方法\"><a href=\"#webpack的安装方法\" class=\"headerlink\" title=\"webpack的安装方法\"></a>webpack的安装方法</h4><ol>\n<li><p>运行<code>npm i webpack -g</code>,全局安装webpack，这样可以在全局使用webpack的命令</p>\n</li>\n<li><p>在项目根目录中运行<code>npm i webpack --save-dev</code>安装到项目依赖中</p>\n</li>\n</ol>\n<h4 id=\"使用npm在根目录下安装Jquery\"><a href=\"#使用npm在根目录下安装Jquery\" class=\"headerlink\" title=\"使用npm在根目录下安装Jquery\"></a>使用npm在根目录下安装Jquery</h4><ol>\n<li><p>先init一下<code>npm init -y</code></p>\n</li>\n<li><p>安装Jquery <code>npm i jquery -s</code></p>\n</li>\n</ol>\n<h4 id=\"使用webpack打包\"><a href=\"#使用webpack打包\" class=\"headerlink\" title=\"使用webpack打包\"></a>使用webpack打包</h4><p>方式一：</p>\n<p><code>webpack ./src/main.js ./dist/bundle.js</code></p>\n<p>方式二：</p>\n<p>在webpack.config.js中配置打包的路径</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置文件入口</span></span><br><span class=\"line\">    entry:path.join(__dirname,<span class=\"string\">'./src/main.js'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//设置文件出口</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path:path.join(__dirname,<span class=\"string\">'./dist'</span>),  <span class=\"comment\">//指定打包好的文件，输出到哪个目录中</span></span><br><span class=\"line\">        filename:<span class=\"string\">'bundle.js'</span>   <span class=\"comment\">//指定输出文件的名称</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>目的：使用了html-webpack-plugin后，在index.html中可以不再导入bundle.js</li>\n</ol>\n<p>即<code>&lt;script src=&quot;./bundle.js&quot;&gt;&lt;/script&gt;</code>可以去掉</p>\n<blockquote>\n<p>注意：__dirname前面是两个_</p>\n</blockquote>\n<p>如果使用第二种方式，在控制台只需要输入<code>webpack</code>就可以实现打包</p>\n<h4 id=\"使用webpack-dev-server工具实现自动打包编译\"><a href=\"#使用webpack-dev-server工具实现自动打包编译\" class=\"headerlink\" title=\"使用webpack-dev-server工具实现自动打包编译\"></a>使用webpack-dev-server工具实现自动打包编译</h4><ol>\n<li><p>在本地项目下执行<code>npm i webpack-dev-server -D</code>,安装</p>\n</li>\n<li><p>但是由于我们是在本地项目中安装的webpack-dev-server，所以无法把它当作脚本文件执行（只有安装到全局-g的才能在powershell中执行）</p>\n</li>\n<li><p>此时如果想要执行该脚本，在package.json中添加上webpack-dev-server，然后在本地项目下运行<code>npm run dev</code></p>\n</li>\n</ol>\n<p><img src=\"/2019/11/21/2019-11-20-05-webpack/01.png\" alt></p>\n<ol start=\"4\">\n<li>如果无法运行的话，需要本地项目下安装webpack</li>\n<li>webpack打包好的bundle.js文件没有放到硬盘中，而是放到了内存中</li>\n<li>在浏览器中输入<code>http://localhost:8080/</code></li>\n</ol>\n<p><img src=\"/2019/11/21/2019-11-20-05-webpack/02.png\" alt></p>\n<h4 id=\"webpack-dev-server下的一些参数\"><a href=\"#webpack-dev-server下的一些参数\" class=\"headerlink\" title=\"webpack-dev-server下的一些参数\"></a>webpack-dev-server下的一些参数</h4><ul>\n<li>–open:执行完<code>npm run dev</code>自动打开浏览器</li>\n<li>–port 3000:修改端口为3000</li>\n<li>–contenBase src:打开的浏览器为index.html页面内容</li>\n<li><p>–hot：有两个作用</p>\n<ul>\n<li><ol>\n<li>修改样式是不会再创建一个bundle.js，而是保留原有bundle.js，然后做些修改</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>修改样式时浏览器页面不刷新</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>参数加的位置</p>\n</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"scripts\"</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>: <span class=\"string\">\"echo \\\"Error: no test specified\\\" &amp;&amp; exit 1\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"dev\"</span>: <span class=\"string\">\"webpack-dev-server --open --prot 3000 --contenBase src --hot\"</span></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n<ul>\n<li>然后重新执行<code>npm run dev</code></li>\n</ul>\n<h4 id=\"html-webpack-plugin的作用\"><a href=\"#html-webpack-plugin的作用\" class=\"headerlink\" title=\"html-webpack-plugin的作用\"></a>html-webpack-plugin的作用</h4><ol>\n<li><p>安装插件，在项目下执行<code>npm i html-webpack-plugin -D</code></p>\n</li>\n<li><p>配置</p>\n</li>\n</ol>\n<p><img src=\"/2019/11/21/2019-11-20-05-webpack/03.png\" alt></p>\n<p>第一步：在webpack.config.js中导入插件</p>\n<p><code>const htmlWebpackPlugin=require(&#39;html-webpack-plugin&#39;)</code></p>\n<p>第二步：在webpack.config.js中配置插件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> htmlWebpackPlugin(&#123;</span><br><span class=\"line\">    <span class=\"comment\">//指定模板路径，将来会根据指定的页面路径，生成内存中的页面</span></span><br><span class=\"line\">    template:path.join(__dirname,<span class=\"string\">'./src/index.html'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//指定在内存中生成的页面的名称</span></span><br><span class=\"line\">    filename:<span class=\"string\">'index.html'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>"},{"title":"06_vue","date":"2019-11-20T19:10:22.000Z","_content":"\n<center><font size=4 color=\"red\">06_vue</font></center>\n\n<!--more-->\n\n## Vue\n\n#### 安装vue\n\n`npm i vue -D`\n\n#### vue包的查找规则\n\n`import Vue from 'vue'`讲解\n\n1. 先找项目根目录中node_modules的文件夹\n\n2. 在node_modules中找vue（包名）文件\n\n3. 在vue文件中，找package.json的配置文件\n\n4. 在package.json的配置文件中，找main属性，这个main指定的就是导入的包\n\n而vue中的main指定的是`\"main\": \"dist/vue.runtime.common.js\"`,这个包不是很完整，完整的应该是`vue.js`\n\n如果想导入的是`vue.js`这个包，有两个方式\n\n一. 在main.js中导入包为`import vue from '../node_modules/vue/dist/vue.js'`\n\n二. 在webpack.config.js中配置\n\n```js\nconst path=require('path')\n\nmodule.exports={\n    //设置文件入口\n    entry:path.join(__dirname,'./src/main.js'),\n    //设置文件出口\n    output:{\n        path:path.join(__dirname,'./dist'),  //指定打包好的文件，输出到哪个目录中\n        filename:'bundle.js'   //指定输出文件的名称\n    },\n    plugins:[   //所有webpack插件配置节点\n\n    ],\n    module:{     //配置所有第三方loader模块的...\n\n    },\n    resolve:{\n        alias:{\n            //在main.js中导入的vue实际变成了vue/dist/vue.js，这是的import Vue from 'vue'中的vue只是个别名\n            //\"vue$\"的意思是以vue结尾  \n            \"vue$\":\"vue/dist/vue.js\"\n        }\n    }\n}s\n```\n\n","source":"_posts/2019-11-20-06-vue.md","raw":"---\ntitle: 06_vue\ndate: 2019-11-20 19:10:22\ncategories:\n- Vue\ntags:\n- vue\n---\n\n<center><font size=4 color=\"red\">06_vue</font></center>\n\n<!--more-->\n\n## Vue\n\n#### 安装vue\n\n`npm i vue -D`\n\n#### vue包的查找规则\n\n`import Vue from 'vue'`讲解\n\n1. 先找项目根目录中node_modules的文件夹\n\n2. 在node_modules中找vue（包名）文件\n\n3. 在vue文件中，找package.json的配置文件\n\n4. 在package.json的配置文件中，找main属性，这个main指定的就是导入的包\n\n而vue中的main指定的是`\"main\": \"dist/vue.runtime.common.js\"`,这个包不是很完整，完整的应该是`vue.js`\n\n如果想导入的是`vue.js`这个包，有两个方式\n\n一. 在main.js中导入包为`import vue from '../node_modules/vue/dist/vue.js'`\n\n二. 在webpack.config.js中配置\n\n```js\nconst path=require('path')\n\nmodule.exports={\n    //设置文件入口\n    entry:path.join(__dirname,'./src/main.js'),\n    //设置文件出口\n    output:{\n        path:path.join(__dirname,'./dist'),  //指定打包好的文件，输出到哪个目录中\n        filename:'bundle.js'   //指定输出文件的名称\n    },\n    plugins:[   //所有webpack插件配置节点\n\n    ],\n    module:{     //配置所有第三方loader模块的...\n\n    },\n    resolve:{\n        alias:{\n            //在main.js中导入的vue实际变成了vue/dist/vue.js，这是的import Vue from 'vue'中的vue只是个别名\n            //\"vue$\"的意思是以vue结尾  \n            \"vue$\":\"vue/dist/vue.js\"\n        }\n    }\n}s\n```\n\n","slug":"2019-11-20-06-vue","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vy002x54tnltrf60tc","content":"<center><font size=\"4\" color=\"red\">06_vue</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h4 id=\"安装vue\"><a href=\"#安装vue\" class=\"headerlink\" title=\"安装vue\"></a>安装vue</h4><p><code>npm i vue -D</code></p>\n<h4 id=\"vue包的查找规则\"><a href=\"#vue包的查找规则\" class=\"headerlink\" title=\"vue包的查找规则\"></a>vue包的查找规则</h4><p><code>import Vue from &#39;vue&#39;</code>讲解</p>\n<ol>\n<li><p>先找项目根目录中node_modules的文件夹</p>\n</li>\n<li><p>在node_modules中找vue（包名）文件</p>\n</li>\n<li><p>在vue文件中，找package.json的配置文件</p>\n</li>\n<li><p>在package.json的配置文件中，找main属性，这个main指定的就是导入的包</p>\n</li>\n</ol>\n<p>而vue中的main指定的是<code>&quot;main&quot;: &quot;dist/vue.runtime.common.js&quot;</code>,这个包不是很完整，完整的应该是<code>vue.js</code></p>\n<p>如果想导入的是<code>vue.js</code>这个包，有两个方式</p>\n<p>一. 在main.js中导入包为<code>import vue from &#39;../node_modules/vue/dist/vue.js&#39;</code></p>\n<p>二. 在webpack.config.js中配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置文件入口</span></span><br><span class=\"line\">    entry:path.join(__dirname,<span class=\"string\">'./src/main.js'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//设置文件出口</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path:path.join(__dirname,<span class=\"string\">'./dist'</span>),  <span class=\"comment\">//指定打包好的文件，输出到哪个目录中</span></span><br><span class=\"line\">        filename:<span class=\"string\">'bundle.js'</span>   <span class=\"comment\">//指定输出文件的名称</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[   <span class=\"comment\">//所有webpack插件配置节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的...</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\">        alias:&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在main.js中导入的vue实际变成了vue/dist/vue.js，这是的import Vue from 'vue'中的vue只是个别名</span></span><br><span class=\"line\">            <span class=\"comment\">//\"vue$\"的意思是以vue结尾  </span></span><br><span class=\"line\">            <span class=\"string\">\"vue$\"</span>:<span class=\"string\">\"vue/dist/vue.js\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;s</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">06_vue</font></center>","more":"<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><h4 id=\"安装vue\"><a href=\"#安装vue\" class=\"headerlink\" title=\"安装vue\"></a>安装vue</h4><p><code>npm i vue -D</code></p>\n<h4 id=\"vue包的查找规则\"><a href=\"#vue包的查找规则\" class=\"headerlink\" title=\"vue包的查找规则\"></a>vue包的查找规则</h4><p><code>import Vue from &#39;vue&#39;</code>讲解</p>\n<ol>\n<li><p>先找项目根目录中node_modules的文件夹</p>\n</li>\n<li><p>在node_modules中找vue（包名）文件</p>\n</li>\n<li><p>在vue文件中，找package.json的配置文件</p>\n</li>\n<li><p>在package.json的配置文件中，找main属性，这个main指定的就是导入的包</p>\n</li>\n</ol>\n<p>而vue中的main指定的是<code>&quot;main&quot;: &quot;dist/vue.runtime.common.js&quot;</code>,这个包不是很完整，完整的应该是<code>vue.js</code></p>\n<p>如果想导入的是<code>vue.js</code>这个包，有两个方式</p>\n<p>一. 在main.js中导入包为<code>import vue from &#39;../node_modules/vue/dist/vue.js&#39;</code></p>\n<p>二. 在webpack.config.js中配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> path=<span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports=&#123;</span><br><span class=\"line\">    <span class=\"comment\">//设置文件入口</span></span><br><span class=\"line\">    entry:path.join(__dirname,<span class=\"string\">'./src/main.js'</span>),</span><br><span class=\"line\">    <span class=\"comment\">//设置文件出口</span></span><br><span class=\"line\">    output:&#123;</span><br><span class=\"line\">        path:path.join(__dirname,<span class=\"string\">'./dist'</span>),  <span class=\"comment\">//指定打包好的文件，输出到哪个目录中</span></span><br><span class=\"line\">        filename:<span class=\"string\">'bundle.js'</span>   <span class=\"comment\">//指定输出文件的名称</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    plugins:[   <span class=\"comment\">//所有webpack插件配置节点</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的...</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    resolve:&#123;</span><br><span class=\"line\">        alias:&#123;</span><br><span class=\"line\">            <span class=\"comment\">//在main.js中导入的vue实际变成了vue/dist/vue.js，这是的import Vue from 'vue'中的vue只是个别名</span></span><br><span class=\"line\">            <span class=\"comment\">//\"vue$\"的意思是以vue结尾  </span></span><br><span class=\"line\">            <span class=\"string\">\"vue$\"</span>:<span class=\"string\">\"vue/dist/vue.js\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;s</span><br></pre></td></tr></table></figure>"},{"title":"07_loader加载器处理css样式","date":"2019-11-20T19:11:39.000Z","_content":"\n<center><font size=4 color=\"red\">07_loader加载器处理css样式</font></center>\n\n<!--more-->\n\n## loader加载器处理css样式\n\n#### 下载loader加载器\n\n在组件中可以使用`import './css/index.css'`的方式导入样式，但是webpack不能打包\n\nwebpack只能打包js的文件，不能打包css文件，所以如果想把css文件打包，需要安装loader加载器\n\n`cnpm i style-loader css-loader -D`\n\n然后打开webpack.config.js配置文件，在里面新增一个配置节点，叫做module，它是一个对象，在这个对象中，有个rules属性，这是个数组，这个数组里存放了所有第三方文件的匹配和处理规则\n\n```js\n    module:{     //配置所有第三方loader模块的加载器\n        rules:[\n            //   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件\n            //   use:['style-loader','css-loader']  使用什么插件处理\n            {test:/\\.css$/,use:['style-loader','css-loader']}\n        ]\n    },\n```\n\n#### loader加载器处理less样式\n\n除了安装style-loader和css-loader外，还需要安装less-loader\n\n安装less-loader：`cnpm i less-loader -D`\n\n另外可能还需要安装less：`cnpm i less -D`\n\n```js\nmodule:{     //配置所有第三方loader模块的...\n        rules:[\n            //   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件\n            //   use:['style-loader','css-loader']  使用什么插件处理\n            {test:/\\.css$/,use:['style-loader','css-loader']},\n            //处理less文件\n            {test:/\\.less$/,use:['style-loader','css-loader','less-loader']}\n        ]\n    },\n```\n\n#### loader加载器处理scss样式\n\n除了安装style-loader和css-loader外，还需要安装sacc-loader\n\n安装less-loader：`cnpm i sass-loader -D`\n\n另外可能还需要安装less：`cnpm i node-sacc -D`  这个npm可能装不了\n\n```js\nmodule:{     //配置所有第三方loader模块的...\n        rules:[\n            //   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件\n            //   use:['style-loader','css-loader']  使用什么插件处理\n            {test:/\\.css$/,use:['style-loader','css-loader']},\n            {test:/\\.less$/,use:['style-loader','css-loader','less-loader']},\n            //处理scss文件\n            {test:/\\.scss$/,use:['style-loader','css-loader','sass-loader']},\n        ]\n    },\n```\n","source":"_posts/2019-11-20-07-loader加载器处理css样式.md","raw":"---\ntitle: 07_loader加载器处理css样式\ndate: 2019-11-20 19:11:39\ncategories:\n- Vue\ntags:\n- css\n- less\n- scss\n---\n\n<center><font size=4 color=\"red\">07_loader加载器处理css样式</font></center>\n\n<!--more-->\n\n## loader加载器处理css样式\n\n#### 下载loader加载器\n\n在组件中可以使用`import './css/index.css'`的方式导入样式，但是webpack不能打包\n\nwebpack只能打包js的文件，不能打包css文件，所以如果想把css文件打包，需要安装loader加载器\n\n`cnpm i style-loader css-loader -D`\n\n然后打开webpack.config.js配置文件，在里面新增一个配置节点，叫做module，它是一个对象，在这个对象中，有个rules属性，这是个数组，这个数组里存放了所有第三方文件的匹配和处理规则\n\n```js\n    module:{     //配置所有第三方loader模块的加载器\n        rules:[\n            //   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件\n            //   use:['style-loader','css-loader']  使用什么插件处理\n            {test:/\\.css$/,use:['style-loader','css-loader']}\n        ]\n    },\n```\n\n#### loader加载器处理less样式\n\n除了安装style-loader和css-loader外，还需要安装less-loader\n\n安装less-loader：`cnpm i less-loader -D`\n\n另外可能还需要安装less：`cnpm i less -D`\n\n```js\nmodule:{     //配置所有第三方loader模块的...\n        rules:[\n            //   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件\n            //   use:['style-loader','css-loader']  使用什么插件处理\n            {test:/\\.css$/,use:['style-loader','css-loader']},\n            //处理less文件\n            {test:/\\.less$/,use:['style-loader','css-loader','less-loader']}\n        ]\n    },\n```\n\n#### loader加载器处理scss样式\n\n除了安装style-loader和css-loader外，还需要安装sacc-loader\n\n安装less-loader：`cnpm i sass-loader -D`\n\n另外可能还需要安装less：`cnpm i node-sacc -D`  这个npm可能装不了\n\n```js\nmodule:{     //配置所有第三方loader模块的...\n        rules:[\n            //   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件\n            //   use:['style-loader','css-loader']  使用什么插件处理\n            {test:/\\.css$/,use:['style-loader','css-loader']},\n            {test:/\\.less$/,use:['style-loader','css-loader','less-loader']},\n            //处理scss文件\n            {test:/\\.scss$/,use:['style-loader','css-loader','sass-loader']},\n        ]\n    },\n```\n","slug":"2019-11-20-07-loader加载器处理css样式","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6vz002z54tnv8rfn3p4","content":"<center><font size=\"4\" color=\"red\">07_loader加载器处理css样式</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"loader加载器处理css样式\"><a href=\"#loader加载器处理css样式\" class=\"headerlink\" title=\"loader加载器处理css样式\"></a>loader加载器处理css样式</h2><h4 id=\"下载loader加载器\"><a href=\"#下载loader加载器\" class=\"headerlink\" title=\"下载loader加载器\"></a>下载loader加载器</h4><p>在组件中可以使用<code>import &#39;./css/index.css&#39;</code>的方式导入样式，但是webpack不能打包</p>\n<p>webpack只能打包js的文件，不能打包css文件，所以如果想把css文件打包，需要安装loader加载器</p>\n<p><code>cnpm i style-loader css-loader -D</code></p>\n<p>然后打开webpack.config.js配置文件，在里面新增一个配置节点，叫做module，它是一个对象，在这个对象中，有个rules属性，这是个数组，这个数组里存放了所有第三方文件的匹配和处理规则</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的加载器</span></span><br><span class=\"line\">    rules:[</span><br><span class=\"line\">        <span class=\"comment\">//   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件</span></span><br><span class=\"line\">        <span class=\"comment\">//   use:['style-loader','css-loader']  使用什么插件处理</span></span><br><span class=\"line\">        &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"loader加载器处理less样式\"><a href=\"#loader加载器处理less样式\" class=\"headerlink\" title=\"loader加载器处理less样式\"></a>loader加载器处理less样式</h4><p>除了安装style-loader和css-loader外，还需要安装less-loader</p>\n<p>安装less-loader：<code>cnpm i less-loader -D</code></p>\n<p>另外可能还需要安装less：<code>cnpm i less -D</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的...</span></span><br><span class=\"line\">        rules:[</span><br><span class=\"line\">            <span class=\"comment\">//   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件</span></span><br><span class=\"line\">            <span class=\"comment\">//   use:['style-loader','css-loader']  使用什么插件处理</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;,</span><br><span class=\"line\">            <span class=\"comment\">//处理less文件</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.less$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'less-loader'</span>]&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"loader加载器处理scss样式\"><a href=\"#loader加载器处理scss样式\" class=\"headerlink\" title=\"loader加载器处理scss样式\"></a>loader加载器处理scss样式</h4><p>除了安装style-loader和css-loader外，还需要安装sacc-loader</p>\n<p>安装less-loader：<code>cnpm i sass-loader -D</code></p>\n<p>另外可能还需要安装less：<code>cnpm i node-sacc -D</code>  这个npm可能装不了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的...</span></span><br><span class=\"line\">        rules:[</span><br><span class=\"line\">            <span class=\"comment\">//   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件</span></span><br><span class=\"line\">            <span class=\"comment\">//   use:['style-loader','css-loader']  使用什么插件处理</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.less$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'less-loader'</span>]&#125;,</span><br><span class=\"line\">            <span class=\"comment\">//处理scss文件</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.scss$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'sass-loader'</span>]&#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">07_loader加载器处理css样式</font></center>","more":"<h2 id=\"loader加载器处理css样式\"><a href=\"#loader加载器处理css样式\" class=\"headerlink\" title=\"loader加载器处理css样式\"></a>loader加载器处理css样式</h2><h4 id=\"下载loader加载器\"><a href=\"#下载loader加载器\" class=\"headerlink\" title=\"下载loader加载器\"></a>下载loader加载器</h4><p>在组件中可以使用<code>import &#39;./css/index.css&#39;</code>的方式导入样式，但是webpack不能打包</p>\n<p>webpack只能打包js的文件，不能打包css文件，所以如果想把css文件打包，需要安装loader加载器</p>\n<p><code>cnpm i style-loader css-loader -D</code></p>\n<p>然后打开webpack.config.js配置文件，在里面新增一个配置节点，叫做module，它是一个对象，在这个对象中，有个rules属性，这是个数组，这个数组里存放了所有第三方文件的匹配和处理规则</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的加载器</span></span><br><span class=\"line\">    rules:[</span><br><span class=\"line\">        <span class=\"comment\">//   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件</span></span><br><span class=\"line\">        <span class=\"comment\">//   use:['style-loader','css-loader']  使用什么插件处理</span></span><br><span class=\"line\">        &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"loader加载器处理less样式\"><a href=\"#loader加载器处理less样式\" class=\"headerlink\" title=\"loader加载器处理less样式\"></a>loader加载器处理less样式</h4><p>除了安装style-loader和css-loader外，还需要安装less-loader</p>\n<p>安装less-loader：<code>cnpm i less-loader -D</code></p>\n<p>另外可能还需要安装less：<code>cnpm i less -D</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的...</span></span><br><span class=\"line\">        rules:[</span><br><span class=\"line\">            <span class=\"comment\">//   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件</span></span><br><span class=\"line\">            <span class=\"comment\">//   use:['style-loader','css-loader']  使用什么插件处理</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;,</span><br><span class=\"line\">            <span class=\"comment\">//处理less文件</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.less$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'less-loader'</span>]&#125;</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<h4 id=\"loader加载器处理scss样式\"><a href=\"#loader加载器处理scss样式\" class=\"headerlink\" title=\"loader加载器处理scss样式\"></a>loader加载器处理scss样式</h4><p>除了安装style-loader和css-loader外，还需要安装sacc-loader</p>\n<p>安装less-loader：<code>cnpm i sass-loader -D</code></p>\n<p>另外可能还需要安装less：<code>cnpm i node-sacc -D</code>  这个npm可能装不了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">module</span>:&#123;     <span class=\"comment\">//配置所有第三方loader模块的...</span></span><br><span class=\"line\">        rules:[</span><br><span class=\"line\">            <span class=\"comment\">//   test:/\\.css$/  这个是处理什么类型的文本    /  \\.css$   /    \\.是转义字符.   $ 是结尾  这句话意思是处理以.css结尾的文件</span></span><br><span class=\"line\">            <span class=\"comment\">//   use:['style-loader','css-loader']  使用什么插件处理</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.css$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>]&#125;,</span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.less$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'less-loader'</span>]&#125;,</span><br><span class=\"line\">            <span class=\"comment\">//处理scss文件</span></span><br><span class=\"line\">            &#123;<span class=\"attr\">test</span>:<span class=\"regexp\">/\\.scss$/</span>,<span class=\"attr\">use</span>:[<span class=\"string\">'style-loader'</span>,<span class=\"string\">'css-loader'</span>,<span class=\"string\">'sass-loader'</span>]&#125;,</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>"},{"title":"vue注意事项","date":"2019-11-20T19:13:15.000Z","_content":"\n<center><font size=4 color=\"red\">vue注意事项</font></center>\n\n<!--more-->\n\n## $符号的作用\n\n* vue中使用$表示一些有用的实例属性与方法\n\n```html\nvar data = { a: 1 }\nvar vm = new Vue({\n  el: '#example',\n  data: data\n})\n//$data表示data: data中‘：’前的data\nvm.$data === data // => true\nvm.$el === document.getElementById('example') // => true\n\n// $watch 是一个实例方法\nvm.$watch('a', function (newValue, oldValue) {\n  // 这个回调将在 `vm.a` 改变后调用\n})\n```\n\n## 使用render渲染组件\n\n一般在vue实例中使用render渲染组件\n\n```js\nrender:function(createElements){\n\t//login为import导入的组件\n\treturn createElements(login)\n}\n```\n\n上面导入组件的方式可以简写为\n\n```js\nrender: c => c(login)\n```\n\n> 注意:如果使用了render，render会把el指定的容器给删除，自己又创建了一个容器\n\n\n","source":"_posts/2019-11-20-vue注意事项.md","raw":"---\ntitle: vue注意事项\ndate: 2019-11-20 19:13:15\ncategories:\n- Vue\ntags:\n- $符号\n- render\n---\n\n<center><font size=4 color=\"red\">vue注意事项</font></center>\n\n<!--more-->\n\n## $符号的作用\n\n* vue中使用$表示一些有用的实例属性与方法\n\n```html\nvar data = { a: 1 }\nvar vm = new Vue({\n  el: '#example',\n  data: data\n})\n//$data表示data: data中‘：’前的data\nvm.$data === data // => true\nvm.$el === document.getElementById('example') // => true\n\n// $watch 是一个实例方法\nvm.$watch('a', function (newValue, oldValue) {\n  // 这个回调将在 `vm.a` 改变后调用\n})\n```\n\n## 使用render渲染组件\n\n一般在vue实例中使用render渲染组件\n\n```js\nrender:function(createElements){\n\t//login为import导入的组件\n\treturn createElements(login)\n}\n```\n\n上面导入组件的方式可以简写为\n\n```js\nrender: c => c(login)\n```\n\n> 注意:如果使用了render，render会把el指定的容器给删除，自己又创建了一个容器\n\n\n","slug":"2019-11-20-vue注意事项","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6w0003454tnslkjkql4","content":"<center><font size=\"4\" color=\"red\">vue注意事项</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"符号的作用\"><a href=\"#符号的作用\" class=\"headerlink\" title=\"$符号的作用\"></a>$符号的作用</h2><ul>\n<li>vue中使用$表示一些有用的实例属性与方法</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var data = &#123; a: 1 &#125;</span><br><span class=\"line\">var vm = new Vue(&#123;</span><br><span class=\"line\">  el: '#example',</span><br><span class=\"line\">  data: data</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">//$data表示data: data中‘：’前的data</span><br><span class=\"line\">vm.$data === data // =&gt; true</span><br><span class=\"line\">vm.$el === document.getElementById('example') // =&gt; true</span><br><span class=\"line\"></span><br><span class=\"line\">// $watch 是一个实例方法</span><br><span class=\"line\">vm.$watch('a', function (newValue, oldValue) &#123;</span><br><span class=\"line\">  // 这个回调将在 `vm.a` 改变后调用</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用render渲染组件\"><a href=\"#使用render渲染组件\" class=\"headerlink\" title=\"使用render渲染组件\"></a>使用render渲染组件</h2><p>一般在vue实例中使用render渲染组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">createElements</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//login为import导入的组件</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> createElements(login)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面导入组件的方式可以简写为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render: <span class=\"function\"><span class=\"params\">c</span> =&gt;</span> c(login)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意:如果使用了render，render会把el指定的容器给删除，自己又创建了一个容器</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">vue注意事项</font></center>","more":"<h2 id=\"符号的作用\"><a href=\"#符号的作用\" class=\"headerlink\" title=\"$符号的作用\"></a>$符号的作用</h2><ul>\n<li>vue中使用$表示一些有用的实例属性与方法</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var data = &#123; a: 1 &#125;</span><br><span class=\"line\">var vm = new Vue(&#123;</span><br><span class=\"line\">  el: '#example',</span><br><span class=\"line\">  data: data</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">//$data表示data: data中‘：’前的data</span><br><span class=\"line\">vm.$data === data // =&gt; true</span><br><span class=\"line\">vm.$el === document.getElementById('example') // =&gt; true</span><br><span class=\"line\"></span><br><span class=\"line\">// $watch 是一个实例方法</span><br><span class=\"line\">vm.$watch('a', function (newValue, oldValue) &#123;</span><br><span class=\"line\">  // 这个回调将在 `vm.a` 改变后调用</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用render渲染组件\"><a href=\"#使用render渲染组件\" class=\"headerlink\" title=\"使用render渲染组件\"></a>使用render渲染组件</h2><p>一般在vue实例中使用render渲染组件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render:<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">createElements</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//login为import导入的组件</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> createElements(login)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面导入组件的方式可以简写为</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">render: <span class=\"function\"><span class=\"params\">c</span> =&gt;</span> c(login)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意:如果使用了render，render会把el指定的容器给删除，自己又创建了一个容器</p>\n</blockquote>"},{"title":"activiti入门01","date":"2019-12-31T13:38:20.000Z","_content":"\n<center><font size=4 color=\"red\">activiti入门01</font></center>\n\n<!--more-->\n\n## 什么是工作流\n\n工作流：工作的一个流程，事物发展的一个业务过程\n\n例子：\n\t请假流程：开始----员工申请----部门经理审批----总经理审批----结束\n\n## activiti的表的生成\n\n#### 依赖的pom文件\n\n```xml\n<dependencies>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-engine</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-spring</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-bpmn-model</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-bpmn-converter</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-json-converter</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n<!--        <dependency>-->\n<!--            <groupId>org.activiti</groupId>-->\n<!--            <artifactId>activiti-bpmn-layout</artifactId>-->\n<!--            <version>6.0.S</version>-->\n<!--        </dependency>-->\n<!--        <dependency>-->\n<!--            <groupId>org.activiti.cloud</groupId>-->\n<!--            <artifactId>activiti-cloud-services-api</artifactId>-->\n<!--            <version>6.0.S</version>-->\n<!--        </dependency>-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.46</version>\n        </dependency>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n        </dependency>\n\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.4.6</version>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-dbcp</groupId>\n            <artifactId>commons-dbcp</artifactId>\n            <version>1.4</version>\n        </dependency>\n    \n    \t<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>2.4</version>\n        </dependency>\n    </dependencies>\n```\n\n#### activiti.cfg.xml文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\">\n        <property name=\"driverClassName\" value=\"jdbc:mysql://localhost:3306/db_activiti\" />\n        <property name=\"url\" value=\"com.mysql.jdbc.Driver\" />\n        <property name=\"username\" value=\"root\" />\n        <property name=\"password\" value=\"123456\" />\n    </bean>\n\n    <!--StandaloneProcessEngineConfiguration是脱机方式-->\n    <bean id=\"processEngineConfiguration\" class=\"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration\">\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <!--是否生成表结构-->\n        <property name=\"databaseSchemaUpdate\" value=\"true\" />\n\n    </bean>\n\n</beans>\n```\n\n#### 生成表\n\n```java\n/*\n创建表\n*/\n//1.创建ProcessEngineConfiguration对象\nProcessEngineConfiguration configuration = ProcessEngineConfiguration\n.createProcessEngineConfigurationFromResource(\"activiti.cfg.xml\");\n//2.创建ProcessEngine对象\nProcessEngine processEngine = configuration.buildProcessEngine();\n\n//3.输出一下processEngine\nSystem.out.println(processEngine);\n```\n#### 表结构介绍\n\n* ACT_GE_* : “GE”代表“General”（通用），用在各种情况下；\n\n* ACT_HI_* : “HI”代表“History”（历史），这些表中保存的都是历史数据，比如执行过的流程实例、变量、任务，等等。Activit默认提供了4种历史级别：\n\n\t*  none: 不保存任何历史记录，可以提高系统性能；\n\n\t*  activity：保存所有的流程实例、任务、活动信息；\n\n\t*  audit：也是Activiti的默认级别，保存所有的流程实例、任务、活动、表单属性；\n\n\t*  full：最完整的历史记录，除了包含audit级别的信息之外还能保存详细，例如：流程变量。\n\n\t> 对于几种级别根据对功能的要求选择，如果需要日后跟踪详细可以开启full。\n\n*  ACT_ID_* : “ID”代表“Identity”（身份），这些表中保存的都是身份信息，如用户和组以及两者之间的关系。如果Activiti被集成在某一系统当中的话，这些表可以不用，可以直接使用现有系统中的用户或组信息；\n\n*  ACT_RE_* : “RE”代表“Repository”（仓库），这些表中保存一些‘静态’信息，如流程定义和流程资源（如图片、规则等）；\n\n*  ACT_RU_* : “RU”代表“Runtime”（运行时），这些表中保存一些流程实例、用户任务、变量等的运行时数据。<font color=\"red\">Activiti只保存流程实例在执行过程中的运行时数据，并且当流程结束后会立即移除这些数据，这是为了保证运行时表尽量的小并运行的足够快</font>；\n\n#### avtiviti数据表清单\n\n<escape>\n<table>\n   <tr>\n      <td>表分类</td>\n      <td>表名</td>\n      <td>解释</td>\n   </tr>\n   <tr>\n      <td rowspan=\"2\">一般数据</td>\n      <td>ACT_GE_BYTEARRAY</td>\n      <td>通用的流程定义和流程资源</td>\n   </tr>\n   <tr>\n      <td>ACT_GE_PROPERTY</td>\n      <td>系统相关属性</td>\n   </tr>\n   <tr>\n      <td rowspan=\"8\">浏览历史记录</td>\n      <td>ACT_HI_ACTINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_ATTACHMENT</td>\n      <td>历史的流程附件</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_COMMENT</td>\n      <td>历史的说明性信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_DETAIL</td>\n      <td>历史的流程运行中的细节信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_IDENTITYLINK</td>\n      <td>历史的流程运行过程中用户关系</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_PROCINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_TASKINST</td>\n      <td>历史的任务实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_VARINST</td>\n      <td>历史的流程运行中的变量信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"4\">用户用户组表</td>\n      <td>ACT_ID_GROUP</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_INFO</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_MEMBERSHIP</td>\n      <td>身份信息-用户和组关系的中间表</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_USER</td>\n      <td>身份信息-用户信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"3\">流程定义表</td>\n      <td>ACT_RE_DEPLOYMENT</td>\n      <td>部署单元信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_MODEL</td>\n      <td>模型信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_PROCDEF</td>\n      <td>已部署的流程定义</td>\n   </tr>\n   <tr>\n      <td rowspan=\"6\">运行实例表</td>\n      <td>ACT_RU_EVENT_SUBSCR</td>\n      <td>运行时事件</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_EXECUTION</td>\n      <td>运行时流程执行实例</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_IDENTITYLINK</td>\n      <td>运行时用户关系信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_JOB</td>\n      <td>运行时作业</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_TASK</td>\n      <td>运行时任务</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_VARIABLE</td>\n      <td>运行时变量表</td>\n   </tr>\n</table>\n</escape>\n\n## activiti流程定义\n\n任何一个流程都有一个id和name\n\n![holiday](holiday.jpg)\n\n定义请假流程的执行人\n\n![persion](persion.jpg)\n\n#### 流程图的底层原理\n\n* 1. 业务流程图本质是一个xml文件，文件中可以存入所需要的数据\n\n* 2. 读取业务流程图的过程就是解析xml的过程\n\n* 3. 读取一个业务流程图的结点就相当于解析一个xml结构，进一步将数据插入到mysql表中，形成一条记录\n\n* 4. 将所有结点读取并存入mysql表中\n\n* 5. 后面只需要读mysql表中的记录就可以了，读一条记录将相当于读一个结点\n\n* 6. 业务流程的推进，后面就转化为读表中数据，并且处理数据，结束时这一行数据就可以删除。\n\n## 常用的4个对象\n\n* 资源管理类：RepositoryService\n\n* 流程运行管理类：RuntimeService\n\n* 任务管理类：TaskService\n\n* 历史管理类：HistoryService\n\n#### 流程部署\n\n```java\n//资源管理类\nRepositoryService repositoryService = processEngine.getRepositoryService();\n/*\n将资源部署到数据库中 影响表\nact_re_procdef:(流程定义的信息)。存的是key和name，就是画图时给每张图起的唯一的名称\nact_ge_bytearray：(流程定义的文件)。bpmn和png资源就存在这张表中\nact_re_deployment：(部署信息)。部署时写的name(\"请假流程审批\")存在这张表中\n*/\nDeployment deployment = repositoryService.createDeployment()\n.addClasspathResource(\"process/test.bpmn\")\n.addClasspathResource(\"process/test.png\")\n.name(\"请假流程审批\")     //设置名称\n.deploy();\n//输出部署信息 act_re_deployment表中\nSystem.out.println(deployment.getName());\nSystem.out.println(deployment.getId());\n```\n\n#### 流程运行\n\n```java\n//流程运行管理类\nRuntimeService runtimeService = processEngine.getRuntimeService();\n/*\n启动流程实例。前提必须已经完成了部署 影响表\nact_hi_actinst:(已完成的活动信息)。表中开始按钮已经执行，但是zhangsan还未执行请假申请。看END_TIME字段\nact_hi_identitylink:(参与者信息)。参与者，目前只记录一个zhangsan\nact_hi_procinst:(流程实例)。目前只记录一个zhangsan\nact_hi_taskint:(任务实例)。任务表，有个zhangsan需要填写请假申请单的任务\n\nact_ru_execution:(执行表)。记录任务的执行\nact_ru_identitylink:(参与者信息)。任务的参与者\nact_ru_task:(任务)。记录当前任务\n*/\nProcessInstance test = runtimeService.startProcessInstanceByKey(\"test\");//这里的key就是流程定义bpmn文件起的id名称\n//打印一下结果\nSystem.out.println(\"流程部署ID:\"+test.getDeploymentId());   //null\nSystem.out.println(\"流程定义ID:\"+test.getProcessDefinitionId());    //test:1:4\nSystem.out.println(\"流程实例ID:\"+test.getId());   //2501。流程实例:zhangsan可以有实例，其他人也可以有实例\nSystem.out.println(\"活动ID:\"+test.getActivityId());    //null\n```\n\n#### 任务查询和处理\n\n```java\n//任务管理类\nTaskService taskService = processEngine.getTaskService();\n/*\n任务查询\n流程实例ID：来自表act_hi_procinst\n任务ID、任务负责人，任务名称：来自表act_hi_taskint\n*/\nList<Task> taskList = taskService.createTaskQuery()\n.processDefinitionKey(\"test\") //这里的key就是流程定义bpmn文件起的id名称，指定哪个流程\n.taskAssignee(\"zhangsan\")     //指定任务的处理人\n.list();                      //.singleResult()可以只查询一条任务\n//任务列表的展示\nfor (Task task:taskList){\nSystem.out.println(\"流程实例ID:\"+task.getProcessInstanceId());\nSystem.out.println(\"任务ID:\"+task.getId());\nSystem.out.println(\"任务负责人:\"+task.getAssignee());\nSystem.out.println(\"任务名称:\"+task.getName());\n\n/*\n任务处理  影响表\nact_hi_actinst:(已完成的活动信息)\nact_hi_identitylink:(参与者信息)\nact_hi_taskint:(任务实例)\n\nact_ru_execution:(执行表)\nact_ru_identitylink:(参与者信息)\nact_ru_task:(任务)\n*/\nString taskId=task.getId();\ntaskService.complete(taskId);   //根据任务的id处理掉任务\n}\n```\n\n#### 注意\n\n* `act_ru_*` 表中只会有一条任务实例数据,前一个流程执行完后会把`act_ru_*`表中数据删除，保留当前执行的数据。只有一条实例数据的好处是查询速度快。\n\n* 当该流程所有的任务执行完后，`act_ru_*`表中无该流程的任务数据。所有的数据都保留在了`act_hi_*`表中\n\n流程定义id、流程部署id、流程实例id、任务id讲解\n\n流程部署id：将资源部署到数据库中时产生\n\n流程定义id：在执行runtimeService的getRuntimeService方法后产生\n\n流程实例id：每个人在执行流程时都会产生一个流程实例id\n\n任务id：zhangsan填写请假是一个任务，有id。lisi审批也是一个任务，也有id\n\n","source":"_posts/2019-12-31-activiti入门01.md","raw":"---\ntitle: activiti入门01\ndate: 2019-12-31 13:38:20\ncategories:\n- activiti\ntags:\n- 工作流\n- activiti\n---\n\n<center><font size=4 color=\"red\">activiti入门01</font></center>\n\n<!--more-->\n\n## 什么是工作流\n\n工作流：工作的一个流程，事物发展的一个业务过程\n\n例子：\n\t请假流程：开始----员工申请----部门经理审批----总经理审批----结束\n\n## activiti的表的生成\n\n#### 依赖的pom文件\n\n```xml\n<dependencies>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-engine</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-spring</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-bpmn-model</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-bpmn-converter</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n        <dependency>\n            <groupId>org.activiti</groupId>\n            <artifactId>activiti-json-converter</artifactId>\n            <version>6.0.S</version>\n        </dependency>\n<!--        <dependency>-->\n<!--            <groupId>org.activiti</groupId>-->\n<!--            <artifactId>activiti-bpmn-layout</artifactId>-->\n<!--            <version>6.0.S</version>-->\n<!--        </dependency>-->\n<!--        <dependency>-->\n<!--            <groupId>org.activiti.cloud</groupId>-->\n<!--            <artifactId>activiti-cloud-services-api</artifactId>-->\n<!--            <version>6.0.S</version>-->\n<!--        </dependency>-->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>5.1.46</version>\n        </dependency>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.12</version>\n        </dependency>\n\n        <dependency>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n            <version>1.2.17</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n            <version>1.7.25</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mybatis</groupId>\n            <artifactId>mybatis</artifactId>\n            <version>3.4.6</version>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-dbcp</groupId>\n            <artifactId>commons-dbcp</artifactId>\n            <version>1.4</version>\n        </dependency>\n    \n    \t<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>2.4</version>\n        </dependency>\n    </dependencies>\n```\n\n#### activiti.cfg.xml文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd\">\n\n\n    <bean id=\"dataSource\" class=\"org.apache.commons.dbcp.BasicDataSource\">\n        <property name=\"driverClassName\" value=\"jdbc:mysql://localhost:3306/db_activiti\" />\n        <property name=\"url\" value=\"com.mysql.jdbc.Driver\" />\n        <property name=\"username\" value=\"root\" />\n        <property name=\"password\" value=\"123456\" />\n    </bean>\n\n    <!--StandaloneProcessEngineConfiguration是脱机方式-->\n    <bean id=\"processEngineConfiguration\" class=\"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration\">\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <!--是否生成表结构-->\n        <property name=\"databaseSchemaUpdate\" value=\"true\" />\n\n    </bean>\n\n</beans>\n```\n\n#### 生成表\n\n```java\n/*\n创建表\n*/\n//1.创建ProcessEngineConfiguration对象\nProcessEngineConfiguration configuration = ProcessEngineConfiguration\n.createProcessEngineConfigurationFromResource(\"activiti.cfg.xml\");\n//2.创建ProcessEngine对象\nProcessEngine processEngine = configuration.buildProcessEngine();\n\n//3.输出一下processEngine\nSystem.out.println(processEngine);\n```\n#### 表结构介绍\n\n* ACT_GE_* : “GE”代表“General”（通用），用在各种情况下；\n\n* ACT_HI_* : “HI”代表“History”（历史），这些表中保存的都是历史数据，比如执行过的流程实例、变量、任务，等等。Activit默认提供了4种历史级别：\n\n\t*  none: 不保存任何历史记录，可以提高系统性能；\n\n\t*  activity：保存所有的流程实例、任务、活动信息；\n\n\t*  audit：也是Activiti的默认级别，保存所有的流程实例、任务、活动、表单属性；\n\n\t*  full：最完整的历史记录，除了包含audit级别的信息之外还能保存详细，例如：流程变量。\n\n\t> 对于几种级别根据对功能的要求选择，如果需要日后跟踪详细可以开启full。\n\n*  ACT_ID_* : “ID”代表“Identity”（身份），这些表中保存的都是身份信息，如用户和组以及两者之间的关系。如果Activiti被集成在某一系统当中的话，这些表可以不用，可以直接使用现有系统中的用户或组信息；\n\n*  ACT_RE_* : “RE”代表“Repository”（仓库），这些表中保存一些‘静态’信息，如流程定义和流程资源（如图片、规则等）；\n\n*  ACT_RU_* : “RU”代表“Runtime”（运行时），这些表中保存一些流程实例、用户任务、变量等的运行时数据。<font color=\"red\">Activiti只保存流程实例在执行过程中的运行时数据，并且当流程结束后会立即移除这些数据，这是为了保证运行时表尽量的小并运行的足够快</font>；\n\n#### avtiviti数据表清单\n\n<escape>\n<table>\n   <tr>\n      <td>表分类</td>\n      <td>表名</td>\n      <td>解释</td>\n   </tr>\n   <tr>\n      <td rowspan=\"2\">一般数据</td>\n      <td>ACT_GE_BYTEARRAY</td>\n      <td>通用的流程定义和流程资源</td>\n   </tr>\n   <tr>\n      <td>ACT_GE_PROPERTY</td>\n      <td>系统相关属性</td>\n   </tr>\n   <tr>\n      <td rowspan=\"8\">浏览历史记录</td>\n      <td>ACT_HI_ACTINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_ATTACHMENT</td>\n      <td>历史的流程附件</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_COMMENT</td>\n      <td>历史的说明性信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_DETAIL</td>\n      <td>历史的流程运行中的细节信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_IDENTITYLINK</td>\n      <td>历史的流程运行过程中用户关系</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_PROCINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_TASKINST</td>\n      <td>历史的任务实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_VARINST</td>\n      <td>历史的流程运行中的变量信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"4\">用户用户组表</td>\n      <td>ACT_ID_GROUP</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_INFO</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_MEMBERSHIP</td>\n      <td>身份信息-用户和组关系的中间表</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_USER</td>\n      <td>身份信息-用户信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"3\">流程定义表</td>\n      <td>ACT_RE_DEPLOYMENT</td>\n      <td>部署单元信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_MODEL</td>\n      <td>模型信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_PROCDEF</td>\n      <td>已部署的流程定义</td>\n   </tr>\n   <tr>\n      <td rowspan=\"6\">运行实例表</td>\n      <td>ACT_RU_EVENT_SUBSCR</td>\n      <td>运行时事件</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_EXECUTION</td>\n      <td>运行时流程执行实例</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_IDENTITYLINK</td>\n      <td>运行时用户关系信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_JOB</td>\n      <td>运行时作业</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_TASK</td>\n      <td>运行时任务</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_VARIABLE</td>\n      <td>运行时变量表</td>\n   </tr>\n</table>\n</escape>\n\n## activiti流程定义\n\n任何一个流程都有一个id和name\n\n![holiday](holiday.jpg)\n\n定义请假流程的执行人\n\n![persion](persion.jpg)\n\n#### 流程图的底层原理\n\n* 1. 业务流程图本质是一个xml文件，文件中可以存入所需要的数据\n\n* 2. 读取业务流程图的过程就是解析xml的过程\n\n* 3. 读取一个业务流程图的结点就相当于解析一个xml结构，进一步将数据插入到mysql表中，形成一条记录\n\n* 4. 将所有结点读取并存入mysql表中\n\n* 5. 后面只需要读mysql表中的记录就可以了，读一条记录将相当于读一个结点\n\n* 6. 业务流程的推进，后面就转化为读表中数据，并且处理数据，结束时这一行数据就可以删除。\n\n## 常用的4个对象\n\n* 资源管理类：RepositoryService\n\n* 流程运行管理类：RuntimeService\n\n* 任务管理类：TaskService\n\n* 历史管理类：HistoryService\n\n#### 流程部署\n\n```java\n//资源管理类\nRepositoryService repositoryService = processEngine.getRepositoryService();\n/*\n将资源部署到数据库中 影响表\nact_re_procdef:(流程定义的信息)。存的是key和name，就是画图时给每张图起的唯一的名称\nact_ge_bytearray：(流程定义的文件)。bpmn和png资源就存在这张表中\nact_re_deployment：(部署信息)。部署时写的name(\"请假流程审批\")存在这张表中\n*/\nDeployment deployment = repositoryService.createDeployment()\n.addClasspathResource(\"process/test.bpmn\")\n.addClasspathResource(\"process/test.png\")\n.name(\"请假流程审批\")     //设置名称\n.deploy();\n//输出部署信息 act_re_deployment表中\nSystem.out.println(deployment.getName());\nSystem.out.println(deployment.getId());\n```\n\n#### 流程运行\n\n```java\n//流程运行管理类\nRuntimeService runtimeService = processEngine.getRuntimeService();\n/*\n启动流程实例。前提必须已经完成了部署 影响表\nact_hi_actinst:(已完成的活动信息)。表中开始按钮已经执行，但是zhangsan还未执行请假申请。看END_TIME字段\nact_hi_identitylink:(参与者信息)。参与者，目前只记录一个zhangsan\nact_hi_procinst:(流程实例)。目前只记录一个zhangsan\nact_hi_taskint:(任务实例)。任务表，有个zhangsan需要填写请假申请单的任务\n\nact_ru_execution:(执行表)。记录任务的执行\nact_ru_identitylink:(参与者信息)。任务的参与者\nact_ru_task:(任务)。记录当前任务\n*/\nProcessInstance test = runtimeService.startProcessInstanceByKey(\"test\");//这里的key就是流程定义bpmn文件起的id名称\n//打印一下结果\nSystem.out.println(\"流程部署ID:\"+test.getDeploymentId());   //null\nSystem.out.println(\"流程定义ID:\"+test.getProcessDefinitionId());    //test:1:4\nSystem.out.println(\"流程实例ID:\"+test.getId());   //2501。流程实例:zhangsan可以有实例，其他人也可以有实例\nSystem.out.println(\"活动ID:\"+test.getActivityId());    //null\n```\n\n#### 任务查询和处理\n\n```java\n//任务管理类\nTaskService taskService = processEngine.getTaskService();\n/*\n任务查询\n流程实例ID：来自表act_hi_procinst\n任务ID、任务负责人，任务名称：来自表act_hi_taskint\n*/\nList<Task> taskList = taskService.createTaskQuery()\n.processDefinitionKey(\"test\") //这里的key就是流程定义bpmn文件起的id名称，指定哪个流程\n.taskAssignee(\"zhangsan\")     //指定任务的处理人\n.list();                      //.singleResult()可以只查询一条任务\n//任务列表的展示\nfor (Task task:taskList){\nSystem.out.println(\"流程实例ID:\"+task.getProcessInstanceId());\nSystem.out.println(\"任务ID:\"+task.getId());\nSystem.out.println(\"任务负责人:\"+task.getAssignee());\nSystem.out.println(\"任务名称:\"+task.getName());\n\n/*\n任务处理  影响表\nact_hi_actinst:(已完成的活动信息)\nact_hi_identitylink:(参与者信息)\nact_hi_taskint:(任务实例)\n\nact_ru_execution:(执行表)\nact_ru_identitylink:(参与者信息)\nact_ru_task:(任务)\n*/\nString taskId=task.getId();\ntaskService.complete(taskId);   //根据任务的id处理掉任务\n}\n```\n\n#### 注意\n\n* `act_ru_*` 表中只会有一条任务实例数据,前一个流程执行完后会把`act_ru_*`表中数据删除，保留当前执行的数据。只有一条实例数据的好处是查询速度快。\n\n* 当该流程所有的任务执行完后，`act_ru_*`表中无该流程的任务数据。所有的数据都保留在了`act_hi_*`表中\n\n流程定义id、流程部署id、流程实例id、任务id讲解\n\n流程部署id：将资源部署到数据库中时产生\n\n流程定义id：在执行runtimeService的getRuntimeService方法后产生\n\n流程实例id：每个人在执行流程时都会产生一个流程实例id\n\n任务id：zhangsan填写请假是一个任务，有id。lisi审批也是一个任务，也有id\n\n","slug":"2019-12-31-activiti入门01","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6w2003754tnag8cwvbx","content":"<center><font size=\"4\" color=\"red\">activiti入门01</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"什么是工作流\"><a href=\"#什么是工作流\" class=\"headerlink\" title=\"什么是工作流\"></a>什么是工作流</h2><p>工作流：工作的一个流程，事物发展的一个业务过程</p>\n<p>例子：<br>    请假流程：开始—-员工申请—-部门经理审批—-总经理审批—-结束</p>\n<h2 id=\"activiti的表的生成\"><a href=\"#activiti的表的生成\" class=\"headerlink\" title=\"activiti的表的生成\"></a>activiti的表的生成</h2><h4 id=\"依赖的pom文件\"><a href=\"#依赖的pom文件\" class=\"headerlink\" title=\"依赖的pom文件\"></a>依赖的pom文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-engine<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-bpmn-model<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-bpmn-converter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-json-converter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;groupId&gt;org.activiti&lt;/groupId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;artifactId&gt;activiti-bpmn-layout&lt;/artifactId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;version&gt;6.0.S&lt;/version&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;groupId&gt;org.activiti.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;artifactId&gt;activiti-cloud-services-api&lt;/artifactId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;version&gt;6.0.S&lt;/version&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.46<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.25<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.25<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-dbcp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-dbcp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    \t<span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-io<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-io<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"activiti-cfg-xml文件\"><a href=\"#activiti-cfg-xml文件\" class=\"headerlink\" title=\"activiti.cfg.xml文件\"></a>activiti.cfg.xml文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.commons.dbcp.BasicDataSource\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/db_activiti\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123456\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--StandaloneProcessEngineConfiguration是脱机方式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"processEngineConfiguration\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--是否生成表结构--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"databaseSchemaUpdate\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"生成表\"><a href=\"#生成表\" class=\"headerlink\" title=\"生成表\"></a>生成表</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">创建表</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.创建ProcessEngineConfiguration对象</span></span><br><span class=\"line\">ProcessEngineConfiguration configuration = ProcessEngineConfiguration</span><br><span class=\"line\">.createProcessEngineConfigurationFromResource(<span class=\"string\">\"activiti.cfg.xml\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//2.创建ProcessEngine对象</span></span><br><span class=\"line\">ProcessEngine processEngine = configuration.buildProcessEngine();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.输出一下processEngine</span></span><br><span class=\"line\">System.out.println(processEngine);</span><br></pre></td></tr></table></figure>\n<h4 id=\"表结构介绍\"><a href=\"#表结构介绍\" class=\"headerlink\" title=\"表结构介绍\"></a>表结构介绍</h4><ul>\n<li><p>ACT_GE_* : “GE”代表“General”（通用），用在各种情况下；</p>\n</li>\n<li><p>ACT_HI_* : “HI”代表“History”（历史），这些表中保存的都是历史数据，比如执行过的流程实例、变量、任务，等等。Activit默认提供了4种历史级别：</p>\n<ul>\n<li><p>none: 不保存任何历史记录，可以提高系统性能；</p>\n</li>\n<li><p>activity：保存所有的流程实例、任务、活动信息；</p>\n</li>\n<li><p>audit：也是Activiti的默认级别，保存所有的流程实例、任务、活动、表单属性；</p>\n</li>\n<li><p>full：最完整的历史记录，除了包含audit级别的信息之外还能保存详细，例如：流程变量。</p>\n<blockquote>\n<p>对于几种级别根据对功能的要求选择，如果需要日后跟踪详细可以开启full。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>ACT_ID_* : “ID”代表“Identity”（身份），这些表中保存的都是身份信息，如用户和组以及两者之间的关系。如果Activiti被集成在某一系统当中的话，这些表可以不用，可以直接使用现有系统中的用户或组信息；</p>\n</li>\n<li><p>ACT_RE_* : “RE”代表“Repository”（仓库），这些表中保存一些‘静态’信息，如流程定义和流程资源（如图片、规则等）；</p>\n</li>\n<li><p>ACT_RU_* : “RU”代表“Runtime”（运行时），这些表中保存一些流程实例、用户任务、变量等的运行时数据。<font color=\"red\">Activiti只保存流程实例在执行过程中的运行时数据，并且当流程结束后会立即移除这些数据，这是为了保证运行时表尽量的小并运行的足够快</font>；</p>\n</li>\n</ul>\n<h4 id=\"avtiviti数据表清单\"><a href=\"#avtiviti数据表清单\" class=\"headerlink\" title=\"avtiviti数据表清单\"></a>avtiviti数据表清单</h4>\n<table>\n   <tr>\n      <td>表分类</td>\n      <td>表名</td>\n      <td>解释</td>\n   </tr>\n   <tr>\n      <td rowspan=\"2\">一般数据</td>\n      <td>ACT_GE_BYTEARRAY</td>\n      <td>通用的流程定义和流程资源</td>\n   </tr>\n   <tr>\n      <td>ACT_GE_PROPERTY</td>\n      <td>系统相关属性</td>\n   </tr>\n   <tr>\n      <td rowspan=\"8\">浏览历史记录</td>\n      <td>ACT_HI_ACTINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_ATTACHMENT</td>\n      <td>历史的流程附件</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_COMMENT</td>\n      <td>历史的说明性信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_DETAIL</td>\n      <td>历史的流程运行中的细节信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_IDENTITYLINK</td>\n      <td>历史的流程运行过程中用户关系</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_PROCINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_TASKINST</td>\n      <td>历史的任务实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_VARINST</td>\n      <td>历史的流程运行中的变量信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"4\">用户用户组表</td>\n      <td>ACT_ID_GROUP</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_INFO</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_MEMBERSHIP</td>\n      <td>身份信息-用户和组关系的中间表</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_USER</td>\n      <td>身份信息-用户信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"3\">流程定义表</td>\n      <td>ACT_RE_DEPLOYMENT</td>\n      <td>部署单元信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_MODEL</td>\n      <td>模型信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_PROCDEF</td>\n      <td>已部署的流程定义</td>\n   </tr>\n   <tr>\n      <td rowspan=\"6\">运行实例表</td>\n      <td>ACT_RU_EVENT_SUBSCR</td>\n      <td>运行时事件</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_EXECUTION</td>\n      <td>运行时流程执行实例</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_IDENTITYLINK</td>\n      <td>运行时用户关系信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_JOB</td>\n      <td>运行时作业</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_TASK</td>\n      <td>运行时任务</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_VARIABLE</td>\n      <td>运行时变量表</td>\n   </tr>\n</table>\n\n<h2 id=\"activiti流程定义\"><a href=\"#activiti流程定义\" class=\"headerlink\" title=\"activiti流程定义\"></a>activiti流程定义</h2><p>任何一个流程都有一个id和name</p>\n<p><img src=\"/2019/12/31/2019-12-31-activiti入门01/holiday.jpg\" alt=\"holiday\"></p>\n<p>定义请假流程的执行人</p>\n<p><img src=\"/2019/12/31/2019-12-31-activiti入门01/persion.jpg\" alt=\"persion\"></p>\n<h4 id=\"流程图的底层原理\"><a href=\"#流程图的底层原理\" class=\"headerlink\" title=\"流程图的底层原理\"></a>流程图的底层原理</h4><ul>\n<li><ol>\n<li>业务流程图本质是一个xml文件，文件中可以存入所需要的数据</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>读取业务流程图的过程就是解析xml的过程</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>读取一个业务流程图的结点就相当于解析一个xml结构，进一步将数据插入到mysql表中，形成一条记录</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>将所有结点读取并存入mysql表中</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>后面只需要读mysql表中的记录就可以了，读一条记录将相当于读一个结点</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>业务流程的推进，后面就转化为读表中数据，并且处理数据，结束时这一行数据就可以删除。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"常用的4个对象\"><a href=\"#常用的4个对象\" class=\"headerlink\" title=\"常用的4个对象\"></a>常用的4个对象</h2><ul>\n<li><p>资源管理类：RepositoryService</p>\n</li>\n<li><p>流程运行管理类：RuntimeService</p>\n</li>\n<li><p>任务管理类：TaskService</p>\n</li>\n<li><p>历史管理类：HistoryService</p>\n</li>\n</ul>\n<h4 id=\"流程部署\"><a href=\"#流程部署\" class=\"headerlink\" title=\"流程部署\"></a>流程部署</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//资源管理类</span></span><br><span class=\"line\">RepositoryService repositoryService = processEngine.getRepositoryService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">将资源部署到数据库中 影响表</span></span><br><span class=\"line\"><span class=\"comment\">act_re_procdef:(流程定义的信息)。存的是key和name，就是画图时给每张图起的唯一的名称</span></span><br><span class=\"line\"><span class=\"comment\">act_ge_bytearray：(流程定义的文件)。bpmn和png资源就存在这张表中</span></span><br><span class=\"line\"><span class=\"comment\">act_re_deployment：(部署信息)。部署时写的name(\"请假流程审批\")存在这张表中</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">Deployment deployment = repositoryService.createDeployment()</span><br><span class=\"line\">.addClasspathResource(<span class=\"string\">\"process/test.bpmn\"</span>)</span><br><span class=\"line\">.addClasspathResource(<span class=\"string\">\"process/test.png\"</span>)</span><br><span class=\"line\">.name(<span class=\"string\">\"请假流程审批\"</span>)     <span class=\"comment\">//设置名称</span></span><br><span class=\"line\">.deploy();</span><br><span class=\"line\"><span class=\"comment\">//输出部署信息 act_re_deployment表中</span></span><br><span class=\"line\">System.out.println(deployment.getName());</span><br><span class=\"line\">System.out.println(deployment.getId());</span><br></pre></td></tr></table></figure>\n<h4 id=\"流程运行\"><a href=\"#流程运行\" class=\"headerlink\" title=\"流程运行\"></a>流程运行</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//流程运行管理类</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">启动流程实例。前提必须已经完成了部署 影响表</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_actinst:(已完成的活动信息)。表中开始按钮已经执行，但是zhangsan还未执行请假申请。看END_TIME字段</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_identitylink:(参与者信息)。参与者，目前只记录一个zhangsan</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_procinst:(流程实例)。目前只记录一个zhangsan</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_taskint:(任务实例)。任务表，有个zhangsan需要填写请假申请单的任务</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">act_ru_execution:(执行表)。记录任务的执行</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_identitylink:(参与者信息)。任务的参与者</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_task:(任务)。记录当前任务</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">ProcessInstance test = runtimeService.startProcessInstanceByKey(<span class=\"string\">\"test\"</span>);<span class=\"comment\">//这里的key就是流程定义bpmn文件起的id名称</span></span><br><span class=\"line\"><span class=\"comment\">//打印一下结果</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程部署ID:\"</span>+test.getDeploymentId());   <span class=\"comment\">//null</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义ID:\"</span>+test.getProcessDefinitionId());    <span class=\"comment\">//test:1:4</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程实例ID:\"</span>+test.getId());   <span class=\"comment\">//2501。流程实例:zhangsan可以有实例，其他人也可以有实例</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"活动ID:\"</span>+test.getActivityId());    <span class=\"comment\">//null</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"任务查询和处理\"><a href=\"#任务查询和处理\" class=\"headerlink\" title=\"任务查询和处理\"></a>任务查询和处理</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//任务管理类</span></span><br><span class=\"line\">TaskService taskService = processEngine.getTaskService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">任务查询</span></span><br><span class=\"line\"><span class=\"comment\">流程实例ID：来自表act_hi_procinst</span></span><br><span class=\"line\"><span class=\"comment\">任务ID、任务负责人，任务名称：来自表act_hi_taskint</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">List&lt;Task&gt; taskList = taskService.createTaskQuery()</span><br><span class=\"line\">.processDefinitionKey(<span class=\"string\">\"test\"</span>) <span class=\"comment\">//这里的key就是流程定义bpmn文件起的id名称，指定哪个流程</span></span><br><span class=\"line\">.taskAssignee(<span class=\"string\">\"zhangsan\"</span>)     <span class=\"comment\">//指定任务的处理人</span></span><br><span class=\"line\">.list();                      <span class=\"comment\">//.singleResult()可以只查询一条任务</span></span><br><span class=\"line\"><span class=\"comment\">//任务列表的展示</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Task task:taskList)&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程实例ID:\"</span>+task.getProcessInstanceId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"任务ID:\"</span>+task.getId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"任务负责人:\"</span>+task.getAssignee());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"任务名称:\"</span>+task.getName());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">任务处理  影响表</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_actinst:(已完成的活动信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_identitylink:(参与者信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_taskint:(任务实例)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">act_ru_execution:(执行表)</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_identitylink:(参与者信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_task:(任务)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">String taskId=task.getId();</span><br><span class=\"line\">taskService.complete(taskId);   <span class=\"comment\">//根据任务的id处理掉任务</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li><p><code>act_ru_*</code> 表中只会有一条任务实例数据,前一个流程执行完后会把<code>act_ru_*</code>表中数据删除，保留当前执行的数据。只有一条实例数据的好处是查询速度快。</p>\n</li>\n<li><p>当该流程所有的任务执行完后，<code>act_ru_*</code>表中无该流程的任务数据。所有的数据都保留在了<code>act_hi_*</code>表中</p>\n</li>\n</ul>\n<p>流程定义id、流程部署id、流程实例id、任务id讲解</p>\n<p>流程部署id：将资源部署到数据库中时产生</p>\n<p>流程定义id：在执行runtimeService的getRuntimeService方法后产生</p>\n<p>流程实例id：每个人在执行流程时都会产生一个流程实例id</p>\n<p>任务id：zhangsan填写请假是一个任务，有id。lisi审批也是一个任务，也有id</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">activiti入门01</font></center>","more":"<h2 id=\"什么是工作流\"><a href=\"#什么是工作流\" class=\"headerlink\" title=\"什么是工作流\"></a>什么是工作流</h2><p>工作流：工作的一个流程，事物发展的一个业务过程</p>\n<p>例子：<br>    请假流程：开始—-员工申请—-部门经理审批—-总经理审批—-结束</p>\n<h2 id=\"activiti的表的生成\"><a href=\"#activiti的表的生成\" class=\"headerlink\" title=\"activiti的表的生成\"></a>activiti的表的生成</h2><h4 id=\"依赖的pom文件\"><a href=\"#依赖的pom文件\" class=\"headerlink\" title=\"依赖的pom文件\"></a>依赖的pom文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-engine<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-bpmn-model<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-bpmn-converter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.activiti<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activiti-json-converter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>6.0.S<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;groupId&gt;org.activiti&lt;/groupId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;artifactId&gt;activiti-bpmn-layout&lt;/artifactId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;version&gt;6.0.S&lt;/version&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;dependency&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;groupId&gt;org.activiti.cloud&lt;/groupId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;artifactId&gt;activiti-cloud-services-api&lt;/artifactId&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--            &lt;version&gt;6.0.S&lt;/version&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;/dependency&gt;--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.46<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>log4j<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.17<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.25<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.slf4j<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>slf4j-log4j12<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.7.25<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-dbcp<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-dbcp<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    \t<span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>commons-io<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>commons-io<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.4<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"activiti-cfg-xml文件\"><a href=\"#activiti-cfg-xml文件\" class=\"headerlink\" title=\"activiti.cfg.xml文件\"></a>activiti.cfg.xml文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.commons.dbcp.BasicDataSource\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://localhost:3306/db_activiti\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123456\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--StandaloneProcessEngineConfiguration是脱机方式--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"processEngineConfiguration\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--是否生成表结构--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"databaseSchemaUpdate\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"生成表\"><a href=\"#生成表\" class=\"headerlink\" title=\"生成表\"></a>生成表</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">创建表</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.创建ProcessEngineConfiguration对象</span></span><br><span class=\"line\">ProcessEngineConfiguration configuration = ProcessEngineConfiguration</span><br><span class=\"line\">.createProcessEngineConfigurationFromResource(<span class=\"string\">\"activiti.cfg.xml\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//2.创建ProcessEngine对象</span></span><br><span class=\"line\">ProcessEngine processEngine = configuration.buildProcessEngine();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.输出一下processEngine</span></span><br><span class=\"line\">System.out.println(processEngine);</span><br></pre></td></tr></table></figure>\n<h4 id=\"表结构介绍\"><a href=\"#表结构介绍\" class=\"headerlink\" title=\"表结构介绍\"></a>表结构介绍</h4><ul>\n<li><p>ACT_GE_* : “GE”代表“General”（通用），用在各种情况下；</p>\n</li>\n<li><p>ACT_HI_* : “HI”代表“History”（历史），这些表中保存的都是历史数据，比如执行过的流程实例、变量、任务，等等。Activit默认提供了4种历史级别：</p>\n<ul>\n<li><p>none: 不保存任何历史记录，可以提高系统性能；</p>\n</li>\n<li><p>activity：保存所有的流程实例、任务、活动信息；</p>\n</li>\n<li><p>audit：也是Activiti的默认级别，保存所有的流程实例、任务、活动、表单属性；</p>\n</li>\n<li><p>full：最完整的历史记录，除了包含audit级别的信息之外还能保存详细，例如：流程变量。</p>\n<blockquote>\n<p>对于几种级别根据对功能的要求选择，如果需要日后跟踪详细可以开启full。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li><p>ACT_ID_* : “ID”代表“Identity”（身份），这些表中保存的都是身份信息，如用户和组以及两者之间的关系。如果Activiti被集成在某一系统当中的话，这些表可以不用，可以直接使用现有系统中的用户或组信息；</p>\n</li>\n<li><p>ACT_RE_* : “RE”代表“Repository”（仓库），这些表中保存一些‘静态’信息，如流程定义和流程资源（如图片、规则等）；</p>\n</li>\n<li><p>ACT_RU_* : “RU”代表“Runtime”（运行时），这些表中保存一些流程实例、用户任务、变量等的运行时数据。<font color=\"red\">Activiti只保存流程实例在执行过程中的运行时数据，并且当流程结束后会立即移除这些数据，这是为了保证运行时表尽量的小并运行的足够快</font>；</p>\n</li>\n</ul>\n<h4 id=\"avtiviti数据表清单\"><a href=\"#avtiviti数据表清单\" class=\"headerlink\" title=\"avtiviti数据表清单\"></a>avtiviti数据表清单</h4>\n<table>\n   <tr>\n      <td>表分类</td>\n      <td>表名</td>\n      <td>解释</td>\n   </tr>\n   <tr>\n      <td rowspan=\"2\">一般数据</td>\n      <td>ACT_GE_BYTEARRAY</td>\n      <td>通用的流程定义和流程资源</td>\n   </tr>\n   <tr>\n      <td>ACT_GE_PROPERTY</td>\n      <td>系统相关属性</td>\n   </tr>\n   <tr>\n      <td rowspan=\"8\">浏览历史记录</td>\n      <td>ACT_HI_ACTINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_ATTACHMENT</td>\n      <td>历史的流程附件</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_COMMENT</td>\n      <td>历史的说明性信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_DETAIL</td>\n      <td>历史的流程运行中的细节信息</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_IDENTITYLINK</td>\n      <td>历史的流程运行过程中用户关系</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_PROCINST</td>\n      <td>历史的流程实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_TASKINST</td>\n      <td>历史的任务实例</td>\n   </tr>\n   <tr>\n      <td>ACT_HI_VARINST</td>\n      <td>历史的流程运行中的变量信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"4\">用户用户组表</td>\n      <td>ACT_ID_GROUP</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_INFO</td>\n      <td>身份信息-组信息</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_MEMBERSHIP</td>\n      <td>身份信息-用户和组关系的中间表</td>\n   </tr>\n   <tr>\n      <td>ACT_ID_USER</td>\n      <td>身份信息-用户信息</td>\n   </tr>\n   <tr>\n      <td rowspan=\"3\">流程定义表</td>\n      <td>ACT_RE_DEPLOYMENT</td>\n      <td>部署单元信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_MODEL</td>\n      <td>模型信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RE_PROCDEF</td>\n      <td>已部署的流程定义</td>\n   </tr>\n   <tr>\n      <td rowspan=\"6\">运行实例表</td>\n      <td>ACT_RU_EVENT_SUBSCR</td>\n      <td>运行时事件</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_EXECUTION</td>\n      <td>运行时流程执行实例</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_IDENTITYLINK</td>\n      <td>运行时用户关系信息</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_JOB</td>\n      <td>运行时作业</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_TASK</td>\n      <td>运行时任务</td>\n   </tr>\n   <tr>\n      <td>ACT_RU_VARIABLE</td>\n      <td>运行时变量表</td>\n   </tr>\n</table>\n\n<h2 id=\"activiti流程定义\"><a href=\"#activiti流程定义\" class=\"headerlink\" title=\"activiti流程定义\"></a>activiti流程定义</h2><p>任何一个流程都有一个id和name</p>\n<p><img src=\"/2019/12/31/2019-12-31-activiti入门01/holiday.jpg\" alt=\"holiday\"></p>\n<p>定义请假流程的执行人</p>\n<p><img src=\"/2019/12/31/2019-12-31-activiti入门01/persion.jpg\" alt=\"persion\"></p>\n<h4 id=\"流程图的底层原理\"><a href=\"#流程图的底层原理\" class=\"headerlink\" title=\"流程图的底层原理\"></a>流程图的底层原理</h4><ul>\n<li><ol>\n<li>业务流程图本质是一个xml文件，文件中可以存入所需要的数据</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>读取业务流程图的过程就是解析xml的过程</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>读取一个业务流程图的结点就相当于解析一个xml结构，进一步将数据插入到mysql表中，形成一条记录</li>\n</ol>\n</li>\n<li><ol start=\"4\">\n<li>将所有结点读取并存入mysql表中</li>\n</ol>\n</li>\n<li><ol start=\"5\">\n<li>后面只需要读mysql表中的记录就可以了，读一条记录将相当于读一个结点</li>\n</ol>\n</li>\n<li><ol start=\"6\">\n<li>业务流程的推进，后面就转化为读表中数据，并且处理数据，结束时这一行数据就可以删除。</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"常用的4个对象\"><a href=\"#常用的4个对象\" class=\"headerlink\" title=\"常用的4个对象\"></a>常用的4个对象</h2><ul>\n<li><p>资源管理类：RepositoryService</p>\n</li>\n<li><p>流程运行管理类：RuntimeService</p>\n</li>\n<li><p>任务管理类：TaskService</p>\n</li>\n<li><p>历史管理类：HistoryService</p>\n</li>\n</ul>\n<h4 id=\"流程部署\"><a href=\"#流程部署\" class=\"headerlink\" title=\"流程部署\"></a>流程部署</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//资源管理类</span></span><br><span class=\"line\">RepositoryService repositoryService = processEngine.getRepositoryService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">将资源部署到数据库中 影响表</span></span><br><span class=\"line\"><span class=\"comment\">act_re_procdef:(流程定义的信息)。存的是key和name，就是画图时给每张图起的唯一的名称</span></span><br><span class=\"line\"><span class=\"comment\">act_ge_bytearray：(流程定义的文件)。bpmn和png资源就存在这张表中</span></span><br><span class=\"line\"><span class=\"comment\">act_re_deployment：(部署信息)。部署时写的name(\"请假流程审批\")存在这张表中</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">Deployment deployment = repositoryService.createDeployment()</span><br><span class=\"line\">.addClasspathResource(<span class=\"string\">\"process/test.bpmn\"</span>)</span><br><span class=\"line\">.addClasspathResource(<span class=\"string\">\"process/test.png\"</span>)</span><br><span class=\"line\">.name(<span class=\"string\">\"请假流程审批\"</span>)     <span class=\"comment\">//设置名称</span></span><br><span class=\"line\">.deploy();</span><br><span class=\"line\"><span class=\"comment\">//输出部署信息 act_re_deployment表中</span></span><br><span class=\"line\">System.out.println(deployment.getName());</span><br><span class=\"line\">System.out.println(deployment.getId());</span><br></pre></td></tr></table></figure>\n<h4 id=\"流程运行\"><a href=\"#流程运行\" class=\"headerlink\" title=\"流程运行\"></a>流程运行</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//流程运行管理类</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">启动流程实例。前提必须已经完成了部署 影响表</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_actinst:(已完成的活动信息)。表中开始按钮已经执行，但是zhangsan还未执行请假申请。看END_TIME字段</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_identitylink:(参与者信息)。参与者，目前只记录一个zhangsan</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_procinst:(流程实例)。目前只记录一个zhangsan</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_taskint:(任务实例)。任务表，有个zhangsan需要填写请假申请单的任务</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">act_ru_execution:(执行表)。记录任务的执行</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_identitylink:(参与者信息)。任务的参与者</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_task:(任务)。记录当前任务</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">ProcessInstance test = runtimeService.startProcessInstanceByKey(<span class=\"string\">\"test\"</span>);<span class=\"comment\">//这里的key就是流程定义bpmn文件起的id名称</span></span><br><span class=\"line\"><span class=\"comment\">//打印一下结果</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程部署ID:\"</span>+test.getDeploymentId());   <span class=\"comment\">//null</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义ID:\"</span>+test.getProcessDefinitionId());    <span class=\"comment\">//test:1:4</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程实例ID:\"</span>+test.getId());   <span class=\"comment\">//2501。流程实例:zhangsan可以有实例，其他人也可以有实例</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"活动ID:\"</span>+test.getActivityId());    <span class=\"comment\">//null</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"任务查询和处理\"><a href=\"#任务查询和处理\" class=\"headerlink\" title=\"任务查询和处理\"></a>任务查询和处理</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//任务管理类</span></span><br><span class=\"line\">TaskService taskService = processEngine.getTaskService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">任务查询</span></span><br><span class=\"line\"><span class=\"comment\">流程实例ID：来自表act_hi_procinst</span></span><br><span class=\"line\"><span class=\"comment\">任务ID、任务负责人，任务名称：来自表act_hi_taskint</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">List&lt;Task&gt; taskList = taskService.createTaskQuery()</span><br><span class=\"line\">.processDefinitionKey(<span class=\"string\">\"test\"</span>) <span class=\"comment\">//这里的key就是流程定义bpmn文件起的id名称，指定哪个流程</span></span><br><span class=\"line\">.taskAssignee(<span class=\"string\">\"zhangsan\"</span>)     <span class=\"comment\">//指定任务的处理人</span></span><br><span class=\"line\">.list();                      <span class=\"comment\">//.singleResult()可以只查询一条任务</span></span><br><span class=\"line\"><span class=\"comment\">//任务列表的展示</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (Task task:taskList)&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程实例ID:\"</span>+task.getProcessInstanceId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"任务ID:\"</span>+task.getId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"任务负责人:\"</span>+task.getAssignee());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"任务名称:\"</span>+task.getName());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">任务处理  影响表</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_actinst:(已完成的活动信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_identitylink:(参与者信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_hi_taskint:(任务实例)</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">act_ru_execution:(执行表)</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_identitylink:(参与者信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_ru_task:(任务)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">String taskId=task.getId();</span><br><span class=\"line\">taskService.complete(taskId);   <span class=\"comment\">//根据任务的id处理掉任务</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h4><ul>\n<li><p><code>act_ru_*</code> 表中只会有一条任务实例数据,前一个流程执行完后会把<code>act_ru_*</code>表中数据删除，保留当前执行的数据。只有一条实例数据的好处是查询速度快。</p>\n</li>\n<li><p>当该流程所有的任务执行完后，<code>act_ru_*</code>表中无该流程的任务数据。所有的数据都保留在了<code>act_hi_*</code>表中</p>\n</li>\n</ul>\n<p>流程定义id、流程部署id、流程实例id、任务id讲解</p>\n<p>流程部署id：将资源部署到数据库中时产生</p>\n<p>流程定义id：在执行runtimeService的getRuntimeService方法后产生</p>\n<p>流程实例id：每个人在执行流程时都会产生一个流程实例id</p>\n<p>任务id：zhangsan填写请假是一个任务，有id。lisi审批也是一个任务，也有id</p>"},{"title":"acticiti_任务分配和流程变量","date":"2020-01-02T15:56:08.000Z","_content":"\n<center><font size=4 color=\"red\">acticiti_任务分配和流程变量</font></center>\n\n<!--more-->\n\n## 任务分配\n\n#### UEL表达式分配任务\n\n需求：真实环境中bpmn中的执行人是不能写死的，可以使用UEL表达式占位符\n\n如果是对象可以写成`${user.assiginee0}`。其中的user是一个对象\n\n![uel](uel.jpg)\n\n```java\n/*\nUEL表达式\n*/\nMap<String,Object> variables=new HashMap<>();\n//assiginee0、assiginee1、assiginee2分别对应bpmn中执行流程的assiginee\nvariables.put(\"assiginee0\",\"zhangsan\");\nvariables.put(\"assiginee1\",\"lisi\");\nvariables.put(\"assiginee2\",\"wangwu\");\nruntimeService.startProcessInstanceByKey(\"test\",variables);\n//输出\nSystem.out.println(processEngine.getName());\n```\n\n#### 监听器分配任务\n\n![listener](listener.jpg)\n\n* Create：任务创建后触发\n* Assignment：任务分配后触发\n* Delete：任务完成后触发\n* All：所有事件发生都触发\n\n监听器分配任务方式：1.编写要监听的类实现TaskListener  2.在bpmn中设置这个类\n\n![mylistener](mylistener.jpg)\n\n```java\npackage com.hui.table;\n\nimport org.activiti.engine.delegate.DelegateTask;\nimport org.activiti.engine.delegate.TaskListener;\n\npublic class MyListener implements TaskListener {\n    @Override\n    public void notify(DelegateTask delegateTask) {\n        //指定任务负责人\n        delegateTask.setAssignee(\"zhangsan\");\n    }\n}\n```\n\n## 流程变量\n\n#### 流程变量的作用域\n\n流程变量默认作用于一个流程实例，称为Global变量。也可以作用于一个结点，称为Local变量\n\nGlobal变量：变量名不可以相同，否则后面设置的会覆盖掉前面设置的\n\nLocal变量：变量名可以相同，因为作用域互不影响\n\n## Global流程变量的使用\n\n流程变量直接点击连接然后在Condition中设置条件即可。图中是对象的形式设置的。如果不是对象，直接`num<=3`设置即可\n\n![processvariable](processvariable.jpg)\n\n实体类的创建\n\n```java\n/**\n * 请假实体类\n * 注意：如果是pojo类型存储到流程变量中，一定要实现Serializable\n */\n@Data\npublic class Test0 implements Serializable {\n    private Integer id;\n    private String testName;  //申请人名称\n    private Date beginDate;   //开始日期\n    private Date enddate;     //结束日期\n    private Float num;        //请假天数\n    private String reason;    //请假事由\n    private String type;      //请假类型\n}\n```\n\n#### 启动流程携带流程变量\n\n```java\n/*\n流程启动时携带变量信息\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到运行实例\nRuntimeService runtimeService = processEngine.getRuntimeService();\n//2.这次根据key来启动   得到key，获取方法前面结束的有\nString key=\"myProcess_1\";\n//3.设置流程实例变量\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\nMap<String,Object> variables=new HashMap<>();\nProcessInstance processInstance = runtimeService.startProcessInstanceByKey(key, variables);\n//打印看一下结果\nSystem.out.println(processInstance.getName());\nSystem.out.println(processInstance.getProcessDefinitionId());\n```\n\n#### 任务办理后携带流程变量\n\n```java\n/*\n任务办理时携带变量信息\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到任务实例\nTaskService taskService = processEngine.getTaskService();\n//2.得到key，获取方法前面介绍的有\nString key=\"myProcess_1\";\n//3.查询当前任务实例是否有任务\nTask task = taskService.createTaskQuery().processDefinitionKey(key)\n    .taskAssignee(\"wangwu\").singleResult();\n//4.设置流程实例变量\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\nMap<String,Object> variables=new HashMap<>();\nif (task!=null){\n    taskService.complete(task.getId(),variables);\n    System.out.println(\"任务执行完成\");\n}\n```\n\n#### 通过当前流程设置流程变量\n\n```java\n/*\n通过当前流程设置流程变量\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到运行实例\nRuntimeService runtimeService = processEngine.getRuntimeService();\n\n//2.设置流程实例变量的值\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\n//第一个参数是流程实例id，2501是流程实例id\n//第二个参数是bpmn文件里设置的流程变量的名称${test0.num}，因为是对象，所在这里写对象的名称\n//第三个值是流程变量的值，就是上面创建对象，赋值后的test0\n//这种一次只能设置一个值\nruntimeService.setVariable(\"2501\",\"test0\",test0);\n\n//这种可以一次设置多个值。variables是个map集合\n//runtimeService.setVariable(\"2501\",variables);\n```\n\n#### 通过当前任务设置流程变量\n\n注意：任务taskId必须是当前待办任务id。act_ru_task表中存在，如果任务已结束，会报错。\n\n```java\n/*\n通过当前任务设置流程变量信息\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到运行实例\nTaskService taskService = processEngine.getTaskService();\n\n//2.设置流程实例变量的值\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\n//第一个参数是任务taskId\n//第二个参数是bpmn文件里设置的流程变量的名称${test0.num}，因为是对象，所在这里写对象的名称\n//第三个值是流程变量的值，就是上面创建对象，赋值后的test0\n//这种一次只能设置一个值\ntaskService.setVariable(\"1404\",\"test0\",test0);\n\n//这种可以一次设置多个值。variables是个map集合\n//taskService.setVariable(\"1404\",variables);\n```\n\n## Local流程变量的使用\n\n代码和Global的使用方式一样，唯一不同的是setVariableLocal\n\n```java\ntaskService.setVariableLocal(\"1404\",\"test0\",test0);\n```\n","source":"_posts/2020-01-02-acticiti-任务分配和流程变量.md","raw":"---\ntitle: acticiti_任务分配和流程变量\ndate: 2020-01-02 15:56:08\ncategories:\n- activiti\ntags:\n- 工作流\n- activiti\n- 任务分配\n- 流程变量\n---\n\n<center><font size=4 color=\"red\">acticiti_任务分配和流程变量</font></center>\n\n<!--more-->\n\n## 任务分配\n\n#### UEL表达式分配任务\n\n需求：真实环境中bpmn中的执行人是不能写死的，可以使用UEL表达式占位符\n\n如果是对象可以写成`${user.assiginee0}`。其中的user是一个对象\n\n![uel](uel.jpg)\n\n```java\n/*\nUEL表达式\n*/\nMap<String,Object> variables=new HashMap<>();\n//assiginee0、assiginee1、assiginee2分别对应bpmn中执行流程的assiginee\nvariables.put(\"assiginee0\",\"zhangsan\");\nvariables.put(\"assiginee1\",\"lisi\");\nvariables.put(\"assiginee2\",\"wangwu\");\nruntimeService.startProcessInstanceByKey(\"test\",variables);\n//输出\nSystem.out.println(processEngine.getName());\n```\n\n#### 监听器分配任务\n\n![listener](listener.jpg)\n\n* Create：任务创建后触发\n* Assignment：任务分配后触发\n* Delete：任务完成后触发\n* All：所有事件发生都触发\n\n监听器分配任务方式：1.编写要监听的类实现TaskListener  2.在bpmn中设置这个类\n\n![mylistener](mylistener.jpg)\n\n```java\npackage com.hui.table;\n\nimport org.activiti.engine.delegate.DelegateTask;\nimport org.activiti.engine.delegate.TaskListener;\n\npublic class MyListener implements TaskListener {\n    @Override\n    public void notify(DelegateTask delegateTask) {\n        //指定任务负责人\n        delegateTask.setAssignee(\"zhangsan\");\n    }\n}\n```\n\n## 流程变量\n\n#### 流程变量的作用域\n\n流程变量默认作用于一个流程实例，称为Global变量。也可以作用于一个结点，称为Local变量\n\nGlobal变量：变量名不可以相同，否则后面设置的会覆盖掉前面设置的\n\nLocal变量：变量名可以相同，因为作用域互不影响\n\n## Global流程变量的使用\n\n流程变量直接点击连接然后在Condition中设置条件即可。图中是对象的形式设置的。如果不是对象，直接`num<=3`设置即可\n\n![processvariable](processvariable.jpg)\n\n实体类的创建\n\n```java\n/**\n * 请假实体类\n * 注意：如果是pojo类型存储到流程变量中，一定要实现Serializable\n */\n@Data\npublic class Test0 implements Serializable {\n    private Integer id;\n    private String testName;  //申请人名称\n    private Date beginDate;   //开始日期\n    private Date enddate;     //结束日期\n    private Float num;        //请假天数\n    private String reason;    //请假事由\n    private String type;      //请假类型\n}\n```\n\n#### 启动流程携带流程变量\n\n```java\n/*\n流程启动时携带变量信息\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到运行实例\nRuntimeService runtimeService = processEngine.getRuntimeService();\n//2.这次根据key来启动   得到key，获取方法前面结束的有\nString key=\"myProcess_1\";\n//3.设置流程实例变量\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\nMap<String,Object> variables=new HashMap<>();\nProcessInstance processInstance = runtimeService.startProcessInstanceByKey(key, variables);\n//打印看一下结果\nSystem.out.println(processInstance.getName());\nSystem.out.println(processInstance.getProcessDefinitionId());\n```\n\n#### 任务办理后携带流程变量\n\n```java\n/*\n任务办理时携带变量信息\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到任务实例\nTaskService taskService = processEngine.getTaskService();\n//2.得到key，获取方法前面介绍的有\nString key=\"myProcess_1\";\n//3.查询当前任务实例是否有任务\nTask task = taskService.createTaskQuery().processDefinitionKey(key)\n    .taskAssignee(\"wangwu\").singleResult();\n//4.设置流程实例变量\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\nMap<String,Object> variables=new HashMap<>();\nif (task!=null){\n    taskService.complete(task.getId(),variables);\n    System.out.println(\"任务执行完成\");\n}\n```\n\n#### 通过当前流程设置流程变量\n\n```java\n/*\n通过当前流程设置流程变量\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到运行实例\nRuntimeService runtimeService = processEngine.getRuntimeService();\n\n//2.设置流程实例变量的值\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\n//第一个参数是流程实例id，2501是流程实例id\n//第二个参数是bpmn文件里设置的流程变量的名称${test0.num}，因为是对象，所在这里写对象的名称\n//第三个值是流程变量的值，就是上面创建对象，赋值后的test0\n//这种一次只能设置一个值\nruntimeService.setVariable(\"2501\",\"test0\",test0);\n\n//这种可以一次设置多个值。variables是个map集合\n//runtimeService.setVariable(\"2501\",variables);\n```\n\n#### 通过当前任务设置流程变量\n\n注意：任务taskId必须是当前待办任务id。act_ru_task表中存在，如果任务已结束，会报错。\n\n```java\n/*\n通过当前任务设置流程变量信息\nTest0对象存到了act_ru_variable表中\n流程变量存到了act_ge_bytearray\n*/\n//1.得到运行实例\nTaskService taskService = processEngine.getTaskService();\n\n//2.设置流程实例变量的值\nTest0 test0=new Test0();\ntest0.setNum(1F);\n\n//第一个参数是任务taskId\n//第二个参数是bpmn文件里设置的流程变量的名称${test0.num}，因为是对象，所在这里写对象的名称\n//第三个值是流程变量的值，就是上面创建对象，赋值后的test0\n//这种一次只能设置一个值\ntaskService.setVariable(\"1404\",\"test0\",test0);\n\n//这种可以一次设置多个值。variables是个map集合\n//taskService.setVariable(\"1404\",variables);\n```\n\n## Local流程变量的使用\n\n代码和Global的使用方式一样，唯一不同的是setVariableLocal\n\n```java\ntaskService.setVariableLocal(\"1404\",\"test0\",test0);\n```\n","slug":"2020-01-02-acticiti-任务分配和流程变量","published":1,"updated":"2020-01-11T02:21:08.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6w3003c54tn18yct1ap","content":"<center><font size=\"4\" color=\"red\">acticiti_任务分配和流程变量</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"任务分配\"><a href=\"#任务分配\" class=\"headerlink\" title=\"任务分配\"></a>任务分配</h2><h4 id=\"UEL表达式分配任务\"><a href=\"#UEL表达式分配任务\" class=\"headerlink\" title=\"UEL表达式分配任务\"></a>UEL表达式分配任务</h4><p>需求：真实环境中bpmn中的执行人是不能写死的，可以使用UEL表达式占位符</p>\n<p>如果是对象可以写成<code>${user.assiginee0}</code>。其中的user是一个对象</p>\n<p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/uel.jpg\" alt=\"uel\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">UEL表达式</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">Map&lt;String,Object&gt; variables=<span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"><span class=\"comment\">//assiginee0、assiginee1、assiginee2分别对应bpmn中执行流程的assiginee</span></span><br><span class=\"line\">variables.put(<span class=\"string\">\"assiginee0\"</span>,<span class=\"string\">\"zhangsan\"</span>);</span><br><span class=\"line\">variables.put(<span class=\"string\">\"assiginee1\"</span>,<span class=\"string\">\"lisi\"</span>);</span><br><span class=\"line\">variables.put(<span class=\"string\">\"assiginee2\"</span>,<span class=\"string\">\"wangwu\"</span>);</span><br><span class=\"line\">runtimeService.startProcessInstanceByKey(<span class=\"string\">\"test\"</span>,variables);</span><br><span class=\"line\"><span class=\"comment\">//输出</span></span><br><span class=\"line\">System.out.println(processEngine.getName());</span><br></pre></td></tr></table></figure>\n<h4 id=\"监听器分配任务\"><a href=\"#监听器分配任务\" class=\"headerlink\" title=\"监听器分配任务\"></a>监听器分配任务</h4><p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/listener.jpg\" alt=\"listener\"></p>\n<ul>\n<li>Create：任务创建后触发</li>\n<li>Assignment：任务分配后触发</li>\n<li>Delete：任务完成后触发</li>\n<li>All：所有事件发生都触发</li>\n</ul>\n<p>监听器分配任务方式：1.编写要监听的类实现TaskListener  2.在bpmn中设置这个类</p>\n<p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/mylistener.jpg\" alt=\"mylistener\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.table;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.activiti.engine.delegate.DelegateTask;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.activiti.engine.delegate.TaskListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">TaskListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">notify</span><span class=\"params\">(DelegateTask delegateTask)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//指定任务负责人</span></span><br><span class=\"line\">        delegateTask.setAssignee(<span class=\"string\">\"zhangsan\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"流程变量\"><a href=\"#流程变量\" class=\"headerlink\" title=\"流程变量\"></a>流程变量</h2><h4 id=\"流程变量的作用域\"><a href=\"#流程变量的作用域\" class=\"headerlink\" title=\"流程变量的作用域\"></a>流程变量的作用域</h4><p>流程变量默认作用于一个流程实例，称为Global变量。也可以作用于一个结点，称为Local变量</p>\n<p>Global变量：变量名不可以相同，否则后面设置的会覆盖掉前面设置的</p>\n<p>Local变量：变量名可以相同，因为作用域互不影响</p>\n<h2 id=\"Global流程变量的使用\"><a href=\"#Global流程变量的使用\" class=\"headerlink\" title=\"Global流程变量的使用\"></a>Global流程变量的使用</h2><p>流程变量直接点击连接然后在Condition中设置条件即可。图中是对象的形式设置的。如果不是对象，直接<code>num&lt;=3</code>设置即可</p>\n<p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/processvariable.jpg\" alt=\"processvariable\"></p>\n<p>实体类的创建</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 请假实体类</span></span><br><span class=\"line\"><span class=\"comment\"> * 注意：如果是pojo类型存储到流程变量中，一定要实现Serializable</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test0</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String testName;  <span class=\"comment\">//申请人名称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date beginDate;   <span class=\"comment\">//开始日期</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date enddate;     <span class=\"comment\">//结束日期</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Float num;        <span class=\"comment\">//请假天数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String reason;    <span class=\"comment\">//请假事由</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String type;      <span class=\"comment\">//请假类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动流程携带流程变量\"><a href=\"#启动流程携带流程变量\" class=\"headerlink\" title=\"启动流程携带流程变量\"></a>启动流程携带流程变量</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程启动时携带变量信息</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到运行实例</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"><span class=\"comment\">//2.这次根据key来启动   得到key，获取方法前面结束的有</span></span><br><span class=\"line\">String key=<span class=\"string\">\"myProcess_1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//3.设置流程实例变量</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Map&lt;String,Object&gt; variables=<span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(key, variables);</span><br><span class=\"line\"><span class=\"comment\">//打印看一下结果</span></span><br><span class=\"line\">System.out.println(processInstance.getName());</span><br><span class=\"line\">System.out.println(processInstance.getProcessDefinitionId());</span><br></pre></td></tr></table></figure>\n<h4 id=\"任务办理后携带流程变量\"><a href=\"#任务办理后携带流程变量\" class=\"headerlink\" title=\"任务办理后携带流程变量\"></a>任务办理后携带流程变量</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">任务办理时携带变量信息</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到任务实例</span></span><br><span class=\"line\">TaskService taskService = processEngine.getTaskService();</span><br><span class=\"line\"><span class=\"comment\">//2.得到key，获取方法前面介绍的有</span></span><br><span class=\"line\">String key=<span class=\"string\">\"myProcess_1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//3.查询当前任务实例是否有任务</span></span><br><span class=\"line\">Task task = taskService.createTaskQuery().processDefinitionKey(key)</span><br><span class=\"line\">    .taskAssignee(<span class=\"string\">\"wangwu\"</span>).singleResult();</span><br><span class=\"line\"><span class=\"comment\">//4.设置流程实例变量</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Map&lt;String,Object&gt; variables=<span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (task!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    taskService.complete(task.getId(),variables);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"任务执行完成\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过当前流程设置流程变量\"><a href=\"#通过当前流程设置流程变量\" class=\"headerlink\" title=\"通过当前流程设置流程变量\"></a>通过当前流程设置流程变量</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">通过当前流程设置流程变量</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到运行实例</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.设置流程实例变量的值</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数是流程实例id，2501是流程实例id</span></span><br><span class=\"line\"><span class=\"comment\">//第二个参数是bpmn文件里设置的流程变量的名称$&#123;test0.num&#125;，因为是对象，所在这里写对象的名称</span></span><br><span class=\"line\"><span class=\"comment\">//第三个值是流程变量的值，就是上面创建对象，赋值后的test0</span></span><br><span class=\"line\"><span class=\"comment\">//这种一次只能设置一个值</span></span><br><span class=\"line\">runtimeService.setVariable(<span class=\"string\">\"2501\"</span>,<span class=\"string\">\"test0\"</span>,test0);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//这种可以一次设置多个值。variables是个map集合</span></span><br><span class=\"line\"><span class=\"comment\">//runtimeService.setVariable(\"2501\",variables);</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"通过当前任务设置流程变量\"><a href=\"#通过当前任务设置流程变量\" class=\"headerlink\" title=\"通过当前任务设置流程变量\"></a>通过当前任务设置流程变量</h4><p>注意：任务taskId必须是当前待办任务id。act_ru_task表中存在，如果任务已结束，会报错。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">通过当前任务设置流程变量信息</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到运行实例</span></span><br><span class=\"line\">TaskService taskService = processEngine.getTaskService();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.设置流程实例变量的值</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数是任务taskId</span></span><br><span class=\"line\"><span class=\"comment\">//第二个参数是bpmn文件里设置的流程变量的名称$&#123;test0.num&#125;，因为是对象，所在这里写对象的名称</span></span><br><span class=\"line\"><span class=\"comment\">//第三个值是流程变量的值，就是上面创建对象，赋值后的test0</span></span><br><span class=\"line\"><span class=\"comment\">//这种一次只能设置一个值</span></span><br><span class=\"line\">taskService.setVariable(<span class=\"string\">\"1404\"</span>,<span class=\"string\">\"test0\"</span>,test0);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//这种可以一次设置多个值。variables是个map集合</span></span><br><span class=\"line\"><span class=\"comment\">//taskService.setVariable(\"1404\",variables);</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Local流程变量的使用\"><a href=\"#Local流程变量的使用\" class=\"headerlink\" title=\"Local流程变量的使用\"></a>Local流程变量的使用</h2><p>代码和Global的使用方式一样，唯一不同的是setVariableLocal</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">taskService.setVariableLocal(<span class=\"string\">\"1404\"</span>,<span class=\"string\">\"test0\"</span>,test0);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">acticiti_任务分配和流程变量</font></center>","more":"<h2 id=\"任务分配\"><a href=\"#任务分配\" class=\"headerlink\" title=\"任务分配\"></a>任务分配</h2><h4 id=\"UEL表达式分配任务\"><a href=\"#UEL表达式分配任务\" class=\"headerlink\" title=\"UEL表达式分配任务\"></a>UEL表达式分配任务</h4><p>需求：真实环境中bpmn中的执行人是不能写死的，可以使用UEL表达式占位符</p>\n<p>如果是对象可以写成<code>${user.assiginee0}</code>。其中的user是一个对象</p>\n<p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/uel.jpg\" alt=\"uel\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">UEL表达式</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">Map&lt;String,Object&gt; variables=<span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"><span class=\"comment\">//assiginee0、assiginee1、assiginee2分别对应bpmn中执行流程的assiginee</span></span><br><span class=\"line\">variables.put(<span class=\"string\">\"assiginee0\"</span>,<span class=\"string\">\"zhangsan\"</span>);</span><br><span class=\"line\">variables.put(<span class=\"string\">\"assiginee1\"</span>,<span class=\"string\">\"lisi\"</span>);</span><br><span class=\"line\">variables.put(<span class=\"string\">\"assiginee2\"</span>,<span class=\"string\">\"wangwu\"</span>);</span><br><span class=\"line\">runtimeService.startProcessInstanceByKey(<span class=\"string\">\"test\"</span>,variables);</span><br><span class=\"line\"><span class=\"comment\">//输出</span></span><br><span class=\"line\">System.out.println(processEngine.getName());</span><br></pre></td></tr></table></figure>\n<h4 id=\"监听器分配任务\"><a href=\"#监听器分配任务\" class=\"headerlink\" title=\"监听器分配任务\"></a>监听器分配任务</h4><p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/listener.jpg\" alt=\"listener\"></p>\n<ul>\n<li>Create：任务创建后触发</li>\n<li>Assignment：任务分配后触发</li>\n<li>Delete：任务完成后触发</li>\n<li>All：所有事件发生都触发</li>\n</ul>\n<p>监听器分配任务方式：1.编写要监听的类实现TaskListener  2.在bpmn中设置这个类</p>\n<p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/mylistener.jpg\" alt=\"mylistener\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.table;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.activiti.engine.delegate.DelegateTask;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.activiti.engine.delegate.TaskListener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">TaskListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">notify</span><span class=\"params\">(DelegateTask delegateTask)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//指定任务负责人</span></span><br><span class=\"line\">        delegateTask.setAssignee(<span class=\"string\">\"zhangsan\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"流程变量\"><a href=\"#流程变量\" class=\"headerlink\" title=\"流程变量\"></a>流程变量</h2><h4 id=\"流程变量的作用域\"><a href=\"#流程变量的作用域\" class=\"headerlink\" title=\"流程变量的作用域\"></a>流程变量的作用域</h4><p>流程变量默认作用于一个流程实例，称为Global变量。也可以作用于一个结点，称为Local变量</p>\n<p>Global变量：变量名不可以相同，否则后面设置的会覆盖掉前面设置的</p>\n<p>Local变量：变量名可以相同，因为作用域互不影响</p>\n<h2 id=\"Global流程变量的使用\"><a href=\"#Global流程变量的使用\" class=\"headerlink\" title=\"Global流程变量的使用\"></a>Global流程变量的使用</h2><p>流程变量直接点击连接然后在Condition中设置条件即可。图中是对象的形式设置的。如果不是对象，直接<code>num&lt;=3</code>设置即可</p>\n<p><img src=\"/2020/01/02/2020-01-02-acticiti-任务分配和流程变量/processvariable.jpg\" alt=\"processvariable\"></p>\n<p>实体类的创建</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 请假实体类</span></span><br><span class=\"line\"><span class=\"comment\"> * 注意：如果是pojo类型存储到流程变量中，一定要实现Serializable</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test0</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String testName;  <span class=\"comment\">//申请人名称</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date beginDate;   <span class=\"comment\">//开始日期</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Date enddate;     <span class=\"comment\">//结束日期</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Float num;        <span class=\"comment\">//请假天数</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String reason;    <span class=\"comment\">//请假事由</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String type;      <span class=\"comment\">//请假类型</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"启动流程携带流程变量\"><a href=\"#启动流程携带流程变量\" class=\"headerlink\" title=\"启动流程携带流程变量\"></a>启动流程携带流程变量</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程启动时携带变量信息</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到运行实例</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"><span class=\"comment\">//2.这次根据key来启动   得到key，获取方法前面结束的有</span></span><br><span class=\"line\">String key=<span class=\"string\">\"myProcess_1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//3.设置流程实例变量</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Map&lt;String,Object&gt; variables=<span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">ProcessInstance processInstance = runtimeService.startProcessInstanceByKey(key, variables);</span><br><span class=\"line\"><span class=\"comment\">//打印看一下结果</span></span><br><span class=\"line\">System.out.println(processInstance.getName());</span><br><span class=\"line\">System.out.println(processInstance.getProcessDefinitionId());</span><br></pre></td></tr></table></figure>\n<h4 id=\"任务办理后携带流程变量\"><a href=\"#任务办理后携带流程变量\" class=\"headerlink\" title=\"任务办理后携带流程变量\"></a>任务办理后携带流程变量</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">任务办理时携带变量信息</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到任务实例</span></span><br><span class=\"line\">TaskService taskService = processEngine.getTaskService();</span><br><span class=\"line\"><span class=\"comment\">//2.得到key，获取方法前面介绍的有</span></span><br><span class=\"line\">String key=<span class=\"string\">\"myProcess_1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//3.查询当前任务实例是否有任务</span></span><br><span class=\"line\">Task task = taskService.createTaskQuery().processDefinitionKey(key)</span><br><span class=\"line\">    .taskAssignee(<span class=\"string\">\"wangwu\"</span>).singleResult();</span><br><span class=\"line\"><span class=\"comment\">//4.设置流程实例变量</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">Map&lt;String,Object&gt; variables=<span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"><span class=\"keyword\">if</span> (task!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    taskService.complete(task.getId(),variables);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"任务执行完成\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"通过当前流程设置流程变量\"><a href=\"#通过当前流程设置流程变量\" class=\"headerlink\" title=\"通过当前流程设置流程变量\"></a>通过当前流程设置流程变量</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">通过当前流程设置流程变量</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到运行实例</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.设置流程实例变量的值</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数是流程实例id，2501是流程实例id</span></span><br><span class=\"line\"><span class=\"comment\">//第二个参数是bpmn文件里设置的流程变量的名称$&#123;test0.num&#125;，因为是对象，所在这里写对象的名称</span></span><br><span class=\"line\"><span class=\"comment\">//第三个值是流程变量的值，就是上面创建对象，赋值后的test0</span></span><br><span class=\"line\"><span class=\"comment\">//这种一次只能设置一个值</span></span><br><span class=\"line\">runtimeService.setVariable(<span class=\"string\">\"2501\"</span>,<span class=\"string\">\"test0\"</span>,test0);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//这种可以一次设置多个值。variables是个map集合</span></span><br><span class=\"line\"><span class=\"comment\">//runtimeService.setVariable(\"2501\",variables);</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"通过当前任务设置流程变量\"><a href=\"#通过当前任务设置流程变量\" class=\"headerlink\" title=\"通过当前任务设置流程变量\"></a>通过当前任务设置流程变量</h4><p>注意：任务taskId必须是当前待办任务id。act_ru_task表中存在，如果任务已结束，会报错。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">通过当前任务设置流程变量信息</span></span><br><span class=\"line\"><span class=\"comment\">Test0对象存到了act_ru_variable表中</span></span><br><span class=\"line\"><span class=\"comment\">流程变量存到了act_ge_bytearray</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.得到运行实例</span></span><br><span class=\"line\">TaskService taskService = processEngine.getTaskService();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2.设置流程实例变量的值</span></span><br><span class=\"line\">Test0 test0=<span class=\"keyword\">new</span> Test0();</span><br><span class=\"line\">test0.setNum(<span class=\"number\">1F</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数是任务taskId</span></span><br><span class=\"line\"><span class=\"comment\">//第二个参数是bpmn文件里设置的流程变量的名称$&#123;test0.num&#125;，因为是对象，所在这里写对象的名称</span></span><br><span class=\"line\"><span class=\"comment\">//第三个值是流程变量的值，就是上面创建对象，赋值后的test0</span></span><br><span class=\"line\"><span class=\"comment\">//这种一次只能设置一个值</span></span><br><span class=\"line\">taskService.setVariable(<span class=\"string\">\"1404\"</span>,<span class=\"string\">\"test0\"</span>,test0);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//这种可以一次设置多个值。variables是个map集合</span></span><br><span class=\"line\"><span class=\"comment\">//taskService.setVariable(\"1404\",variables);</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Local流程变量的使用\"><a href=\"#Local流程变量的使用\" class=\"headerlink\" title=\"Local流程变量的使用\"></a>Local流程变量的使用</h2><p>代码和Global的使用方式一样，唯一不同的是setVariableLocal</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">taskService.setVariableLocal(<span class=\"string\">\"1404\"</span>,<span class=\"string\">\"test0\"</span>,test0);</span><br></pre></td></tr></table></figure>"},{"title":"activiti_组和网关","date":"2020-01-02T16:05:09.000Z","_content":"\n<center><font size=4 color=\"red\">activiti_组和网关</font></center>\n\n<!--more-->\n\n## 组任务\n\n#### 设置任务执行的候选人\n\n![candidate](candidate.jpg)\n\n#### 组任务办理流程\n\n* 第一步：查询组任务\n\n  * 指定候选人，查询该候选人当前的待办任务\n  * 候选人不能办理任务（拾取后才能办理）\n\n* 第二步：拾取（claim）任务\n\n  * 该组任务的所有候选人都能拾取\n  * 将候选人的组任务，变成个人任务。原来候选人就变成了该任务的负责人\n\n  > 如果拾取任务后不想办理该任务，需要将已经拾取的个人任务归还到组里面，将个人任务变成了组任务\n\n* 第三步：查询个人任务\n\n  * 查询方式同个人任务部分，根据assignee查询用户负责的个人任务\n\n* 第四步：办理个人任务\n\n#### 组任务的拾取、归还、交接\n\n```java\n/**\n*act_ru_task\n*act_ru_identitylink\n*act_hi_identitylink\n*/\n//得到TaskService对象\nTaskService taskService=processEngine.getTaskService();\n\n//设置一些参数，流程定义的key，候选用户\nString key=\"myProcess_1\";\n//候选人\nString candidate_users=\"zhangsan\";\n\n//执行查询  根据流程定义和候选用户查询\nTask task=taskService.createTaskQuery()\n    .processDefinitionKey(key)\n    .taskCandidateUser(candidate_users)\n    .singleResult();\n\n//输出查询结果,这个是按照list查询得到的\n//        for (Task task:list){\n//            System.out.println(task.getProcessDefinitionId());\n//            System.out.println(task.getId());\n//            System.out.println(task.getName());\n//            //task.getAssignee()为null，说明zhangsan目前只是任务的候选人，还不是任务的执行人\n//            System.out.println(task.getAssignee());\n//        }\n\n//让zhangsan来拾取任务\nif(task!=null){\n    //第一个参数是任务id，第二个参数是具体的候选用户名\n    taskService.claim(task.getId(),candidate_users);\n    System.out.println(\"任务拾取完毕\");\n}\n\n//任务拾取完毕后，候选人就成为了任务的执行人，执行任务...\n\n//如果候选人不想执行任务了，可以归还任务\n//先检验userId是否是taskId的负责人，如果是负责人才可以归还任务\nString taskId=task.getId();\nString userId=\"zhangsan\";\n\nTask task1=taskService.createTaskQuery()\n    .taskId(taskId)\n    .taskAssignee(userId)\n    .singleResult();\n\n//归还或者交接任务\nif (task1!=null){\n    //第二个参数为null是归还任务\n    taskService.setAssignee(taskId,null);\n    //第二个参数指定具体的人为交接任务给别人\n    taskService.setAssignee(taskId,\"lisi\");\n}\n}\n```\n\n## 网关\n\n #### 排他网关\n\n![exclusive](exclusive.png)\n\n如果一个是num>3,流程结点id=_5。一个是num>=1,流程结点id=_7。这时如果传的流程变量是5。就会走id=_5的结点，走结点数字小的那个。\n\n注意:如果条件都不满足，排他网关会报错。例如前面的例子传的流程变量是0。\n\n排他网关的目的:当多个条件都达到满足的条件时，会一定选择一个来走，按照id小的来选择\n\n\n\n#### 并行网关\n\n![parallel](parallel.png)\n\n作用:使用了并行网关后，接下来的分支都要执行。当所有的分支执行结束后，使用并行网关合并到一起，完全合并结束后，才会执行后面的流程\n\n注意:并行网关会忽视设置的条件\n\n\n\n#### 包含网关\n\n![](inclusive.png)\n\n作用:具有排他网关的设置条件功能和并行网关的同时走多个分支的功能。包含网关和并行网关的区别在于，并行网关会忽视设置的条件，但包含网关不会，并行网关后面的分支都要走，包含网关只有满足条件的所有分支\n\n注意:包含网关也要有分支和汇聚。如果包含网关中设置的条件都不满足，会报异常\n\n","source":"_posts/2020-01-02-activiti-组和网关.md","raw":"---\ntitle: activiti_组和网关\ndate: 2020-01-02 16:05:09\ncategories:\n- activiti\ntags:\n- 工作流\n- activiti\n- 组任务\n- 网关\n---\n\n<center><font size=4 color=\"red\">activiti_组和网关</font></center>\n\n<!--more-->\n\n## 组任务\n\n#### 设置任务执行的候选人\n\n![candidate](candidate.jpg)\n\n#### 组任务办理流程\n\n* 第一步：查询组任务\n\n  * 指定候选人，查询该候选人当前的待办任务\n  * 候选人不能办理任务（拾取后才能办理）\n\n* 第二步：拾取（claim）任务\n\n  * 该组任务的所有候选人都能拾取\n  * 将候选人的组任务，变成个人任务。原来候选人就变成了该任务的负责人\n\n  > 如果拾取任务后不想办理该任务，需要将已经拾取的个人任务归还到组里面，将个人任务变成了组任务\n\n* 第三步：查询个人任务\n\n  * 查询方式同个人任务部分，根据assignee查询用户负责的个人任务\n\n* 第四步：办理个人任务\n\n#### 组任务的拾取、归还、交接\n\n```java\n/**\n*act_ru_task\n*act_ru_identitylink\n*act_hi_identitylink\n*/\n//得到TaskService对象\nTaskService taskService=processEngine.getTaskService();\n\n//设置一些参数，流程定义的key，候选用户\nString key=\"myProcess_1\";\n//候选人\nString candidate_users=\"zhangsan\";\n\n//执行查询  根据流程定义和候选用户查询\nTask task=taskService.createTaskQuery()\n    .processDefinitionKey(key)\n    .taskCandidateUser(candidate_users)\n    .singleResult();\n\n//输出查询结果,这个是按照list查询得到的\n//        for (Task task:list){\n//            System.out.println(task.getProcessDefinitionId());\n//            System.out.println(task.getId());\n//            System.out.println(task.getName());\n//            //task.getAssignee()为null，说明zhangsan目前只是任务的候选人，还不是任务的执行人\n//            System.out.println(task.getAssignee());\n//        }\n\n//让zhangsan来拾取任务\nif(task!=null){\n    //第一个参数是任务id，第二个参数是具体的候选用户名\n    taskService.claim(task.getId(),candidate_users);\n    System.out.println(\"任务拾取完毕\");\n}\n\n//任务拾取完毕后，候选人就成为了任务的执行人，执行任务...\n\n//如果候选人不想执行任务了，可以归还任务\n//先检验userId是否是taskId的负责人，如果是负责人才可以归还任务\nString taskId=task.getId();\nString userId=\"zhangsan\";\n\nTask task1=taskService.createTaskQuery()\n    .taskId(taskId)\n    .taskAssignee(userId)\n    .singleResult();\n\n//归还或者交接任务\nif (task1!=null){\n    //第二个参数为null是归还任务\n    taskService.setAssignee(taskId,null);\n    //第二个参数指定具体的人为交接任务给别人\n    taskService.setAssignee(taskId,\"lisi\");\n}\n}\n```\n\n## 网关\n\n #### 排他网关\n\n![exclusive](exclusive.png)\n\n如果一个是num>3,流程结点id=_5。一个是num>=1,流程结点id=_7。这时如果传的流程变量是5。就会走id=_5的结点，走结点数字小的那个。\n\n注意:如果条件都不满足，排他网关会报错。例如前面的例子传的流程变量是0。\n\n排他网关的目的:当多个条件都达到满足的条件时，会一定选择一个来走，按照id小的来选择\n\n\n\n#### 并行网关\n\n![parallel](parallel.png)\n\n作用:使用了并行网关后，接下来的分支都要执行。当所有的分支执行结束后，使用并行网关合并到一起，完全合并结束后，才会执行后面的流程\n\n注意:并行网关会忽视设置的条件\n\n\n\n#### 包含网关\n\n![](inclusive.png)\n\n作用:具有排他网关的设置条件功能和并行网关的同时走多个分支的功能。包含网关和并行网关的区别在于，并行网关会忽视设置的条件，但包含网关不会，并行网关后面的分支都要走，包含网关只有满足条件的所有分支\n\n注意:包含网关也要有分支和汇聚。如果包含网关中设置的条件都不满足，会报异常\n\n","slug":"2020-01-02-activiti-组和网关","published":1,"updated":"2020-01-11T02:21:08.645Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6w5003f54tn9c5rnj2y","content":"<center><font size=\"4\" color=\"red\">activiti_组和网关</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"组任务\"><a href=\"#组任务\" class=\"headerlink\" title=\"组任务\"></a>组任务</h2><h4 id=\"设置任务执行的候选人\"><a href=\"#设置任务执行的候选人\" class=\"headerlink\" title=\"设置任务执行的候选人\"></a>设置任务执行的候选人</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/candidate.jpg\" alt=\"candidate\"></p>\n<h4 id=\"组任务办理流程\"><a href=\"#组任务办理流程\" class=\"headerlink\" title=\"组任务办理流程\"></a>组任务办理流程</h4><ul>\n<li><p>第一步：查询组任务</p>\n<ul>\n<li>指定候选人，查询该候选人当前的待办任务</li>\n<li>候选人不能办理任务（拾取后才能办理）</li>\n</ul>\n</li>\n<li><p>第二步：拾取（claim）任务</p>\n<ul>\n<li>该组任务的所有候选人都能拾取</li>\n<li>将候选人的组任务，变成个人任务。原来候选人就变成了该任务的负责人</li>\n</ul>\n<blockquote>\n<p>如果拾取任务后不想办理该任务，需要将已经拾取的个人任务归还到组里面，将个人任务变成了组任务</p>\n</blockquote>\n</li>\n<li><p>第三步：查询个人任务</p>\n<ul>\n<li>查询方式同个人任务部分，根据assignee查询用户负责的个人任务</li>\n</ul>\n</li>\n<li><p>第四步：办理个人任务</p>\n</li>\n</ul>\n<h4 id=\"组任务的拾取、归还、交接\"><a href=\"#组任务的拾取、归还、交接\" class=\"headerlink\" title=\"组任务的拾取、归还、交接\"></a>组任务的拾取、归还、交接</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">*act_ru_task</span></span><br><span class=\"line\"><span class=\"comment\">*act_ru_identitylink</span></span><br><span class=\"line\"><span class=\"comment\">*act_hi_identitylink</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//得到TaskService对象</span></span><br><span class=\"line\">TaskService taskService=processEngine.getTaskService();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置一些参数，流程定义的key，候选用户</span></span><br><span class=\"line\">String key=<span class=\"string\">\"myProcess_1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//候选人</span></span><br><span class=\"line\">String candidate_users=<span class=\"string\">\"zhangsan\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行查询  根据流程定义和候选用户查询</span></span><br><span class=\"line\">Task task=taskService.createTaskQuery()</span><br><span class=\"line\">    .processDefinitionKey(key)</span><br><span class=\"line\">    .taskCandidateUser(candidate_users)</span><br><span class=\"line\">    .singleResult();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出查询结果,这个是按照list查询得到的</span></span><br><span class=\"line\"><span class=\"comment\">//        for (Task task:list)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getProcessDefinitionId());</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getId());</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getName());</span></span><br><span class=\"line\"><span class=\"comment\">//            //task.getAssignee()为null，说明zhangsan目前只是任务的候选人，还不是任务的执行人</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getAssignee());</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//让zhangsan来拾取任务</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(task!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//第一个参数是任务id，第二个参数是具体的候选用户名</span></span><br><span class=\"line\">    taskService.claim(task.getId(),candidate_users);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"任务拾取完毕\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务拾取完毕后，候选人就成为了任务的执行人，执行任务...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果候选人不想执行任务了，可以归还任务</span></span><br><span class=\"line\"><span class=\"comment\">//先检验userId是否是taskId的负责人，如果是负责人才可以归还任务</span></span><br><span class=\"line\">String taskId=task.getId();</span><br><span class=\"line\">String userId=<span class=\"string\">\"zhangsan\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Task task1=taskService.createTaskQuery()</span><br><span class=\"line\">    .taskId(taskId)</span><br><span class=\"line\">    .taskAssignee(userId)</span><br><span class=\"line\">    .singleResult();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//归还或者交接任务</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (task1!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//第二个参数为null是归还任务</span></span><br><span class=\"line\">    taskService.setAssignee(taskId,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    <span class=\"comment\">//第二个参数指定具体的人为交接任务给别人</span></span><br><span class=\"line\">    taskService.setAssignee(taskId,<span class=\"string\">\"lisi\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"网关\"><a href=\"#网关\" class=\"headerlink\" title=\"网关\"></a>网关</h2><h4 id=\"排他网关\"><a href=\"#排他网关\" class=\"headerlink\" title=\"排他网关\"></a>排他网关</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/exclusive.png\" alt=\"exclusive\"></p>\n<p>如果一个是num&gt;3,流程结点id=_5。一个是num&gt;=1,流程结点id=_7。这时如果传的流程变量是5。就会走id=_5的结点，走结点数字小的那个。</p>\n<p>注意:如果条件都不满足，排他网关会报错。例如前面的例子传的流程变量是0。</p>\n<p>排他网关的目的:当多个条件都达到满足的条件时，会一定选择一个来走，按照id小的来选择</p>\n<h4 id=\"并行网关\"><a href=\"#并行网关\" class=\"headerlink\" title=\"并行网关\"></a>并行网关</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/parallel.png\" alt=\"parallel\"></p>\n<p>作用:使用了并行网关后，接下来的分支都要执行。当所有的分支执行结束后，使用并行网关合并到一起，完全合并结束后，才会执行后面的流程</p>\n<p>注意:并行网关会忽视设置的条件</p>\n<h4 id=\"包含网关\"><a href=\"#包含网关\" class=\"headerlink\" title=\"包含网关\"></a>包含网关</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/inclusive.png\" alt></p>\n<p>作用:具有排他网关的设置条件功能和并行网关的同时走多个分支的功能。包含网关和并行网关的区别在于，并行网关会忽视设置的条件，但包含网关不会，并行网关后面的分支都要走，包含网关只有满足条件的所有分支</p>\n<p>注意:包含网关也要有分支和汇聚。如果包含网关中设置的条件都不满足，会报异常</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">activiti_组和网关</font></center>","more":"<h2 id=\"组任务\"><a href=\"#组任务\" class=\"headerlink\" title=\"组任务\"></a>组任务</h2><h4 id=\"设置任务执行的候选人\"><a href=\"#设置任务执行的候选人\" class=\"headerlink\" title=\"设置任务执行的候选人\"></a>设置任务执行的候选人</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/candidate.jpg\" alt=\"candidate\"></p>\n<h4 id=\"组任务办理流程\"><a href=\"#组任务办理流程\" class=\"headerlink\" title=\"组任务办理流程\"></a>组任务办理流程</h4><ul>\n<li><p>第一步：查询组任务</p>\n<ul>\n<li>指定候选人，查询该候选人当前的待办任务</li>\n<li>候选人不能办理任务（拾取后才能办理）</li>\n</ul>\n</li>\n<li><p>第二步：拾取（claim）任务</p>\n<ul>\n<li>该组任务的所有候选人都能拾取</li>\n<li>将候选人的组任务，变成个人任务。原来候选人就变成了该任务的负责人</li>\n</ul>\n<blockquote>\n<p>如果拾取任务后不想办理该任务，需要将已经拾取的个人任务归还到组里面，将个人任务变成了组任务</p>\n</blockquote>\n</li>\n<li><p>第三步：查询个人任务</p>\n<ul>\n<li>查询方式同个人任务部分，根据assignee查询用户负责的个人任务</li>\n</ul>\n</li>\n<li><p>第四步：办理个人任务</p>\n</li>\n</ul>\n<h4 id=\"组任务的拾取、归还、交接\"><a href=\"#组任务的拾取、归还、交接\" class=\"headerlink\" title=\"组任务的拾取、归还、交接\"></a>组任务的拾取、归还、交接</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">*act_ru_task</span></span><br><span class=\"line\"><span class=\"comment\">*act_ru_identitylink</span></span><br><span class=\"line\"><span class=\"comment\">*act_hi_identitylink</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//得到TaskService对象</span></span><br><span class=\"line\">TaskService taskService=processEngine.getTaskService();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置一些参数，流程定义的key，候选用户</span></span><br><span class=\"line\">String key=<span class=\"string\">\"myProcess_1\"</span>;</span><br><span class=\"line\"><span class=\"comment\">//候选人</span></span><br><span class=\"line\">String candidate_users=<span class=\"string\">\"zhangsan\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//执行查询  根据流程定义和候选用户查询</span></span><br><span class=\"line\">Task task=taskService.createTaskQuery()</span><br><span class=\"line\">    .processDefinitionKey(key)</span><br><span class=\"line\">    .taskCandidateUser(candidate_users)</span><br><span class=\"line\">    .singleResult();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//输出查询结果,这个是按照list查询得到的</span></span><br><span class=\"line\"><span class=\"comment\">//        for (Task task:list)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getProcessDefinitionId());</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getId());</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getName());</span></span><br><span class=\"line\"><span class=\"comment\">//            //task.getAssignee()为null，说明zhangsan目前只是任务的候选人，还不是任务的执行人</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(task.getAssignee());</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//让zhangsan来拾取任务</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(task!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//第一个参数是任务id，第二个参数是具体的候选用户名</span></span><br><span class=\"line\">    taskService.claim(task.getId(),candidate_users);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"任务拾取完毕\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务拾取完毕后，候选人就成为了任务的执行人，执行任务...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果候选人不想执行任务了，可以归还任务</span></span><br><span class=\"line\"><span class=\"comment\">//先检验userId是否是taskId的负责人，如果是负责人才可以归还任务</span></span><br><span class=\"line\">String taskId=task.getId();</span><br><span class=\"line\">String userId=<span class=\"string\">\"zhangsan\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">Task task1=taskService.createTaskQuery()</span><br><span class=\"line\">    .taskId(taskId)</span><br><span class=\"line\">    .taskAssignee(userId)</span><br><span class=\"line\">    .singleResult();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//归还或者交接任务</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (task1!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//第二个参数为null是归还任务</span></span><br><span class=\"line\">    taskService.setAssignee(taskId,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    <span class=\"comment\">//第二个参数指定具体的人为交接任务给别人</span></span><br><span class=\"line\">    taskService.setAssignee(taskId,<span class=\"string\">\"lisi\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"网关\"><a href=\"#网关\" class=\"headerlink\" title=\"网关\"></a>网关</h2><h4 id=\"排他网关\"><a href=\"#排他网关\" class=\"headerlink\" title=\"排他网关\"></a>排他网关</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/exclusive.png\" alt=\"exclusive\"></p>\n<p>如果一个是num&gt;3,流程结点id=_5。一个是num&gt;=1,流程结点id=_7。这时如果传的流程变量是5。就会走id=_5的结点，走结点数字小的那个。</p>\n<p>注意:如果条件都不满足，排他网关会报错。例如前面的例子传的流程变量是0。</p>\n<p>排他网关的目的:当多个条件都达到满足的条件时，会一定选择一个来走，按照id小的来选择</p>\n<h4 id=\"并行网关\"><a href=\"#并行网关\" class=\"headerlink\" title=\"并行网关\"></a>并行网关</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/parallel.png\" alt=\"parallel\"></p>\n<p>作用:使用了并行网关后，接下来的分支都要执行。当所有的分支执行结束后，使用并行网关合并到一起，完全合并结束后，才会执行后面的流程</p>\n<p>注意:并行网关会忽视设置的条件</p>\n<h4 id=\"包含网关\"><a href=\"#包含网关\" class=\"headerlink\" title=\"包含网关\"></a>包含网关</h4><p><img src=\"/2020/01/03/2020-01-02-activiti-组和网关/inclusive.png\" alt></p>\n<p>作用:具有排他网关的设置条件功能和并行网关的同时走多个分支的功能。包含网关和并行网关的区别在于，并行网关会忽视设置的条件，但包含网关不会，并行网关后面的分支都要走，包含网关只有满足条件的所有分支</p>\n<p>注意:包含网关也要有分支和汇聚。如果包含网关中设置的条件都不满足，会报异常</p>"},{"title":"activiti入门02","date":"2020-01-02T15:53:34.000Z","_content":"\n<center><font size=4 color=\"red\">activiti入门02</font></center>\n\n<!--more-->\n\n## 使用zip格式文件部署\n\n```java\n/*\nzip格式文件的部署\n虽然部署上去的是zip文件，但是在表格中会给自动解压\n*/\n//GenerateActivitiTable这个是自己定义的类   test.zip为把bpmn和png文件压缩成的zip格式文件\nInputStream is = GenerateActivitiTable.class.getClassLoader().getResourceAsStream(\"/process/test.zip\");\n//将InputStream流转化为ZipInputStream流\nZipInputStream zipInputStream=new ZipInputStream(is);\n//部署\nDeployment deploymentZip = repositoryService.createDeployment()\n    .addZipInputStream(zipInputStream)\n    .name(\"请假流程审批\")     //设置名称\n    .deploy();\n//输出部署信息 act_re_deployment表中\nSystem.out.println(deploymentZip.getName());\nSystem.out.println(deploymentZip.getId());\n```\n\n## 流程定义\n\n#### 流程定义的查询和删除\n\n```java\n/*\n流程定义的查询 查询表\nact_re_procdef:(流程定义的信息)，发布的流程都在这里，每一个流程就是每一张图\n*/\n//得到ProcessDefinitionQuery对象，可以认为是一个查询器\nProcessDefinitionQuery processDefinitionQuery=repositoryService.createProcessDefinitionQuery();\n\nList<ProcessDefinition> processDefinitionList = processDefinitionQuery.processDefinitionKey(\"test\")      //指定查询哪一个流程\n.orderByProcessDefinitionVersion()               //指定该流程定义的排序规则。按版本号\n.desc().list();//降序List\n\nfor (ProcessDefinition processDefinition:processDefinitionList){\nSystem.out.println(\"流程定义ID:\"+processDefinition.getId());\nSystem.out.println(\"流程定义名称:\"+processDefinition.getName());\nSystem.out.println(\"流程定义的key:\"+processDefinition.getKey());\nSystem.out.println(\"流程定义的版本号:\"+processDefinition.getVersion());\n\n/*\n流程的删除，根据流程部署id删除.影响的表和部署的表一样\n注意：当正在执行的流程没有完全执行完后，执行删除会失败。例如：流程只走到了部门经理审批，这时候是不能删除流程\n如果还想删除，可以设置级联删除\nact_re_procdef:(流程定义的信息)\nact_ge_bytearray：(流程定义的文件)\nact_re_deployment：(部署信息)\n*/\nSystem.out.println(\"流程部署的ID:\"+processDefinition.getDeploymentId());\nrepositoryService.deleteDeployment(processDefinition.getDeploymentId());\n//设置级联删除，即使流程未走完，也给删除掉\n//repositoryService.deleteDeployment(processDefinition.getDeploymentId(),true);\n```\n\n#### 流程定义资源的读取\n\n需求：从act_ge_bytearray表中读取bpmn文件和png文件\n\n* 方法：\n\n\t* 1. 使用activiti的api\n\t\n\t* 2. 使用原理层面，可以使用jdbc的blob、clob类型数据的读取，并保存\n\t\n\t* 3. IO流转换，最好使用commons-io.jar包轻松处理IO\n\n实现方式\n\n```java\n/*\n获取act_ge_bytearray里的bpmn和png资源\n*/\n//1.获取流程部署ID。通过流程定义的查询可以查出流程部署的ID\nString deployId=processDefinition.getDeploymentId();\n//2.通过repositoryService读取bpmn和png信息(输入流)\n//getResourceAsStream有两个参数：第一个是部署id，第二个是资源名称\n//processDefinition.getDiagramResourceName()是png图片的名称test.png\nInputStream pngIs=repositoryService\n                    .getResourceAsStream(deployId,processDefinition.getDiagramResourceName());\n//processDefinition.getResourceName()是bpmn文件的名称test.bpmn\nInputStream bpmnIs=repositoryService\n                    .getResourceAsStream(deployId,processDefinition.getResourceName());\n//3.构建出OutputStream输出流\nOutputStream pngOs\n                    =new FileOutputStream(\"C:\\\\wanghui\\\\resources\"+processDefinition.getDiagramResourceName());\nOutputStream bpmnOs\n                    =new FileOutputStream(\"C:\\\\wanghui\\\\resources\"+processDefinition.getResourceName());\n//4.使用common-io实现输入流、输出流的转换\nIOUtils.copy(pngIs,pngOs);\nIOUtils.copy(bpmnIs,bpmnOs);\n//5.关流\npngOs.close();\nbpmnOs.close();\npngIs.close();\nbpmnIs.close();\n```\n\n## 历史信息的查询\n\n```java\n//历史管理类\nHistoryService historyService = processEngine.getHistoryService();\n/*\n查询历史记录，从act_hi_actinst表中查\n*/\n//得到查询对象HistoricActivityInstanceQuery\nHistoricActivityInstanceQuery historicActivityInstanceQuery = historyService.createHistoricActivityInstanceQuery();\n//设置要查询的实例：2502是实例的id，查询方法前面已有介绍\nhistoricActivityInstanceQuery.processInstanceId(\"2502\");\nList<HistoricActivityInstance> list = historicActivityInstanceQuery\n.orderByHistoricActivityInstanceStartTime().asc()     //根据时间排序\n.list();\nfor (HistoricActivityInstance instance:list){\nSystem.out.println(\"流程结点Id:\"+instance.getActivityId());\nSystem.out.println(\"流程结点名称:\"+instance.getActivityName());\nSystem.out.println(\"流程定义的Id:\"+instance.getProcessDefinitionId());\nSystem.out.println(\"流程实例的Id:\"+instance.getProcessInstanceId());\n}\n```\n\n## businessKey\n\n为了让activiti和业务相结合，在表act_ru_execution中有个BUSINESSKEY字段，这样可以把业务和流程分开，如果要执行zhangsan的流程，只需要把zhangsan的businessKey入act_ru_execution表\n\n```java\n//流程运行管理类\nRuntimeService runtimeService = processEngine.getRuntimeService();\n//这里的key就是流程定义bpmn文件起的id名称\n//1001是业务系统中的businessKey\n//启动流程时把1001入到businessKey\nProcessInstance test = runtimeService.startProcessInstanceByKey(\"test\",\"1001\");\nSystem.out.println(\"获取存入到表中的businessKey：\"+test.getBusinessKey());\n```\n\n## 挂起和激活\n\n需求：如果公司制度修改，未执行完的流程怎么处理？这时可以让流程挂起或者激活。\n\n#### 流程定义的挂起和激活\n\n如果流程定义挂起，则不能再执行流程实例，而且其下的所有流程实例都是挂起状态\n\n```java\n/*\n流程定义的挂起和激活\n*/\n//查询流程定义的对象\nProcessDefinition processDefin = repositoryService.createProcessDefinitionQuery()\n    .processDefinitionKey(\"test\").singleResult();\n//得到当前流程的实例是否都为暂停状态.ture是暂停\nboolean suspended = processDefin.isSuspended();\nString processDefinitionId = processDefin.getId();\n//判断\nif (suspended){\n    //说明是暂停，可以使用激活操作\n    repositoryService.activateProcessDefinitionById(processDefinitionId,true,null);\n    System.out.println(\"流程定义：\"+processDefinitionId+\"：激活\");\n}else {\n    //挂起\n    repositoryService.suspendProcessDefinitionById(processDefinitionId,true,null);\n    System.out.println(\"流程定义：\"+processDefinitionId+\"：挂起\");\n}\n```\n\n#### 流程实例的挂起和激活\n\n挂起状态再执行流程，会抛出异常\n\n```java\n/*\n流程实例的挂起和激活\n*/\n//查询流程定义的对象\nProcessInstance processInstance = runtimeService.createProcessInstanceQuery()\n    .processInstanceId(\"2501\").singleResult();  //2501是实例id\n//得到当前流程的实例是否都为暂停状态.ture是暂停\nboolean suspended = processInstance.isSuspended();\nString processInstanceId = processInstance.getId();\n//判断\nif (suspended){\n    //说明是暂停，可以使用激活操作\n    runtimeService.activateProcessInstanceById(processInstanceId);\n    System.out.println(\"流程实例：\"+processInstanceId+\"：激活\");\n}else {\n    //挂起\n    runtimeService.suspendProcessInstanceById(processInstanceId);\n    System.out.println(\"流程实例：\"+processInstanceId+\"：挂起\");\n}\n```\n\n","source":"_posts/2020-01-02-activiti入门02.md","raw":"---\ntitle: activiti入门02\ndate: 2020-01-02 15:53:34\ncategories:\n- activiti\ntags:\n- 工作流\n- activiti\n---\n\n<center><font size=4 color=\"red\">activiti入门02</font></center>\n\n<!--more-->\n\n## 使用zip格式文件部署\n\n```java\n/*\nzip格式文件的部署\n虽然部署上去的是zip文件，但是在表格中会给自动解压\n*/\n//GenerateActivitiTable这个是自己定义的类   test.zip为把bpmn和png文件压缩成的zip格式文件\nInputStream is = GenerateActivitiTable.class.getClassLoader().getResourceAsStream(\"/process/test.zip\");\n//将InputStream流转化为ZipInputStream流\nZipInputStream zipInputStream=new ZipInputStream(is);\n//部署\nDeployment deploymentZip = repositoryService.createDeployment()\n    .addZipInputStream(zipInputStream)\n    .name(\"请假流程审批\")     //设置名称\n    .deploy();\n//输出部署信息 act_re_deployment表中\nSystem.out.println(deploymentZip.getName());\nSystem.out.println(deploymentZip.getId());\n```\n\n## 流程定义\n\n#### 流程定义的查询和删除\n\n```java\n/*\n流程定义的查询 查询表\nact_re_procdef:(流程定义的信息)，发布的流程都在这里，每一个流程就是每一张图\n*/\n//得到ProcessDefinitionQuery对象，可以认为是一个查询器\nProcessDefinitionQuery processDefinitionQuery=repositoryService.createProcessDefinitionQuery();\n\nList<ProcessDefinition> processDefinitionList = processDefinitionQuery.processDefinitionKey(\"test\")      //指定查询哪一个流程\n.orderByProcessDefinitionVersion()               //指定该流程定义的排序规则。按版本号\n.desc().list();//降序List\n\nfor (ProcessDefinition processDefinition:processDefinitionList){\nSystem.out.println(\"流程定义ID:\"+processDefinition.getId());\nSystem.out.println(\"流程定义名称:\"+processDefinition.getName());\nSystem.out.println(\"流程定义的key:\"+processDefinition.getKey());\nSystem.out.println(\"流程定义的版本号:\"+processDefinition.getVersion());\n\n/*\n流程的删除，根据流程部署id删除.影响的表和部署的表一样\n注意：当正在执行的流程没有完全执行完后，执行删除会失败。例如：流程只走到了部门经理审批，这时候是不能删除流程\n如果还想删除，可以设置级联删除\nact_re_procdef:(流程定义的信息)\nact_ge_bytearray：(流程定义的文件)\nact_re_deployment：(部署信息)\n*/\nSystem.out.println(\"流程部署的ID:\"+processDefinition.getDeploymentId());\nrepositoryService.deleteDeployment(processDefinition.getDeploymentId());\n//设置级联删除，即使流程未走完，也给删除掉\n//repositoryService.deleteDeployment(processDefinition.getDeploymentId(),true);\n```\n\n#### 流程定义资源的读取\n\n需求：从act_ge_bytearray表中读取bpmn文件和png文件\n\n* 方法：\n\n\t* 1. 使用activiti的api\n\t\n\t* 2. 使用原理层面，可以使用jdbc的blob、clob类型数据的读取，并保存\n\t\n\t* 3. IO流转换，最好使用commons-io.jar包轻松处理IO\n\n实现方式\n\n```java\n/*\n获取act_ge_bytearray里的bpmn和png资源\n*/\n//1.获取流程部署ID。通过流程定义的查询可以查出流程部署的ID\nString deployId=processDefinition.getDeploymentId();\n//2.通过repositoryService读取bpmn和png信息(输入流)\n//getResourceAsStream有两个参数：第一个是部署id，第二个是资源名称\n//processDefinition.getDiagramResourceName()是png图片的名称test.png\nInputStream pngIs=repositoryService\n                    .getResourceAsStream(deployId,processDefinition.getDiagramResourceName());\n//processDefinition.getResourceName()是bpmn文件的名称test.bpmn\nInputStream bpmnIs=repositoryService\n                    .getResourceAsStream(deployId,processDefinition.getResourceName());\n//3.构建出OutputStream输出流\nOutputStream pngOs\n                    =new FileOutputStream(\"C:\\\\wanghui\\\\resources\"+processDefinition.getDiagramResourceName());\nOutputStream bpmnOs\n                    =new FileOutputStream(\"C:\\\\wanghui\\\\resources\"+processDefinition.getResourceName());\n//4.使用common-io实现输入流、输出流的转换\nIOUtils.copy(pngIs,pngOs);\nIOUtils.copy(bpmnIs,bpmnOs);\n//5.关流\npngOs.close();\nbpmnOs.close();\npngIs.close();\nbpmnIs.close();\n```\n\n## 历史信息的查询\n\n```java\n//历史管理类\nHistoryService historyService = processEngine.getHistoryService();\n/*\n查询历史记录，从act_hi_actinst表中查\n*/\n//得到查询对象HistoricActivityInstanceQuery\nHistoricActivityInstanceQuery historicActivityInstanceQuery = historyService.createHistoricActivityInstanceQuery();\n//设置要查询的实例：2502是实例的id，查询方法前面已有介绍\nhistoricActivityInstanceQuery.processInstanceId(\"2502\");\nList<HistoricActivityInstance> list = historicActivityInstanceQuery\n.orderByHistoricActivityInstanceStartTime().asc()     //根据时间排序\n.list();\nfor (HistoricActivityInstance instance:list){\nSystem.out.println(\"流程结点Id:\"+instance.getActivityId());\nSystem.out.println(\"流程结点名称:\"+instance.getActivityName());\nSystem.out.println(\"流程定义的Id:\"+instance.getProcessDefinitionId());\nSystem.out.println(\"流程实例的Id:\"+instance.getProcessInstanceId());\n}\n```\n\n## businessKey\n\n为了让activiti和业务相结合，在表act_ru_execution中有个BUSINESSKEY字段，这样可以把业务和流程分开，如果要执行zhangsan的流程，只需要把zhangsan的businessKey入act_ru_execution表\n\n```java\n//流程运行管理类\nRuntimeService runtimeService = processEngine.getRuntimeService();\n//这里的key就是流程定义bpmn文件起的id名称\n//1001是业务系统中的businessKey\n//启动流程时把1001入到businessKey\nProcessInstance test = runtimeService.startProcessInstanceByKey(\"test\",\"1001\");\nSystem.out.println(\"获取存入到表中的businessKey：\"+test.getBusinessKey());\n```\n\n## 挂起和激活\n\n需求：如果公司制度修改，未执行完的流程怎么处理？这时可以让流程挂起或者激活。\n\n#### 流程定义的挂起和激活\n\n如果流程定义挂起，则不能再执行流程实例，而且其下的所有流程实例都是挂起状态\n\n```java\n/*\n流程定义的挂起和激活\n*/\n//查询流程定义的对象\nProcessDefinition processDefin = repositoryService.createProcessDefinitionQuery()\n    .processDefinitionKey(\"test\").singleResult();\n//得到当前流程的实例是否都为暂停状态.ture是暂停\nboolean suspended = processDefin.isSuspended();\nString processDefinitionId = processDefin.getId();\n//判断\nif (suspended){\n    //说明是暂停，可以使用激活操作\n    repositoryService.activateProcessDefinitionById(processDefinitionId,true,null);\n    System.out.println(\"流程定义：\"+processDefinitionId+\"：激活\");\n}else {\n    //挂起\n    repositoryService.suspendProcessDefinitionById(processDefinitionId,true,null);\n    System.out.println(\"流程定义：\"+processDefinitionId+\"：挂起\");\n}\n```\n\n#### 流程实例的挂起和激活\n\n挂起状态再执行流程，会抛出异常\n\n```java\n/*\n流程实例的挂起和激活\n*/\n//查询流程定义的对象\nProcessInstance processInstance = runtimeService.createProcessInstanceQuery()\n    .processInstanceId(\"2501\").singleResult();  //2501是实例id\n//得到当前流程的实例是否都为暂停状态.ture是暂停\nboolean suspended = processInstance.isSuspended();\nString processInstanceId = processInstance.getId();\n//判断\nif (suspended){\n    //说明是暂停，可以使用激活操作\n    runtimeService.activateProcessInstanceById(processInstanceId);\n    System.out.println(\"流程实例：\"+processInstanceId+\"：激活\");\n}else {\n    //挂起\n    runtimeService.suspendProcessInstanceById(processInstanceId);\n    System.out.println(\"流程实例：\"+processInstanceId+\"：挂起\");\n}\n```\n\n","slug":"2020-01-02-activiti入门02","published":1,"updated":"2020-01-11T02:21:08.655Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6w6003i54tnt289bphs","content":"<center><font size=\"4\" color=\"red\">activiti入门02</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"使用zip格式文件部署\"><a href=\"#使用zip格式文件部署\" class=\"headerlink\" title=\"使用zip格式文件部署\"></a>使用zip格式文件部署</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">zip格式文件的部署</span></span><br><span class=\"line\"><span class=\"comment\">虽然部署上去的是zip文件，但是在表格中会给自动解压</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//GenerateActivitiTable这个是自己定义的类   test.zip为把bpmn和png文件压缩成的zip格式文件</span></span><br><span class=\"line\">InputStream is = GenerateActivitiTable.class.getClassLoader().getResourceAsStream(<span class=\"string\">\"/process/test.zip\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//将InputStream流转化为ZipInputStream流</span></span><br><span class=\"line\">ZipInputStream zipInputStream=<span class=\"keyword\">new</span> ZipInputStream(is);</span><br><span class=\"line\"><span class=\"comment\">//部署</span></span><br><span class=\"line\">Deployment deploymentZip = repositoryService.createDeployment()</span><br><span class=\"line\">    .addZipInputStream(zipInputStream)</span><br><span class=\"line\">    .name(<span class=\"string\">\"请假流程审批\"</span>)     <span class=\"comment\">//设置名称</span></span><br><span class=\"line\">    .deploy();</span><br><span class=\"line\"><span class=\"comment\">//输出部署信息 act_re_deployment表中</span></span><br><span class=\"line\">System.out.println(deploymentZip.getName());</span><br><span class=\"line\">System.out.println(deploymentZip.getId());</span><br></pre></td></tr></table></figure>\n<h2 id=\"流程定义\"><a href=\"#流程定义\" class=\"headerlink\" title=\"流程定义\"></a>流程定义</h2><h4 id=\"流程定义的查询和删除\"><a href=\"#流程定义的查询和删除\" class=\"headerlink\" title=\"流程定义的查询和删除\"></a>流程定义的查询和删除</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程定义的查询 查询表</span></span><br><span class=\"line\"><span class=\"comment\">act_re_procdef:(流程定义的信息)，发布的流程都在这里，每一个流程就是每一张图</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//得到ProcessDefinitionQuery对象，可以认为是一个查询器</span></span><br><span class=\"line\">ProcessDefinitionQuery processDefinitionQuery=repositoryService.createProcessDefinitionQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;ProcessDefinition&gt; processDefinitionList = processDefinitionQuery.processDefinitionKey(<span class=\"string\">\"test\"</span>)      <span class=\"comment\">//指定查询哪一个流程</span></span><br><span class=\"line\">.orderByProcessDefinitionVersion()               <span class=\"comment\">//指定该流程定义的排序规则。按版本号</span></span><br><span class=\"line\">.desc().list();<span class=\"comment\">//降序List</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (ProcessDefinition processDefinition:processDefinitionList)&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义ID:\"</span>+processDefinition.getId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义名称:\"</span>+processDefinition.getName());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义的key:\"</span>+processDefinition.getKey());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义的版本号:\"</span>+processDefinition.getVersion());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程的删除，根据流程部署id删除.影响的表和部署的表一样</span></span><br><span class=\"line\"><span class=\"comment\">注意：当正在执行的流程没有完全执行完后，执行删除会失败。例如：流程只走到了部门经理审批，这时候是不能删除流程</span></span><br><span class=\"line\"><span class=\"comment\">如果还想删除，可以设置级联删除</span></span><br><span class=\"line\"><span class=\"comment\">act_re_procdef:(流程定义的信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_ge_bytearray：(流程定义的文件)</span></span><br><span class=\"line\"><span class=\"comment\">act_re_deployment：(部署信息)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程部署的ID:\"</span>+processDefinition.getDeploymentId());</span><br><span class=\"line\">repositoryService.deleteDeployment(processDefinition.getDeploymentId());</span><br><span class=\"line\"><span class=\"comment\">//设置级联删除，即使流程未走完，也给删除掉</span></span><br><span class=\"line\"><span class=\"comment\">//repositoryService.deleteDeployment(processDefinition.getDeploymentId(),true);</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"流程定义资源的读取\"><a href=\"#流程定义资源的读取\" class=\"headerlink\" title=\"流程定义资源的读取\"></a>流程定义资源的读取</h4><p>需求：从act_ge_bytearray表中读取bpmn文件和png文件</p>\n<ul>\n<li><p>方法：</p>\n<ul>\n<li><ol>\n<li>使用activiti的api</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>使用原理层面，可以使用jdbc的blob、clob类型数据的读取，并保存</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>IO流转换，最好使用commons-io.jar包轻松处理IO</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>实现方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">获取act_ge_bytearray里的bpmn和png资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.获取流程部署ID。通过流程定义的查询可以查出流程部署的ID</span></span><br><span class=\"line\">String deployId=processDefinition.getDeploymentId();</span><br><span class=\"line\"><span class=\"comment\">//2.通过repositoryService读取bpmn和png信息(输入流)</span></span><br><span class=\"line\"><span class=\"comment\">//getResourceAsStream有两个参数：第一个是部署id，第二个是资源名称</span></span><br><span class=\"line\"><span class=\"comment\">//processDefinition.getDiagramResourceName()是png图片的名称test.png</span></span><br><span class=\"line\">InputStream pngIs=repositoryService</span><br><span class=\"line\">                    .getResourceAsStream(deployId,processDefinition.getDiagramResourceName());</span><br><span class=\"line\"><span class=\"comment\">//processDefinition.getResourceName()是bpmn文件的名称test.bpmn</span></span><br><span class=\"line\">InputStream bpmnIs=repositoryService</span><br><span class=\"line\">                    .getResourceAsStream(deployId,processDefinition.getResourceName());</span><br><span class=\"line\"><span class=\"comment\">//3.构建出OutputStream输出流</span></span><br><span class=\"line\">OutputStream pngOs</span><br><span class=\"line\">                    =<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"C:\\\\wanghui\\\\resources\"</span>+processDefinition.getDiagramResourceName());</span><br><span class=\"line\">OutputStream bpmnOs</span><br><span class=\"line\">                    =<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"C:\\\\wanghui\\\\resources\"</span>+processDefinition.getResourceName());</span><br><span class=\"line\"><span class=\"comment\">//4.使用common-io实现输入流、输出流的转换</span></span><br><span class=\"line\">IOUtils.copy(pngIs,pngOs);</span><br><span class=\"line\">IOUtils.copy(bpmnIs,bpmnOs);</span><br><span class=\"line\"><span class=\"comment\">//5.关流</span></span><br><span class=\"line\">pngOs.close();</span><br><span class=\"line\">bpmnOs.close();</span><br><span class=\"line\">pngIs.close();</span><br><span class=\"line\">bpmnIs.close();</span><br></pre></td></tr></table></figure>\n<h2 id=\"历史信息的查询\"><a href=\"#历史信息的查询\" class=\"headerlink\" title=\"历史信息的查询\"></a>历史信息的查询</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//历史管理类</span></span><br><span class=\"line\">HistoryService historyService = processEngine.getHistoryService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">查询历史记录，从act_hi_actinst表中查</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//得到查询对象HistoricActivityInstanceQuery</span></span><br><span class=\"line\">HistoricActivityInstanceQuery historicActivityInstanceQuery = historyService.createHistoricActivityInstanceQuery();</span><br><span class=\"line\"><span class=\"comment\">//设置要查询的实例：2502是实例的id，查询方法前面已有介绍</span></span><br><span class=\"line\">historicActivityInstanceQuery.processInstanceId(<span class=\"string\">\"2502\"</span>);</span><br><span class=\"line\">List&lt;HistoricActivityInstance&gt; list = historicActivityInstanceQuery</span><br><span class=\"line\">.orderByHistoricActivityInstanceStartTime().asc()     <span class=\"comment\">//根据时间排序</span></span><br><span class=\"line\">.list();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (HistoricActivityInstance instance:list)&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程结点Id:\"</span>+instance.getActivityId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程结点名称:\"</span>+instance.getActivityName());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义的Id:\"</span>+instance.getProcessDefinitionId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程实例的Id:\"</span>+instance.getProcessInstanceId());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"businessKey\"><a href=\"#businessKey\" class=\"headerlink\" title=\"businessKey\"></a>businessKey</h2><p>为了让activiti和业务相结合，在表act_ru_execution中有个BUSINESSKEY字段，这样可以把业务和流程分开，如果要执行zhangsan的流程，只需要把zhangsan的businessKey入act_ru_execution表</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//流程运行管理类</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"><span class=\"comment\">//这里的key就是流程定义bpmn文件起的id名称</span></span><br><span class=\"line\"><span class=\"comment\">//1001是业务系统中的businessKey</span></span><br><span class=\"line\"><span class=\"comment\">//启动流程时把1001入到businessKey</span></span><br><span class=\"line\">ProcessInstance test = runtimeService.startProcessInstanceByKey(<span class=\"string\">\"test\"</span>,<span class=\"string\">\"1001\"</span>);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"获取存入到表中的businessKey：\"</span>+test.getBusinessKey());</span><br></pre></td></tr></table></figure>\n<h2 id=\"挂起和激活\"><a href=\"#挂起和激活\" class=\"headerlink\" title=\"挂起和激活\"></a>挂起和激活</h2><p>需求：如果公司制度修改，未执行完的流程怎么处理？这时可以让流程挂起或者激活。</p>\n<h4 id=\"流程定义的挂起和激活\"><a href=\"#流程定义的挂起和激活\" class=\"headerlink\" title=\"流程定义的挂起和激活\"></a>流程定义的挂起和激活</h4><p>如果流程定义挂起，则不能再执行流程实例，而且其下的所有流程实例都是挂起状态</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程定义的挂起和激活</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//查询流程定义的对象</span></span><br><span class=\"line\">ProcessDefinition processDefin = repositoryService.createProcessDefinitionQuery()</span><br><span class=\"line\">    .processDefinitionKey(<span class=\"string\">\"test\"</span>).singleResult();</span><br><span class=\"line\"><span class=\"comment\">//得到当前流程的实例是否都为暂停状态.ture是暂停</span></span><br><span class=\"line\"><span class=\"keyword\">boolean</span> suspended = processDefin.isSuspended();</span><br><span class=\"line\">String processDefinitionId = processDefin.getId();</span><br><span class=\"line\"><span class=\"comment\">//判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (suspended)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//说明是暂停，可以使用激活操作</span></span><br><span class=\"line\">    repositoryService.activateProcessDefinitionById(processDefinitionId,<span class=\"keyword\">true</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程定义：\"</span>+processDefinitionId+<span class=\"string\">\"：激活\"</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//挂起</span></span><br><span class=\"line\">    repositoryService.suspendProcessDefinitionById(processDefinitionId,<span class=\"keyword\">true</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程定义：\"</span>+processDefinitionId+<span class=\"string\">\"：挂起\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"流程实例的挂起和激活\"><a href=\"#流程实例的挂起和激活\" class=\"headerlink\" title=\"流程实例的挂起和激活\"></a>流程实例的挂起和激活</h4><p>挂起状态再执行流程，会抛出异常</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程实例的挂起和激活</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//查询流程定义的对象</span></span><br><span class=\"line\">ProcessInstance processInstance = runtimeService.createProcessInstanceQuery()</span><br><span class=\"line\">    .processInstanceId(<span class=\"string\">\"2501\"</span>).singleResult();  <span class=\"comment\">//2501是实例id</span></span><br><span class=\"line\"><span class=\"comment\">//得到当前流程的实例是否都为暂停状态.ture是暂停</span></span><br><span class=\"line\"><span class=\"keyword\">boolean</span> suspended = processInstance.isSuspended();</span><br><span class=\"line\">String processInstanceId = processInstance.getId();</span><br><span class=\"line\"><span class=\"comment\">//判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (suspended)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//说明是暂停，可以使用激活操作</span></span><br><span class=\"line\">    runtimeService.activateProcessInstanceById(processInstanceId);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程实例：\"</span>+processInstanceId+<span class=\"string\">\"：激活\"</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//挂起</span></span><br><span class=\"line\">    runtimeService.suspendProcessInstanceById(processInstanceId);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程实例：\"</span>+processInstanceId+<span class=\"string\">\"：挂起\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">activiti入门02</font></center>","more":"<h2 id=\"使用zip格式文件部署\"><a href=\"#使用zip格式文件部署\" class=\"headerlink\" title=\"使用zip格式文件部署\"></a>使用zip格式文件部署</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">zip格式文件的部署</span></span><br><span class=\"line\"><span class=\"comment\">虽然部署上去的是zip文件，但是在表格中会给自动解压</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//GenerateActivitiTable这个是自己定义的类   test.zip为把bpmn和png文件压缩成的zip格式文件</span></span><br><span class=\"line\">InputStream is = GenerateActivitiTable.class.getClassLoader().getResourceAsStream(<span class=\"string\">\"/process/test.zip\"</span>);</span><br><span class=\"line\"><span class=\"comment\">//将InputStream流转化为ZipInputStream流</span></span><br><span class=\"line\">ZipInputStream zipInputStream=<span class=\"keyword\">new</span> ZipInputStream(is);</span><br><span class=\"line\"><span class=\"comment\">//部署</span></span><br><span class=\"line\">Deployment deploymentZip = repositoryService.createDeployment()</span><br><span class=\"line\">    .addZipInputStream(zipInputStream)</span><br><span class=\"line\">    .name(<span class=\"string\">\"请假流程审批\"</span>)     <span class=\"comment\">//设置名称</span></span><br><span class=\"line\">    .deploy();</span><br><span class=\"line\"><span class=\"comment\">//输出部署信息 act_re_deployment表中</span></span><br><span class=\"line\">System.out.println(deploymentZip.getName());</span><br><span class=\"line\">System.out.println(deploymentZip.getId());</span><br></pre></td></tr></table></figure>\n<h2 id=\"流程定义\"><a href=\"#流程定义\" class=\"headerlink\" title=\"流程定义\"></a>流程定义</h2><h4 id=\"流程定义的查询和删除\"><a href=\"#流程定义的查询和删除\" class=\"headerlink\" title=\"流程定义的查询和删除\"></a>流程定义的查询和删除</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程定义的查询 查询表</span></span><br><span class=\"line\"><span class=\"comment\">act_re_procdef:(流程定义的信息)，发布的流程都在这里，每一个流程就是每一张图</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//得到ProcessDefinitionQuery对象，可以认为是一个查询器</span></span><br><span class=\"line\">ProcessDefinitionQuery processDefinitionQuery=repositoryService.createProcessDefinitionQuery();</span><br><span class=\"line\"></span><br><span class=\"line\">List&lt;ProcessDefinition&gt; processDefinitionList = processDefinitionQuery.processDefinitionKey(<span class=\"string\">\"test\"</span>)      <span class=\"comment\">//指定查询哪一个流程</span></span><br><span class=\"line\">.orderByProcessDefinitionVersion()               <span class=\"comment\">//指定该流程定义的排序规则。按版本号</span></span><br><span class=\"line\">.desc().list();<span class=\"comment\">//降序List</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (ProcessDefinition processDefinition:processDefinitionList)&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义ID:\"</span>+processDefinition.getId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义名称:\"</span>+processDefinition.getName());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义的key:\"</span>+processDefinition.getKey());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义的版本号:\"</span>+processDefinition.getVersion());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程的删除，根据流程部署id删除.影响的表和部署的表一样</span></span><br><span class=\"line\"><span class=\"comment\">注意：当正在执行的流程没有完全执行完后，执行删除会失败。例如：流程只走到了部门经理审批，这时候是不能删除流程</span></span><br><span class=\"line\"><span class=\"comment\">如果还想删除，可以设置级联删除</span></span><br><span class=\"line\"><span class=\"comment\">act_re_procdef:(流程定义的信息)</span></span><br><span class=\"line\"><span class=\"comment\">act_ge_bytearray：(流程定义的文件)</span></span><br><span class=\"line\"><span class=\"comment\">act_re_deployment：(部署信息)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程部署的ID:\"</span>+processDefinition.getDeploymentId());</span><br><span class=\"line\">repositoryService.deleteDeployment(processDefinition.getDeploymentId());</span><br><span class=\"line\"><span class=\"comment\">//设置级联删除，即使流程未走完，也给删除掉</span></span><br><span class=\"line\"><span class=\"comment\">//repositoryService.deleteDeployment(processDefinition.getDeploymentId(),true);</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"流程定义资源的读取\"><a href=\"#流程定义资源的读取\" class=\"headerlink\" title=\"流程定义资源的读取\"></a>流程定义资源的读取</h4><p>需求：从act_ge_bytearray表中读取bpmn文件和png文件</p>\n<ul>\n<li><p>方法：</p>\n<ul>\n<li><ol>\n<li>使用activiti的api</li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>使用原理层面，可以使用jdbc的blob、clob类型数据的读取，并保存</li>\n</ol>\n</li>\n<li><ol start=\"3\">\n<li>IO流转换，最好使用commons-io.jar包轻松处理IO</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p>实现方式</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">获取act_ge_bytearray里的bpmn和png资源</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//1.获取流程部署ID。通过流程定义的查询可以查出流程部署的ID</span></span><br><span class=\"line\">String deployId=processDefinition.getDeploymentId();</span><br><span class=\"line\"><span class=\"comment\">//2.通过repositoryService读取bpmn和png信息(输入流)</span></span><br><span class=\"line\"><span class=\"comment\">//getResourceAsStream有两个参数：第一个是部署id，第二个是资源名称</span></span><br><span class=\"line\"><span class=\"comment\">//processDefinition.getDiagramResourceName()是png图片的名称test.png</span></span><br><span class=\"line\">InputStream pngIs=repositoryService</span><br><span class=\"line\">                    .getResourceAsStream(deployId,processDefinition.getDiagramResourceName());</span><br><span class=\"line\"><span class=\"comment\">//processDefinition.getResourceName()是bpmn文件的名称test.bpmn</span></span><br><span class=\"line\">InputStream bpmnIs=repositoryService</span><br><span class=\"line\">                    .getResourceAsStream(deployId,processDefinition.getResourceName());</span><br><span class=\"line\"><span class=\"comment\">//3.构建出OutputStream输出流</span></span><br><span class=\"line\">OutputStream pngOs</span><br><span class=\"line\">                    =<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"C:\\\\wanghui\\\\resources\"</span>+processDefinition.getDiagramResourceName());</span><br><span class=\"line\">OutputStream bpmnOs</span><br><span class=\"line\">                    =<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"C:\\\\wanghui\\\\resources\"</span>+processDefinition.getResourceName());</span><br><span class=\"line\"><span class=\"comment\">//4.使用common-io实现输入流、输出流的转换</span></span><br><span class=\"line\">IOUtils.copy(pngIs,pngOs);</span><br><span class=\"line\">IOUtils.copy(bpmnIs,bpmnOs);</span><br><span class=\"line\"><span class=\"comment\">//5.关流</span></span><br><span class=\"line\">pngOs.close();</span><br><span class=\"line\">bpmnOs.close();</span><br><span class=\"line\">pngIs.close();</span><br><span class=\"line\">bpmnIs.close();</span><br></pre></td></tr></table></figure>\n<h2 id=\"历史信息的查询\"><a href=\"#历史信息的查询\" class=\"headerlink\" title=\"历史信息的查询\"></a>历史信息的查询</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//历史管理类</span></span><br><span class=\"line\">HistoryService historyService = processEngine.getHistoryService();</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">查询历史记录，从act_hi_actinst表中查</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//得到查询对象HistoricActivityInstanceQuery</span></span><br><span class=\"line\">HistoricActivityInstanceQuery historicActivityInstanceQuery = historyService.createHistoricActivityInstanceQuery();</span><br><span class=\"line\"><span class=\"comment\">//设置要查询的实例：2502是实例的id，查询方法前面已有介绍</span></span><br><span class=\"line\">historicActivityInstanceQuery.processInstanceId(<span class=\"string\">\"2502\"</span>);</span><br><span class=\"line\">List&lt;HistoricActivityInstance&gt; list = historicActivityInstanceQuery</span><br><span class=\"line\">.orderByHistoricActivityInstanceStartTime().asc()     <span class=\"comment\">//根据时间排序</span></span><br><span class=\"line\">.list();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (HistoricActivityInstance instance:list)&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程结点Id:\"</span>+instance.getActivityId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程结点名称:\"</span>+instance.getActivityName());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程定义的Id:\"</span>+instance.getProcessDefinitionId());</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"流程实例的Id:\"</span>+instance.getProcessInstanceId());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"businessKey\"><a href=\"#businessKey\" class=\"headerlink\" title=\"businessKey\"></a>businessKey</h2><p>为了让activiti和业务相结合，在表act_ru_execution中有个BUSINESSKEY字段，这样可以把业务和流程分开，如果要执行zhangsan的流程，只需要把zhangsan的businessKey入act_ru_execution表</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//流程运行管理类</span></span><br><span class=\"line\">RuntimeService runtimeService = processEngine.getRuntimeService();</span><br><span class=\"line\"><span class=\"comment\">//这里的key就是流程定义bpmn文件起的id名称</span></span><br><span class=\"line\"><span class=\"comment\">//1001是业务系统中的businessKey</span></span><br><span class=\"line\"><span class=\"comment\">//启动流程时把1001入到businessKey</span></span><br><span class=\"line\">ProcessInstance test = runtimeService.startProcessInstanceByKey(<span class=\"string\">\"test\"</span>,<span class=\"string\">\"1001\"</span>);</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"获取存入到表中的businessKey：\"</span>+test.getBusinessKey());</span><br></pre></td></tr></table></figure>\n<h2 id=\"挂起和激活\"><a href=\"#挂起和激活\" class=\"headerlink\" title=\"挂起和激活\"></a>挂起和激活</h2><p>需求：如果公司制度修改，未执行完的流程怎么处理？这时可以让流程挂起或者激活。</p>\n<h4 id=\"流程定义的挂起和激活\"><a href=\"#流程定义的挂起和激活\" class=\"headerlink\" title=\"流程定义的挂起和激活\"></a>流程定义的挂起和激活</h4><p>如果流程定义挂起，则不能再执行流程实例，而且其下的所有流程实例都是挂起状态</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程定义的挂起和激活</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//查询流程定义的对象</span></span><br><span class=\"line\">ProcessDefinition processDefin = repositoryService.createProcessDefinitionQuery()</span><br><span class=\"line\">    .processDefinitionKey(<span class=\"string\">\"test\"</span>).singleResult();</span><br><span class=\"line\"><span class=\"comment\">//得到当前流程的实例是否都为暂停状态.ture是暂停</span></span><br><span class=\"line\"><span class=\"keyword\">boolean</span> suspended = processDefin.isSuspended();</span><br><span class=\"line\">String processDefinitionId = processDefin.getId();</span><br><span class=\"line\"><span class=\"comment\">//判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (suspended)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//说明是暂停，可以使用激活操作</span></span><br><span class=\"line\">    repositoryService.activateProcessDefinitionById(processDefinitionId,<span class=\"keyword\">true</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程定义：\"</span>+processDefinitionId+<span class=\"string\">\"：激活\"</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//挂起</span></span><br><span class=\"line\">    repositoryService.suspendProcessDefinitionById(processDefinitionId,<span class=\"keyword\">true</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程定义：\"</span>+processDefinitionId+<span class=\"string\">\"：挂起\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"流程实例的挂起和激活\"><a href=\"#流程实例的挂起和激活\" class=\"headerlink\" title=\"流程实例的挂起和激活\"></a>流程实例的挂起和激活</h4><p>挂起状态再执行流程，会抛出异常</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">流程实例的挂起和激活</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"comment\">//查询流程定义的对象</span></span><br><span class=\"line\">ProcessInstance processInstance = runtimeService.createProcessInstanceQuery()</span><br><span class=\"line\">    .processInstanceId(<span class=\"string\">\"2501\"</span>).singleResult();  <span class=\"comment\">//2501是实例id</span></span><br><span class=\"line\"><span class=\"comment\">//得到当前流程的实例是否都为暂停状态.ture是暂停</span></span><br><span class=\"line\"><span class=\"keyword\">boolean</span> suspended = processInstance.isSuspended();</span><br><span class=\"line\">String processInstanceId = processInstance.getId();</span><br><span class=\"line\"><span class=\"comment\">//判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (suspended)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//说明是暂停，可以使用激活操作</span></span><br><span class=\"line\">    runtimeService.activateProcessInstanceById(processInstanceId);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程实例：\"</span>+processInstanceId+<span class=\"string\">\"：激活\"</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//挂起</span></span><br><span class=\"line\">    runtimeService.suspendProcessInstanceById(processInstanceId);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"流程实例：\"</span>+processInstanceId+<span class=\"string\">\"：挂起\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"git配置多个ssh-key","date":"2020-01-02T17:37:42.000Z","_content":"\n<center><font size=4 color=\"red\">git配置多个ssh-key</font></center>\n\n<!--more-->\n\n## git配置多个ssh-key\n\n> 我们在工作当中，经常遇到自己有个gitlab账号，然而公司也有个gitlab账号，或者再有个github账号，或者gitee账号，这么多的账号，每次拉取项目都是个很麻烦的问题，因为需要配置多个ssh-key来管理。\n\n#### 生成公司和个人的ssh-key\n\n```shell\n#生成公司的ssh-key\n$ ssh-keygen -t rsa -C 'youremail@yourcompany.com' -f ~/.ssh/gitlab_company_rsa\n#生成个人的ssh-key\n$ ssh-keygen -t rsa -C 'youremail@your.com' -f ~/.ssh/gitlab_myself_rsa\n```\n\n* 生成公司的ssh-key\n\n```shell\n$ ssh-keygen -t rsa -C 'wanghui_isf@si-tech.com.cn' -f ~/.ssh/gitlab_company_rsa\nGenerating public/private rsa key pair.\nCreated directory '/c/Users/wanghui/.ssh'.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.\nYour public key has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.pub.\nThe key fingerprint is:\nSHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn\nThe key's randomart image is:\n+---[RSA 3072]----+\n|    .   o        |\n|     + + . .     |\n|      =   o      |\n|       . o...    |\n|        S.+o .   |\n|         oo o .  |\n|  . .  .o++= B..+|\n|   + o...+BoB.Xo+|\n|    o o.  oE=* o.|\n+----[SHA256]-----+\n```\n\n* 生成个人的ssh-key\n\n```shell\n$ ssh-keygen -t rsa -C 'emcderm2@students.solano.edu' -f ~/.ssh/gitlab_myself_rsa\nGenerating public/private rsa key pair.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.\nYour public key has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub.\nThe key fingerprint is:\nSHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu\nThe key's randomart image is:\n+---[RSA 3072]----+\n|            ....B|\n|         . o.=o.O|\n|        . o B.=X |\n|       . . + ==oo|\n|      . S   +  ++|\n|     . o     .. .|\n|    o o .   E  . |\n| ... +     o+o. .|\n|...++      .o*+. |\n+----[SHA256]-----+\n```\n\n* 查看公司和个人的ssh-key\n\n```shell\n#查看公司的ssh-key\n$ cat /c/Users/wanghui/.ssh/gitlab_company_rsa.pub\n#查看个人的ssh-key\n$ cat  /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub\n```\n\n#### 添加ssh-key到gitlab中\n\n![addsshkey](addsshkey.jpg)\n\n#### 添加私钥\n\n```shell\n$ ssh-agent bash\n$ ssh-add ~/.ssh/gitlab_company_rsa\n$ ssh-add ~/.ssh/gitlab_myself_rsa\n$ ssh-add -l\n```\n> 备注：如果`ssh-add ~/.ssh/gitlab_company_rsa`不行，就改成`ssh-add ~/.ssh/gitlab_company.rsa`\n\n具体操作\n\n```shell\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-agent bash\n\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-add ~/.ssh/gitlab_company_rsa\nIdentity added: /c/Users/wanghui/.ssh/gitlab_company_rsa (wanghui_isf@si-tech.com.cn)\n\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-add ~/.ssh/gitlab_myself_rsa\nIdentity added: /c/Users/wanghui/.ssh/gitlab_myself_rsa (emcderm2@students.solano.edu)\n\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-add -l\n3072 SHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn (RSA)\n3072 SHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu (RSA)\n```\n\n#### 创建config文件\n\n文件所在路径 `~/.ssh`，配置信息\n\n```config\n# gitlab_company\nHost git.si-tech.com.cn\n    HostName git.si-tech.com.cn\n    User git\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/gitlab_company_rsa\n# gitlab_myself\nHost gitlab.com\n    HostName gitlab.com\n    User git\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/gitlab_myself_rsa\n```\n\nconfig配置文件讲解,以公司ssh-key为例\n\n```config\n# gitlab_company\nHost git.si-tech.com.cn\n    HostName git.si-tech.com.cn\n    User git\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/gitlab_company_rsa\n```\n\n例如拉取的项目是：`git@git.si-tech.com.cn:chengwei/woapp-dev.git`\n\n配置文件`User+HostName = git@git.si-tech.com.cn`\n\n其中\n\n* User = git\n* HostName = git@git.si-tech.com.cn\n\n#### 验证\n\n```shell\n#验证公司的是否连接\n$ ssh -T git@git.si-tech.com.cn\n#验证个人的是否连接\n$ ssh -T git@gitlab.com\n```\n\n如果连接，会显示出用户名\n\n","source":"_posts/2020-01-02-git配置多个ssh-key.md","raw":"---\ntitle: git配置多个ssh-key\ndate: 2020-01-02 17:37:42\ncategories:\n- git\ntags:\n- git\n- ssh-key\n---\n\n<center><font size=4 color=\"red\">git配置多个ssh-key</font></center>\n\n<!--more-->\n\n## git配置多个ssh-key\n\n> 我们在工作当中，经常遇到自己有个gitlab账号，然而公司也有个gitlab账号，或者再有个github账号，或者gitee账号，这么多的账号，每次拉取项目都是个很麻烦的问题，因为需要配置多个ssh-key来管理。\n\n#### 生成公司和个人的ssh-key\n\n```shell\n#生成公司的ssh-key\n$ ssh-keygen -t rsa -C 'youremail@yourcompany.com' -f ~/.ssh/gitlab_company_rsa\n#生成个人的ssh-key\n$ ssh-keygen -t rsa -C 'youremail@your.com' -f ~/.ssh/gitlab_myself_rsa\n```\n\n* 生成公司的ssh-key\n\n```shell\n$ ssh-keygen -t rsa -C 'wanghui_isf@si-tech.com.cn' -f ~/.ssh/gitlab_company_rsa\nGenerating public/private rsa key pair.\nCreated directory '/c/Users/wanghui/.ssh'.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.\nYour public key has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.pub.\nThe key fingerprint is:\nSHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn\nThe key's randomart image is:\n+---[RSA 3072]----+\n|    .   o        |\n|     + + . .     |\n|      =   o      |\n|       . o...    |\n|        S.+o .   |\n|         oo o .  |\n|  . .  .o++= B..+|\n|   + o...+BoB.Xo+|\n|    o o.  oE=* o.|\n+----[SHA256]-----+\n```\n\n* 生成个人的ssh-key\n\n```shell\n$ ssh-keygen -t rsa -C 'emcderm2@students.solano.edu' -f ~/.ssh/gitlab_myself_rsa\nGenerating public/private rsa key pair.\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\nYour identification has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.\nYour public key has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub.\nThe key fingerprint is:\nSHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu\nThe key's randomart image is:\n+---[RSA 3072]----+\n|            ....B|\n|         . o.=o.O|\n|        . o B.=X |\n|       . . + ==oo|\n|      . S   +  ++|\n|     . o     .. .|\n|    o o .   E  . |\n| ... +     o+o. .|\n|...++      .o*+. |\n+----[SHA256]-----+\n```\n\n* 查看公司和个人的ssh-key\n\n```shell\n#查看公司的ssh-key\n$ cat /c/Users/wanghui/.ssh/gitlab_company_rsa.pub\n#查看个人的ssh-key\n$ cat  /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub\n```\n\n#### 添加ssh-key到gitlab中\n\n![addsshkey](addsshkey.jpg)\n\n#### 添加私钥\n\n```shell\n$ ssh-agent bash\n$ ssh-add ~/.ssh/gitlab_company_rsa\n$ ssh-add ~/.ssh/gitlab_myself_rsa\n$ ssh-add -l\n```\n> 备注：如果`ssh-add ~/.ssh/gitlab_company_rsa`不行，就改成`ssh-add ~/.ssh/gitlab_company.rsa`\n\n具体操作\n\n```shell\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-agent bash\n\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-add ~/.ssh/gitlab_company_rsa\nIdentity added: /c/Users/wanghui/.ssh/gitlab_company_rsa (wanghui_isf@si-tech.com.cn)\n\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-add ~/.ssh/gitlab_myself_rsa\nIdentity added: /c/Users/wanghui/.ssh/gitlab_myself_rsa (emcderm2@students.solano.edu)\n\nwanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)\n$ ssh-add -l\n3072 SHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn (RSA)\n3072 SHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu (RSA)\n```\n\n#### 创建config文件\n\n文件所在路径 `~/.ssh`，配置信息\n\n```config\n# gitlab_company\nHost git.si-tech.com.cn\n    HostName git.si-tech.com.cn\n    User git\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/gitlab_company_rsa\n# gitlab_myself\nHost gitlab.com\n    HostName gitlab.com\n    User git\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/gitlab_myself_rsa\n```\n\nconfig配置文件讲解,以公司ssh-key为例\n\n```config\n# gitlab_company\nHost git.si-tech.com.cn\n    HostName git.si-tech.com.cn\n    User git\n    PreferredAuthentications publickey\n    IdentityFile ~/.ssh/gitlab_company_rsa\n```\n\n例如拉取的项目是：`git@git.si-tech.com.cn:chengwei/woapp-dev.git`\n\n配置文件`User+HostName = git@git.si-tech.com.cn`\n\n其中\n\n* User = git\n* HostName = git@git.si-tech.com.cn\n\n#### 验证\n\n```shell\n#验证公司的是否连接\n$ ssh -T git@git.si-tech.com.cn\n#验证个人的是否连接\n$ ssh -T git@gitlab.com\n```\n\n如果连接，会显示出用户名\n\n","slug":"2020-01-02-git配置多个ssh-key","published":1,"updated":"2020-01-11T03:17:53.274Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6w8003l54tnkytvd5m7","content":"<center><font size=\"4\" color=\"red\">git配置多个ssh-key</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"git配置多个ssh-key\"><a href=\"#git配置多个ssh-key\" class=\"headerlink\" title=\"git配置多个ssh-key\"></a>git配置多个ssh-key</h2><blockquote>\n<p>我们在工作当中，经常遇到自己有个gitlab账号，然而公司也有个gitlab账号，或者再有个github账号，或者gitee账号，这么多的账号，每次拉取项目都是个很麻烦的问题，因为需要配置多个ssh-key来管理。</p>\n</blockquote>\n<h4 id=\"生成公司和个人的ssh-key\"><a href=\"#生成公司和个人的ssh-key\" class=\"headerlink\" title=\"生成公司和个人的ssh-key\"></a>生成公司和个人的ssh-key</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>生成公司的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'youremail@yourcompany.com' -f ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span>生成个人的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'youremail@your.com' -f ~/.ssh/gitlab_myself_rsa</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成公司的ssh-key</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'wanghui_isf@si-tech.com.cn' -f ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Created directory '/c/Users/wanghui/.ssh'.</span><br><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">Your identification has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.</span><br><span class=\"line\">Your public key has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn</span><br><span class=\"line\">The key's randomart image is:</span><br><span class=\"line\">+---[RSA 3072]----+</span><br><span class=\"line\">|    .   o        |</span><br><span class=\"line\">|     + + . .     |</span><br><span class=\"line\">|      =   o      |</span><br><span class=\"line\">|       . o...    |</span><br><span class=\"line\">|        S.+o .   |</span><br><span class=\"line\">|         oo o .  |</span><br><span class=\"line\">|  . .  .o++= B..+|</span><br><span class=\"line\">|   + o...+BoB.Xo+|</span><br><span class=\"line\">|    o o.  oE=* o.|</span><br><span class=\"line\">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成个人的ssh-key</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'emcderm2@students.solano.edu' -f ~/.ssh/gitlab_myself_rsa</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">Your identification has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.</span><br><span class=\"line\">Your public key has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu</span><br><span class=\"line\">The key's randomart image is:</span><br><span class=\"line\">+---[RSA 3072]----+</span><br><span class=\"line\">|            ....B|</span><br><span class=\"line\">|         . o.=o.O|</span><br><span class=\"line\">|        . o B.=X |</span><br><span class=\"line\">|       . . + ==oo|</span><br><span class=\"line\">|      . S   +  ++|</span><br><span class=\"line\">|     . o     .. .|</span><br><span class=\"line\">|    o o .   E  . |</span><br><span class=\"line\">| ... +     o+o. .|</span><br><span class=\"line\">|...++      .o*+. |</span><br><span class=\"line\">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看公司和个人的ssh-key</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>查看公司的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> cat /c/Users/wanghui/.ssh/gitlab_company_rsa.pub</span><br><span class=\"line\"><span class=\"meta\">#</span>查看个人的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> cat  /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加ssh-key到gitlab中\"><a href=\"#添加ssh-key到gitlab中\" class=\"headerlink\" title=\"添加ssh-key到gitlab中\"></a>添加ssh-key到gitlab中</h4><p><img src=\"/2020/01/03/2020-01-02-git配置多个ssh-key/addsshkey.jpg\" alt=\"addsshkey\"></p>\n<h4 id=\"添加私钥\"><a href=\"#添加私钥\" class=\"headerlink\" title=\"添加私钥\"></a>添加私钥</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ssh-agent bash</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_myself_rsa</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add -l</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>备注：如果<code>ssh-add ~/.ssh/gitlab_company_rsa</code>不行，就改成<code>ssh-add ~/.ssh/gitlab_company.rsa</code></p>\n</blockquote>\n<p>具体操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-agent bash</span><br><span class=\"line\"></span><br><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\">Identity added: /c/Users/wanghui/.ssh/gitlab_company_rsa (wanghui_isf@si-tech.com.cn)</span><br><span class=\"line\"></span><br><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_myself_rsa</span><br><span class=\"line\">Identity added: /c/Users/wanghui/.ssh/gitlab_myself_rsa (emcderm2@students.solano.edu)</span><br><span class=\"line\"></span><br><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add -l</span><br><span class=\"line\">3072 SHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn (RSA)</span><br><span class=\"line\">3072 SHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu (RSA)</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建config文件\"><a href=\"#创建config文件\" class=\"headerlink\" title=\"创建config文件\"></a>创建config文件</h4><p>文件所在路径 <code>~/.ssh</code>，配置信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># gitlab_company</span><br><span class=\"line\">Host git.si-tech.com.cn</span><br><span class=\"line\">    HostName git.si-tech.com.cn</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\"># gitlab_myself</span><br><span class=\"line\">Host gitlab.com</span><br><span class=\"line\">    HostName gitlab.com</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/gitlab_myself_rsa</span><br></pre></td></tr></table></figure>\n<p>config配置文件讲解,以公司ssh-key为例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># gitlab_company</span><br><span class=\"line\">Host git.si-tech.com.cn</span><br><span class=\"line\">    HostName git.si-tech.com.cn</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/gitlab_company_rsa</span><br></pre></td></tr></table></figure>\n<p>例如拉取的项目是：<a href=\"mailto:`git@git.si-tech.com.cn\" target=\"_blank\" rel=\"noopener\">`git@git.si-tech.com.cn</a>:chengwei/woapp-dev.git`</p>\n<p>配置文件<code>User+HostName = git@git.si-tech.com.cn</code></p>\n<p>其中</p>\n<ul>\n<li>User = git</li>\n<li>HostName = <a href=\"mailto:git@git.si-tech.com.cn\" target=\"_blank\" rel=\"noopener\">git@git.si-tech.com.cn</a></li>\n</ul>\n<h4 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>验证公司的是否连接</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh -T git@git.si-tech.com.cn</span><br><span class=\"line\"><span class=\"meta\">#</span>验证个人的是否连接</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh -T git@gitlab.com</span><br></pre></td></tr></table></figure>\n<p>如果连接，会显示出用户名</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">git配置多个ssh-key</font></center>","more":"<h2 id=\"git配置多个ssh-key\"><a href=\"#git配置多个ssh-key\" class=\"headerlink\" title=\"git配置多个ssh-key\"></a>git配置多个ssh-key</h2><blockquote>\n<p>我们在工作当中，经常遇到自己有个gitlab账号，然而公司也有个gitlab账号，或者再有个github账号，或者gitee账号，这么多的账号，每次拉取项目都是个很麻烦的问题，因为需要配置多个ssh-key来管理。</p>\n</blockquote>\n<h4 id=\"生成公司和个人的ssh-key\"><a href=\"#生成公司和个人的ssh-key\" class=\"headerlink\" title=\"生成公司和个人的ssh-key\"></a>生成公司和个人的ssh-key</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>生成公司的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'youremail@yourcompany.com' -f ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\"><span class=\"meta\">#</span>生成个人的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'youremail@your.com' -f ~/.ssh/gitlab_myself_rsa</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成公司的ssh-key</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'wanghui_isf@si-tech.com.cn' -f ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Created directory '/c/Users/wanghui/.ssh'.</span><br><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">Your identification has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.</span><br><span class=\"line\">Your public key has been saved in /c/Users/wanghui/.ssh/gitlab_company_rsa.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn</span><br><span class=\"line\">The key's randomart image is:</span><br><span class=\"line\">+---[RSA 3072]----+</span><br><span class=\"line\">|    .   o        |</span><br><span class=\"line\">|     + + . .     |</span><br><span class=\"line\">|      =   o      |</span><br><span class=\"line\">|       . o...    |</span><br><span class=\"line\">|        S.+o .   |</span><br><span class=\"line\">|         oo o .  |</span><br><span class=\"line\">|  . .  .o++= B..+|</span><br><span class=\"line\">|   + o...+BoB.Xo+|</span><br><span class=\"line\">|    o o.  oE=* o.|</span><br><span class=\"line\">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>\n<ul>\n<li>生成个人的ssh-key</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ssh-keygen -t rsa -C 'emcderm2@students.solano.edu' -f ~/.ssh/gitlab_myself_rsa</span><br><span class=\"line\">Generating public/private rsa key pair.</span><br><span class=\"line\">Enter passphrase (empty for no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">Your identification has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.</span><br><span class=\"line\">Your public key has been saved in /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub.</span><br><span class=\"line\">The key fingerprint is:</span><br><span class=\"line\">SHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu</span><br><span class=\"line\">The key's randomart image is:</span><br><span class=\"line\">+---[RSA 3072]----+</span><br><span class=\"line\">|            ....B|</span><br><span class=\"line\">|         . o.=o.O|</span><br><span class=\"line\">|        . o B.=X |</span><br><span class=\"line\">|       . . + ==oo|</span><br><span class=\"line\">|      . S   +  ++|</span><br><span class=\"line\">|     . o     .. .|</span><br><span class=\"line\">|    o o .   E  . |</span><br><span class=\"line\">| ... +     o+o. .|</span><br><span class=\"line\">|...++      .o*+. |</span><br><span class=\"line\">+----[SHA256]-----+</span><br></pre></td></tr></table></figure>\n<ul>\n<li>查看公司和个人的ssh-key</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>查看公司的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> cat /c/Users/wanghui/.ssh/gitlab_company_rsa.pub</span><br><span class=\"line\"><span class=\"meta\">#</span>查看个人的ssh-key</span><br><span class=\"line\"><span class=\"meta\">$</span> cat  /c/Users/wanghui/.ssh/gitlab_myself_rsa.pub</span><br></pre></td></tr></table></figure>\n<h4 id=\"添加ssh-key到gitlab中\"><a href=\"#添加ssh-key到gitlab中\" class=\"headerlink\" title=\"添加ssh-key到gitlab中\"></a>添加ssh-key到gitlab中</h4><p><img src=\"/2020/01/03/2020-01-02-git配置多个ssh-key/addsshkey.jpg\" alt=\"addsshkey\"></p>\n<h4 id=\"添加私钥\"><a href=\"#添加私钥\" class=\"headerlink\" title=\"添加私钥\"></a>添加私钥</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ssh-agent bash</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_myself_rsa</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add -l</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>备注：如果<code>ssh-add ~/.ssh/gitlab_company_rsa</code>不行，就改成<code>ssh-add ~/.ssh/gitlab_company.rsa</code></p>\n</blockquote>\n<p>具体操作</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-agent bash</span><br><span class=\"line\"></span><br><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\">Identity added: /c/Users/wanghui/.ssh/gitlab_company_rsa (wanghui_isf@si-tech.com.cn)</span><br><span class=\"line\"></span><br><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add ~/.ssh/gitlab_myself_rsa</span><br><span class=\"line\">Identity added: /c/Users/wanghui/.ssh/gitlab_myself_rsa (emcderm2@students.solano.edu)</span><br><span class=\"line\"></span><br><span class=\"line\">wanghui@DESKTOP-H6A9OVE MINGW64 /c/wanghui/persion/blog (master)</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh-add -l</span><br><span class=\"line\">3072 SHA256:wPCl9enJ2v43bFr3ZeMQuAP9o9An8jzSiCI8/XRfnso wanghui_isf@si-tech.com.cn (RSA)</span><br><span class=\"line\">3072 SHA256:jqYu2k9TddzlwpNLzvXXkJBfhldXbaZzsPsiLz7P4JQ emcderm2@students.solano.edu (RSA)</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建config文件\"><a href=\"#创建config文件\" class=\"headerlink\" title=\"创建config文件\"></a>创建config文件</h4><p>文件所在路径 <code>~/.ssh</code>，配置信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># gitlab_company</span><br><span class=\"line\">Host git.si-tech.com.cn</span><br><span class=\"line\">    HostName git.si-tech.com.cn</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/gitlab_company_rsa</span><br><span class=\"line\"># gitlab_myself</span><br><span class=\"line\">Host gitlab.com</span><br><span class=\"line\">    HostName gitlab.com</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/gitlab_myself_rsa</span><br></pre></td></tr></table></figure>\n<p>config配置文件讲解,以公司ssh-key为例</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># gitlab_company</span><br><span class=\"line\">Host git.si-tech.com.cn</span><br><span class=\"line\">    HostName git.si-tech.com.cn</span><br><span class=\"line\">    User git</span><br><span class=\"line\">    PreferredAuthentications publickey</span><br><span class=\"line\">    IdentityFile ~/.ssh/gitlab_company_rsa</span><br></pre></td></tr></table></figure>\n<p>例如拉取的项目是：<a href=\"mailto:`git@git.si-tech.com.cn\" target=\"_blank\" rel=\"noopener\">`git@git.si-tech.com.cn</a>:chengwei/woapp-dev.git`</p>\n<p>配置文件<code>User+HostName = git@git.si-tech.com.cn</code></p>\n<p>其中</p>\n<ul>\n<li>User = git</li>\n<li>HostName = <a href=\"mailto:git@git.si-tech.com.cn\" target=\"_blank\" rel=\"noopener\">git@git.si-tech.com.cn</a></li>\n</ul>\n<h4 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>验证公司的是否连接</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh -T git@git.si-tech.com.cn</span><br><span class=\"line\"><span class=\"meta\">#</span>验证个人的是否连接</span><br><span class=\"line\"><span class=\"meta\">$</span> ssh -T git@gitlab.com</span><br></pre></td></tr></table></figure>\n<p>如果连接，会显示出用户名</p>"},{"title":"Vue中使用json-server","date":"2020-01-12T12:19:17.000Z","_content":"\n<center><font size=4 color=\"red\">Vue中使用json-server</font></center>\n\n<!--more-->\n\n## Vue中使用json-server\n\n#### 安装json-server\n\n全局安装\n\n```powershell\nnpm install -g json-server\n```\n\n局部安装\n\n```powershell\nnpm install --save json-server\n```\n\n####  **提供json数据文件** \n\n 在项目根目录下，新建一个 JSON 文件db.json \n\n```json\n{\n    \"student\": [\n      {\"id\":1, \"name\":\"zhangsan\"},\n      {\"id\":2, \"name\":\"lisi\"},\n      {\"id\":3, \"name\":\"wangwu\"}\n    ]\n}\n```\n\n####  **配置json-server** \n\n 在build\\webpack.dev.conf.js下配置\n\n```js\n/*----------------jsonServer---------*/\n/*引入json-server*/\nconst jsonServer = require('json-server')\n/*搭建一个server*/\nconst apiServer = jsonServer.create()\n/*将db.json关联到server*/\nconst apiRouter = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\napiServer.use(middlewares)\napiServer.use(apiRouter)\n/*监听端口*/\napiServer.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n```\n\n####  **访问数据** \n\n 配置完成后，要npm dev run 重启项目，然后再地址栏输入http://localhost:3000 就可以访问到数据。\n\n####  **设置代理** \n\n 最后做一下浏览器代理设置，因为json-server的访问端口是3000，Vue的访问端口是8000，为了使用json-server时端口也用8000，所以设置一下代理。在 config/index.js中 \n\n```js\n/*代理配置表，在这里可以配置特定的请求代理到对应的API接口*/\n/* 下面的例子将代理请求 /api/student  到 http://localhost:3000/student*/\nproxyTable: {\n  '/api': {\n    changeOrigin: true,// 如果接口跨域，需要进行这个参数配置\n    target: 'http://localhost:3000',// 接口的域名\n    pathRewrite: {\n      '^/api': ''//后面可以使重写的新路径，一般不做更改\n    }\n  }\n}\n```\n\n####  **验证代理是否成功**\n\n 在浏览器输入地址：http://localhost:8080/api/\n\n![](jsonServer.png)\n\n#### Vue中 **使用** \n\n 使用vue-resouce发送Ajax获取数据 \n\n```js\nthis.$http.get('/api/student')//代替http://localhost:3000/student\n  .then((res) => {\n    this.newsList = res.data\n  }, (err) => {\n    console.log(err)\n  })\n```\n","source":"_posts/2020-01-12-Vue中使用json-server.md","raw":"---\ntitle: Vue中使用json-server\ndate: 2020-01-12 12:19:17\ncategories:\n- json-server\ntags:\n- json-server\n- Vue\n---\n\n<center><font size=4 color=\"red\">Vue中使用json-server</font></center>\n\n<!--more-->\n\n## Vue中使用json-server\n\n#### 安装json-server\n\n全局安装\n\n```powershell\nnpm install -g json-server\n```\n\n局部安装\n\n```powershell\nnpm install --save json-server\n```\n\n####  **提供json数据文件** \n\n 在项目根目录下，新建一个 JSON 文件db.json \n\n```json\n{\n    \"student\": [\n      {\"id\":1, \"name\":\"zhangsan\"},\n      {\"id\":2, \"name\":\"lisi\"},\n      {\"id\":3, \"name\":\"wangwu\"}\n    ]\n}\n```\n\n####  **配置json-server** \n\n 在build\\webpack.dev.conf.js下配置\n\n```js\n/*----------------jsonServer---------*/\n/*引入json-server*/\nconst jsonServer = require('json-server')\n/*搭建一个server*/\nconst apiServer = jsonServer.create()\n/*将db.json关联到server*/\nconst apiRouter = jsonServer.router('db.json')\nconst middlewares = jsonServer.defaults()\napiServer.use(middlewares)\napiServer.use(apiRouter)\n/*监听端口*/\napiServer.listen(3000, () => {\n  console.log('JSON Server is running')\n})\n```\n\n####  **访问数据** \n\n 配置完成后，要npm dev run 重启项目，然后再地址栏输入http://localhost:3000 就可以访问到数据。\n\n####  **设置代理** \n\n 最后做一下浏览器代理设置，因为json-server的访问端口是3000，Vue的访问端口是8000，为了使用json-server时端口也用8000，所以设置一下代理。在 config/index.js中 \n\n```js\n/*代理配置表，在这里可以配置特定的请求代理到对应的API接口*/\n/* 下面的例子将代理请求 /api/student  到 http://localhost:3000/student*/\nproxyTable: {\n  '/api': {\n    changeOrigin: true,// 如果接口跨域，需要进行这个参数配置\n    target: 'http://localhost:3000',// 接口的域名\n    pathRewrite: {\n      '^/api': ''//后面可以使重写的新路径，一般不做更改\n    }\n  }\n}\n```\n\n####  **验证代理是否成功**\n\n 在浏览器输入地址：http://localhost:8080/api/\n\n![](jsonServer.png)\n\n#### Vue中 **使用** \n\n 使用vue-resouce发送Ajax获取数据 \n\n```js\nthis.$http.get('/api/student')//代替http://localhost:3000/student\n  .then((res) => {\n    this.newsList = res.data\n  }, (err) => {\n    console.log(err)\n  })\n```\n","slug":"2020-01-12-Vue中使用json-server","published":1,"updated":"2020-01-12T04:25:26.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wa003n54tnqu5kedlx","content":"<center><font size=\"4\" color=\"red\">Vue中使用json-server</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Vue中使用json-server\"><a href=\"#Vue中使用json-server\" class=\"headerlink\" title=\"Vue中使用json-server\"></a>Vue中使用json-server</h2><h4 id=\"安装json-server\"><a href=\"#安装json-server\" class=\"headerlink\" title=\"安装json-server\"></a>安装json-server</h4><p>全局安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g json-server</span><br></pre></td></tr></table></figure>\n<p>局部安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save json-server</span><br></pre></td></tr></table></figure>\n<h4 id=\"提供json数据文件\"><a href=\"#提供json数据文件\" class=\"headerlink\" title=\"提供json数据文件\"></a><strong>提供json数据文件</strong></h4><p> 在项目根目录下，新建一个 JSON 文件db.json </p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"student\"</span>: [</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">1</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"zhangsan\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">2</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"lisi\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">3</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"wangwu\"</span>&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置json-server\"><a href=\"#配置json-server\" class=\"headerlink\" title=\"配置json-server\"></a><strong>配置json-server</strong></h4><p> 在build\\webpack.dev.conf.js下配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*----------------jsonServer---------*/</span></span><br><span class=\"line\"><span class=\"comment\">/*引入json-server*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> jsonServer = <span class=\"built_in\">require</span>(<span class=\"string\">'json-server'</span>)</span><br><span class=\"line\"><span class=\"comment\">/*搭建一个server*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> apiServer = jsonServer.create()</span><br><span class=\"line\"><span class=\"comment\">/*将db.json关联到server*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> apiRouter = jsonServer.router(<span class=\"string\">'db.json'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> middlewares = jsonServer.defaults()</span><br><span class=\"line\">apiServer.use(middlewares)</span><br><span class=\"line\">apiServer.use(apiRouter)</span><br><span class=\"line\"><span class=\"comment\">/*监听端口*/</span></span><br><span class=\"line\">apiServer.listen(<span class=\"number\">3000</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'JSON Server is running'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"访问数据\"><a href=\"#访问数据\" class=\"headerlink\" title=\"访问数据\"></a><strong>访问数据</strong></h4><p> 配置完成后，要npm dev run 重启项目，然后再地址栏输入<a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noopener\">http://localhost:3000</a> 就可以访问到数据。</p>\n<h4 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a><strong>设置代理</strong></h4><p> 最后做一下浏览器代理设置，因为json-server的访问端口是3000，Vue的访问端口是8000，为了使用json-server时端口也用8000，所以设置一下代理。在 config/index.js中 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*代理配置表，在这里可以配置特定的请求代理到对应的API接口*/</span></span><br><span class=\"line\"><span class=\"comment\">/* 下面的例子将代理请求 /api/student  到 http://localhost:3000/student*/</span></span><br><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\">  <span class=\"string\">'/api'</span>: &#123;</span><br><span class=\"line\">    changeOrigin: <span class=\"literal\">true</span>,<span class=\"comment\">// 如果接口跨域，需要进行这个参数配置</span></span><br><span class=\"line\">    target: <span class=\"string\">'http://localhost:3000'</span>,<span class=\"comment\">// 接口的域名</span></span><br><span class=\"line\">    pathRewrite: &#123;</span><br><span class=\"line\">      <span class=\"string\">'^/api'</span>: <span class=\"string\">''</span><span class=\"comment\">//后面可以使重写的新路径，一般不做更改</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"验证代理是否成功\"><a href=\"#验证代理是否成功\" class=\"headerlink\" title=\"验证代理是否成功\"></a><strong>验证代理是否成功</strong></h4><p> 在浏览器输入地址：<a href=\"http://localhost:8080/api/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/api/</a></p>\n<p><img src=\"/2020/01/12/2020-01-12-Vue中使用json-server/jsonServer.png\" alt></p>\n<h4 id=\"Vue中-使用\"><a href=\"#Vue中-使用\" class=\"headerlink\" title=\"Vue中 使用\"></a>Vue中 <strong>使用</strong></h4><p> 使用vue-resouce发送Ajax获取数据 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/api/student'</span>)<span class=\"comment\">//代替http://localhost:3000/student</span></span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.newsList = res.data</span><br><span class=\"line\">  &#125;, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">Vue中使用json-server</font></center>","more":"<h2 id=\"Vue中使用json-server\"><a href=\"#Vue中使用json-server\" class=\"headerlink\" title=\"Vue中使用json-server\"></a>Vue中使用json-server</h2><h4 id=\"安装json-server\"><a href=\"#安装json-server\" class=\"headerlink\" title=\"安装json-server\"></a>安装json-server</h4><p>全局安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g json-server</span><br></pre></td></tr></table></figure>\n<p>局部安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save json-server</span><br></pre></td></tr></table></figure>\n<h4 id=\"提供json数据文件\"><a href=\"#提供json数据文件\" class=\"headerlink\" title=\"提供json数据文件\"></a><strong>提供json数据文件</strong></h4><p> 在项目根目录下，新建一个 JSON 文件db.json </p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"student\"</span>: [</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">1</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"zhangsan\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">2</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"lisi\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">3</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"wangwu\"</span>&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置json-server\"><a href=\"#配置json-server\" class=\"headerlink\" title=\"配置json-server\"></a><strong>配置json-server</strong></h4><p> 在build\\webpack.dev.conf.js下配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*----------------jsonServer---------*/</span></span><br><span class=\"line\"><span class=\"comment\">/*引入json-server*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> jsonServer = <span class=\"built_in\">require</span>(<span class=\"string\">'json-server'</span>)</span><br><span class=\"line\"><span class=\"comment\">/*搭建一个server*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> apiServer = jsonServer.create()</span><br><span class=\"line\"><span class=\"comment\">/*将db.json关联到server*/</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> apiRouter = jsonServer.router(<span class=\"string\">'db.json'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> middlewares = jsonServer.defaults()</span><br><span class=\"line\">apiServer.use(middlewares)</span><br><span class=\"line\">apiServer.use(apiRouter)</span><br><span class=\"line\"><span class=\"comment\">/*监听端口*/</span></span><br><span class=\"line\">apiServer.listen(<span class=\"number\">3000</span>, () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'JSON Server is running'</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"访问数据\"><a href=\"#访问数据\" class=\"headerlink\" title=\"访问数据\"></a><strong>访问数据</strong></h4><p> 配置完成后，要npm dev run 重启项目，然后再地址栏输入<a href=\"http://localhost:3000\" target=\"_blank\" rel=\"noopener\">http://localhost:3000</a> 就可以访问到数据。</p>\n<h4 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a><strong>设置代理</strong></h4><p> 最后做一下浏览器代理设置，因为json-server的访问端口是3000，Vue的访问端口是8000，为了使用json-server时端口也用8000，所以设置一下代理。在 config/index.js中 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*代理配置表，在这里可以配置特定的请求代理到对应的API接口*/</span></span><br><span class=\"line\"><span class=\"comment\">/* 下面的例子将代理请求 /api/student  到 http://localhost:3000/student*/</span></span><br><span class=\"line\">proxyTable: &#123;</span><br><span class=\"line\">  <span class=\"string\">'/api'</span>: &#123;</span><br><span class=\"line\">    changeOrigin: <span class=\"literal\">true</span>,<span class=\"comment\">// 如果接口跨域，需要进行这个参数配置</span></span><br><span class=\"line\">    target: <span class=\"string\">'http://localhost:3000'</span>,<span class=\"comment\">// 接口的域名</span></span><br><span class=\"line\">    pathRewrite: &#123;</span><br><span class=\"line\">      <span class=\"string\">'^/api'</span>: <span class=\"string\">''</span><span class=\"comment\">//后面可以使重写的新路径，一般不做更改</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"验证代理是否成功\"><a href=\"#验证代理是否成功\" class=\"headerlink\" title=\"验证代理是否成功\"></a><strong>验证代理是否成功</strong></h4><p> 在浏览器输入地址：<a href=\"http://localhost:8080/api/\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/api/</a></p>\n<p><img src=\"/2020/01/12/2020-01-12-Vue中使用json-server/jsonServer.png\" alt></p>\n<h4 id=\"Vue中-使用\"><a href=\"#Vue中-使用\" class=\"headerlink\" title=\"Vue中 使用\"></a>Vue中 <strong>使用</strong></h4><p> 使用vue-resouce发送Ajax获取数据 </p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">this</span>.$http.get(<span class=\"string\">'/api/student'</span>)<span class=\"comment\">//代替http://localhost:3000/student</span></span><br><span class=\"line\">  .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.newsList = res.data</span><br><span class=\"line\">  &#125;, (err) =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>"},{"title":"json-server","date":"2020-01-12T12:17:06.000Z","_content":"\n<center><font size=4 color=\"red\">json-server入门</font></center>\n\n<!--more-->\n\n## json-server\n\n#### http-server\n\n用于模拟http请求，安装\n\n```powershell\n$ npm i http-server -g\n```\n\n查看是否安装完成。其中的`hs`是`http-server`的简写\n\n```powershell\n$ hs -V\nStarting up http-server, serving ./\nAvailable on:\n  http://192.168.31.235:8080\n  http://192.168.120.1:8080\n  http://88.88.88.1:8080\n  http://192.168.25.1:8080\n  http://127.0.0.1:8080\nHit CTRL-C to stop the server\n```\n\n启动http-server。其中的`-o`意思是启动时打开浏览器\n\n```powershell\n$ hs -o\nStarting up http-server, serving ./\nAvailable on:\n  http://192.168.31.235:8080\n  http://192.168.120.1:8080\n  http://88.88.88.1:8080\n  http://192.168.25.1:8080\n  http://127.0.0.1:8080\nHit CTRL-C to stop the server\n```\n\n#### RESTful API\n\n* 面向资源编程\n* 地址即资源\n* 所有的东西都是资源，所有操作都通过对资源的增删改查实现\n* 对资源的增删改查对应URL的操作分别是POST,DELETE,PUT,GET\n* 如果要测试POST,DELETE,PUT，使用postman即可，浏览器只能查询\n\n```\nhttp://localhost:8080/users          -> 所有的用户数据\nhttp://localhost:8080/products       -> 所有的产品数据\nhttp://localhost:8080/users/1/name   -> 编号为1的用户的名称\nhttp://localhost:8080/products/iphone-> 特指iphone这个商品\n```\n\n\n\n#### 第三方模拟数据工具\n\n* mock.js:无法持久化数据。 http://mockjs.com/ \n\n  * mock的使用文档： http://mockjs.com/examples.html \n  * mock拦截请求，返回假数据的方法\n\n  ```js\n  //1.引入mock.js文件\n  //2.使用Mock.mock()\n  //3个参数。'/users'：拦截http://localhost:8080/users的请求；'get'：拦截的请求方式是get方式；{hello:'mock.js'}：返回的假数据 \n  Mock.mock('/users','get',{\n      hello:'mock.js'\n  })\n  ```\n\n* json-server \n\n#### json-server\n\n安装json-server\n\n```powershell\n$ npm install -g json-server\n```\n\n启动json-server。其中的`db.json`是数据文件\n\n```powershell\n$ json-server --watch db.json\n```\n\n#### json-server基本特性\n\n具体的基本特性使用方式参考：https://github.com/typicode/json-server\n\ndb.json测试数据库，访问地址： http://localhost:3000/student \n\n```json\n{\n    \"student\": [\n      {\"id\":1, \"name\":\"zhangsan\"},\n      {\"id\":2, \"name\":\"lisi\"},\n      {\"id\":3, \"name\":\"wangwu\"}\n    ]\n}\n```\n\n* 标准的RESTful API\n\n* 支持过滤，访问地址： http://localhost:3000/student?q=zhangsan\n\n  ```json\n  [\n    {\n      \"id\": 1,\n      \"name\": \"zhangsan\"\n    }\n  ]\n  ```\n\n* 支持分页,访问地址：http://localhost:3000/student?_limit=2&_page=1。意思是访问第一页page，该页显示两条数据\n\n  ```json\n  [\n    {\n      \"id\": 1,\n      \"name\": \"zhangsan\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"lisi\"\n    }\n  ]\n  ```\n\n* 支持排序\n\n* 支持全文检索\n\n* 支持关系\n\n* 支持数据分割\n\n* 支持操作符（大于小于）\n\n* 支持JSONP\n\n* 支持CORS\n","source":"_posts/2020-01-12-json-server.md","raw":"---\ntitle: json-server\ndate: 2020-01-12 12:17:06\ncategories:\n- json-server\ntags:\n- json-server\n---\n\n<center><font size=4 color=\"red\">json-server入门</font></center>\n\n<!--more-->\n\n## json-server\n\n#### http-server\n\n用于模拟http请求，安装\n\n```powershell\n$ npm i http-server -g\n```\n\n查看是否安装完成。其中的`hs`是`http-server`的简写\n\n```powershell\n$ hs -V\nStarting up http-server, serving ./\nAvailable on:\n  http://192.168.31.235:8080\n  http://192.168.120.1:8080\n  http://88.88.88.1:8080\n  http://192.168.25.1:8080\n  http://127.0.0.1:8080\nHit CTRL-C to stop the server\n```\n\n启动http-server。其中的`-o`意思是启动时打开浏览器\n\n```powershell\n$ hs -o\nStarting up http-server, serving ./\nAvailable on:\n  http://192.168.31.235:8080\n  http://192.168.120.1:8080\n  http://88.88.88.1:8080\n  http://192.168.25.1:8080\n  http://127.0.0.1:8080\nHit CTRL-C to stop the server\n```\n\n#### RESTful API\n\n* 面向资源编程\n* 地址即资源\n* 所有的东西都是资源，所有操作都通过对资源的增删改查实现\n* 对资源的增删改查对应URL的操作分别是POST,DELETE,PUT,GET\n* 如果要测试POST,DELETE,PUT，使用postman即可，浏览器只能查询\n\n```\nhttp://localhost:8080/users          -> 所有的用户数据\nhttp://localhost:8080/products       -> 所有的产品数据\nhttp://localhost:8080/users/1/name   -> 编号为1的用户的名称\nhttp://localhost:8080/products/iphone-> 特指iphone这个商品\n```\n\n\n\n#### 第三方模拟数据工具\n\n* mock.js:无法持久化数据。 http://mockjs.com/ \n\n  * mock的使用文档： http://mockjs.com/examples.html \n  * mock拦截请求，返回假数据的方法\n\n  ```js\n  //1.引入mock.js文件\n  //2.使用Mock.mock()\n  //3个参数。'/users'：拦截http://localhost:8080/users的请求；'get'：拦截的请求方式是get方式；{hello:'mock.js'}：返回的假数据 \n  Mock.mock('/users','get',{\n      hello:'mock.js'\n  })\n  ```\n\n* json-server \n\n#### json-server\n\n安装json-server\n\n```powershell\n$ npm install -g json-server\n```\n\n启动json-server。其中的`db.json`是数据文件\n\n```powershell\n$ json-server --watch db.json\n```\n\n#### json-server基本特性\n\n具体的基本特性使用方式参考：https://github.com/typicode/json-server\n\ndb.json测试数据库，访问地址： http://localhost:3000/student \n\n```json\n{\n    \"student\": [\n      {\"id\":1, \"name\":\"zhangsan\"},\n      {\"id\":2, \"name\":\"lisi\"},\n      {\"id\":3, \"name\":\"wangwu\"}\n    ]\n}\n```\n\n* 标准的RESTful API\n\n* 支持过滤，访问地址： http://localhost:3000/student?q=zhangsan\n\n  ```json\n  [\n    {\n      \"id\": 1,\n      \"name\": \"zhangsan\"\n    }\n  ]\n  ```\n\n* 支持分页,访问地址：http://localhost:3000/student?_limit=2&_page=1。意思是访问第一页page，该页显示两条数据\n\n  ```json\n  [\n    {\n      \"id\": 1,\n      \"name\": \"zhangsan\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"lisi\"\n    }\n  ]\n  ```\n\n* 支持排序\n\n* 支持全文检索\n\n* 支持关系\n\n* 支持数据分割\n\n* 支持操作符（大于小于）\n\n* 支持JSONP\n\n* 支持CORS\n","slug":"2020-01-12-json-server","published":1,"updated":"2020-01-12T04:20:40.182Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wb003s54tnkj7ejvl3","content":"<center><font size=\"4\" color=\"red\">json-server入门</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"json-server\"><a href=\"#json-server\" class=\"headerlink\" title=\"json-server\"></a>json-server</h2><h4 id=\"http-server\"><a href=\"#http-server\" class=\"headerlink\" title=\"http-server\"></a>http-server</h4><p>用于模拟http请求，安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm i http-server -g</span><br></pre></td></tr></table></figure>\n<p>查看是否安装完成。其中的<code>hs</code>是<code>http-server</code>的简写</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hs -V</span><br><span class=\"line\">Starting up http-server, serving ./</span><br><span class=\"line\">Available on:</span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">31.235</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">120.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">88.88</span>.<span class=\"number\">88.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">25.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">Hit CTRL-C to stop the server</span><br></pre></td></tr></table></figure>\n<p>启动http-server。其中的<code>-o</code>意思是启动时打开浏览器</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hs -o</span><br><span class=\"line\">Starting up http-server, serving ./</span><br><span class=\"line\">Available on:</span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">31.235</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">120.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">88.88</span>.<span class=\"number\">88.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">25.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">Hit CTRL-C to stop the server</span><br></pre></td></tr></table></figure>\n<h4 id=\"RESTful-API\"><a href=\"#RESTful-API\" class=\"headerlink\" title=\"RESTful API\"></a>RESTful API</h4><ul>\n<li>面向资源编程</li>\n<li>地址即资源</li>\n<li>所有的东西都是资源，所有操作都通过对资源的增删改查实现</li>\n<li>对资源的增删改查对应URL的操作分别是POST,DELETE,PUT,GET</li>\n<li>如果要测试POST,DELETE,PUT，使用postman即可，浏览器只能查询</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8080/users          -&gt; 所有的用户数据</span><br><span class=\"line\">http://localhost:8080/products       -&gt; 所有的产品数据</span><br><span class=\"line\">http://localhost:8080/users/1/name   -&gt; 编号为1的用户的名称</span><br><span class=\"line\">http://localhost:8080/products/iphone-&gt; 特指iphone这个商品</span><br></pre></td></tr></table></figure>\n<h4 id=\"第三方模拟数据工具\"><a href=\"#第三方模拟数据工具\" class=\"headerlink\" title=\"第三方模拟数据工具\"></a>第三方模拟数据工具</h4><ul>\n<li><p>mock.js:无法持久化数据。 <a href=\"http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">http://mockjs.com/</a> </p>\n<ul>\n<li>mock的使用文档： <a href=\"http://mockjs.com/examples.html\" target=\"_blank\" rel=\"noopener\">http://mockjs.com/examples.html</a> </li>\n<li>mock拦截请求，返回假数据的方法</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.引入mock.js文件</span></span><br><span class=\"line\"><span class=\"comment\">//2.使用Mock.mock()</span></span><br><span class=\"line\"><span class=\"comment\">//3个参数。'/users'：拦截http://localhost:8080/users的请求；'get'：拦截的请求方式是get方式；&#123;hello:'mock.js'&#125;：返回的假数据 </span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">'/users'</span>,<span class=\"string\">'get'</span>,&#123;</span><br><span class=\"line\">    hello:<span class=\"string\">'mock.js'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>json-server </p>\n</li>\n</ul>\n<h4 id=\"json-server-1\"><a href=\"#json-server-1\" class=\"headerlink\" title=\"json-server\"></a>json-server</h4><p>安装json-server</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g json-server</span><br></pre></td></tr></table></figure>\n<p>启动json-server。其中的<code>db.json</code>是数据文件</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ json-server --watch db.json</span><br></pre></td></tr></table></figure>\n<h4 id=\"json-server基本特性\"><a href=\"#json-server基本特性\" class=\"headerlink\" title=\"json-server基本特性\"></a>json-server基本特性</h4><p>具体的基本特性使用方式参考：<a href=\"https://github.com/typicode/json-server\" target=\"_blank\" rel=\"noopener\">https://github.com/typicode/json-server</a></p>\n<p>db.json测试数据库，访问地址： <a href=\"http://localhost:3000/student\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/student</a> </p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"student\"</span>: [</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">1</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"zhangsan\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">2</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"lisi\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">3</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"wangwu\"</span>&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>标准的RESTful API</p>\n</li>\n<li><p>支持过滤，访问地址： <a href=\"http://localhost:3000/student?q=zhangsan\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/student?q=zhangsan</a></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"zhangsan\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持分页,访问地址：<a href=\"http://localhost:3000/student?_limit=2&amp;_page=1。意思是访问第一页page，该页显示两条数据\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/student?_limit=2&amp;_page=1。意思是访问第一页page，该页显示两条数据</a></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"zhangsan\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"lisi\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持排序</p>\n</li>\n<li><p>支持全文检索</p>\n</li>\n<li><p>支持关系</p>\n</li>\n<li><p>支持数据分割</p>\n</li>\n<li><p>支持操作符（大于小于）</p>\n</li>\n<li><p>支持JSONP</p>\n</li>\n<li><p>支持CORS</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">json-server入门</font></center>","more":"<h2 id=\"json-server\"><a href=\"#json-server\" class=\"headerlink\" title=\"json-server\"></a>json-server</h2><h4 id=\"http-server\"><a href=\"#http-server\" class=\"headerlink\" title=\"http-server\"></a>http-server</h4><p>用于模拟http请求，安装</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm i http-server -g</span><br></pre></td></tr></table></figure>\n<p>查看是否安装完成。其中的<code>hs</code>是<code>http-server</code>的简写</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hs -V</span><br><span class=\"line\">Starting up http-server, serving ./</span><br><span class=\"line\">Available on:</span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">31.235</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">120.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">88.88</span>.<span class=\"number\">88.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">25.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">Hit CTRL-C to stop the server</span><br></pre></td></tr></table></figure>\n<p>启动http-server。其中的<code>-o</code>意思是启动时打开浏览器</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hs -o</span><br><span class=\"line\">Starting up http-server, serving ./</span><br><span class=\"line\">Available on:</span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">31.235</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">120.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">88.88</span>.<span class=\"number\">88.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">192.168</span>.<span class=\"number\">25.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">  http://<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span>:<span class=\"number\">8080</span></span><br><span class=\"line\">Hit CTRL-C to stop the server</span><br></pre></td></tr></table></figure>\n<h4 id=\"RESTful-API\"><a href=\"#RESTful-API\" class=\"headerlink\" title=\"RESTful API\"></a>RESTful API</h4><ul>\n<li>面向资源编程</li>\n<li>地址即资源</li>\n<li>所有的东西都是资源，所有操作都通过对资源的增删改查实现</li>\n<li>对资源的增删改查对应URL的操作分别是POST,DELETE,PUT,GET</li>\n<li>如果要测试POST,DELETE,PUT，使用postman即可，浏览器只能查询</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://localhost:8080/users          -&gt; 所有的用户数据</span><br><span class=\"line\">http://localhost:8080/products       -&gt; 所有的产品数据</span><br><span class=\"line\">http://localhost:8080/users/1/name   -&gt; 编号为1的用户的名称</span><br><span class=\"line\">http://localhost:8080/products/iphone-&gt; 特指iphone这个商品</span><br></pre></td></tr></table></figure>\n<h4 id=\"第三方模拟数据工具\"><a href=\"#第三方模拟数据工具\" class=\"headerlink\" title=\"第三方模拟数据工具\"></a>第三方模拟数据工具</h4><ul>\n<li><p>mock.js:无法持久化数据。 <a href=\"http://mockjs.com/\" target=\"_blank\" rel=\"noopener\">http://mockjs.com/</a> </p>\n<ul>\n<li>mock的使用文档： <a href=\"http://mockjs.com/examples.html\" target=\"_blank\" rel=\"noopener\">http://mockjs.com/examples.html</a> </li>\n<li>mock拦截请求，返回假数据的方法</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.引入mock.js文件</span></span><br><span class=\"line\"><span class=\"comment\">//2.使用Mock.mock()</span></span><br><span class=\"line\"><span class=\"comment\">//3个参数。'/users'：拦截http://localhost:8080/users的请求；'get'：拦截的请求方式是get方式；&#123;hello:'mock.js'&#125;：返回的假数据 </span></span><br><span class=\"line\">Mock.mock(<span class=\"string\">'/users'</span>,<span class=\"string\">'get'</span>,&#123;</span><br><span class=\"line\">    hello:<span class=\"string\">'mock.js'</span></span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>json-server </p>\n</li>\n</ul>\n<h4 id=\"json-server-1\"><a href=\"#json-server-1\" class=\"headerlink\" title=\"json-server\"></a>json-server</h4><p>安装json-server</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g json-server</span><br></pre></td></tr></table></figure>\n<p>启动json-server。其中的<code>db.json</code>是数据文件</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ json-server --watch db.json</span><br></pre></td></tr></table></figure>\n<h4 id=\"json-server基本特性\"><a href=\"#json-server基本特性\" class=\"headerlink\" title=\"json-server基本特性\"></a>json-server基本特性</h4><p>具体的基本特性使用方式参考：<a href=\"https://github.com/typicode/json-server\" target=\"_blank\" rel=\"noopener\">https://github.com/typicode/json-server</a></p>\n<p>db.json测试数据库，访问地址： <a href=\"http://localhost:3000/student\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/student</a> </p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"student\"</span>: [</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">1</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"zhangsan\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">2</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"lisi\"</span>&#125;,</span><br><span class=\"line\">      &#123;<span class=\"attr\">\"id\"</span>:<span class=\"number\">3</span>, <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"wangwu\"</span>&#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>标准的RESTful API</p>\n</li>\n<li><p>支持过滤，访问地址： <a href=\"http://localhost:3000/student?q=zhangsan\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/student?q=zhangsan</a></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"zhangsan\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持分页,访问地址：<a href=\"http://localhost:3000/student?_limit=2&amp;_page=1。意思是访问第一页page，该页显示两条数据\" target=\"_blank\" rel=\"noopener\">http://localhost:3000/student?_limit=2&amp;_page=1。意思是访问第一页page，该页显示两条数据</a></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"zhangsan\"</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"attr\">\"id\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"lisi\"</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>支持排序</p>\n</li>\n<li><p>支持全文检索</p>\n</li>\n<li><p>支持关系</p>\n</li>\n<li><p>支持数据分割</p>\n</li>\n<li><p>支持操作符（大于小于）</p>\n</li>\n<li><p>支持JSONP</p>\n</li>\n<li><p>支持CORS</p>\n</li>\n</ul>"},{"title":"01_Nginx的安装和启动","date":"2020-02-02T13:58:54.000Z","_content":"\n<center><font size=4 color=\"red\">01_Nginx的安装和启动</font></center>\n\n<!--more-->\n\n## Nginx的安装和启动\n\n介绍两种安装方式\n\n#### 安装包安装\n\n**安装Ngnix**\n\n`sudo apt-get install nginx`\n\n查看是否安装成功\n\n`nginx -V`\n\nUbuntu安装之后的文件结构大致为：\n\n```\n所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下\n\n主程序文件在/usr/sbin/nginx   //可以使用which nginx查看\n\n全局配置文件/etc/nginx/nginx.conf\n\n日志放在了/var/log/nginx中，日志文件的位置可以在 /etc/nginx/nginx.conf文件中配置\naccess_log /var/log/nginx/access.log; ## 访问日志文件路径名\nerror_log /var/log/nginx/error.log; ## 访问日志文件错误路径名\n\n并已经在/etc/init.d/下创建了启动脚本nginx\n\n默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)\n```\n\n**启动Ngnix**\n\n`sudo /etc/init.d/nginx start`\n\n然后就可以访问了，`http://localhost/` ， 一切正常！\n启动时候若显示端口80被占用：`Starting nginx: [emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use)`，修改文件：`/etc/nginx/sites-available/default`,去掉 listen 前面的 # 号 , # 号在该文件里是注释的意思 , 并且把 listen 后面的 80 端口号改为自己的端口，访问是需要添加端口号。\n\n#### 源代码安装\n\n环境准备\n\n```shell\n#1.安装gcc g++的依赖库\n$ sudo apt-get install build-essential\n$ sudo apt-get install libtool\n#2.安装pcre依赖库\n$ sudo apt-get update\n$ sudo apt-get install libpcre3 libpcre3-dev\n#3.安装zlib依赖库\n$ sudo apt-get install zlib1g-dev\n#4.安装ssl依赖库\n$ sudo apt-get install openssl\n```\n\n安装Nginx [官网地址](http://nginx.org/)\n\n```shell\n# 下载1.8.0版本：\nsudo wget http://nginx.org/download/nginx-1.8.0.tar.gz\n# 解压：\ntar -zxvf nginx-1.8.0.tar.gz\n#进入解压目录：\ncd nginx-1.8.0\n```\n\n编译Nginx\n\n* 1. 创建Makefile文件 `--prefix=/usr/local/nginx`指向的是安装目录\n\n  ```shell\n  ./configure \\\n  --prefix=/usr/local/nginx \\\n  --pid-path=/var/run/nginx/nginx.pid \\\n  --lock-path=/var/lock/nginx.lock  \\\n  --error-log-path=/var/log/nginx/error.log  \\\n  --http-log-path=/var/log/nginx/access.log  \\\n  --with-http_gzip_static_module \\\n  --http-client-body-temp-path=/var/tmp/nginx/client/ \\\n  --http-proxy-temp-path=/var/tmp/nginx/proxy/ \\\n  --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\\n  --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\n  --http-scgi-temp-path=/var/tmp/nginx/scgi \\\n  #下面的配置可以不要\n  --sbin-path=/usr/local/nginx/sbin/nginx \\\n  --conf-path=/usr/local/nginx/conf/nginx.conf \\\n  --user=nginx \\\n  --group=nginx \\\n  --with-http_ssl_module \\\n  --with-http_stub_status_module \\\n  --with-pcre\n  ```\n\n* 2. 编译\n\n  ```shell\n  #1.生成脚本和配置文件\n  $ make\n  #2.安装，安装的路径就是Makefile里的--prefix=/usr/local/nginx\n  $ sudo make install\n  ```\n\n安装目录（/usr/local/nginx）下主要目录介绍\n\n```\nconf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和fastcgi_params两个文件，配置文件一般都有个样板配置文件，是文件名.default结尾，使用的使用将其复制为并将default去掉即可。\n\nhtml目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web文件是默认的错误页面提示页面。\n\nlogs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他路径，比如/var/logs/nginx里面。\n\nsbin：保存nginx二进制启动脚本，可以接受不同的参数以实现不同的功能。\n```\n\n源代码安装的启动\n\n```shell\n# 进入nginx下的sbin目录\n$ cd /usr/local/nginx/sbin \n# 创建--http-client-body-temp-path=/var/tmp/nginx/client/ 执行的目录\n$ mkdir /var/tmp/nginx/client/ -p\n# 启动\n$ sudo ./nginx\n# 停止\n$ sudo ./nginx -s stop\n# 进行一些配置更改后重新加载\n$ sudo ./nginx -s reload\n# 查看进程\n$ ps aux | grep nginx\n```\n\n#### 使用systemctl管理Nginx服务\n\n> 使用安装包安装的可以直接使用systemctl管理Nginx服务，但是使用源代码安装的需要配置\n\n您可以像任何其他systemd单位一样管理Nginx服务。 要停止Nginx服务，请运行：\n\n```shell\n$ sudo systemctl stop nginx\n```\n\n要再次启动，请键入：\n\n```shell\n$ sudo systemctl start nginx\n```\n\n重新启动Nginx服务：\n\n```shell\n$ sudo systemctl restart nginx\n```\n\n在进行一些配置更改后重新加载Nginx服务：\n\n```shell\n$ sudo systemctl reload nginx\n```\n\n如果你想禁用Nginx服务在启动时启动：\n\n```shell\n$ sudo systemctl disable nginx\n```\n\n并重新启用它：\n\n```shell\n$ sudo systemctl enable nginx\n```\n\n> 使用源代码安装的Nginx配置systemctl管理Nginx.service\n\n创建配置文件\n\n```shell\n# 源码安装的nginx在/etc/systemd/system/multi-user.target.wants/目录下是没有nginx.service这个文件的，所以要新建。但是我在systemd下并没有看到system（Ubuntu18.04.3），这个后续再研究\n$ vim /usr/lib/systemd/system/nginx.service\n```\n\n写入内容\n\n```shell\n[Unit]\nDescription=nginx - high performance web server\nDocumentation=http://nginx.org/en/docs/\nAfter=network-online.target remote-fs.target nss-lookup.target\nWants=network-online.target\n\n[Service]\nType=forking\nPIDFile=/var/run/nginx/nginx.pid\nExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s TERM $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n```\n\n设置开机启动\n\n```shell\n$ sudo systemctl enable nginx.service\n```\n\n关闭之前启动的nginx服务\n\n```shell\n$ pkill -9 nginx\n```\n\n重载修改过的所有配置文件\n\n```shell\n$ sudo systemctl daemon-reload\n```\n\n重新启动nginx服务\n\n```shell\n$ sudo systemctl start nginx\n```\n\n#### Ubuntu下卸载nginx\n\n先停止nginx服务\n\n```shell\n$ sudo systemctl stop nginx\n```\n\n删除nginx，–purge包括配置文件\n\n```shell\n$ sudo apt-get --purge remove nginx\n```\n\n自动移除全部不使用的软件包\n\n```shell\n$ sudo apt-get autoremove\n```\n\n列出与nginx相关的软件 并删除显示的软件\n\n```shell\n$ dpkg --get-selections|grep nginx\n\n$ sudo apt-get --purge remove nginx\n$ sudo apt-get --purge remove nginx-common\n$ sudo apt-get --purge remove nginx-core\n```\n\n再次执行\n\n```shell\n$ dpkg --get-selections|grep nginx\n\n$ which nginx  #不再显示nginx\n```","source":"_posts/2020-02-02-01-Nginx的安装和启动.md","raw":"---\ntitle: 01_Nginx的安装和启动\ndate: 2020-02-02 13:58:54\ncategories:\n- Nginx\ntags:\n- Nginx\n---\n\n<center><font size=4 color=\"red\">01_Nginx的安装和启动</font></center>\n\n<!--more-->\n\n## Nginx的安装和启动\n\n介绍两种安装方式\n\n#### 安装包安装\n\n**安装Ngnix**\n\n`sudo apt-get install nginx`\n\n查看是否安装成功\n\n`nginx -V`\n\nUbuntu安装之后的文件结构大致为：\n\n```\n所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下\n\n主程序文件在/usr/sbin/nginx   //可以使用which nginx查看\n\n全局配置文件/etc/nginx/nginx.conf\n\n日志放在了/var/log/nginx中，日志文件的位置可以在 /etc/nginx/nginx.conf文件中配置\naccess_log /var/log/nginx/access.log; ## 访问日志文件路径名\nerror_log /var/log/nginx/error.log; ## 访问日志文件错误路径名\n\n并已经在/etc/init.d/下创建了启动脚本nginx\n\n默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)\n```\n\n**启动Ngnix**\n\n`sudo /etc/init.d/nginx start`\n\n然后就可以访问了，`http://localhost/` ， 一切正常！\n启动时候若显示端口80被占用：`Starting nginx: [emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use)`，修改文件：`/etc/nginx/sites-available/default`,去掉 listen 前面的 # 号 , # 号在该文件里是注释的意思 , 并且把 listen 后面的 80 端口号改为自己的端口，访问是需要添加端口号。\n\n#### 源代码安装\n\n环境准备\n\n```shell\n#1.安装gcc g++的依赖库\n$ sudo apt-get install build-essential\n$ sudo apt-get install libtool\n#2.安装pcre依赖库\n$ sudo apt-get update\n$ sudo apt-get install libpcre3 libpcre3-dev\n#3.安装zlib依赖库\n$ sudo apt-get install zlib1g-dev\n#4.安装ssl依赖库\n$ sudo apt-get install openssl\n```\n\n安装Nginx [官网地址](http://nginx.org/)\n\n```shell\n# 下载1.8.0版本：\nsudo wget http://nginx.org/download/nginx-1.8.0.tar.gz\n# 解压：\ntar -zxvf nginx-1.8.0.tar.gz\n#进入解压目录：\ncd nginx-1.8.0\n```\n\n编译Nginx\n\n* 1. 创建Makefile文件 `--prefix=/usr/local/nginx`指向的是安装目录\n\n  ```shell\n  ./configure \\\n  --prefix=/usr/local/nginx \\\n  --pid-path=/var/run/nginx/nginx.pid \\\n  --lock-path=/var/lock/nginx.lock  \\\n  --error-log-path=/var/log/nginx/error.log  \\\n  --http-log-path=/var/log/nginx/access.log  \\\n  --with-http_gzip_static_module \\\n  --http-client-body-temp-path=/var/tmp/nginx/client/ \\\n  --http-proxy-temp-path=/var/tmp/nginx/proxy/ \\\n  --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\\n  --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\\n  --http-scgi-temp-path=/var/tmp/nginx/scgi \\\n  #下面的配置可以不要\n  --sbin-path=/usr/local/nginx/sbin/nginx \\\n  --conf-path=/usr/local/nginx/conf/nginx.conf \\\n  --user=nginx \\\n  --group=nginx \\\n  --with-http_ssl_module \\\n  --with-http_stub_status_module \\\n  --with-pcre\n  ```\n\n* 2. 编译\n\n  ```shell\n  #1.生成脚本和配置文件\n  $ make\n  #2.安装，安装的路径就是Makefile里的--prefix=/usr/local/nginx\n  $ sudo make install\n  ```\n\n安装目录（/usr/local/nginx）下主要目录介绍\n\n```\nconf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和fastcgi_params两个文件，配置文件一般都有个样板配置文件，是文件名.default结尾，使用的使用将其复制为并将default去掉即可。\n\nhtml目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web文件是默认的错误页面提示页面。\n\nlogs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他路径，比如/var/logs/nginx里面。\n\nsbin：保存nginx二进制启动脚本，可以接受不同的参数以实现不同的功能。\n```\n\n源代码安装的启动\n\n```shell\n# 进入nginx下的sbin目录\n$ cd /usr/local/nginx/sbin \n# 创建--http-client-body-temp-path=/var/tmp/nginx/client/ 执行的目录\n$ mkdir /var/tmp/nginx/client/ -p\n# 启动\n$ sudo ./nginx\n# 停止\n$ sudo ./nginx -s stop\n# 进行一些配置更改后重新加载\n$ sudo ./nginx -s reload\n# 查看进程\n$ ps aux | grep nginx\n```\n\n#### 使用systemctl管理Nginx服务\n\n> 使用安装包安装的可以直接使用systemctl管理Nginx服务，但是使用源代码安装的需要配置\n\n您可以像任何其他systemd单位一样管理Nginx服务。 要停止Nginx服务，请运行：\n\n```shell\n$ sudo systemctl stop nginx\n```\n\n要再次启动，请键入：\n\n```shell\n$ sudo systemctl start nginx\n```\n\n重新启动Nginx服务：\n\n```shell\n$ sudo systemctl restart nginx\n```\n\n在进行一些配置更改后重新加载Nginx服务：\n\n```shell\n$ sudo systemctl reload nginx\n```\n\n如果你想禁用Nginx服务在启动时启动：\n\n```shell\n$ sudo systemctl disable nginx\n```\n\n并重新启用它：\n\n```shell\n$ sudo systemctl enable nginx\n```\n\n> 使用源代码安装的Nginx配置systemctl管理Nginx.service\n\n创建配置文件\n\n```shell\n# 源码安装的nginx在/etc/systemd/system/multi-user.target.wants/目录下是没有nginx.service这个文件的，所以要新建。但是我在systemd下并没有看到system（Ubuntu18.04.3），这个后续再研究\n$ vim /usr/lib/systemd/system/nginx.service\n```\n\n写入内容\n\n```shell\n[Unit]\nDescription=nginx - high performance web server\nDocumentation=http://nginx.org/en/docs/\nAfter=network-online.target remote-fs.target nss-lookup.target\nWants=network-online.target\n\n[Service]\nType=forking\nPIDFile=/var/run/nginx/nginx.pid\nExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s TERM $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n```\n\n设置开机启动\n\n```shell\n$ sudo systemctl enable nginx.service\n```\n\n关闭之前启动的nginx服务\n\n```shell\n$ pkill -9 nginx\n```\n\n重载修改过的所有配置文件\n\n```shell\n$ sudo systemctl daemon-reload\n```\n\n重新启动nginx服务\n\n```shell\n$ sudo systemctl start nginx\n```\n\n#### Ubuntu下卸载nginx\n\n先停止nginx服务\n\n```shell\n$ sudo systemctl stop nginx\n```\n\n删除nginx，–purge包括配置文件\n\n```shell\n$ sudo apt-get --purge remove nginx\n```\n\n自动移除全部不使用的软件包\n\n```shell\n$ sudo apt-get autoremove\n```\n\n列出与nginx相关的软件 并删除显示的软件\n\n```shell\n$ dpkg --get-selections|grep nginx\n\n$ sudo apt-get --purge remove nginx\n$ sudo apt-get --purge remove nginx-common\n$ sudo apt-get --purge remove nginx-core\n```\n\n再次执行\n\n```shell\n$ dpkg --get-selections|grep nginx\n\n$ which nginx  #不再显示nginx\n```","slug":"2020-02-02-01-Nginx的安装和启动","published":1,"updated":"2020-02-09T14:20:36.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wc003v54tnitmqu82i","content":"<center><font size=\"4\" color=\"red\">01_Nginx的安装和启动</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Nginx的安装和启动\"><a href=\"#Nginx的安装和启动\" class=\"headerlink\" title=\"Nginx的安装和启动\"></a>Nginx的安装和启动</h2><p>介绍两种安装方式</p>\n<h4 id=\"安装包安装\"><a href=\"#安装包安装\" class=\"headerlink\" title=\"安装包安装\"></a>安装包安装</h4><p><strong>安装Ngnix</strong></p>\n<p><code>sudo apt-get install nginx</code></p>\n<p>查看是否安装成功</p>\n<p><code>nginx -V</code></p>\n<p>Ubuntu安装之后的文件结构大致为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下</span><br><span class=\"line\"></span><br><span class=\"line\">主程序文件在/usr/sbin/nginx   //可以使用which nginx查看</span><br><span class=\"line\"></span><br><span class=\"line\">全局配置文件/etc/nginx/nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\">日志放在了/var/log/nginx中，日志文件的位置可以在 /etc/nginx/nginx.conf文件中配置</span><br><span class=\"line\">access_log /var/log/nginx/access.log; ## 访问日志文件路径名</span><br><span class=\"line\">error_log /var/log/nginx/error.log; ## 访问日志文件错误路径名</span><br><span class=\"line\"></span><br><span class=\"line\">并已经在/etc/init.d/下创建了启动脚本nginx</span><br><span class=\"line\"></span><br><span class=\"line\">默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)</span><br></pre></td></tr></table></figure>\n<p><strong>启动Ngnix</strong></p>\n<p><code>sudo /etc/init.d/nginx start</code></p>\n<p>然后就可以访问了，<code>http://localhost/</code> ， 一切正常！<br>启动时候若显示端口80被占用：<code>Starting nginx: [emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use)</code>，修改文件：<code>/etc/nginx/sites-available/default</code>,去掉 listen 前面的 # 号 , # 号在该文件里是注释的意思 , 并且把 listen 后面的 80 端口号改为自己的端口，访问是需要添加端口号。</p>\n<h4 id=\"源代码安装\"><a href=\"#源代码安装\" class=\"headerlink\" title=\"源代码安装\"></a>源代码安装</h4><p>环境准备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.安装gcc g++的依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install build-essential</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libtool</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装pcre依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libpcre3 libpcre3-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>3.安装zlib依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install zlib1g-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>4.安装ssl依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install openssl</span><br></pre></td></tr></table></figure>\n<p>安装Nginx <a href=\"http://nginx.org/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 下载1.8.0版本：</span><br><span class=\"line\">sudo wget http://nginx.org/download/nginx-1.8.0.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> 解压：</span><br><span class=\"line\">tar -zxvf nginx-1.8.0.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span>进入解压目录：</span><br><span class=\"line\">cd nginx-1.8.0</span><br></pre></td></tr></table></figure>\n<p>编译Nginx</p>\n<ul>\n<li><ol>\n<li>创建Makefile文件 <code>--prefix=/usr/local/nginx</code>指向的是安装目录</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure \\</span><br><span class=\"line\">--prefix=/usr/local/nginx \\</span><br><span class=\"line\">--pid-path=/var/run/nginx/nginx.pid \\</span><br><span class=\"line\">--lock-path=/var/lock/nginx.lock  \\</span><br><span class=\"line\">--error-log-path=/var/log/nginx/error.log  \\</span><br><span class=\"line\">--http-log-path=/var/log/nginx/access.log  \\</span><br><span class=\"line\">--with-http_gzip_static_module \\</span><br><span class=\"line\">--http-client-body-temp-path=/var/tmp/nginx/client/ \\</span><br><span class=\"line\">--http-proxy-temp-path=/var/tmp/nginx/proxy/ \\</span><br><span class=\"line\">--http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\</span><br><span class=\"line\">--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\</span><br><span class=\"line\">--http-scgi-temp-path=/var/tmp/nginx/scgi \\</span><br><span class=\"line\"><span class=\"meta\">#</span>下面的配置可以不要</span><br><span class=\"line\">--sbin-path=/usr/local/nginx/sbin/nginx \\</span><br><span class=\"line\">--conf-path=/usr/local/nginx/conf/nginx.conf \\</span><br><span class=\"line\">--user=nginx \\</span><br><span class=\"line\">--group=nginx \\</span><br><span class=\"line\">--with-http_ssl_module \\</span><br><span class=\"line\">--with-http_stub_status_module \\</span><br><span class=\"line\">--with-pcre</span><br></pre></td></tr></table></figure>\n</li>\n<li><ol start=\"2\">\n<li>编译</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.生成脚本和配置文件</span><br><span class=\"line\"><span class=\"meta\">$</span> make</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装，安装的路径就是Makefile里的--prefix=/usr/local/nginx</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo make install</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>安装目录（/usr/local/nginx）下主要目录介绍</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和fastcgi_params两个文件，配置文件一般都有个样板配置文件，是文件名.default结尾，使用的使用将其复制为并将default去掉即可。</span><br><span class=\"line\"></span><br><span class=\"line\">html目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web文件是默认的错误页面提示页面。</span><br><span class=\"line\"></span><br><span class=\"line\">logs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他路径，比如/var/logs/nginx里面。</span><br><span class=\"line\"></span><br><span class=\"line\">sbin：保存nginx二进制启动脚本，可以接受不同的参数以实现不同的功能。</span><br></pre></td></tr></table></figure>\n<p>源代码安装的启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 进入nginx下的sbin目录</span><br><span class=\"line\"><span class=\"meta\">$</span> cd /usr/local/nginx/sbin </span><br><span class=\"line\"><span class=\"meta\">#</span> 创建--http-client-body-temp-path=/var/tmp/nginx/client/ 执行的目录</span><br><span class=\"line\"><span class=\"meta\">$</span> mkdir /var/tmp/nginx/client/ -p</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./nginx</span><br><span class=\"line\"><span class=\"meta\">#</span> 停止</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./nginx -s stop</span><br><span class=\"line\"><span class=\"meta\">#</span> 进行一些配置更改后重新加载</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./nginx -s reload</span><br><span class=\"line\"><span class=\"meta\">#</span> 查看进程</span><br><span class=\"line\"><span class=\"meta\">$</span> ps aux | grep nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用systemctl管理Nginx服务\"><a href=\"#使用systemctl管理Nginx服务\" class=\"headerlink\" title=\"使用systemctl管理Nginx服务\"></a>使用systemctl管理Nginx服务</h4><blockquote>\n<p>使用安装包安装的可以直接使用systemctl管理Nginx服务，但是使用源代码安装的需要配置</p>\n</blockquote>\n<p>您可以像任何其他systemd单位一样管理Nginx服务。 要停止Nginx服务，请运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl stop nginx</span><br></pre></td></tr></table></figure>\n<p>要再次启动，请键入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl start nginx</span><br></pre></td></tr></table></figure>\n<p>重新启动Nginx服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl restart nginx</span><br></pre></td></tr></table></figure>\n<p>在进行一些配置更改后重新加载Nginx服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl reload nginx</span><br></pre></td></tr></table></figure>\n<p>如果你想禁用Nginx服务在启动时启动：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl disable nginx</span><br></pre></td></tr></table></figure>\n<p>并重新启用它：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl enable nginx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用源代码安装的Nginx配置systemctl管理Nginx.service</p>\n</blockquote>\n<p>创建配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 源码安装的nginx在/etc/systemd/system/multi-user.target.wants/目录下是没有nginx.service这个文件的，所以要新建。但是我在systemd下并没有看到system（Ubuntu18.04.3），这个后续再研究</span><br><span class=\"line\"><span class=\"meta\">$</span> vim /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure>\n<p>写入内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - high performance web server</span><br><span class=\"line\">Documentation=http://nginx.org/en/docs/</span><br><span class=\"line\">After=network-online.target remote-fs.target nss-lookup.target</span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/var/run/nginx/nginx.pid</span><br><span class=\"line\">ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class=\"line\">ExecStop=/bin/kill -s TERM $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>设置开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl enable nginx.service</span><br></pre></td></tr></table></figure>\n<p>关闭之前启动的nginx服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> pkill -9 nginx</span><br></pre></td></tr></table></figure>\n<p>重载修改过的所有配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n<p>重新启动nginx服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl start nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu下卸载nginx\"><a href=\"#Ubuntu下卸载nginx\" class=\"headerlink\" title=\"Ubuntu下卸载nginx\"></a>Ubuntu下卸载nginx</h4><p>先停止nginx服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl stop nginx</span><br></pre></td></tr></table></figure>\n<p>删除nginx，–purge包括配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx</span><br></pre></td></tr></table></figure>\n<p>自动移除全部不使用的软件包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get autoremove</span><br></pre></td></tr></table></figure>\n<p>列出与nginx相关的软件 并删除显示的软件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> dpkg --get-selections|grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx-common</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx-core</span><br></pre></td></tr></table></figure>\n<p>再次执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> dpkg --get-selections|grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span> which nginx  #不再显示nginx</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">01_Nginx的安装和启动</font></center>","more":"<h2 id=\"Nginx的安装和启动\"><a href=\"#Nginx的安装和启动\" class=\"headerlink\" title=\"Nginx的安装和启动\"></a>Nginx的安装和启动</h2><p>介绍两种安装方式</p>\n<h4 id=\"安装包安装\"><a href=\"#安装包安装\" class=\"headerlink\" title=\"安装包安装\"></a>安装包安装</h4><p><strong>安装Ngnix</strong></p>\n<p><code>sudo apt-get install nginx</code></p>\n<p>查看是否安装成功</p>\n<p><code>nginx -V</code></p>\n<p>Ubuntu安装之后的文件结构大致为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下</span><br><span class=\"line\"></span><br><span class=\"line\">主程序文件在/usr/sbin/nginx   //可以使用which nginx查看</span><br><span class=\"line\"></span><br><span class=\"line\">全局配置文件/etc/nginx/nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\">日志放在了/var/log/nginx中，日志文件的位置可以在 /etc/nginx/nginx.conf文件中配置</span><br><span class=\"line\">access_log /var/log/nginx/access.log; ## 访问日志文件路径名</span><br><span class=\"line\">error_log /var/log/nginx/error.log; ## 访问日志文件错误路径名</span><br><span class=\"line\"></span><br><span class=\"line\">并已经在/etc/init.d/下创建了启动脚本nginx</span><br><span class=\"line\"></span><br><span class=\"line\">默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)</span><br></pre></td></tr></table></figure>\n<p><strong>启动Ngnix</strong></p>\n<p><code>sudo /etc/init.d/nginx start</code></p>\n<p>然后就可以访问了，<code>http://localhost/</code> ， 一切正常！<br>启动时候若显示端口80被占用：<code>Starting nginx: [emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use)</code>，修改文件：<code>/etc/nginx/sites-available/default</code>,去掉 listen 前面的 # 号 , # 号在该文件里是注释的意思 , 并且把 listen 后面的 80 端口号改为自己的端口，访问是需要添加端口号。</p>\n<h4 id=\"源代码安装\"><a href=\"#源代码安装\" class=\"headerlink\" title=\"源代码安装\"></a>源代码安装</h4><p>环境准备</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.安装gcc g++的依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install build-essential</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libtool</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装pcre依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libpcre3 libpcre3-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>3.安装zlib依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install zlib1g-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>4.安装ssl依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install openssl</span><br></pre></td></tr></table></figure>\n<p>安装Nginx <a href=\"http://nginx.org/\" target=\"_blank\" rel=\"noopener\">官网地址</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 下载1.8.0版本：</span><br><span class=\"line\">sudo wget http://nginx.org/download/nginx-1.8.0.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> 解压：</span><br><span class=\"line\">tar -zxvf nginx-1.8.0.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span>进入解压目录：</span><br><span class=\"line\">cd nginx-1.8.0</span><br></pre></td></tr></table></figure>\n<p>编译Nginx</p>\n<ul>\n<li><ol>\n<li>创建Makefile文件 <code>--prefix=/usr/local/nginx</code>指向的是安装目录</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure \\</span><br><span class=\"line\">--prefix=/usr/local/nginx \\</span><br><span class=\"line\">--pid-path=/var/run/nginx/nginx.pid \\</span><br><span class=\"line\">--lock-path=/var/lock/nginx.lock  \\</span><br><span class=\"line\">--error-log-path=/var/log/nginx/error.log  \\</span><br><span class=\"line\">--http-log-path=/var/log/nginx/access.log  \\</span><br><span class=\"line\">--with-http_gzip_static_module \\</span><br><span class=\"line\">--http-client-body-temp-path=/var/tmp/nginx/client/ \\</span><br><span class=\"line\">--http-proxy-temp-path=/var/tmp/nginx/proxy/ \\</span><br><span class=\"line\">--http-fastcgi-temp-path=/var/tmp/nginx/fcgi/ \\</span><br><span class=\"line\">--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi \\</span><br><span class=\"line\">--http-scgi-temp-path=/var/tmp/nginx/scgi \\</span><br><span class=\"line\"><span class=\"meta\">#</span>下面的配置可以不要</span><br><span class=\"line\">--sbin-path=/usr/local/nginx/sbin/nginx \\</span><br><span class=\"line\">--conf-path=/usr/local/nginx/conf/nginx.conf \\</span><br><span class=\"line\">--user=nginx \\</span><br><span class=\"line\">--group=nginx \\</span><br><span class=\"line\">--with-http_ssl_module \\</span><br><span class=\"line\">--with-http_stub_status_module \\</span><br><span class=\"line\">--with-pcre</span><br></pre></td></tr></table></figure>\n</li>\n<li><ol start=\"2\">\n<li>编译</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.生成脚本和配置文件</span><br><span class=\"line\"><span class=\"meta\">$</span> make</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装，安装的路径就是Makefile里的--prefix=/usr/local/nginx</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo make install</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>安装目录（/usr/local/nginx）下主要目录介绍</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conf：保存nginx所有的配置文件，其中nginx.conf是nginx服务器的最核心最主要的配置文件，其他的.conf则是用来配置nginx相关的功能的，例如fastcgi功能使用的是fastcgi.conf和fastcgi_params两个文件，配置文件一般都有个样板配置文件，是文件名.default结尾，使用的使用将其复制为并将default去掉即可。</span><br><span class=\"line\"></span><br><span class=\"line\">html目录中保存了nginx服务器的web文件，但是可以更改为其他目录保存web文件,另外还有一个50x的web文件是默认的错误页面提示页面。</span><br><span class=\"line\"></span><br><span class=\"line\">logs：用来保存nginx服务器的访问日志错误日志等日志，logs目录可以放在其他路径，比如/var/logs/nginx里面。</span><br><span class=\"line\"></span><br><span class=\"line\">sbin：保存nginx二进制启动脚本，可以接受不同的参数以实现不同的功能。</span><br></pre></td></tr></table></figure>\n<p>源代码安装的启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 进入nginx下的sbin目录</span><br><span class=\"line\"><span class=\"meta\">$</span> cd /usr/local/nginx/sbin </span><br><span class=\"line\"><span class=\"meta\">#</span> 创建--http-client-body-temp-path=/var/tmp/nginx/client/ 执行的目录</span><br><span class=\"line\"><span class=\"meta\">$</span> mkdir /var/tmp/nginx/client/ -p</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./nginx</span><br><span class=\"line\"><span class=\"meta\">#</span> 停止</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./nginx -s stop</span><br><span class=\"line\"><span class=\"meta\">#</span> 进行一些配置更改后重新加载</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./nginx -s reload</span><br><span class=\"line\"><span class=\"meta\">#</span> 查看进程</span><br><span class=\"line\"><span class=\"meta\">$</span> ps aux | grep nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用systemctl管理Nginx服务\"><a href=\"#使用systemctl管理Nginx服务\" class=\"headerlink\" title=\"使用systemctl管理Nginx服务\"></a>使用systemctl管理Nginx服务</h4><blockquote>\n<p>使用安装包安装的可以直接使用systemctl管理Nginx服务，但是使用源代码安装的需要配置</p>\n</blockquote>\n<p>您可以像任何其他systemd单位一样管理Nginx服务。 要停止Nginx服务，请运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl stop nginx</span><br></pre></td></tr></table></figure>\n<p>要再次启动，请键入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl start nginx</span><br></pre></td></tr></table></figure>\n<p>重新启动Nginx服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl restart nginx</span><br></pre></td></tr></table></figure>\n<p>在进行一些配置更改后重新加载Nginx服务：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl reload nginx</span><br></pre></td></tr></table></figure>\n<p>如果你想禁用Nginx服务在启动时启动：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl disable nginx</span><br></pre></td></tr></table></figure>\n<p>并重新启用它：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl enable nginx</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>使用源代码安装的Nginx配置systemctl管理Nginx.service</p>\n</blockquote>\n<p>创建配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 源码安装的nginx在/etc/systemd/system/multi-user.target.wants/目录下是没有nginx.service这个文件的，所以要新建。但是我在systemd下并没有看到system（Ubuntu18.04.3），这个后续再研究</span><br><span class=\"line\"><span class=\"meta\">$</span> vim /usr/lib/systemd/system/nginx.service</span><br></pre></td></tr></table></figure>\n<p>写入内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - high performance web server</span><br><span class=\"line\">Documentation=http://nginx.org/en/docs/</span><br><span class=\"line\">After=network-online.target remote-fs.target nss-lookup.target</span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/var/run/nginx/nginx.pid</span><br><span class=\"line\">ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class=\"line\">ExecStop=/bin/kill -s TERM $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n<p>设置开机启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl enable nginx.service</span><br></pre></td></tr></table></figure>\n<p>关闭之前启动的nginx服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> pkill -9 nginx</span><br></pre></td></tr></table></figure>\n<p>重载修改过的所有配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n<p>重新启动nginx服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl start nginx</span><br></pre></td></tr></table></figure>\n<h4 id=\"Ubuntu下卸载nginx\"><a href=\"#Ubuntu下卸载nginx\" class=\"headerlink\" title=\"Ubuntu下卸载nginx\"></a>Ubuntu下卸载nginx</h4><p>先停止nginx服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo systemctl stop nginx</span><br></pre></td></tr></table></figure>\n<p>删除nginx，–purge包括配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx</span><br></pre></td></tr></table></figure>\n<p>自动移除全部不使用的软件包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get autoremove</span><br></pre></td></tr></table></figure>\n<p>列出与nginx相关的软件 并删除显示的软件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> dpkg --get-selections|grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx-common</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get --purge remove nginx-core</span><br></pre></td></tr></table></figure>\n<p>再次执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> dpkg --get-selections|grep nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">$</span> which nginx  #不再显示nginx</span><br></pre></td></tr></table></figure>"},{"title":"02_Nginx做代理","date":"2020-02-02T14:00:42.000Z","_content":"\n<center><font size=4 color=\"red\">02_Nginx做代理</font></center>\n\n<!--more-->\n\n## Ngnix做代理\n\n### Nginx做静态资源的代理\n\nnginx做静态资源的代理有端口设置和域名绑定两种方式\n\n#### 端口设置\n\n> 特点：一个服务就要配置一个端口\n\n端口设置时一个端口就复制一个server。对server讲解如下：\n\n我的虚拟机是：192.168.25.151，访问时访问：http://192.168.25.151:80/ ,指定访问80端口时，就去找对应的location，由于location的命名空间是`/`,所以会直接查找`/usr/local/nginx`文件夹下的`html`文件夹下的index.html文件\n\n再配置一个81端口的服务，然后在`/usr/local/nginx`下创建一个文件夹`hello`，在该文件夹下创建一个文件hello.html,使用`sudo ./nginx -s reload`重新加载配置文件后，访问http://192.168.25.151:81/\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    \n    sendfile        on;\n    #tcp_nopush     on;\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    \n    server {\n    \t#指定服务的端口\n        listen       80;   \n        #指定服务的名称，就是访问时的域名\n        server_name  localhost;\n        \n        #执行端口后面要访问的html位置\n        location / {\n        \t#访问的文件夹\n            root   html;\n            #访问的该文件夹下的文件\n            index  index.html index.htm;\n        }\n        \n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    \n    server {\n        listen       81;\n        server_name  localhost;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n}\n```\n\n#### 域名绑定\n\n> 特点：多个服务可以共用一个端口\n\n其中的server_name就是指定的域名，我这里做测试，就用的SwitchHost配置的域名和ip对应。实际生产中需要购买域名和特定ip。访问时直接通过域名就可以访问。\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    sendfile        on;\n\n    keepalive_timeout  65;\n\n    server {\n        listen       80;\n        #配置域名\n        server_name  www.mynginx.com;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n    }\n\n    server {\n        listen       80;\n        #配置域名\n        server_name  www.hello.com;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    } \n\n}\n```\n\n### Nginx做动态代理\n\n#### 反向代理\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    \n    sendfile        on;\n    #tcp_nopush     on;\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    \n    server {\n    \t#指定服务的端口\n        listen       80;   \n        #指定服务的名称，就是访问时的域名\n        server_name  localhost;\n        \n        #执行端口后面要访问的html位置\n        location / {\n        \t#访问的文件夹\n            root   html;\n            #访问的该文件夹下的文件\n            index  index.html index.htm;\n        }\n        \n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    \n    #动态代理的配置\n    upstream helloworld{\n    \t#这个是配置的反向代理的服务，一般是tomcat服务\n    \tserver 192.168.25.151:8080;\n    }\n    \n    server {\n        listen       80;\n        #这个就指向的upstream中的服务地址192.168.25.151:8080\n        proxy_pass  http://helloworld;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n}\n```\n\n#### 负载均衡\n\n多部署几个tomcat并配置进来就行\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    \n    sendfile        on;\n    #tcp_nopush     on;\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    \n    server {\n    \t#指定服务的端口\n        listen       80;   \n        #指定服务的名称，就是访问时的域名\n        server_name  localhost;\n        \n        #执行端口后面要访问的html位置\n        location / {\n        \t#访问的文件夹\n            root   html;\n            #访问的该文件夹下的文件\n            index  index.html index.htm;\n        }\n        \n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    \n    #动态代理的配置\n    upstream helloworld{\n    \t#这个是配置的反向代理的服务，一般是tomcat服务\n    \t#如果要让服务192.168.25.151:8180出现次数是其它的2倍，可以配置为：\n    \t#server 192.168.25.151:8180 weight=2;\n    \tserver 192.168.25.151:8080;\n    \tserver 192.168.25.151:8180;\n    \tserver 192.168.25.151:8280;\n    }\n    \n    server {\n        listen       80;\n        #这个就指向的upstream中的服务地址192.168.25.151:8080\n        proxy_pass  http://helloworld;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n}\n```\n","source":"_posts/2020-02-02-02-Nginx做代理.md","raw":"---\ntitle: 02_Nginx做代理\ndate: 2020-02-02 14:00:42\ncategories:\n- Nginx\ntags:\n- 反向代理\n- 负载均衡\n---\n\n<center><font size=4 color=\"red\">02_Nginx做代理</font></center>\n\n<!--more-->\n\n## Ngnix做代理\n\n### Nginx做静态资源的代理\n\nnginx做静态资源的代理有端口设置和域名绑定两种方式\n\n#### 端口设置\n\n> 特点：一个服务就要配置一个端口\n\n端口设置时一个端口就复制一个server。对server讲解如下：\n\n我的虚拟机是：192.168.25.151，访问时访问：http://192.168.25.151:80/ ,指定访问80端口时，就去找对应的location，由于location的命名空间是`/`,所以会直接查找`/usr/local/nginx`文件夹下的`html`文件夹下的index.html文件\n\n再配置一个81端口的服务，然后在`/usr/local/nginx`下创建一个文件夹`hello`，在该文件夹下创建一个文件hello.html,使用`sudo ./nginx -s reload`重新加载配置文件后，访问http://192.168.25.151:81/\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    \n    sendfile        on;\n    #tcp_nopush     on;\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    \n    server {\n    \t#指定服务的端口\n        listen       80;   \n        #指定服务的名称，就是访问时的域名\n        server_name  localhost;\n        \n        #执行端口后面要访问的html位置\n        location / {\n        \t#访问的文件夹\n            root   html;\n            #访问的该文件夹下的文件\n            index  index.html index.htm;\n        }\n        \n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    \n    server {\n        listen       81;\n        server_name  localhost;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n}\n```\n\n#### 域名绑定\n\n> 特点：多个服务可以共用一个端口\n\n其中的server_name就是指定的域名，我这里做测试，就用的SwitchHost配置的域名和ip对应。实际生产中需要购买域名和特定ip。访问时直接通过域名就可以访问。\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n\n    sendfile        on;\n\n    keepalive_timeout  65;\n\n    server {\n        listen       80;\n        #配置域名\n        server_name  www.mynginx.com;\n\n        location / {\n            root   html;\n            index  index.html index.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n\n    }\n\n    server {\n        listen       80;\n        #配置域名\n        server_name  www.hello.com;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    } \n\n}\n```\n\n### Nginx做动态代理\n\n#### 反向代理\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    \n    sendfile        on;\n    #tcp_nopush     on;\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    \n    server {\n    \t#指定服务的端口\n        listen       80;   \n        #指定服务的名称，就是访问时的域名\n        server_name  localhost;\n        \n        #执行端口后面要访问的html位置\n        location / {\n        \t#访问的文件夹\n            root   html;\n            #访问的该文件夹下的文件\n            index  index.html index.htm;\n        }\n        \n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    \n    #动态代理的配置\n    upstream helloworld{\n    \t#这个是配置的反向代理的服务，一般是tomcat服务\n    \tserver 192.168.25.151:8080;\n    }\n    \n    server {\n        listen       80;\n        #这个就指向的upstream中的服务地址192.168.25.151:8080\n        proxy_pass  http://helloworld;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n}\n```\n\n#### 负载均衡\n\n多部署几个tomcat并配置进来就行\n\n```shell\nhttp {\n    include       mime.types;\n    default_type  application/octet-stream;\n    \n    sendfile        on;\n    #tcp_nopush     on;\n    \n    #keepalive_timeout  0;\n    keepalive_timeout  65;\n    \n    server {\n    \t#指定服务的端口\n        listen       80;   \n        #指定服务的名称，就是访问时的域名\n        server_name  localhost;\n        \n        #执行端口后面要访问的html位置\n        location / {\n        \t#访问的文件夹\n            root   html;\n            #访问的该文件夹下的文件\n            index  index.html index.htm;\n        }\n        \n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n    \n    #动态代理的配置\n    upstream helloworld{\n    \t#这个是配置的反向代理的服务，一般是tomcat服务\n    \t#如果要让服务192.168.25.151:8180出现次数是其它的2倍，可以配置为：\n    \t#server 192.168.25.151:8180 weight=2;\n    \tserver 192.168.25.151:8080;\n    \tserver 192.168.25.151:8180;\n    \tserver 192.168.25.151:8280;\n    }\n    \n    server {\n        listen       80;\n        #这个就指向的upstream中的服务地址192.168.25.151:8080\n        proxy_pass  http://helloworld;\n        \n        location / {\n            root   hello;\n            index  hello.html hello.htm;\n        }\n\n        error_page   500 502 503 504  /50x.html;\n        location = /50x.html {\n            root   html;\n        }\n    }\n\n}\n```\n","slug":"2020-02-02-02-Nginx做代理","published":1,"updated":"2020-02-02T06:01:59.850Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wg004054tnkne5aw6y","content":"<center><font size=\"4\" color=\"red\">02_Nginx做代理</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Ngnix做代理\"><a href=\"#Ngnix做代理\" class=\"headerlink\" title=\"Ngnix做代理\"></a>Ngnix做代理</h2><h3 id=\"Nginx做静态资源的代理\"><a href=\"#Nginx做静态资源的代理\" class=\"headerlink\" title=\"Nginx做静态资源的代理\"></a>Nginx做静态资源的代理</h3><p>nginx做静态资源的代理有端口设置和域名绑定两种方式</p>\n<h4 id=\"端口设置\"><a href=\"#端口设置\" class=\"headerlink\" title=\"端口设置\"></a>端口设置</h4><blockquote>\n<p>特点：一个服务就要配置一个端口</p>\n</blockquote>\n<p>端口设置时一个端口就复制一个server。对server讲解如下：</p>\n<p>我的虚拟机是：192.168.25.151，访问时访问：<a href=\"http://192.168.25.151:80/\" target=\"_blank\" rel=\"noopener\">http://192.168.25.151:80/</a> ,指定访问80端口时，就去找对应的location，由于location的命名空间是<code>/</code>,所以会直接查找<code>/usr/local/nginx</code>文件夹下的<code>html</code>文件夹下的index.html文件</p>\n<p>再配置一个81端口的服务，然后在<code>/usr/local/nginx</code>下创建一个文件夹<code>hello</code>，在该文件夹下创建一个文件hello.html,使用<code>sudo ./nginx -s reload</code>重新加载配置文件后，访问<a href=\"http://192.168.25.151:81/\" target=\"_blank\" rel=\"noopener\">http://192.168.25.151:81/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \t#指定服务的端口</span><br><span class=\"line\">        listen       80;   </span><br><span class=\"line\">        #指定服务的名称，就是访问时的域名</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #执行端口后面要访问的html位置</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        \t#访问的文件夹</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            #访问的该文件夹下的文件</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       81;</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"域名绑定\"><a href=\"#域名绑定\" class=\"headerlink\" title=\"域名绑定\"></a>域名绑定</h4><blockquote>\n<p>特点：多个服务可以共用一个端口</p>\n</blockquote>\n<p>其中的server_name就是指定的域名，我这里做测试，就用的SwitchHost配置的域名和ip对应。实际生产中需要购买域名和特定ip。访问时直接通过域名就可以访问。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\"></span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #配置域名</span><br><span class=\"line\">        server_name  www.mynginx.com;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #配置域名</span><br><span class=\"line\">        server_name  www.hello.com;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Nginx做动态代理\"><a href=\"#Nginx做动态代理\" class=\"headerlink\" title=\"Nginx做动态代理\"></a>Nginx做动态代理</h3><h4 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \t#指定服务的端口</span><br><span class=\"line\">        listen       80;   </span><br><span class=\"line\">        #指定服务的名称，就是访问时的域名</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #执行端口后面要访问的html位置</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        \t#访问的文件夹</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            #访问的该文件夹下的文件</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #动态代理的配置</span><br><span class=\"line\">    upstream helloworld&#123;</span><br><span class=\"line\">    \t#这个是配置的反向代理的服务，一般是tomcat服务</span><br><span class=\"line\">    \tserver 192.168.25.151:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #这个就指向的upstream中的服务地址192.168.25.151:8080</span><br><span class=\"line\">        proxy_pass  http://helloworld;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h4><p>多部署几个tomcat并配置进来就行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \t#指定服务的端口</span><br><span class=\"line\">        listen       80;   </span><br><span class=\"line\">        #指定服务的名称，就是访问时的域名</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #执行端口后面要访问的html位置</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        \t#访问的文件夹</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            #访问的该文件夹下的文件</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #动态代理的配置</span><br><span class=\"line\">    upstream helloworld&#123;</span><br><span class=\"line\">    \t#这个是配置的反向代理的服务，一般是tomcat服务</span><br><span class=\"line\">    \t#如果要让服务192.168.25.151:8180出现次数是其它的2倍，可以配置为：</span><br><span class=\"line\">    \t#server 192.168.25.151:8180 weight=2;</span><br><span class=\"line\">    \tserver 192.168.25.151:8080;</span><br><span class=\"line\">    \tserver 192.168.25.151:8180;</span><br><span class=\"line\">    \tserver 192.168.25.151:8280;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #这个就指向的upstream中的服务地址192.168.25.151:8080</span><br><span class=\"line\">        proxy_pass  http://helloworld;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">02_Nginx做代理</font></center>","more":"<h2 id=\"Ngnix做代理\"><a href=\"#Ngnix做代理\" class=\"headerlink\" title=\"Ngnix做代理\"></a>Ngnix做代理</h2><h3 id=\"Nginx做静态资源的代理\"><a href=\"#Nginx做静态资源的代理\" class=\"headerlink\" title=\"Nginx做静态资源的代理\"></a>Nginx做静态资源的代理</h3><p>nginx做静态资源的代理有端口设置和域名绑定两种方式</p>\n<h4 id=\"端口设置\"><a href=\"#端口设置\" class=\"headerlink\" title=\"端口设置\"></a>端口设置</h4><blockquote>\n<p>特点：一个服务就要配置一个端口</p>\n</blockquote>\n<p>端口设置时一个端口就复制一个server。对server讲解如下：</p>\n<p>我的虚拟机是：192.168.25.151，访问时访问：<a href=\"http://192.168.25.151:80/\" target=\"_blank\" rel=\"noopener\">http://192.168.25.151:80/</a> ,指定访问80端口时，就去找对应的location，由于location的命名空间是<code>/</code>,所以会直接查找<code>/usr/local/nginx</code>文件夹下的<code>html</code>文件夹下的index.html文件</p>\n<p>再配置一个81端口的服务，然后在<code>/usr/local/nginx</code>下创建一个文件夹<code>hello</code>，在该文件夹下创建一个文件hello.html,使用<code>sudo ./nginx -s reload</code>重新加载配置文件后，访问<a href=\"http://192.168.25.151:81/\" target=\"_blank\" rel=\"noopener\">http://192.168.25.151:81/</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \t#指定服务的端口</span><br><span class=\"line\">        listen       80;   </span><br><span class=\"line\">        #指定服务的名称，就是访问时的域名</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #执行端口后面要访问的html位置</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        \t#访问的文件夹</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            #访问的该文件夹下的文件</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       81;</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"域名绑定\"><a href=\"#域名绑定\" class=\"headerlink\" title=\"域名绑定\"></a>域名绑定</h4><blockquote>\n<p>特点：多个服务可以共用一个端口</p>\n</blockquote>\n<p>其中的server_name就是指定的域名，我这里做测试，就用的SwitchHost配置的域名和ip对应。实际生产中需要购买域名和特定ip。访问时直接通过域名就可以访问。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\"></span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #配置域名</span><br><span class=\"line\">        server_name  www.mynginx.com;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #配置域名</span><br><span class=\"line\">        server_name  www.hello.com;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Nginx做动态代理\"><a href=\"#Nginx做动态代理\" class=\"headerlink\" title=\"Nginx做动态代理\"></a>Nginx做动态代理</h3><h4 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \t#指定服务的端口</span><br><span class=\"line\">        listen       80;   </span><br><span class=\"line\">        #指定服务的名称，就是访问时的域名</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #执行端口后面要访问的html位置</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        \t#访问的文件夹</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            #访问的该文件夹下的文件</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #动态代理的配置</span><br><span class=\"line\">    upstream helloworld&#123;</span><br><span class=\"line\">    \t#这个是配置的反向代理的服务，一般是tomcat服务</span><br><span class=\"line\">    \tserver 192.168.25.151:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #这个就指向的upstream中的服务地址192.168.25.151:8080</span><br><span class=\"line\">        proxy_pass  http://helloworld;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"负载均衡\"><a href=\"#负载均衡\" class=\"headerlink\" title=\"负载均衡\"></a>负载均衡</h4><p>多部署几个tomcat并配置进来就行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    </span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #keepalive_timeout  0;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">    \t#指定服务的端口</span><br><span class=\"line\">        listen       80;   </span><br><span class=\"line\">        #指定服务的名称，就是访问时的域名</span><br><span class=\"line\">        server_name  localhost;</span><br><span class=\"line\">        </span><br><span class=\"line\">        #执行端口后面要访问的html位置</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        \t#访问的文件夹</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">            #访问的该文件夹下的文件</span><br><span class=\"line\">            index  index.html index.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #动态代理的配置</span><br><span class=\"line\">    upstream helloworld&#123;</span><br><span class=\"line\">    \t#这个是配置的反向代理的服务，一般是tomcat服务</span><br><span class=\"line\">    \t#如果要让服务192.168.25.151:8180出现次数是其它的2倍，可以配置为：</span><br><span class=\"line\">    \t#server 192.168.25.151:8180 weight=2;</span><br><span class=\"line\">    \tserver 192.168.25.151:8080;</span><br><span class=\"line\">    \tserver 192.168.25.151:8180;</span><br><span class=\"line\">    \tserver 192.168.25.151:8280;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        #这个就指向的upstream中的服务地址192.168.25.151:8080</span><br><span class=\"line\">        proxy_pass  http://helloworld;</span><br><span class=\"line\">        </span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            root   hello;</span><br><span class=\"line\">            index  hello.html hello.htm;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">            root   html;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"01-Mybatis逆向工程搭建","date":"2020-04-01T20:50:15.000Z","_content":"\n<center><font size=4 color=\"red\">01-Mybatis逆向工程搭建</font></center>\n\n<!--more-->\n\n# Mybatis逆向工程搭建\n\n由于目前很多公司都在使用逆向工程生成Mybatis所需要的mapper文件和pojo文件，所以我这里也总结了一下Mybatis的逆向工程的搭建，亲身实践，绝对可靠\n\n## 不使用springboot\n\n#### 搭建maven工程，导入依赖jar包\n\n第一步肯定是要在maven工程中导入所依赖的jar包,主要jar包是下面3个，如果需要，可以在导入log4j的jar包，顺便说一下，我用的mysql数据库版本是5.7.22\n\n```xml\n<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n<dependency>\n    <groupId>org.mybatis</groupId>\n    <artifactId>mybatis</artifactId>\n    <version>3.2.3</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core -->\n<dependency>\n    <groupId>org.mybatis.generator</groupId>\n    <artifactId>mybatis-generator-core</artifactId>\n    <version>1.3.2</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>5.1.28</version>\n</dependency>\n```\n\n#### 创建generatorConfig.xml配置文件\n\ngeneratorConfig.xml配置文件是逆向工程的核心配置文件。\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE generatorConfiguration\n        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n\n<generatorConfiguration>\n    <!--\n        id:必选，上下文id，用于在生成错误时提示\n        MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample\n     -->\n    <context id=\"testTables\" targetRuntime=\"MyBatis3\">\n\n        <!-- 配置生成pojo的序列化的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下  -->\n        <plugin type=\"org.mybatis.generator.plugins.SerializablePlugin\" />\n\n        <!-- 配置生成pojo的toString()方法的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下 -->\n        <plugin type=\"org.mybatis.generator.plugins.ToStringPlugin\" />\n\n        <commentGenerator>\n            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->\n            <property name=\"suppressAllComments\" value=\"true\" />\n        </commentGenerator>\n        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->\n        <jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\n                        connectionURL=\"jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8\" userId=\"root\"\n                        password=\"123456\">\n        </jdbcConnection>\n        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和\n            NUMERIC 类型解析为java.math.BigDecimal -->\n        <javaTypeResolver>\n            <!--\n                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型\n                false：默认,\n                    scale>0;length>18：使用BigDecimal;\n                    scale=0;length[10,18]：使用Long；\n                    scale=0;length[5,9]：使用Integer；\n                    scale=0;length<5：使用Short；\n             -->\n            <property name=\"forceBigDecimals\" value=\"false\" />\n        </javaTypeResolver>\n\n        <!-- targetPackage:生成PO类的位置 -->\n        <!--targetProject:指定存在的目录-->\n        <javaModelGenerator targetPackage=\"com.hui.pojo\"\n                            targetProject=\"src/main/java\">\n            <!-- enableSubPackages:是否让schema作为包的后缀 -->\n            <property name=\"enableSubPackages\" value=\"false\" />\n            <!-- 从数据库返回的值被清理前后的空格 -->\n            <property name=\"trimStrings\" value=\"true\" />\n        </javaModelGenerator>\n        <!-- targetProject:mapper映射文件生成的位置 -->\n        <sqlMapGenerator targetPackage=\"mapper\"\n                         targetProject=\"src/main/resources\">\n            <!-- enableSubPackages:是否让schema作为包的后缀 -->\n            <property name=\"enableSubPackages\" value=\"false\" />\n        </sqlMapGenerator>\n        <!-- targetPackage：mapper接口生成的位置 -->\n        <javaClientGenerator type=\"XMLMAPPER\"\n                             targetPackage=\"com.hui.mapper\"\n                             targetProject=\"src/main/java\">\n            <!-- enableSubPackages:是否让schema作为包的后缀 -->\n            <property name=\"enableSubPackages\" value=\"false\" />\n        </javaClientGenerator>\n\n        <!-- 指定数据库表 -->\n        <table schema=\"\" tableName=\"user\"></table>\n        <table schema=\"\" tableName=\"goods\"></table>\n\n    </context>\n</generatorConfiguration>\n```\n\n#### 编写执行代码GeneratorSqlmap.java\n\n新创建一个java执行文件（我创建在了com/hui/startup包下），使用以下代码执行。别忘记了修改逆向工程的配置文件路径\n\n```java\npackage com.hui.startup;\n\nimport org.mybatis.generator.api.MyBatisGenerator;\nimport org.mybatis.generator.config.Configuration;\nimport org.mybatis.generator.config.xml.ConfigurationParser;\nimport org.mybatis.generator.internal.DefaultShellCallback;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class GeneratorSqlmap {\n\n    public void generator() throws Exception{\n\n        List<String> warnings = new ArrayList<String>();\n        boolean overwrite = true;\n        //指定 逆向工程配置文件\n        File configFile = new File(\"src\\\\main\\\\resources\\\\generatorConfig.xml\");\n        ConfigurationParser cp = new ConfigurationParser(warnings);\n        Configuration config = cp.parseConfiguration(configFile);\n        DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config,\n                callback, warnings);\n        myBatisGenerator.generate(null);\n\n    }\n    public static void main(String[] args) throws Exception {\n        try {\n            GeneratorSqlmap generatorSqlmap = new GeneratorSqlmap();\n            generatorSqlmap.generator();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n#### 执行GeneratorSqlmap.java\n\n执行后生成的代码结构如下：\n\n![逆向工程](generator.png)\n\n## springboot搭建逆向工程\n\n#### 创建springboot\n\n初始化时添加的依赖：\n\n* Spring Boot DevTools\n* Lombok\n* Mybatis Framework\n\n#### Pom文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.13.RELEASE</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n    <groupId>com.hui</groupId>\n    <artifactId>springbootgenerator</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>springbootgenerator</name>\n    <description>Demo project for Spring Boot</description>\n\n\n    <properties>\n        <java.version>1.8</java.version>\n        <targetJavaProject>src/main/java</targetJavaProject>\n        <!-- XML生成路径 -->\n        <targetResourcesProject>src/main/resources</targetResourcesProject>\n        <targetXMLPackage>mapper</targetXMLPackage>\n        <targetMapperPackage>com.hui.dao</targetMapperPackage>\n        <targetModelPackage>com.hui.pojo</targetModelPackage>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n            <version>2.1.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.junit.vintage</groupId>\n                    <artifactId>junit-vintage-engine</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>org.mybatis.generator</groupId>\n                <artifactId>mybatis-generator-maven-plugin</artifactId>\n                <version>1.3.7</version>\n                <configuration>\n                    <!-- generator 工具配置文件的位置 -->\n                    <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>\n                    <verbose>true</verbose>\n                    <overwrite>true</overwrite>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.mybatis.generator</groupId>\n                        <artifactId>mybatis-generator-core</artifactId>\n                        <version>1.3.7</version>\n                    </dependency>\n\n                    <dependency>\n                        <groupId>mysql</groupId>\n                        <artifactId>mysql-connector-java</artifactId>\n                        <version>5.1.41</version>\n                    </dependency>\n\n                    <dependency>\n                        <groupId>tk.mybatis</groupId>\n                        <artifactId>mapper</artifactId>\n                        <version>3.4.6</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```\n\n#### GeneratorConfig.xml\n\ngeneratorConfig.xml是逆向工程的核心配置文件\n\n该文件放在位置：在resources下\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE generatorConfiguration\n        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n<!-- mybatis-generator的核心配置文件 -->\n<generatorConfiguration>\n    <!-- 数据库驱动位置 -->\n<!--    <classPathEntry location=\"D:\\maven_repository\\mysql\\mysql-connector-java\\5.1.41\\mysql-connector-java-5.1.41.jar\" />-->\n\n    <context id=\"DB2Tables\" targetRuntime=\"MyBatis3\">\n        <jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\n                        connectionURL=\"jdbc:mysql://192.168.31.140:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false\"\n                        userId=\"root\"\n                        password=\"123456\">\n        </jdbcConnection>\n\n        <!--指定生成的类型为java类型，避免数据库中number等类型字段 -->\n        <javaTypeResolver >\n            <property name=\"forceBigDecimals\" value=\"false\" />\n        </javaTypeResolver>\n\n        <!--自动生成的实体的存放包路径          举个例子：生成Goods.java和GoodsExample.java-->\n        <javaModelGenerator targetPackage=\"${targetModelPackage}\" targetProject=\"${targetJavaProject}\">\n            <property name=\"enableSubPackages\" value=\"true\" />\n            <property name=\"trimStrings\" value=\"true\" />\n        </javaModelGenerator>\n\n        <!--自动生成的*Mapper.xml文件存放路径   举个例子：GoodsMapper.xml-->\n        <sqlMapGenerator targetPackage=\"${targetXMLPackage}\"  targetProject=\"${targetResourcesProject}\">\n            <property name=\"enableSubPackages\" value=\"true\" />\n        </sqlMapGenerator>\n        <!--自动生成的*Mapper.java存放路径      举个例子：GoodsMapper.java-->\n        <javaClientGenerator type=\"XMLMAPPER\" targetPackage=\"${targetMapperPackage}\"  targetProject=\"${targetJavaProject}\">\n            <property name=\"enableSubPackages\" value=\"true\" />\n        </javaClientGenerator>\n        <!-- 映射配置     上面生成的名称，开头都以domainObjectName命名的\"TbgShop\"开头-->\n        <table tableName=\"goods\" domainObjectName=\"Goods\" ></table>\n        <table tableName=\"student\" domainObjectName=\"Student\" ></table>\n        <table tableName=\"user\" domainObjectName=\"User\" ></table>\n    </context>\n</generatorConfiguration>\n```\n\n#### 执行插件\n\n![](springbootgenerator.png)\n\n运行之后，就可以生成相应的mapper，pojo和xml文件，文件夹会自动创建。\n","source":"_posts/2020-04-01-01-Mybatis逆向工程搭建.md","raw":"---\ntitle: 01-Mybatis逆向工程搭建\ndate: 2020-04-01 20:50:15\ncategories:\n- 逆向工程\ntags:\n- Mybatis\n- 逆向工程\n---\n\n<center><font size=4 color=\"red\">01-Mybatis逆向工程搭建</font></center>\n\n<!--more-->\n\n# Mybatis逆向工程搭建\n\n由于目前很多公司都在使用逆向工程生成Mybatis所需要的mapper文件和pojo文件，所以我这里也总结了一下Mybatis的逆向工程的搭建，亲身实践，绝对可靠\n\n## 不使用springboot\n\n#### 搭建maven工程，导入依赖jar包\n\n第一步肯定是要在maven工程中导入所依赖的jar包,主要jar包是下面3个，如果需要，可以在导入log4j的jar包，顺便说一下，我用的mysql数据库版本是5.7.22\n\n```xml\n<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->\n<dependency>\n    <groupId>org.mybatis</groupId>\n    <artifactId>mybatis</artifactId>\n    <version>3.2.3</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core -->\n<dependency>\n    <groupId>org.mybatis.generator</groupId>\n    <artifactId>mybatis-generator-core</artifactId>\n    <version>1.3.2</version>\n</dependency>\n<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->\n<dependency>\n    <groupId>mysql</groupId>\n    <artifactId>mysql-connector-java</artifactId>\n    <version>5.1.28</version>\n</dependency>\n```\n\n#### 创建generatorConfig.xml配置文件\n\ngeneratorConfig.xml配置文件是逆向工程的核心配置文件。\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE generatorConfiguration\n        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n\n<generatorConfiguration>\n    <!--\n        id:必选，上下文id，用于在生成错误时提示\n        MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample\n     -->\n    <context id=\"testTables\" targetRuntime=\"MyBatis3\">\n\n        <!-- 配置生成pojo的序列化的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下  -->\n        <plugin type=\"org.mybatis.generator.plugins.SerializablePlugin\" />\n\n        <!-- 配置生成pojo的toString()方法的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下 -->\n        <plugin type=\"org.mybatis.generator.plugins.ToStringPlugin\" />\n\n        <commentGenerator>\n            <!-- 是否去除自动生成的注释 true：是 ： false:否 -->\n            <property name=\"suppressAllComments\" value=\"true\" />\n        </commentGenerator>\n        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->\n        <jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\n                        connectionURL=\"jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8\" userId=\"root\"\n                        password=\"123456\">\n        </jdbcConnection>\n        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和\n            NUMERIC 类型解析为java.math.BigDecimal -->\n        <javaTypeResolver>\n            <!--\n                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型\n                false：默认,\n                    scale>0;length>18：使用BigDecimal;\n                    scale=0;length[10,18]：使用Long；\n                    scale=0;length[5,9]：使用Integer；\n                    scale=0;length<5：使用Short；\n             -->\n            <property name=\"forceBigDecimals\" value=\"false\" />\n        </javaTypeResolver>\n\n        <!-- targetPackage:生成PO类的位置 -->\n        <!--targetProject:指定存在的目录-->\n        <javaModelGenerator targetPackage=\"com.hui.pojo\"\n                            targetProject=\"src/main/java\">\n            <!-- enableSubPackages:是否让schema作为包的后缀 -->\n            <property name=\"enableSubPackages\" value=\"false\" />\n            <!-- 从数据库返回的值被清理前后的空格 -->\n            <property name=\"trimStrings\" value=\"true\" />\n        </javaModelGenerator>\n        <!-- targetProject:mapper映射文件生成的位置 -->\n        <sqlMapGenerator targetPackage=\"mapper\"\n                         targetProject=\"src/main/resources\">\n            <!-- enableSubPackages:是否让schema作为包的后缀 -->\n            <property name=\"enableSubPackages\" value=\"false\" />\n        </sqlMapGenerator>\n        <!-- targetPackage：mapper接口生成的位置 -->\n        <javaClientGenerator type=\"XMLMAPPER\"\n                             targetPackage=\"com.hui.mapper\"\n                             targetProject=\"src/main/java\">\n            <!-- enableSubPackages:是否让schema作为包的后缀 -->\n            <property name=\"enableSubPackages\" value=\"false\" />\n        </javaClientGenerator>\n\n        <!-- 指定数据库表 -->\n        <table schema=\"\" tableName=\"user\"></table>\n        <table schema=\"\" tableName=\"goods\"></table>\n\n    </context>\n</generatorConfiguration>\n```\n\n#### 编写执行代码GeneratorSqlmap.java\n\n新创建一个java执行文件（我创建在了com/hui/startup包下），使用以下代码执行。别忘记了修改逆向工程的配置文件路径\n\n```java\npackage com.hui.startup;\n\nimport org.mybatis.generator.api.MyBatisGenerator;\nimport org.mybatis.generator.config.Configuration;\nimport org.mybatis.generator.config.xml.ConfigurationParser;\nimport org.mybatis.generator.internal.DefaultShellCallback;\n\nimport java.io.File;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class GeneratorSqlmap {\n\n    public void generator() throws Exception{\n\n        List<String> warnings = new ArrayList<String>();\n        boolean overwrite = true;\n        //指定 逆向工程配置文件\n        File configFile = new File(\"src\\\\main\\\\resources\\\\generatorConfig.xml\");\n        ConfigurationParser cp = new ConfigurationParser(warnings);\n        Configuration config = cp.parseConfiguration(configFile);\n        DefaultShellCallback callback = new DefaultShellCallback(overwrite);\n        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config,\n                callback, warnings);\n        myBatisGenerator.generate(null);\n\n    }\n    public static void main(String[] args) throws Exception {\n        try {\n            GeneratorSqlmap generatorSqlmap = new GeneratorSqlmap();\n            generatorSqlmap.generator();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n#### 执行GeneratorSqlmap.java\n\n执行后生成的代码结构如下：\n\n![逆向工程](generator.png)\n\n## springboot搭建逆向工程\n\n#### 创建springboot\n\n初始化时添加的依赖：\n\n* Spring Boot DevTools\n* Lombok\n* Mybatis Framework\n\n#### Pom文件\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.13.RELEASE</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n    <groupId>com.hui</groupId>\n    <artifactId>springbootgenerator</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>springbootgenerator</name>\n    <description>Demo project for Spring Boot</description>\n\n\n    <properties>\n        <java.version>1.8</java.version>\n        <targetJavaProject>src/main/java</targetJavaProject>\n        <!-- XML生成路径 -->\n        <targetResourcesProject>src/main/resources</targetResourcesProject>\n        <targetXMLPackage>mapper</targetXMLPackage>\n        <targetMapperPackage>com.hui.dao</targetMapperPackage>\n        <targetModelPackage>com.hui.pojo</targetModelPackage>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n            <version>2.1.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <scope>runtime</scope>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.junit.vintage</groupId>\n                    <artifactId>junit-vintage-engine</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>org.mybatis.generator</groupId>\n                <artifactId>mybatis-generator-maven-plugin</artifactId>\n                <version>1.3.7</version>\n                <configuration>\n                    <!-- generator 工具配置文件的位置 -->\n                    <configurationFile>src/main/resources/generatorConfig.xml</configurationFile>\n                    <verbose>true</verbose>\n                    <overwrite>true</overwrite>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.mybatis.generator</groupId>\n                        <artifactId>mybatis-generator-core</artifactId>\n                        <version>1.3.7</version>\n                    </dependency>\n\n                    <dependency>\n                        <groupId>mysql</groupId>\n                        <artifactId>mysql-connector-java</artifactId>\n                        <version>5.1.41</version>\n                    </dependency>\n\n                    <dependency>\n                        <groupId>tk.mybatis</groupId>\n                        <artifactId>mapper</artifactId>\n                        <version>3.4.6</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n```\n\n#### GeneratorConfig.xml\n\ngeneratorConfig.xml是逆向工程的核心配置文件\n\n该文件放在位置：在resources下\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE generatorConfiguration\n        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\">\n<!-- mybatis-generator的核心配置文件 -->\n<generatorConfiguration>\n    <!-- 数据库驱动位置 -->\n<!--    <classPathEntry location=\"D:\\maven_repository\\mysql\\mysql-connector-java\\5.1.41\\mysql-connector-java-5.1.41.jar\" />-->\n\n    <context id=\"DB2Tables\" targetRuntime=\"MyBatis3\">\n        <jdbcConnection driverClass=\"com.mysql.jdbc.Driver\"\n                        connectionURL=\"jdbc:mysql://192.168.31.140:3306/test?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false\"\n                        userId=\"root\"\n                        password=\"123456\">\n        </jdbcConnection>\n\n        <!--指定生成的类型为java类型，避免数据库中number等类型字段 -->\n        <javaTypeResolver >\n            <property name=\"forceBigDecimals\" value=\"false\" />\n        </javaTypeResolver>\n\n        <!--自动生成的实体的存放包路径          举个例子：生成Goods.java和GoodsExample.java-->\n        <javaModelGenerator targetPackage=\"${targetModelPackage}\" targetProject=\"${targetJavaProject}\">\n            <property name=\"enableSubPackages\" value=\"true\" />\n            <property name=\"trimStrings\" value=\"true\" />\n        </javaModelGenerator>\n\n        <!--自动生成的*Mapper.xml文件存放路径   举个例子：GoodsMapper.xml-->\n        <sqlMapGenerator targetPackage=\"${targetXMLPackage}\"  targetProject=\"${targetResourcesProject}\">\n            <property name=\"enableSubPackages\" value=\"true\" />\n        </sqlMapGenerator>\n        <!--自动生成的*Mapper.java存放路径      举个例子：GoodsMapper.java-->\n        <javaClientGenerator type=\"XMLMAPPER\" targetPackage=\"${targetMapperPackage}\"  targetProject=\"${targetJavaProject}\">\n            <property name=\"enableSubPackages\" value=\"true\" />\n        </javaClientGenerator>\n        <!-- 映射配置     上面生成的名称，开头都以domainObjectName命名的\"TbgShop\"开头-->\n        <table tableName=\"goods\" domainObjectName=\"Goods\" ></table>\n        <table tableName=\"student\" domainObjectName=\"Student\" ></table>\n        <table tableName=\"user\" domainObjectName=\"User\" ></table>\n    </context>\n</generatorConfiguration>\n```\n\n#### 执行插件\n\n![](springbootgenerator.png)\n\n运行之后，就可以生成相应的mapper，pojo和xml文件，文件夹会自动创建。\n","slug":"2020-04-01-01-Mybatis逆向工程搭建","published":1,"updated":"2020-04-01T12:55:11.028Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wi004254tn7i8ldsl0","content":"<center><font size=\"4\" color=\"red\">01-Mybatis逆向工程搭建</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Mybatis逆向工程搭建\"><a href=\"#Mybatis逆向工程搭建\" class=\"headerlink\" title=\"Mybatis逆向工程搭建\"></a>Mybatis逆向工程搭建</h1><p>由于目前很多公司都在使用逆向工程生成Mybatis所需要的mapper文件和pojo文件，所以我这里也总结了一下Mybatis的逆向工程的搭建，亲身实践，绝对可靠</p>\n<h2 id=\"不使用springboot\"><a href=\"#不使用springboot\" class=\"headerlink\" title=\"不使用springboot\"></a>不使用springboot</h2><h4 id=\"搭建maven工程，导入依赖jar包\"><a href=\"#搭建maven工程，导入依赖jar包\" class=\"headerlink\" title=\"搭建maven工程，导入依赖jar包\"></a>搭建maven工程，导入依赖jar包</h4><p>第一步肯定是要在maven工程中导入所依赖的jar包,主要jar包是下面3个，如果需要，可以在导入log4j的jar包，顺便说一下，我用的mysql数据库版本是5.7.22</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建generatorConfig-xml配置文件\"><a href=\"#创建generatorConfig-xml配置文件\" class=\"headerlink\" title=\"创建generatorConfig.xml配置文件\"></a>创建generatorConfig.xml配置文件</h4><p>generatorConfig.xml配置文件是逆向工程的核心配置文件。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        id:必选，上下文id，用于在生成错误时提示</span></span><br><span class=\"line\"><span class=\"comment\">        MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample</span></span><br><span class=\"line\"><span class=\"comment\">     --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"testTables\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置生成pojo的序列化的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">type</span>=<span class=\"string\">\"org.mybatis.generator.plugins.SerializablePlugin\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置生成pojo的toString()方法的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">type</span>=<span class=\"string\">\"org.mybatis.generator.plugins.ToStringPlugin\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">commentGenerator</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suppressAllComments\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">commentGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">connectionURL</span>=<span class=\"string\">\"jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8\"</span> <span class=\"attr\">userId</span>=<span class=\"string\">\"root\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">password</span>=<span class=\"string\">\"123456\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和</span></span><br><span class=\"line\"><span class=\"comment\">            NUMERIC 类型解析为java.math.BigDecimal --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型</span></span><br><span class=\"line\"><span class=\"comment\">                false：默认,</span></span><br><span class=\"line\"><span class=\"comment\">                    scale&gt;0;length&gt;18：使用BigDecimal;</span></span><br><span class=\"line\"><span class=\"comment\">                    scale=0;length[10,18]：使用Long；</span></span><br><span class=\"line\"><span class=\"comment\">                    scale=0;length[5,9]：使用Integer；</span></span><br><span class=\"line\"><span class=\"comment\">                    scale=0;length&lt;5：使用Short；</span></span><br><span class=\"line\"><span class=\"comment\">             --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- targetPackage:生成PO类的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--targetProject:指定存在的目录--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"com.hui.pojo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- targetProject:mapper映射文件生成的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"mapper\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/resources\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- targetPackage：mapper接口生成的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">\"XMLMAPPER\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                             <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"com.hui.mapper\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                             <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 指定数据库表 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">schema</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"user\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">schema</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"goods\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"编写执行代码GeneratorSqlmap-java\"><a href=\"#编写执行代码GeneratorSqlmap-java\" class=\"headerlink\" title=\"编写执行代码GeneratorSqlmap.java\"></a>编写执行代码GeneratorSqlmap.java</h4><p>新创建一个java执行文件（我创建在了com/hui/startup包下），使用以下代码执行。别忘记了修改逆向工程的配置文件路径</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.startup;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.config.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GeneratorSqlmap</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">generator</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;String&gt; warnings = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> overwrite = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"comment\">//指定 逆向工程配置文件</span></span><br><span class=\"line\">        File configFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"src\\\\main\\\\resources\\\\generatorConfig.xml\"</span>);</span><br><span class=\"line\">        ConfigurationParser cp = <span class=\"keyword\">new</span> ConfigurationParser(warnings);</span><br><span class=\"line\">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class=\"line\">        DefaultShellCallback callback = <span class=\"keyword\">new</span> DefaultShellCallback(overwrite);</span><br><span class=\"line\">        MyBatisGenerator myBatisGenerator = <span class=\"keyword\">new</span> MyBatisGenerator(config,</span><br><span class=\"line\">                callback, warnings);</span><br><span class=\"line\">        myBatisGenerator.generate(<span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            GeneratorSqlmap generatorSqlmap = <span class=\"keyword\">new</span> GeneratorSqlmap();</span><br><span class=\"line\">            generatorSqlmap.generator();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"执行GeneratorSqlmap-java\"><a href=\"#执行GeneratorSqlmap-java\" class=\"headerlink\" title=\"执行GeneratorSqlmap.java\"></a>执行GeneratorSqlmap.java</h4><p>执行后生成的代码结构如下：</p>\n<p><img src=\"/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/generator.png\" alt=\"逆向工程\"></p>\n<h2 id=\"springboot搭建逆向工程\"><a href=\"#springboot搭建逆向工程\" class=\"headerlink\" title=\"springboot搭建逆向工程\"></a>springboot搭建逆向工程</h2><h4 id=\"创建springboot\"><a href=\"#创建springboot\" class=\"headerlink\" title=\"创建springboot\"></a>创建springboot</h4><p>初始化时添加的依赖：</p>\n<ul>\n<li>Spring Boot DevTools</li>\n<li>Lombok</li>\n<li>Mybatis Framework</li>\n</ul>\n<h4 id=\"Pom文件\"><a href=\"#Pom文件\" class=\"headerlink\" title=\"Pom文件\"></a>Pom文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.13.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.hui<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springbootgenerator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>springbootgenerator<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Demo project for Spring Boot<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetJavaProject</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">targetJavaProject</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- XML生成路径 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetResourcesProject</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">targetResourcesProject</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetXMLPackage</span>&gt;</span>mapper<span class=\"tag\">&lt;/<span class=\"name\">targetXMLPackage</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetMapperPackage</span>&gt;</span>com.hui.dao<span class=\"tag\">&lt;/<span class=\"name\">targetMapperPackage</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetModelPackage</span>&gt;</span>com.hui.pojo<span class=\"tag\">&lt;/<span class=\"name\">targetModelPackage</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-devtools<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>runtime<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.junit.vintage<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit-vintage-engine<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- generator 工具配置文件的位置 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">configurationFile</span>&gt;</span>src/main/resources/generatorConfig.xml<span class=\"tag\">&lt;/<span class=\"name\">configurationFile</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">verbose</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbose</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">overwrite</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">overwrite</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.41<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>tk.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mapper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"GeneratorConfig-xml\"><a href=\"#GeneratorConfig-xml\" class=\"headerlink\" title=\"GeneratorConfig.xml\"></a>GeneratorConfig.xml</h4><p>generatorConfig.xml是逆向工程的核心配置文件</p>\n<p>该文件放在位置：在resources下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- mybatis-generator的核心配置文件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据库驱动位置 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;classPathEntry location=\"D:\\maven_repository\\mysql\\mysql-connector-java\\5.1.41\\mysql-connector-java-5.1.41.jar\" /&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"DB2Tables\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">connectionURL</span>=<span class=\"string\">\"jdbc:mysql://192.168.31.140:3306/test?useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;useSSL=false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">userId</span>=<span class=\"string\">\"root\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">password</span>=<span class=\"string\">\"123456\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--指定生成的类型为java类型，避免数据库中number等类型字段 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--自动生成的实体的存放包路径          举个例子：生成Goods.java和GoodsExample.java--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"$&#123;targetModelPackage&#125;\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"$&#123;targetJavaProject&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--自动生成的*Mapper.xml文件存放路径   举个例子：GoodsMapper.xml--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"$&#123;targetXMLPackage&#125;\"</span>  <span class=\"attr\">targetProject</span>=<span class=\"string\">\"$&#123;targetResourcesProject&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--自动生成的*Mapper.java存放路径      举个例子：GoodsMapper.java--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">\"XMLMAPPER\"</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"$&#123;targetMapperPackage&#125;\"</span>  <span class=\"attr\">targetProject</span>=<span class=\"string\">\"$&#123;targetJavaProject&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 映射配置     上面生成的名称，开头都以domainObjectName命名的\"TbgShop\"开头--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"goods\"</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">\"Goods\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"student\"</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">\"Student\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">\"User\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"执行插件\"><a href=\"#执行插件\" class=\"headerlink\" title=\"执行插件\"></a>执行插件</h4><p><img src=\"/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/springbootgenerator.png\" alt></p>\n<p>运行之后，就可以生成相应的mapper，pojo和xml文件，文件夹会自动创建。</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">01-Mybatis逆向工程搭建</font></center>","more":"<h1 id=\"Mybatis逆向工程搭建\"><a href=\"#Mybatis逆向工程搭建\" class=\"headerlink\" title=\"Mybatis逆向工程搭建\"></a>Mybatis逆向工程搭建</h1><p>由于目前很多公司都在使用逆向工程生成Mybatis所需要的mapper文件和pojo文件，所以我这里也总结了一下Mybatis的逆向工程的搭建，亲身实践，绝对可靠</p>\n<h2 id=\"不使用springboot\"><a href=\"#不使用springboot\" class=\"headerlink\" title=\"不使用springboot\"></a>不使用springboot</h2><h4 id=\"搭建maven工程，导入依赖jar包\"><a href=\"#搭建maven工程，导入依赖jar包\" class=\"headerlink\" title=\"搭建maven工程，导入依赖jar包\"></a>搭建maven工程，导入依赖jar包</h4><p>第一步肯定是要在maven工程中导入所依赖的jar包,主要jar包是下面3个，如果需要，可以在导入log4j的jar包，顺便说一下，我用的mysql数据库版本是5.7.22</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.2.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/org.mybatis.generator/mybatis-generator-core --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.28<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"创建generatorConfig-xml配置文件\"><a href=\"#创建generatorConfig-xml配置文件\" class=\"headerlink\" title=\"创建generatorConfig.xml配置文件\"></a>创建generatorConfig.xml配置文件</h4><p>generatorConfig.xml配置文件是逆向工程的核心配置文件。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        id:必选，上下文id，用于在生成错误时提示</span></span><br><span class=\"line\"><span class=\"comment\">        MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample</span></span><br><span class=\"line\"><span class=\"comment\">     --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"testTables\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置生成pojo的序列化的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">type</span>=<span class=\"string\">\"org.mybatis.generator.plugins.SerializablePlugin\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 配置生成pojo的toString()方法的插件，mybatis支持很多插件，这些插件都在 org.mybatis.generator.plugins包下 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">type</span>=<span class=\"string\">\"org.mybatis.generator.plugins.ToStringPlugin\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">commentGenerator</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"suppressAllComments\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">commentGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--数据库连接的信息：驱动类、连接地址、用户名、密码 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">connectionURL</span>=<span class=\"string\">\"jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8\"</span> <span class=\"attr\">userId</span>=<span class=\"string\">\"root\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">password</span>=<span class=\"string\">\"123456\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和</span></span><br><span class=\"line\"><span class=\"comment\">            NUMERIC 类型解析为java.math.BigDecimal --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">                true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型</span></span><br><span class=\"line\"><span class=\"comment\">                false：默认,</span></span><br><span class=\"line\"><span class=\"comment\">                    scale&gt;0;length&gt;18：使用BigDecimal;</span></span><br><span class=\"line\"><span class=\"comment\">                    scale=0;length[10,18]：使用Long；</span></span><br><span class=\"line\"><span class=\"comment\">                    scale=0;length[5,9]：使用Integer；</span></span><br><span class=\"line\"><span class=\"comment\">                    scale=0;length&lt;5：使用Short；</span></span><br><span class=\"line\"><span class=\"comment\">             --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- targetPackage:生成PO类的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--targetProject:指定存在的目录--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"com.hui.pojo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                            <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 从数据库返回的值被清理前后的空格 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- targetProject:mapper映射文件生成的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"mapper\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                         <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/resources\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- targetPackage：mapper接口生成的位置 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">\"XMLMAPPER\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                             <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"com.hui.mapper\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                             <span class=\"attr\">targetProject</span>=<span class=\"string\">\"src/main/java\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- enableSubPackages:是否让schema作为包的后缀 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 指定数据库表 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">schema</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"user\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">schema</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"goods\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"编写执行代码GeneratorSqlmap-java\"><a href=\"#编写执行代码GeneratorSqlmap-java\" class=\"headerlink\" title=\"编写执行代码GeneratorSqlmap.java\"></a>编写执行代码GeneratorSqlmap.java</h4><p>新创建一个java执行文件（我创建在了com/hui/startup包下），使用以下代码执行。别忘记了修改逆向工程的配置文件路径</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.startup;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.api.MyBatisGenerator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.config.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.config.xml.ConfigurationParser;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.mybatis.generator.internal.DefaultShellCallback;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GeneratorSqlmap</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">generator</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;String&gt; warnings = <span class=\"keyword\">new</span> ArrayList&lt;String&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> overwrite = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"comment\">//指定 逆向工程配置文件</span></span><br><span class=\"line\">        File configFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"src\\\\main\\\\resources\\\\generatorConfig.xml\"</span>);</span><br><span class=\"line\">        ConfigurationParser cp = <span class=\"keyword\">new</span> ConfigurationParser(warnings);</span><br><span class=\"line\">        Configuration config = cp.parseConfiguration(configFile);</span><br><span class=\"line\">        DefaultShellCallback callback = <span class=\"keyword\">new</span> DefaultShellCallback(overwrite);</span><br><span class=\"line\">        MyBatisGenerator myBatisGenerator = <span class=\"keyword\">new</span> MyBatisGenerator(config,</span><br><span class=\"line\">                callback, warnings);</span><br><span class=\"line\">        myBatisGenerator.generate(<span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            GeneratorSqlmap generatorSqlmap = <span class=\"keyword\">new</span> GeneratorSqlmap();</span><br><span class=\"line\">            generatorSqlmap.generator();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"执行GeneratorSqlmap-java\"><a href=\"#执行GeneratorSqlmap-java\" class=\"headerlink\" title=\"执行GeneratorSqlmap.java\"></a>执行GeneratorSqlmap.java</h4><p>执行后生成的代码结构如下：</p>\n<p><img src=\"/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/generator.png\" alt=\"逆向工程\"></p>\n<h2 id=\"springboot搭建逆向工程\"><a href=\"#springboot搭建逆向工程\" class=\"headerlink\" title=\"springboot搭建逆向工程\"></a>springboot搭建逆向工程</h2><h4 id=\"创建springboot\"><a href=\"#创建springboot\" class=\"headerlink\" title=\"创建springboot\"></a>创建springboot</h4><p>初始化时添加的依赖：</p>\n<ul>\n<li>Spring Boot DevTools</li>\n<li>Lombok</li>\n<li>Mybatis Framework</li>\n</ul>\n<h4 id=\"Pom文件\"><a href=\"#Pom文件\" class=\"headerlink\" title=\"Pom文件\"></a>Pom文件</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span> <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">         <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.13.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>/&gt;</span> <span class=\"comment\">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.hui<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>springbootgenerator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>springbootgenerator<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Demo project for Spring Boot<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetJavaProject</span>&gt;</span>src/main/java<span class=\"tag\">&lt;/<span class=\"name\">targetJavaProject</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- XML生成路径 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetResourcesProject</span>&gt;</span>src/main/resources<span class=\"tag\">&lt;/<span class=\"name\">targetResourcesProject</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetXMLPackage</span>&gt;</span>mapper<span class=\"tag\">&lt;/<span class=\"name\">targetXMLPackage</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetMapperPackage</span>&gt;</span>com.hui.dao<span class=\"tag\">&lt;/<span class=\"name\">targetMapperPackage</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">targetModelPackage</span>&gt;</span>com.hui.pojo<span class=\"tag\">&lt;/<span class=\"name\">targetModelPackage</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.spring.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-devtools<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>runtime<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.projectlombok<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>lombok<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">optional</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">optional</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>test<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.junit.vintage<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit-vintage-engine<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">exclusion</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">exclusions</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"comment\">&lt;!-- generator 工具配置文件的位置 --&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">configurationFile</span>&gt;</span>src/main/resources/generatorConfig.xml<span class=\"tag\">&lt;/<span class=\"name\">configurationFile</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">verbose</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">verbose</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">overwrite</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">overwrite</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.mybatis.generator<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-generator-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.7<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.41<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>tk.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mapper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">                        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.4.6<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"GeneratorConfig-xml\"><a href=\"#GeneratorConfig-xml\" class=\"headerlink\" title=\"GeneratorConfig.xml\"></a>GeneratorConfig.xml</h4><p>generatorConfig.xml是逆向工程的核心配置文件</p>\n<p>该文件放在位置：在resources下</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class=\"line\"><span class=\"meta\">        PUBLIC \"-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- mybatis-generator的核心配置文件 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 数据库驱动位置 --&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;classPathEntry location=\"D:\\maven_repository\\mysql\\mysql-connector-java\\5.1.41\\mysql-connector-java-5.1.41.jar\" /&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context</span> <span class=\"attr\">id</span>=<span class=\"string\">\"DB2Tables\"</span> <span class=\"attr\">targetRuntime</span>=<span class=\"string\">\"MyBatis3\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jdbcConnection</span> <span class=\"attr\">driverClass</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">connectionURL</span>=<span class=\"string\">\"jdbc:mysql://192.168.31.140:3306/test?useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;useSSL=false\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">userId</span>=<span class=\"string\">\"root\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                        <span class=\"attr\">password</span>=<span class=\"string\">\"123456\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">jdbcConnection</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--指定生成的类型为java类型，避免数据库中number等类型字段 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaTypeResolver</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"forceBigDecimals\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaTypeResolver</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--自动生成的实体的存放包路径          举个例子：生成Goods.java和GoodsExample.java--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaModelGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"$&#123;targetModelPackage&#125;\"</span> <span class=\"attr\">targetProject</span>=<span class=\"string\">\"$&#123;targetJavaProject&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"trimStrings\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaModelGenerator</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--自动生成的*Mapper.xml文件存放路径   举个例子：GoodsMapper.xml--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">sqlMapGenerator</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"$&#123;targetXMLPackage&#125;\"</span>  <span class=\"attr\">targetProject</span>=<span class=\"string\">\"$&#123;targetResourcesProject&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">sqlMapGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--自动生成的*Mapper.java存放路径      举个例子：GoodsMapper.java--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">javaClientGenerator</span> <span class=\"attr\">type</span>=<span class=\"string\">\"XMLMAPPER\"</span> <span class=\"attr\">targetPackage</span>=<span class=\"string\">\"$&#123;targetMapperPackage&#125;\"</span>  <span class=\"attr\">targetProject</span>=<span class=\"string\">\"$&#123;targetJavaProject&#125;\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"enableSubPackages\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">javaClientGenerator</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 映射配置     上面生成的名称，开头都以domainObjectName命名的\"TbgShop\"开头--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"goods\"</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">\"Goods\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"student\"</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">\"Student\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">tableName</span>=<span class=\"string\">\"user\"</span> <span class=\"attr\">domainObjectName</span>=<span class=\"string\">\"User\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">context</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"执行插件\"><a href=\"#执行插件\" class=\"headerlink\" title=\"执行插件\"></a>执行插件</h4><p><img src=\"/2020/04/02/2020-04-01-01-Mybatis逆向工程搭建/springbootgenerator.png\" alt></p>\n<p>运行之后，就可以生成相应的mapper，pojo和xml文件，文件夹会自动创建。</p>"},{"title":"01-redis搭建","date":"2020-04-01T20:58:10.000Z","_content":"\n<center><font size=4 color=\"red\">01-redis搭建</font></center>\n\n<!--more-->\n\n## Redis介绍和使用\n\n#### 什么是redis\n\nRedis是用C语言开发的一个开源的高性能键值对（key-value）数据库（nosql），应用在缓存。它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型有5种。\n\n> Redis中所有数据都是字符串\n\n#### redis的安装\n\n这里主要介绍源码的安装方式，安装包的安装方式自行百度解决。\n\n**环境准备**\n\n```shell\n#1.安装gcc g++的依赖库\n$ sudo apt-get install build-essential\n$ sudo apt-get install libtool\n#2.安装pcre依赖库\n$ sudo apt-get update\n$ sudo apt-get install libpcre3 libpcre3-dev\n#3.安装zlib依赖库\n$ sudo apt-get install zlib1g-dev\n#4.安装ssl依赖库\n$ sudo apt-get install openssl\n#5.验证gcc是否安装成功\n$ gcc -v\n```\n\n**安装Redis**,[Redis官网](https://redis.io/)\n\n```shell\n# 下载1.8.0版本：\nsudo wget wget http://download.redis.io/releases/redis-4.0.8.tar.gz\n# 解压：\ntar -zxvf redis-4.0.8.tar.gz\n#进入解压目录：\ncd redis-4.0.8\n```\n\n**编译和安装**\n\n```shell\n#1.生成脚本和配置文件\n$ make\n#2.安装 ，如果一下命令没有安装到/usr/local下，需要先mkdir /usr/local/redis\n$ sudo make install PREFIX=/usr/local/redis\n```\n\n> 如果编译出错，可以make clean后重新make，进行编译\n\n**启动redis**\n\n**先添加一下redis的日志文件，后面发现没有日志使用`./redis-cli shutdown`时会报错,在`/usr/local/redis/bin/redis.conf`文件下编译`logfile \"\"`为`logfile \"redis.log\"`,这里的路径是相对路径，如果启动不了，使用`chmod 777 redis.log`赋权**\n\n```shell\n#进入启动目录\ncd /usr/local/redis/bin\n#启动redis\n./redis-server\n```\n\n启动结果如下，这样启动是前台的启动，控制台被占用，无法再操作控制台，所以设置守护进程启动。下面那个我按ctrl+c无法关闭，后来还是杀进程关闭的\n\n![](redisserver.png)\n\n**设置守护进程启动**\n\n```shell\n#复制一份redis.conf文件到/usr/local/redis/bin\n$ sudo cp /home/wanghui/redis-4.0.8/redis.conf /usr/local/redis/bin\n```\n\n修改`daemonize no` 改成`daemonize yes`\n\n**后端启动**\n\n```shell\n$ cd /usr/local/redis/bin\n#通过制定redis.conf来启动redis\n$ sudo ./redis-server redis.conf\n#查看进程是否启动\n$ ps -ef | grep redis\n# 连接redis,完整命令为 ./redis-cli -h 192.168.25.152(ip) -p 6379(端口)\n$ ./redis-cli\n#断开连接\nctrl+c\n#关闭redis服务，杀死redis进程也可以\n$ ./redis-cli shutdown\n```\n\n\n\n#### redis的使用\n\n5中键值对数据里库类型使用如下：\n\n* 字符串类型（String）：存的是key-value\n\n  set key value 设置值  (例如：set name zhangsan)\n\n  get key 获取值\n\n  incr key 加一，如果value设置的不是数字，是不能执行的\n\n  decr key减一\n\n* 数列类型（hash）：相当于一个key对应一个map(map中又是key-value)\n\n  hset key field value 设置值\n\n  hget key field 获取值\n\n  hincrby key field num 设置增数量\n\n* 列表类型（List）：list是有顺序，可重复，可从左边添加元素，也可以从右边添加元素\n\n  lpush list a b c d ：从右面向左边添加元素（从左边添加元素），即d c b a，其中list是名称\n\n  rpuah list 1 2 3 4：从右边添加元素\n\n  lrange list 0 -1 ：从0到-1元素查看，表示查看所有\n\n  lpop：从左边取，取出的同时也是被删除了\n\n  rpop：从右边取，取出的同时也是被删除了\n\n* 集合类型（set）：无顺序，不能重复，如果添加重复元素，只会加入一个\n\n  sadd set1 a b c d d :像set1中添加元素\n\n  smembers set1:查询名称为set1下的元素\n\n  srem set1 a：删除名称为set1下的a元素\n\n* 有序集合类型（SortedSet）：也叫zset，有顺序，不能重复。适合做排行榜\n\n  zadd zset1 9 a 8 c 10 d 1 e:添加元素（zadd zset1 score member）,这个添加了4个元素，分别是a c d e，其对应分数分别为9 8 10 1\n\n  zrange zset1 0 -1：根据zset1中的分数（从低到高）查看元素（这里的a c d e是元素）\n\n  zrange zset1 0 -1 withscores ：查看所有元素和分数\n\n  zrevrange zset1 0 -1 :按分数降序（分数从高到低）排序查看元素\n\n  zincrby zset1 5 a：对a元素添加5分，得到的结果是a元素变成14分（9+5）\n\n#### 常用命令\n\nauth password：输入密码\n\ndbsize：查看key的数量\n\nexpire key second：设置key的过期时间（单位是秒）\n\nttl key：查看key距离过期的剩余时间（-2表示不存在，-1表示已被持久化，正数表示剩余的时间）\n\npersist key：清除过期时间，也就是持久化，持久化成功提示是1，失败提示是0\n\ndel key：删除key\n\nEXISTS key：查看key是否存在，若key存在，返回1，否则返回0\n\nselect 0：表示，选择0号数据库，默认是0号数据库\n\n#### redis的持久化方案\n\nRedis的数据都保存在内存中，如果机器挂掉，内存中的数据就不存在，因此需要做持久化，将内存中的数据保存在磁盘，下一次启动的时候就可以恢复数据到内存中\n\nredis有两种持久化的方式\n\n1. RDB ：快照形式，定期将当前数据保存到磁盘中，会产生一个dump.rdb(redis的bin目录下)文件。\n\n   特点：会存在数据丢失，性能较好，数据备份。\n\n   使用方式：\n\n   在redis.conf中默认配置了保存规则及时间间隔\n\n   ```\n   save 900 1       //表示在900秒（15分钟）内修改了至少1个key，就会产生一个dump.rdb文件\n   save 300 10      //表示在300秒（5分钟）内修改了至少10个key，就会产生一个dump.rdb文件\n   save 60 10000    //表示在60秒（1分钟）内修改了至少10000个key，就会产生一个dump.rdb文件\n   ```\n\n2. AOF：append only file，所有对redis的操作命令记录在aof文件中，恢复数据，重新执行一遍即可。\n\n   特点：每秒保存（可以设置每次操作都保存一次），数据比较完整，耗费性能\n\n   默认是不开启的，如果需要开启，需要在redis.conf下修改配置\n\n   ```\n   appendonly no   //将no改成yes就开启了AOF\n   ```\n\n   重新运行redis，会在bin目录下生成一个appendonly.aof的文件 \n\n> redis默认开启的是RDB，如果同时开启两个持久化方案，会按照AOF的持久化方案恢复数据\n\n## redis集群的搭建\n\n#### redis cluster节点分配\n现在我们是三个主节点分别是：A, B, C 三个节点，它们可以是一台机器上的三个端口，也可以是三台不同的服务器。那么，采用哈希槽 (hash slot)的方式来分配16384个slot 的话，它们三个节点分别承担的slot 区间是：\n\n- 节点A覆盖0－5460\n- 节点B覆盖5461－10922\n- 节点C覆盖10923－16383\n\n获取数据:\n如果存入一个值，按照redis cluster哈希槽的[算法](http://lib.csdn.net/base/datastructure)： CRC16('key')384 = 6782。 那么就会把这个key 的存储分配到 B 上了。同样，当我连接(A,B,C)任何一个节点想获取'key'这个key时，也会这样的算法，然后内部跳转到B节点上获取数据\n\n新增一个主节点:\n新增一个节点D，redis cluster的这种做法是从各个节点的前面各拿取一部分slot到D上，我会在接下来的实践中实验。大致就会变成这样：\n\n- 节点A覆盖1365-5460\n- 节点B覆盖6827-10922\n- 节点C覆盖12288-16383\n- 节点D覆盖0-1364,5461-6826,10923-12287\n\n同样删除一个节点也是类似，移动完成后就可以删除这个节点了。\n\n#### Redis Cluster主从模式\n redis cluster 为了保证数据的高可用性，加入了主从模式，一个主节点对应一个或多个从节点，主节点提供数据存取，从节点则是从主节点拉取数据备份，当这个主节点挂掉后，就会有这个从节点选取一个来充当主节点，从而保证集群不会挂掉\n\n上面那个例子里, 集群有ABC三个主节点, 如果这3个节点都没有加入从节点，如果B挂掉了，我们就无法访问整个集群了。A和C的slot也无法访问。\n\n所以我们在集群建立的时候，一定要为每个主节点都添加了从节点, 比如像这样, 集群包含主节点A、B、C, 以及从节点A1、B1、C1, 那么即使B挂掉系统也可以继续正确工作。\n\nB1节点替代了B节点，所以Redis集群将会选择B1节点作为新的主节点，集群将会继续正确地提供服务。 当B重新开启后，它就会变成B1的从节点。\n\n不过需要注意，如果节点B和B1同时挂了，Redis集群就无法继续正确地提供服务了。\n\n#### redis-cluster集群的搭建\n\n环境\n\n```\n操作系统：Ubuntu18.04\nredis版本：5.0.3\n\nredis集群环境：192.168.25.152 192.168.25.153 192.168.25.154\n每个环境上有2个节点，一个maste，一个slave\n```\n\n集群中至少应该有奇数个节点，所以至少有三个节点，每个节点至少有一个备份节点，所以下面使用6节点（主节点、备份节点由redis-cluster集群确定）\n\n安装redis，这里我把3个主节点放在3台服务器上，分别安装，安装步骤操作单节点的安装。从节点我分别装在对应的主节点服务器上\n\n**1、安装redis并配置**\n\n安装方式见redis单节点的安装，然后在`/usr/local`下创建文件夹redis-cluster,复制两份redis到redis-cluster文件夹下，命名为redis-master和redis-slave。\n\n修改redis .conf配置文件的部分内容如下：\n\n```shell\nbind 192.168.25.152  # 可以不用改\nport 7000 #修改端口号\ndaemonize yes #后台启动,单节点时就配置好了\npidfile /var/run/redis_7001.pid\ndir /usr/local/redis-cluster/redis-master/bin/redis-data  # 比较重要，因为备份文件存在这个配置的redis-data文件夹下\ncluster-enabled yes #开启cluster，去掉注释\ncluster-config-file nodes-7000.conf #自动生成 ，去掉注释\ncluster-node-timeout 15000 #节点通信时间， 去掉注释\nappendonly no #持久化方式，使用默认的持久化方式就可\ncluster-require-full-coverage no　　# redis cluster需要16384个slot都正常的时候才能对外提供服务，换句话说，只要任何一个slot异常那么整个cluster不对外提供服务。 因此生产环境一般为no  去掉注释，改成no\n```\n\n**2、运行redis实例**\n\n在3个服务器上分别执行一下命令启动redis,可以在redis-cluster文件夹下直接写成脚本\n\n```shell\n#!/bin/bash\ncd /usr/local/redis-cluster/redis-master/bin\n./redis-server redis.conf\ncd /usr/local/redis-cluster/redis-slave/bin\n./redis-server redis.conf\necho \"redis-cluste start success\"\n```\n\n编写shutdown的脚本\n\n```shell\n#!/bin/bash\n#1. 定义关键字查询进程信息\nfindstr=`echo \"redis\"`\n#2. 查询进程信息保存于proids \n\nps -ef|grep '${findstr}' |grep -v 'grep'|awk '{print $2}'\ni=0\nfor proid in `ps -ef|grep \"${findstr}\"|grep -v 'grep' |awk '{print $2}'`\ndo \n    proids[$i]=$proid\n    let i=$i+1\ndone\n\n#3. 判断查出的进程的数量 \nif [ ${#proids[*]} -eq 0 ]; \nthen\n    echo \"not find proid\"\nelif [ ${#proids[*]} -eq 1 ]; \nthen\n    kill -9 ${proids[0]}\n    echo \"proid[${proids[0]}] was killed\"\nelse\n    for proid in ${proids[@]}\n    do\n\t#4 .把多个进程放到一起，先判断是否为空，如果为空，执行else，接下来不在为空，执行if。这步先留着，其实可以不要\n        if [ $proidstr ];\n        then\n            proidstr=\"$proidstr,$proid\" \n        else\n            proidstr=\"$proid\"\n        fi\n\n\t#5. 杀死进程\n        kill -9 $proid     \n    done \n    echo \"存在${#proids[*]}条进程[${proidstr}], was killed\"\nfi\n```\n\n修改脚本操作权限并启动\n\n```shell\n$ sudo chmod 777 start-all.sh\n$ sudo chmod 777 shutdown-all.sh\n# 开启\n$ sudo ./start-all.sh\n# 关闭\n$ sudo ./shutdown-all.sh\n```\n\n查看是否启动\n\n```shell\nps -ef | grep redis\n```\n\n![](rediscluster.png)\n\n**3、创建开启redis-cluster**\n\n创建开启redis-cluster前需要把所有的redis都启动，然后使用152,153,154中的随便一台服务器。例如我使用的是152服务器上的7000端口的redis\n\n```shell\n# 1.进入源文件的src路径(不是安装的位置，是源文件的位置)\n$ cd /home/wanghui/redis-5.0.3/src\n# 2.创建集群\n$ sudo ./redis-cli --cluster create 192.168.25.152:7000 192.168.25.152:7001 192.168.25.153:7000 192.168.25.153:7001 192.168.25.154:7000 192.168.25.154:7001 --cluster-replicas 1\n# 集群方式登录\n./redis-cli -c -h 192.168.25.152 -p 7000\n# 登录进去后，查看集群状态\ncluster info\n# 查看集群节点\ncluster nodes\n# 检查集群节点状态\n./redis-cli --cluster check 192.168.25.152:7000\n# 修复集群节点\n./redis-cli --cluster fix 192.168.25.152:7000\n```","source":"_posts/2020-04-01-01-redis搭建.md","raw":"---\ntitle: 01-redis搭建\ndate: 2020-04-01 20:58:10\ncategories:\n- redis\ntags:\n- redis\n---\n\n<center><font size=4 color=\"red\">01-redis搭建</font></center>\n\n<!--more-->\n\n## Redis介绍和使用\n\n#### 什么是redis\n\nRedis是用C语言开发的一个开源的高性能键值对（key-value）数据库（nosql），应用在缓存。它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型有5种。\n\n> Redis中所有数据都是字符串\n\n#### redis的安装\n\n这里主要介绍源码的安装方式，安装包的安装方式自行百度解决。\n\n**环境准备**\n\n```shell\n#1.安装gcc g++的依赖库\n$ sudo apt-get install build-essential\n$ sudo apt-get install libtool\n#2.安装pcre依赖库\n$ sudo apt-get update\n$ sudo apt-get install libpcre3 libpcre3-dev\n#3.安装zlib依赖库\n$ sudo apt-get install zlib1g-dev\n#4.安装ssl依赖库\n$ sudo apt-get install openssl\n#5.验证gcc是否安装成功\n$ gcc -v\n```\n\n**安装Redis**,[Redis官网](https://redis.io/)\n\n```shell\n# 下载1.8.0版本：\nsudo wget wget http://download.redis.io/releases/redis-4.0.8.tar.gz\n# 解压：\ntar -zxvf redis-4.0.8.tar.gz\n#进入解压目录：\ncd redis-4.0.8\n```\n\n**编译和安装**\n\n```shell\n#1.生成脚本和配置文件\n$ make\n#2.安装 ，如果一下命令没有安装到/usr/local下，需要先mkdir /usr/local/redis\n$ sudo make install PREFIX=/usr/local/redis\n```\n\n> 如果编译出错，可以make clean后重新make，进行编译\n\n**启动redis**\n\n**先添加一下redis的日志文件，后面发现没有日志使用`./redis-cli shutdown`时会报错,在`/usr/local/redis/bin/redis.conf`文件下编译`logfile \"\"`为`logfile \"redis.log\"`,这里的路径是相对路径，如果启动不了，使用`chmod 777 redis.log`赋权**\n\n```shell\n#进入启动目录\ncd /usr/local/redis/bin\n#启动redis\n./redis-server\n```\n\n启动结果如下，这样启动是前台的启动，控制台被占用，无法再操作控制台，所以设置守护进程启动。下面那个我按ctrl+c无法关闭，后来还是杀进程关闭的\n\n![](redisserver.png)\n\n**设置守护进程启动**\n\n```shell\n#复制一份redis.conf文件到/usr/local/redis/bin\n$ sudo cp /home/wanghui/redis-4.0.8/redis.conf /usr/local/redis/bin\n```\n\n修改`daemonize no` 改成`daemonize yes`\n\n**后端启动**\n\n```shell\n$ cd /usr/local/redis/bin\n#通过制定redis.conf来启动redis\n$ sudo ./redis-server redis.conf\n#查看进程是否启动\n$ ps -ef | grep redis\n# 连接redis,完整命令为 ./redis-cli -h 192.168.25.152(ip) -p 6379(端口)\n$ ./redis-cli\n#断开连接\nctrl+c\n#关闭redis服务，杀死redis进程也可以\n$ ./redis-cli shutdown\n```\n\n\n\n#### redis的使用\n\n5中键值对数据里库类型使用如下：\n\n* 字符串类型（String）：存的是key-value\n\n  set key value 设置值  (例如：set name zhangsan)\n\n  get key 获取值\n\n  incr key 加一，如果value设置的不是数字，是不能执行的\n\n  decr key减一\n\n* 数列类型（hash）：相当于一个key对应一个map(map中又是key-value)\n\n  hset key field value 设置值\n\n  hget key field 获取值\n\n  hincrby key field num 设置增数量\n\n* 列表类型（List）：list是有顺序，可重复，可从左边添加元素，也可以从右边添加元素\n\n  lpush list a b c d ：从右面向左边添加元素（从左边添加元素），即d c b a，其中list是名称\n\n  rpuah list 1 2 3 4：从右边添加元素\n\n  lrange list 0 -1 ：从0到-1元素查看，表示查看所有\n\n  lpop：从左边取，取出的同时也是被删除了\n\n  rpop：从右边取，取出的同时也是被删除了\n\n* 集合类型（set）：无顺序，不能重复，如果添加重复元素，只会加入一个\n\n  sadd set1 a b c d d :像set1中添加元素\n\n  smembers set1:查询名称为set1下的元素\n\n  srem set1 a：删除名称为set1下的a元素\n\n* 有序集合类型（SortedSet）：也叫zset，有顺序，不能重复。适合做排行榜\n\n  zadd zset1 9 a 8 c 10 d 1 e:添加元素（zadd zset1 score member）,这个添加了4个元素，分别是a c d e，其对应分数分别为9 8 10 1\n\n  zrange zset1 0 -1：根据zset1中的分数（从低到高）查看元素（这里的a c d e是元素）\n\n  zrange zset1 0 -1 withscores ：查看所有元素和分数\n\n  zrevrange zset1 0 -1 :按分数降序（分数从高到低）排序查看元素\n\n  zincrby zset1 5 a：对a元素添加5分，得到的结果是a元素变成14分（9+5）\n\n#### 常用命令\n\nauth password：输入密码\n\ndbsize：查看key的数量\n\nexpire key second：设置key的过期时间（单位是秒）\n\nttl key：查看key距离过期的剩余时间（-2表示不存在，-1表示已被持久化，正数表示剩余的时间）\n\npersist key：清除过期时间，也就是持久化，持久化成功提示是1，失败提示是0\n\ndel key：删除key\n\nEXISTS key：查看key是否存在，若key存在，返回1，否则返回0\n\nselect 0：表示，选择0号数据库，默认是0号数据库\n\n#### redis的持久化方案\n\nRedis的数据都保存在内存中，如果机器挂掉，内存中的数据就不存在，因此需要做持久化，将内存中的数据保存在磁盘，下一次启动的时候就可以恢复数据到内存中\n\nredis有两种持久化的方式\n\n1. RDB ：快照形式，定期将当前数据保存到磁盘中，会产生一个dump.rdb(redis的bin目录下)文件。\n\n   特点：会存在数据丢失，性能较好，数据备份。\n\n   使用方式：\n\n   在redis.conf中默认配置了保存规则及时间间隔\n\n   ```\n   save 900 1       //表示在900秒（15分钟）内修改了至少1个key，就会产生一个dump.rdb文件\n   save 300 10      //表示在300秒（5分钟）内修改了至少10个key，就会产生一个dump.rdb文件\n   save 60 10000    //表示在60秒（1分钟）内修改了至少10000个key，就会产生一个dump.rdb文件\n   ```\n\n2. AOF：append only file，所有对redis的操作命令记录在aof文件中，恢复数据，重新执行一遍即可。\n\n   特点：每秒保存（可以设置每次操作都保存一次），数据比较完整，耗费性能\n\n   默认是不开启的，如果需要开启，需要在redis.conf下修改配置\n\n   ```\n   appendonly no   //将no改成yes就开启了AOF\n   ```\n\n   重新运行redis，会在bin目录下生成一个appendonly.aof的文件 \n\n> redis默认开启的是RDB，如果同时开启两个持久化方案，会按照AOF的持久化方案恢复数据\n\n## redis集群的搭建\n\n#### redis cluster节点分配\n现在我们是三个主节点分别是：A, B, C 三个节点，它们可以是一台机器上的三个端口，也可以是三台不同的服务器。那么，采用哈希槽 (hash slot)的方式来分配16384个slot 的话，它们三个节点分别承担的slot 区间是：\n\n- 节点A覆盖0－5460\n- 节点B覆盖5461－10922\n- 节点C覆盖10923－16383\n\n获取数据:\n如果存入一个值，按照redis cluster哈希槽的[算法](http://lib.csdn.net/base/datastructure)： CRC16('key')384 = 6782。 那么就会把这个key 的存储分配到 B 上了。同样，当我连接(A,B,C)任何一个节点想获取'key'这个key时，也会这样的算法，然后内部跳转到B节点上获取数据\n\n新增一个主节点:\n新增一个节点D，redis cluster的这种做法是从各个节点的前面各拿取一部分slot到D上，我会在接下来的实践中实验。大致就会变成这样：\n\n- 节点A覆盖1365-5460\n- 节点B覆盖6827-10922\n- 节点C覆盖12288-16383\n- 节点D覆盖0-1364,5461-6826,10923-12287\n\n同样删除一个节点也是类似，移动完成后就可以删除这个节点了。\n\n#### Redis Cluster主从模式\n redis cluster 为了保证数据的高可用性，加入了主从模式，一个主节点对应一个或多个从节点，主节点提供数据存取，从节点则是从主节点拉取数据备份，当这个主节点挂掉后，就会有这个从节点选取一个来充当主节点，从而保证集群不会挂掉\n\n上面那个例子里, 集群有ABC三个主节点, 如果这3个节点都没有加入从节点，如果B挂掉了，我们就无法访问整个集群了。A和C的slot也无法访问。\n\n所以我们在集群建立的时候，一定要为每个主节点都添加了从节点, 比如像这样, 集群包含主节点A、B、C, 以及从节点A1、B1、C1, 那么即使B挂掉系统也可以继续正确工作。\n\nB1节点替代了B节点，所以Redis集群将会选择B1节点作为新的主节点，集群将会继续正确地提供服务。 当B重新开启后，它就会变成B1的从节点。\n\n不过需要注意，如果节点B和B1同时挂了，Redis集群就无法继续正确地提供服务了。\n\n#### redis-cluster集群的搭建\n\n环境\n\n```\n操作系统：Ubuntu18.04\nredis版本：5.0.3\n\nredis集群环境：192.168.25.152 192.168.25.153 192.168.25.154\n每个环境上有2个节点，一个maste，一个slave\n```\n\n集群中至少应该有奇数个节点，所以至少有三个节点，每个节点至少有一个备份节点，所以下面使用6节点（主节点、备份节点由redis-cluster集群确定）\n\n安装redis，这里我把3个主节点放在3台服务器上，分别安装，安装步骤操作单节点的安装。从节点我分别装在对应的主节点服务器上\n\n**1、安装redis并配置**\n\n安装方式见redis单节点的安装，然后在`/usr/local`下创建文件夹redis-cluster,复制两份redis到redis-cluster文件夹下，命名为redis-master和redis-slave。\n\n修改redis .conf配置文件的部分内容如下：\n\n```shell\nbind 192.168.25.152  # 可以不用改\nport 7000 #修改端口号\ndaemonize yes #后台启动,单节点时就配置好了\npidfile /var/run/redis_7001.pid\ndir /usr/local/redis-cluster/redis-master/bin/redis-data  # 比较重要，因为备份文件存在这个配置的redis-data文件夹下\ncluster-enabled yes #开启cluster，去掉注释\ncluster-config-file nodes-7000.conf #自动生成 ，去掉注释\ncluster-node-timeout 15000 #节点通信时间， 去掉注释\nappendonly no #持久化方式，使用默认的持久化方式就可\ncluster-require-full-coverage no　　# redis cluster需要16384个slot都正常的时候才能对外提供服务，换句话说，只要任何一个slot异常那么整个cluster不对外提供服务。 因此生产环境一般为no  去掉注释，改成no\n```\n\n**2、运行redis实例**\n\n在3个服务器上分别执行一下命令启动redis,可以在redis-cluster文件夹下直接写成脚本\n\n```shell\n#!/bin/bash\ncd /usr/local/redis-cluster/redis-master/bin\n./redis-server redis.conf\ncd /usr/local/redis-cluster/redis-slave/bin\n./redis-server redis.conf\necho \"redis-cluste start success\"\n```\n\n编写shutdown的脚本\n\n```shell\n#!/bin/bash\n#1. 定义关键字查询进程信息\nfindstr=`echo \"redis\"`\n#2. 查询进程信息保存于proids \n\nps -ef|grep '${findstr}' |grep -v 'grep'|awk '{print $2}'\ni=0\nfor proid in `ps -ef|grep \"${findstr}\"|grep -v 'grep' |awk '{print $2}'`\ndo \n    proids[$i]=$proid\n    let i=$i+1\ndone\n\n#3. 判断查出的进程的数量 \nif [ ${#proids[*]} -eq 0 ]; \nthen\n    echo \"not find proid\"\nelif [ ${#proids[*]} -eq 1 ]; \nthen\n    kill -9 ${proids[0]}\n    echo \"proid[${proids[0]}] was killed\"\nelse\n    for proid in ${proids[@]}\n    do\n\t#4 .把多个进程放到一起，先判断是否为空，如果为空，执行else，接下来不在为空，执行if。这步先留着，其实可以不要\n        if [ $proidstr ];\n        then\n            proidstr=\"$proidstr,$proid\" \n        else\n            proidstr=\"$proid\"\n        fi\n\n\t#5. 杀死进程\n        kill -9 $proid     \n    done \n    echo \"存在${#proids[*]}条进程[${proidstr}], was killed\"\nfi\n```\n\n修改脚本操作权限并启动\n\n```shell\n$ sudo chmod 777 start-all.sh\n$ sudo chmod 777 shutdown-all.sh\n# 开启\n$ sudo ./start-all.sh\n# 关闭\n$ sudo ./shutdown-all.sh\n```\n\n查看是否启动\n\n```shell\nps -ef | grep redis\n```\n\n![](rediscluster.png)\n\n**3、创建开启redis-cluster**\n\n创建开启redis-cluster前需要把所有的redis都启动，然后使用152,153,154中的随便一台服务器。例如我使用的是152服务器上的7000端口的redis\n\n```shell\n# 1.进入源文件的src路径(不是安装的位置，是源文件的位置)\n$ cd /home/wanghui/redis-5.0.3/src\n# 2.创建集群\n$ sudo ./redis-cli --cluster create 192.168.25.152:7000 192.168.25.152:7001 192.168.25.153:7000 192.168.25.153:7001 192.168.25.154:7000 192.168.25.154:7001 --cluster-replicas 1\n# 集群方式登录\n./redis-cli -c -h 192.168.25.152 -p 7000\n# 登录进去后，查看集群状态\ncluster info\n# 查看集群节点\ncluster nodes\n# 检查集群节点状态\n./redis-cli --cluster check 192.168.25.152:7000\n# 修复集群节点\n./redis-cli --cluster fix 192.168.25.152:7000\n```","slug":"2020-04-01-01-redis搭建","published":1,"updated":"2020-04-01T13:05:22.512Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wj004654tnyrqs1rvu","content":"<center><font size=\"4\" color=\"red\">01-redis搭建</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Redis介绍和使用\"><a href=\"#Redis介绍和使用\" class=\"headerlink\" title=\"Redis介绍和使用\"></a>Redis介绍和使用</h2><h4 id=\"什么是redis\"><a href=\"#什么是redis\" class=\"headerlink\" title=\"什么是redis\"></a>什么是redis</h4><p>Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库（nosql），应用在缓存。它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型有5种。</p>\n<blockquote>\n<p>Redis中所有数据都是字符串</p>\n</blockquote>\n<h4 id=\"redis的安装\"><a href=\"#redis的安装\" class=\"headerlink\" title=\"redis的安装\"></a>redis的安装</h4><p>这里主要介绍源码的安装方式，安装包的安装方式自行百度解决。</p>\n<p><strong>环境准备</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.安装gcc g++的依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install build-essential</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libtool</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装pcre依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libpcre3 libpcre3-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>3.安装zlib依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install zlib1g-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>4.安装ssl依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install openssl</span><br><span class=\"line\"><span class=\"meta\">#</span>5.验证gcc是否安装成功</span><br><span class=\"line\"><span class=\"meta\">$</span> gcc -v</span><br></pre></td></tr></table></figure>\n<p><strong>安装Redis</strong>,<a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener\">Redis官网</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 下载1.8.0版本：</span><br><span class=\"line\">sudo wget wget http://download.redis.io/releases/redis-4.0.8.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> 解压：</span><br><span class=\"line\">tar -zxvf redis-4.0.8.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span>进入解压目录：</span><br><span class=\"line\">cd redis-4.0.8</span><br></pre></td></tr></table></figure>\n<p><strong>编译和安装</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.生成脚本和配置文件</span><br><span class=\"line\"><span class=\"meta\">$</span> make</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装 ，如果一下命令没有安装到/usr/local下，需要先mkdir /usr/local/redis</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo make install PREFIX=/usr/local/redis</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果编译出错，可以make clean后重新make，进行编译</p>\n</blockquote>\n<p><strong>启动redis</strong></p>\n<p><strong>先添加一下redis的日志文件，后面发现没有日志使用<code>./redis-cli shutdown</code>时会报错,在<code>/usr/local/redis/bin/redis.conf</code>文件下编译<code>logfile &quot;&quot;</code>为<code>logfile &quot;redis.log&quot;</code>,这里的路径是相对路径，如果启动不了，使用<code>chmod 777 redis.log</code>赋权</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>进入启动目录</span><br><span class=\"line\">cd /usr/local/redis/bin</span><br><span class=\"line\"><span class=\"meta\">#</span>启动redis</span><br><span class=\"line\">./redis-server</span><br></pre></td></tr></table></figure>\n<p>启动结果如下，这样启动是前台的启动，控制台被占用，无法再操作控制台，所以设置守护进程启动。下面那个我按ctrl+c无法关闭，后来还是杀进程关闭的</p>\n<p><img src=\"/2020/04/02/2020-04-01-01-redis搭建/redisserver.png\" alt></p>\n<p><strong>设置守护进程启动</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>复制一份redis.conf文件到/usr/local/redis/bin</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo cp /home/wanghui/redis-4.0.8/redis.conf /usr/local/redis/bin</span><br></pre></td></tr></table></figure>\n<p>修改<code>daemonize no</code> 改成<code>daemonize yes</code></p>\n<p><strong>后端启动</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd /usr/local/redis/bin</span><br><span class=\"line\"><span class=\"meta\">#</span>通过制定redis.conf来启动redis</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./redis-server redis.conf</span><br><span class=\"line\"><span class=\"meta\">#</span>查看进程是否启动</span><br><span class=\"line\"><span class=\"meta\">$</span> ps -ef | grep redis</span><br><span class=\"line\"><span class=\"meta\">#</span> 连接redis,完整命令为 ./redis-cli -h 192.168.25.152(ip) -p 6379(端口)</span><br><span class=\"line\"><span class=\"meta\">$</span> ./redis-cli</span><br><span class=\"line\"><span class=\"meta\">#</span>断开连接</span><br><span class=\"line\">ctrl+c</span><br><span class=\"line\"><span class=\"meta\">#</span>关闭redis服务，杀死redis进程也可以</span><br><span class=\"line\"><span class=\"meta\">$</span> ./redis-cli shutdown</span><br></pre></td></tr></table></figure>\n<h4 id=\"redis的使用\"><a href=\"#redis的使用\" class=\"headerlink\" title=\"redis的使用\"></a>redis的使用</h4><p>5中键值对数据里库类型使用如下：</p>\n<ul>\n<li><p>字符串类型（String）：存的是key-value</p>\n<p>set key value 设置值  (例如：set name zhangsan)</p>\n<p>get key 获取值</p>\n<p>incr key 加一，如果value设置的不是数字，是不能执行的</p>\n<p>decr key减一</p>\n</li>\n<li><p>数列类型（hash）：相当于一个key对应一个map(map中又是key-value)</p>\n<p>hset key field value 设置值</p>\n<p>hget key field 获取值</p>\n<p>hincrby key field num 设置增数量</p>\n</li>\n<li><p>列表类型（List）：list是有顺序，可重复，可从左边添加元素，也可以从右边添加元素</p>\n<p>lpush list a b c d ：从右面向左边添加元素（从左边添加元素），即d c b a，其中list是名称</p>\n<p>rpuah list 1 2 3 4：从右边添加元素</p>\n<p>lrange list 0 -1 ：从0到-1元素查看，表示查看所有</p>\n<p>lpop：从左边取，取出的同时也是被删除了</p>\n<p>rpop：从右边取，取出的同时也是被删除了</p>\n</li>\n<li><p>集合类型（set）：无顺序，不能重复，如果添加重复元素，只会加入一个</p>\n<p>sadd set1 a b c d d :像set1中添加元素</p>\n<p>smembers set1:查询名称为set1下的元素</p>\n<p>srem set1 a：删除名称为set1下的a元素</p>\n</li>\n<li><p>有序集合类型（SortedSet）：也叫zset，有顺序，不能重复。适合做排行榜</p>\n<p>zadd zset1 9 a 8 c 10 d 1 e:添加元素（zadd zset1 score member）,这个添加了4个元素，分别是a c d e，其对应分数分别为9 8 10 1</p>\n<p>zrange zset1 0 -1：根据zset1中的分数（从低到高）查看元素（这里的a c d e是元素）</p>\n<p>zrange zset1 0 -1 withscores ：查看所有元素和分数</p>\n<p>zrevrange zset1 0 -1 :按分数降序（分数从高到低）排序查看元素</p>\n<p>zincrby zset1 5 a：对a元素添加5分，得到的结果是a元素变成14分（9+5）</p>\n</li>\n</ul>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p>auth password：输入密码</p>\n<p>dbsize：查看key的数量</p>\n<p>expire key second：设置key的过期时间（单位是秒）</p>\n<p>ttl key：查看key距离过期的剩余时间（-2表示不存在，-1表示已被持久化，正数表示剩余的时间）</p>\n<p>persist key：清除过期时间，也就是持久化，持久化成功提示是1，失败提示是0</p>\n<p>del key：删除key</p>\n<p>EXISTS key：查看key是否存在，若key存在，返回1，否则返回0</p>\n<p>select 0：表示，选择0号数据库，默认是0号数据库</p>\n<h4 id=\"redis的持久化方案\"><a href=\"#redis的持久化方案\" class=\"headerlink\" title=\"redis的持久化方案\"></a>redis的持久化方案</h4><p>Redis的数据都保存在内存中，如果机器挂掉，内存中的数据就不存在，因此需要做持久化，将内存中的数据保存在磁盘，下一次启动的时候就可以恢复数据到内存中</p>\n<p>redis有两种持久化的方式</p>\n<ol>\n<li><p>RDB ：快照形式，定期将当前数据保存到磁盘中，会产生一个dump.rdb(redis的bin目录下)文件。</p>\n<p>特点：会存在数据丢失，性能较好，数据备份。</p>\n<p>使用方式：</p>\n<p>在redis.conf中默认配置了保存规则及时间间隔</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">save 900 1       //表示在900秒（15分钟）内修改了至少1个key，就会产生一个dump.rdb文件</span><br><span class=\"line\">save 300 10      //表示在300秒（5分钟）内修改了至少10个key，就会产生一个dump.rdb文件</span><br><span class=\"line\">save 60 10000    //表示在60秒（1分钟）内修改了至少10000个key，就会产生一个dump.rdb文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>AOF：append only file，所有对redis的操作命令记录在aof文件中，恢复数据，重新执行一遍即可。</p>\n<p>特点：每秒保存（可以设置每次操作都保存一次），数据比较完整，耗费性能</p>\n<p>默认是不开启的，如果需要开启，需要在redis.conf下修改配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">appendonly no   //将no改成yes就开启了AOF</span><br></pre></td></tr></table></figure>\n<p>重新运行redis，会在bin目录下生成一个appendonly.aof的文件 </p>\n</li>\n</ol>\n<blockquote>\n<p>redis默认开启的是RDB，如果同时开启两个持久化方案，会按照AOF的持久化方案恢复数据</p>\n</blockquote>\n<h2 id=\"redis集群的搭建\"><a href=\"#redis集群的搭建\" class=\"headerlink\" title=\"redis集群的搭建\"></a>redis集群的搭建</h2><h4 id=\"redis-cluster节点分配\"><a href=\"#redis-cluster节点分配\" class=\"headerlink\" title=\"redis cluster节点分配\"></a>redis cluster节点分配</h4><p>现在我们是三个主节点分别是：A, B, C 三个节点，它们可以是一台机器上的三个端口，也可以是三台不同的服务器。那么，采用哈希槽 (hash slot)的方式来分配16384个slot 的话，它们三个节点分别承担的slot 区间是：</p>\n<ul>\n<li>节点A覆盖0－5460</li>\n<li>节点B覆盖5461－10922</li>\n<li>节点C覆盖10923－16383</li>\n</ul>\n<p>获取数据:<br>如果存入一个值，按照redis cluster哈希槽的<a href=\"http://lib.csdn.net/base/datastructure\" target=\"_blank\" rel=\"noopener\">算法</a>： CRC16(‘key’)384 = 6782。 那么就会把这个key 的存储分配到 B 上了。同样，当我连接(A,B,C)任何一个节点想获取’key’这个key时，也会这样的算法，然后内部跳转到B节点上获取数据</p>\n<p>新增一个主节点:<br>新增一个节点D，redis cluster的这种做法是从各个节点的前面各拿取一部分slot到D上，我会在接下来的实践中实验。大致就会变成这样：</p>\n<ul>\n<li>节点A覆盖1365-5460</li>\n<li>节点B覆盖6827-10922</li>\n<li>节点C覆盖12288-16383</li>\n<li>节点D覆盖0-1364,5461-6826,10923-12287</li>\n</ul>\n<p>同样删除一个节点也是类似，移动完成后就可以删除这个节点了。</p>\n<h4 id=\"Redis-Cluster主从模式\"><a href=\"#Redis-Cluster主从模式\" class=\"headerlink\" title=\"Redis Cluster主从模式\"></a>Redis Cluster主从模式</h4><p> redis cluster 为了保证数据的高可用性，加入了主从模式，一个主节点对应一个或多个从节点，主节点提供数据存取，从节点则是从主节点拉取数据备份，当这个主节点挂掉后，就会有这个从节点选取一个来充当主节点，从而保证集群不会挂掉</p>\n<p>上面那个例子里, 集群有ABC三个主节点, 如果这3个节点都没有加入从节点，如果B挂掉了，我们就无法访问整个集群了。A和C的slot也无法访问。</p>\n<p>所以我们在集群建立的时候，一定要为每个主节点都添加了从节点, 比如像这样, 集群包含主节点A、B、C, 以及从节点A1、B1、C1, 那么即使B挂掉系统也可以继续正确工作。</p>\n<p>B1节点替代了B节点，所以Redis集群将会选择B1节点作为新的主节点，集群将会继续正确地提供服务。 当B重新开启后，它就会变成B1的从节点。</p>\n<p>不过需要注意，如果节点B和B1同时挂了，Redis集群就无法继续正确地提供服务了。</p>\n<h4 id=\"redis-cluster集群的搭建\"><a href=\"#redis-cluster集群的搭建\" class=\"headerlink\" title=\"redis-cluster集群的搭建\"></a>redis-cluster集群的搭建</h4><p>环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">操作系统：Ubuntu18.04</span><br><span class=\"line\">redis版本：5.0.3</span><br><span class=\"line\"></span><br><span class=\"line\">redis集群环境：192.168.25.152 192.168.25.153 192.168.25.154</span><br><span class=\"line\">每个环境上有2个节点，一个maste，一个slave</span><br></pre></td></tr></table></figure>\n<p>集群中至少应该有奇数个节点，所以至少有三个节点，每个节点至少有一个备份节点，所以下面使用6节点（主节点、备份节点由redis-cluster集群确定）</p>\n<p>安装redis，这里我把3个主节点放在3台服务器上，分别安装，安装步骤操作单节点的安装。从节点我分别装在对应的主节点服务器上</p>\n<p><strong>1、安装redis并配置</strong></p>\n<p>安装方式见redis单节点的安装，然后在<code>/usr/local</code>下创建文件夹redis-cluster,复制两份redis到redis-cluster文件夹下，命名为redis-master和redis-slave。</p>\n<p>修改redis .conf配置文件的部分内容如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 192.168.25.152  # 可以不用改</span><br><span class=\"line\">port 7000 #修改端口号</span><br><span class=\"line\">daemonize yes #后台启动,单节点时就配置好了</span><br><span class=\"line\">pidfile /var/run/redis_7001.pid</span><br><span class=\"line\">dir /usr/local/redis-cluster/redis-master/bin/redis-data  # 比较重要，因为备份文件存在这个配置的redis-data文件夹下</span><br><span class=\"line\">cluster-enabled yes #开启cluster，去掉注释</span><br><span class=\"line\">cluster-config-file nodes-7000.conf #自动生成 ，去掉注释</span><br><span class=\"line\">cluster-node-timeout 15000 #节点通信时间， 去掉注释</span><br><span class=\"line\">appendonly no #持久化方式，使用默认的持久化方式就可</span><br><span class=\"line\">cluster-require-full-coverage no　　# redis cluster需要16384个slot都正常的时候才能对外提供服务，换句话说，只要任何一个slot异常那么整个cluster不对外提供服务。 因此生产环境一般为no  去掉注释，改成no</span><br></pre></td></tr></table></figure>\n<p><strong>2、运行redis实例</strong></p>\n<p>在3个服务器上分别执行一下命令启动redis,可以在redis-cluster文件夹下直接写成脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\">cd /usr/local/redis-cluster/redis-master/bin</span><br><span class=\"line\">./redis-server redis.conf</span><br><span class=\"line\">cd /usr/local/redis-cluster/redis-slave/bin</span><br><span class=\"line\">./redis-server redis.conf</span><br><span class=\"line\">echo \"redis-cluste start success\"</span><br></pre></td></tr></table></figure>\n<p>编写shutdown的脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\"><span class=\"meta\">#</span>1. 定义关键字查询进程信息</span><br><span class=\"line\">findstr=`echo \"redis\"`</span><br><span class=\"line\"><span class=\"meta\">#</span>2. 查询进程信息保存于proids </span><br><span class=\"line\"></span><br><span class=\"line\">ps -ef|grep '$&#123;findstr&#125;' |grep -v 'grep'|awk '&#123;print $2&#125;'</span><br><span class=\"line\">i=0</span><br><span class=\"line\">for proid in `ps -ef|grep \"$&#123;findstr&#125;\"|grep -v 'grep' |awk '&#123;print $2&#125;'`</span><br><span class=\"line\">do </span><br><span class=\"line\">    proids[$i]=$proid</span><br><span class=\"line\">    let i=$i+1</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>3. 判断查出的进程的数量 </span><br><span class=\"line\">if [ $&#123;#proids[*]&#125; -eq 0 ]; </span><br><span class=\"line\">then</span><br><span class=\"line\">    echo \"not find proid\"</span><br><span class=\"line\">elif [ $&#123;#proids[*]&#125; -eq 1 ]; </span><br><span class=\"line\">then</span><br><span class=\"line\">    kill -9 $&#123;proids[0]&#125;</span><br><span class=\"line\">    echo \"proid[$&#123;proids[0]&#125;] was killed\"</span><br><span class=\"line\">else</span><br><span class=\"line\">    for proid in $&#123;proids[@]&#125;</span><br><span class=\"line\">    do</span><br><span class=\"line\"><span class=\"meta\">\t#</span>4 .把多个进程放到一起，先判断是否为空，如果为空，执行else，接下来不在为空，执行if。这步先留着，其实可以不要</span><br><span class=\"line\">        if [ $proidstr ];</span><br><span class=\"line\">        then</span><br><span class=\"line\">            proidstr=\"$proidstr,$proid\" </span><br><span class=\"line\">        else</span><br><span class=\"line\">            proidstr=\"$proid\"</span><br><span class=\"line\">        fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">\t#</span>5. 杀死进程</span><br><span class=\"line\">        kill -9 $proid     </span><br><span class=\"line\">    done </span><br><span class=\"line\">    echo \"存在$&#123;#proids[*]&#125;条进程[$&#123;proidstr&#125;], was killed\"</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>修改脚本操作权限并启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo chmod 777 start-all.sh</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo chmod 777 shutdown-all.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 开启</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./start-all.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 关闭</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./shutdown-all.sh</span><br></pre></td></tr></table></figure>\n<p>查看是否启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep redis</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/2020-04-01-01-redis搭建/rediscluster.png\" alt></p>\n<p><strong>3、创建开启redis-cluster</strong></p>\n<p>创建开启redis-cluster前需要把所有的redis都启动，然后使用152,153,154中的随便一台服务器。例如我使用的是152服务器上的7000端口的redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 1.进入源文件的src路径(不是安装的位置，是源文件的位置)</span><br><span class=\"line\"><span class=\"meta\">$</span> cd /home/wanghui/redis-5.0.3/src</span><br><span class=\"line\"><span class=\"meta\">#</span> 2.创建集群</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./redis-cli --cluster create 192.168.25.152:7000 192.168.25.152:7001 192.168.25.153:7000 192.168.25.153:7001 192.168.25.154:7000 192.168.25.154:7001 --cluster-replicas 1</span><br><span class=\"line\"><span class=\"meta\">#</span> 集群方式登录</span><br><span class=\"line\">./redis-cli -c -h 192.168.25.152 -p 7000</span><br><span class=\"line\"><span class=\"meta\">#</span> 登录进去后，查看集群状态</span><br><span class=\"line\">cluster info</span><br><span class=\"line\"><span class=\"meta\">#</span> 查看集群节点</span><br><span class=\"line\">cluster nodes</span><br><span class=\"line\"><span class=\"meta\">#</span> 检查集群节点状态</span><br><span class=\"line\">./redis-cli --cluster check 192.168.25.152:7000</span><br><span class=\"line\"><span class=\"meta\">#</span> 修复集群节点</span><br><span class=\"line\">./redis-cli --cluster fix 192.168.25.152:7000</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">01-redis搭建</font></center>","more":"<h2 id=\"Redis介绍和使用\"><a href=\"#Redis介绍和使用\" class=\"headerlink\" title=\"Redis介绍和使用\"></a>Redis介绍和使用</h2><h4 id=\"什么是redis\"><a href=\"#什么是redis\" class=\"headerlink\" title=\"什么是redis\"></a>什么是redis</h4><p>Redis是用C语言开发的一个开源的高性能键值对（key-value）数据库（nosql），应用在缓存。它通过提供多种键值数据类型来适应不同场景下的存储需求，目前为止Redis支持的键值数据类型有5种。</p>\n<blockquote>\n<p>Redis中所有数据都是字符串</p>\n</blockquote>\n<h4 id=\"redis的安装\"><a href=\"#redis的安装\" class=\"headerlink\" title=\"redis的安装\"></a>redis的安装</h4><p>这里主要介绍源码的安装方式，安装包的安装方式自行百度解决。</p>\n<p><strong>环境准备</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.安装gcc g++的依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install build-essential</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libtool</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装pcre依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install libpcre3 libpcre3-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>3.安装zlib依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install zlib1g-dev</span><br><span class=\"line\"><span class=\"meta\">#</span>4.安装ssl依赖库</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo apt-get install openssl</span><br><span class=\"line\"><span class=\"meta\">#</span>5.验证gcc是否安装成功</span><br><span class=\"line\"><span class=\"meta\">$</span> gcc -v</span><br></pre></td></tr></table></figure>\n<p><strong>安装Redis</strong>,<a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener\">Redis官网</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 下载1.8.0版本：</span><br><span class=\"line\">sudo wget wget http://download.redis.io/releases/redis-4.0.8.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span> 解压：</span><br><span class=\"line\">tar -zxvf redis-4.0.8.tar.gz</span><br><span class=\"line\"><span class=\"meta\">#</span>进入解压目录：</span><br><span class=\"line\">cd redis-4.0.8</span><br></pre></td></tr></table></figure>\n<p><strong>编译和安装</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1.生成脚本和配置文件</span><br><span class=\"line\"><span class=\"meta\">$</span> make</span><br><span class=\"line\"><span class=\"meta\">#</span>2.安装 ，如果一下命令没有安装到/usr/local下，需要先mkdir /usr/local/redis</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo make install PREFIX=/usr/local/redis</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果编译出错，可以make clean后重新make，进行编译</p>\n</blockquote>\n<p><strong>启动redis</strong></p>\n<p><strong>先添加一下redis的日志文件，后面发现没有日志使用<code>./redis-cli shutdown</code>时会报错,在<code>/usr/local/redis/bin/redis.conf</code>文件下编译<code>logfile &quot;&quot;</code>为<code>logfile &quot;redis.log&quot;</code>,这里的路径是相对路径，如果启动不了，使用<code>chmod 777 redis.log</code>赋权</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>进入启动目录</span><br><span class=\"line\">cd /usr/local/redis/bin</span><br><span class=\"line\"><span class=\"meta\">#</span>启动redis</span><br><span class=\"line\">./redis-server</span><br></pre></td></tr></table></figure>\n<p>启动结果如下，这样启动是前台的启动，控制台被占用，无法再操作控制台，所以设置守护进程启动。下面那个我按ctrl+c无法关闭，后来还是杀进程关闭的</p>\n<p><img src=\"/2020/04/02/2020-04-01-01-redis搭建/redisserver.png\" alt></p>\n<p><strong>设置守护进程启动</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>复制一份redis.conf文件到/usr/local/redis/bin</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo cp /home/wanghui/redis-4.0.8/redis.conf /usr/local/redis/bin</span><br></pre></td></tr></table></figure>\n<p>修改<code>daemonize no</code> 改成<code>daemonize yes</code></p>\n<p><strong>后端启动</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> cd /usr/local/redis/bin</span><br><span class=\"line\"><span class=\"meta\">#</span>通过制定redis.conf来启动redis</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./redis-server redis.conf</span><br><span class=\"line\"><span class=\"meta\">#</span>查看进程是否启动</span><br><span class=\"line\"><span class=\"meta\">$</span> ps -ef | grep redis</span><br><span class=\"line\"><span class=\"meta\">#</span> 连接redis,完整命令为 ./redis-cli -h 192.168.25.152(ip) -p 6379(端口)</span><br><span class=\"line\"><span class=\"meta\">$</span> ./redis-cli</span><br><span class=\"line\"><span class=\"meta\">#</span>断开连接</span><br><span class=\"line\">ctrl+c</span><br><span class=\"line\"><span class=\"meta\">#</span>关闭redis服务，杀死redis进程也可以</span><br><span class=\"line\"><span class=\"meta\">$</span> ./redis-cli shutdown</span><br></pre></td></tr></table></figure>\n<h4 id=\"redis的使用\"><a href=\"#redis的使用\" class=\"headerlink\" title=\"redis的使用\"></a>redis的使用</h4><p>5中键值对数据里库类型使用如下：</p>\n<ul>\n<li><p>字符串类型（String）：存的是key-value</p>\n<p>set key value 设置值  (例如：set name zhangsan)</p>\n<p>get key 获取值</p>\n<p>incr key 加一，如果value设置的不是数字，是不能执行的</p>\n<p>decr key减一</p>\n</li>\n<li><p>数列类型（hash）：相当于一个key对应一个map(map中又是key-value)</p>\n<p>hset key field value 设置值</p>\n<p>hget key field 获取值</p>\n<p>hincrby key field num 设置增数量</p>\n</li>\n<li><p>列表类型（List）：list是有顺序，可重复，可从左边添加元素，也可以从右边添加元素</p>\n<p>lpush list a b c d ：从右面向左边添加元素（从左边添加元素），即d c b a，其中list是名称</p>\n<p>rpuah list 1 2 3 4：从右边添加元素</p>\n<p>lrange list 0 -1 ：从0到-1元素查看，表示查看所有</p>\n<p>lpop：从左边取，取出的同时也是被删除了</p>\n<p>rpop：从右边取，取出的同时也是被删除了</p>\n</li>\n<li><p>集合类型（set）：无顺序，不能重复，如果添加重复元素，只会加入一个</p>\n<p>sadd set1 a b c d d :像set1中添加元素</p>\n<p>smembers set1:查询名称为set1下的元素</p>\n<p>srem set1 a：删除名称为set1下的a元素</p>\n</li>\n<li><p>有序集合类型（SortedSet）：也叫zset，有顺序，不能重复。适合做排行榜</p>\n<p>zadd zset1 9 a 8 c 10 d 1 e:添加元素（zadd zset1 score member）,这个添加了4个元素，分别是a c d e，其对应分数分别为9 8 10 1</p>\n<p>zrange zset1 0 -1：根据zset1中的分数（从低到高）查看元素（这里的a c d e是元素）</p>\n<p>zrange zset1 0 -1 withscores ：查看所有元素和分数</p>\n<p>zrevrange zset1 0 -1 :按分数降序（分数从高到低）排序查看元素</p>\n<p>zincrby zset1 5 a：对a元素添加5分，得到的结果是a元素变成14分（9+5）</p>\n</li>\n</ul>\n<h4 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h4><p>auth password：输入密码</p>\n<p>dbsize：查看key的数量</p>\n<p>expire key second：设置key的过期时间（单位是秒）</p>\n<p>ttl key：查看key距离过期的剩余时间（-2表示不存在，-1表示已被持久化，正数表示剩余的时间）</p>\n<p>persist key：清除过期时间，也就是持久化，持久化成功提示是1，失败提示是0</p>\n<p>del key：删除key</p>\n<p>EXISTS key：查看key是否存在，若key存在，返回1，否则返回0</p>\n<p>select 0：表示，选择0号数据库，默认是0号数据库</p>\n<h4 id=\"redis的持久化方案\"><a href=\"#redis的持久化方案\" class=\"headerlink\" title=\"redis的持久化方案\"></a>redis的持久化方案</h4><p>Redis的数据都保存在内存中，如果机器挂掉，内存中的数据就不存在，因此需要做持久化，将内存中的数据保存在磁盘，下一次启动的时候就可以恢复数据到内存中</p>\n<p>redis有两种持久化的方式</p>\n<ol>\n<li><p>RDB ：快照形式，定期将当前数据保存到磁盘中，会产生一个dump.rdb(redis的bin目录下)文件。</p>\n<p>特点：会存在数据丢失，性能较好，数据备份。</p>\n<p>使用方式：</p>\n<p>在redis.conf中默认配置了保存规则及时间间隔</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">save 900 1       //表示在900秒（15分钟）内修改了至少1个key，就会产生一个dump.rdb文件</span><br><span class=\"line\">save 300 10      //表示在300秒（5分钟）内修改了至少10个key，就会产生一个dump.rdb文件</span><br><span class=\"line\">save 60 10000    //表示在60秒（1分钟）内修改了至少10000个key，就会产生一个dump.rdb文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>AOF：append only file，所有对redis的操作命令记录在aof文件中，恢复数据，重新执行一遍即可。</p>\n<p>特点：每秒保存（可以设置每次操作都保存一次），数据比较完整，耗费性能</p>\n<p>默认是不开启的，如果需要开启，需要在redis.conf下修改配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">appendonly no   //将no改成yes就开启了AOF</span><br></pre></td></tr></table></figure>\n<p>重新运行redis，会在bin目录下生成一个appendonly.aof的文件 </p>\n</li>\n</ol>\n<blockquote>\n<p>redis默认开启的是RDB，如果同时开启两个持久化方案，会按照AOF的持久化方案恢复数据</p>\n</blockquote>\n<h2 id=\"redis集群的搭建\"><a href=\"#redis集群的搭建\" class=\"headerlink\" title=\"redis集群的搭建\"></a>redis集群的搭建</h2><h4 id=\"redis-cluster节点分配\"><a href=\"#redis-cluster节点分配\" class=\"headerlink\" title=\"redis cluster节点分配\"></a>redis cluster节点分配</h4><p>现在我们是三个主节点分别是：A, B, C 三个节点，它们可以是一台机器上的三个端口，也可以是三台不同的服务器。那么，采用哈希槽 (hash slot)的方式来分配16384个slot 的话，它们三个节点分别承担的slot 区间是：</p>\n<ul>\n<li>节点A覆盖0－5460</li>\n<li>节点B覆盖5461－10922</li>\n<li>节点C覆盖10923－16383</li>\n</ul>\n<p>获取数据:<br>如果存入一个值，按照redis cluster哈希槽的<a href=\"http://lib.csdn.net/base/datastructure\" target=\"_blank\" rel=\"noopener\">算法</a>： CRC16(‘key’)384 = 6782。 那么就会把这个key 的存储分配到 B 上了。同样，当我连接(A,B,C)任何一个节点想获取’key’这个key时，也会这样的算法，然后内部跳转到B节点上获取数据</p>\n<p>新增一个主节点:<br>新增一个节点D，redis cluster的这种做法是从各个节点的前面各拿取一部分slot到D上，我会在接下来的实践中实验。大致就会变成这样：</p>\n<ul>\n<li>节点A覆盖1365-5460</li>\n<li>节点B覆盖6827-10922</li>\n<li>节点C覆盖12288-16383</li>\n<li>节点D覆盖0-1364,5461-6826,10923-12287</li>\n</ul>\n<p>同样删除一个节点也是类似，移动完成后就可以删除这个节点了。</p>\n<h4 id=\"Redis-Cluster主从模式\"><a href=\"#Redis-Cluster主从模式\" class=\"headerlink\" title=\"Redis Cluster主从模式\"></a>Redis Cluster主从模式</h4><p> redis cluster 为了保证数据的高可用性，加入了主从模式，一个主节点对应一个或多个从节点，主节点提供数据存取，从节点则是从主节点拉取数据备份，当这个主节点挂掉后，就会有这个从节点选取一个来充当主节点，从而保证集群不会挂掉</p>\n<p>上面那个例子里, 集群有ABC三个主节点, 如果这3个节点都没有加入从节点，如果B挂掉了，我们就无法访问整个集群了。A和C的slot也无法访问。</p>\n<p>所以我们在集群建立的时候，一定要为每个主节点都添加了从节点, 比如像这样, 集群包含主节点A、B、C, 以及从节点A1、B1、C1, 那么即使B挂掉系统也可以继续正确工作。</p>\n<p>B1节点替代了B节点，所以Redis集群将会选择B1节点作为新的主节点，集群将会继续正确地提供服务。 当B重新开启后，它就会变成B1的从节点。</p>\n<p>不过需要注意，如果节点B和B1同时挂了，Redis集群就无法继续正确地提供服务了。</p>\n<h4 id=\"redis-cluster集群的搭建\"><a href=\"#redis-cluster集群的搭建\" class=\"headerlink\" title=\"redis-cluster集群的搭建\"></a>redis-cluster集群的搭建</h4><p>环境</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">操作系统：Ubuntu18.04</span><br><span class=\"line\">redis版本：5.0.3</span><br><span class=\"line\"></span><br><span class=\"line\">redis集群环境：192.168.25.152 192.168.25.153 192.168.25.154</span><br><span class=\"line\">每个环境上有2个节点，一个maste，一个slave</span><br></pre></td></tr></table></figure>\n<p>集群中至少应该有奇数个节点，所以至少有三个节点，每个节点至少有一个备份节点，所以下面使用6节点（主节点、备份节点由redis-cluster集群确定）</p>\n<p>安装redis，这里我把3个主节点放在3台服务器上，分别安装，安装步骤操作单节点的安装。从节点我分别装在对应的主节点服务器上</p>\n<p><strong>1、安装redis并配置</strong></p>\n<p>安装方式见redis单节点的安装，然后在<code>/usr/local</code>下创建文件夹redis-cluster,复制两份redis到redis-cluster文件夹下，命名为redis-master和redis-slave。</p>\n<p>修改redis .conf配置文件的部分内容如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bind 192.168.25.152  # 可以不用改</span><br><span class=\"line\">port 7000 #修改端口号</span><br><span class=\"line\">daemonize yes #后台启动,单节点时就配置好了</span><br><span class=\"line\">pidfile /var/run/redis_7001.pid</span><br><span class=\"line\">dir /usr/local/redis-cluster/redis-master/bin/redis-data  # 比较重要，因为备份文件存在这个配置的redis-data文件夹下</span><br><span class=\"line\">cluster-enabled yes #开启cluster，去掉注释</span><br><span class=\"line\">cluster-config-file nodes-7000.conf #自动生成 ，去掉注释</span><br><span class=\"line\">cluster-node-timeout 15000 #节点通信时间， 去掉注释</span><br><span class=\"line\">appendonly no #持久化方式，使用默认的持久化方式就可</span><br><span class=\"line\">cluster-require-full-coverage no　　# redis cluster需要16384个slot都正常的时候才能对外提供服务，换句话说，只要任何一个slot异常那么整个cluster不对外提供服务。 因此生产环境一般为no  去掉注释，改成no</span><br></pre></td></tr></table></figure>\n<p><strong>2、运行redis实例</strong></p>\n<p>在3个服务器上分别执行一下命令启动redis,可以在redis-cluster文件夹下直接写成脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\">cd /usr/local/redis-cluster/redis-master/bin</span><br><span class=\"line\">./redis-server redis.conf</span><br><span class=\"line\">cd /usr/local/redis-cluster/redis-slave/bin</span><br><span class=\"line\">./redis-server redis.conf</span><br><span class=\"line\">echo \"redis-cluste start success\"</span><br></pre></td></tr></table></figure>\n<p>编写shutdown的脚本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/bash</span><br><span class=\"line\"><span class=\"meta\">#</span>1. 定义关键字查询进程信息</span><br><span class=\"line\">findstr=`echo \"redis\"`</span><br><span class=\"line\"><span class=\"meta\">#</span>2. 查询进程信息保存于proids </span><br><span class=\"line\"></span><br><span class=\"line\">ps -ef|grep '$&#123;findstr&#125;' |grep -v 'grep'|awk '&#123;print $2&#125;'</span><br><span class=\"line\">i=0</span><br><span class=\"line\">for proid in `ps -ef|grep \"$&#123;findstr&#125;\"|grep -v 'grep' |awk '&#123;print $2&#125;'`</span><br><span class=\"line\">do </span><br><span class=\"line\">    proids[$i]=$proid</span><br><span class=\"line\">    let i=$i+1</span><br><span class=\"line\">done</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span>3. 判断查出的进程的数量 </span><br><span class=\"line\">if [ $&#123;#proids[*]&#125; -eq 0 ]; </span><br><span class=\"line\">then</span><br><span class=\"line\">    echo \"not find proid\"</span><br><span class=\"line\">elif [ $&#123;#proids[*]&#125; -eq 1 ]; </span><br><span class=\"line\">then</span><br><span class=\"line\">    kill -9 $&#123;proids[0]&#125;</span><br><span class=\"line\">    echo \"proid[$&#123;proids[0]&#125;] was killed\"</span><br><span class=\"line\">else</span><br><span class=\"line\">    for proid in $&#123;proids[@]&#125;</span><br><span class=\"line\">    do</span><br><span class=\"line\"><span class=\"meta\">\t#</span>4 .把多个进程放到一起，先判断是否为空，如果为空，执行else，接下来不在为空，执行if。这步先留着，其实可以不要</span><br><span class=\"line\">        if [ $proidstr ];</span><br><span class=\"line\">        then</span><br><span class=\"line\">            proidstr=\"$proidstr,$proid\" </span><br><span class=\"line\">        else</span><br><span class=\"line\">            proidstr=\"$proid\"</span><br><span class=\"line\">        fi</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">\t#</span>5. 杀死进程</span><br><span class=\"line\">        kill -9 $proid     </span><br><span class=\"line\">    done </span><br><span class=\"line\">    echo \"存在$&#123;#proids[*]&#125;条进程[$&#123;proidstr&#125;], was killed\"</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<p>修改脚本操作权限并启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo chmod 777 start-all.sh</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo chmod 777 shutdown-all.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 开启</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./start-all.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 关闭</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./shutdown-all.sh</span><br></pre></td></tr></table></figure>\n<p>查看是否启动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -ef | grep redis</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2020/04/02/2020-04-01-01-redis搭建/rediscluster.png\" alt></p>\n<p><strong>3、创建开启redis-cluster</strong></p>\n<p>创建开启redis-cluster前需要把所有的redis都启动，然后使用152,153,154中的随便一台服务器。例如我使用的是152服务器上的7000端口的redis</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 1.进入源文件的src路径(不是安装的位置，是源文件的位置)</span><br><span class=\"line\"><span class=\"meta\">$</span> cd /home/wanghui/redis-5.0.3/src</span><br><span class=\"line\"><span class=\"meta\">#</span> 2.创建集群</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo ./redis-cli --cluster create 192.168.25.152:7000 192.168.25.152:7001 192.168.25.153:7000 192.168.25.153:7001 192.168.25.154:7000 192.168.25.154:7001 --cluster-replicas 1</span><br><span class=\"line\"><span class=\"meta\">#</span> 集群方式登录</span><br><span class=\"line\">./redis-cli -c -h 192.168.25.152 -p 7000</span><br><span class=\"line\"><span class=\"meta\">#</span> 登录进去后，查看集群状态</span><br><span class=\"line\">cluster info</span><br><span class=\"line\"><span class=\"meta\">#</span> 查看集群节点</span><br><span class=\"line\">cluster nodes</span><br><span class=\"line\"><span class=\"meta\">#</span> 检查集群节点状态</span><br><span class=\"line\">./redis-cli --cluster check 192.168.25.152:7000</span><br><span class=\"line\"><span class=\"meta\">#</span> 修复集群节点</span><br><span class=\"line\">./redis-cli --cluster fix 192.168.25.152:7000</span><br></pre></td></tr></table></figure>"},{"title":"02-Mybatis逆向工程使用","date":"2020-04-01T20:56:16.000Z","_content":"\n<center><font size=4 color=\"red\">02-Mybatis逆向工程使用</font></center>\n\n<!--more-->\n\n## Mybatis逆向工程使用\n\n#### 不使用spring+不使用mapper代理\n\nSqlMapConfig.xml的配置\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 引入数据源配置 database.properties 文件 -->\n    <properties resource=\"jdbc.properties\"></properties>\n\n    <!--配置mybatis 运行中的一些行为 -->\n    <settings>\n        <!-- 设置Mybatis的log实现为LOG4J -->\n        <setting name=\"logImpl\" value=\"LOG4J\"/>\n    </settings>\n\n    <typeAliases>\n        <!--\n        <typeAlias alias=\"User\" type=\"com.zy.entity.User\"/>\n         -->\n        <package name=\"com.hui.pojo\"/>\n    </typeAliases>\n\n    <!-- 配置mybatis运行环境 -->\n    <environments default=\"dev\">\n        <environment id=\"dev\">\n            <!-- 采用jdbc事务管理 -->\n            <transactionManager type=\"JDBC\"></transactionManager>\n            <!-- 采用Mybatis自带的数据源 POOLED -->\n            <dataSource type=\"POOLED\" >\n                <property name=\"driver\" value=\"${jdbc.driver}\"/>\n                <property name=\"url\" value=\"${jdbc.url}\"/>\n                <property name=\"username\" value=\"${jdbc.username}\"/>\n                <property name=\"password\" value=\"${jdbc.password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n\n    <!-- 将mapper文件加入到配置文件中 我的mapper文件放在了resources的mapper文件夹下-->\n    <mappers>\n        <mapper resource=\"mapper/UserMapper.xml\"/>\n    </mappers>\n</configuration>\n\n\n```\n\njdbc.properties的配置\n\n```properties\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8\njdbc.username=root\njdbc.password=123456\n```\n\n测试的类\n\n```java\npackage com.hui.test;\n\nimport com.hui.pojo.User;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class DemoTest {\n    @Test\n    public void testSession() throws IOException {\n        //加载mybatis的配置文件\n        String resources=\"SqlMapConfig.xml\";\n        InputStream inputStream= Resources.getResourceAsStream(resources);\n        //获取sqlSessionFactory工厂\n        SqlSessionFactory sqlSessionFactory=new SqlSessionFactoryBuilder().build(inputStream);\n        //通过工程获取sqlSession\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        //执行sql语句 user是命名空间，起了别名的\n        User user = sqlSession.selectOne(\"user.selectByPrimaryKey\", '1');\n        System.out.println(user.toString());\n        //释放资源\n        sqlSession.close();\n    }\n}\n```\n\n#### 不使用spring+使用mapper代理\n\nSqlMapConfig.xml和jdbc.properties的配置和**不适用spring+不适用mapper代理**方式一样，只有测试的类不一样\n\n```java\npackage com.hui.test;\n\nimport com.hui.pojo.User;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class DemoTest {\n    @Test\n    public void testSession() throws IOException {\n        //加载mybatis的配置文件\n        String resources=\"SqlMapConfig.xml\";\n        InputStream inputStream= Resources.getResourceAsStream(resources);\n        //获取sqlSessionFactory工厂\n        SqlSessionFactory sqlSessionFactory=new SqlSessionFactoryBuilder().build(inputStream);\n        //通过工程获取sqlSession\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        // 获取mapper代理对象\n        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);\n        User user = userMapper.selectByPrimaryKey(1);\n        System.out.println(user.toString());\n        //释放资源\n        sqlSession.close();\n    }\n}\n```\n\n#### 使用spring+使用mapper代理\n\nSqlMapConfig.xml的配置\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    \n</configuration>\n```\n\napplicationContext.xml的配置：管理mybatis\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 配置 读取properties文件 jdbc.properties -->\n    <context:property-placeholder location=\"classpath:jdbc.properties\" />\n\n    <!-- 配置 数据源 -->\n    <bean id=\"dataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\">\n        <property name=\"driverClassName\" value=\"${jdbc.driver}\" />\n        <property name=\"url\" value=\"${jdbc.url}\" />\n        <property name=\"username\" value=\"${jdbc.username}\" />\n        <property name=\"password\" value=\"${jdbc.password}\" />\n    </bean>\n\n    <!-- 配置SqlSessionFactory -->\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <!-- 设置MyBatis核心配置文件 -->\n        <property name=\"configLocation\" value=\"classpath:SqlMapConfig.xml\" />\n        <!-- 设置数据源 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <!--配置别名包扫描-->\n        <property name=\"typeAliasesPackage\" value=\"com.hui.pojo\"/>\n        <!--配置mapper的位置 很重要-->\n        <property name=\"mapperLocations\" value=\"classpath:mapper/*.xml\" />\n    </bean>\n\n    <!-- 配置Mapper扫描 -->\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <!-- 设置Mapper扫描包 -->\n        <property name=\"basePackage\" value=\"com.hui.mapper\" />\n    </bean>\n</beans>\n```\n\njdbc.properties的配置和上面的一样\n\n测试的类\n\n```java\npackage com.hui.test;\n\nimport com.hui.mapper.UserMapper;\nimport com.hui.pojo.User;\nimport com.hui.pojo.UserExample;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport java.io.IOException;\nimport java.util.List;\n\n\npublic class DemoTest {\n    @Test\n    public void testhelper() throws IOException {\n        //初始化spring容器\n        ApplicationContext context=new ClassPathXmlApplicationContext(\"classpath:spring/applicationContext.xml\");\n        //获取mapper代理对象\n        UserMapper userMapper = context.getBean(UserMapper.class);\n        \n        UserExample example = new UserExample();\n        UserExample.Criteria criteria = example.createCriteria();\n        criteria.andUseridEqualTo(1);\n        \n        List<User> users = userMapper.selectByExample(example);\n        \n        //不设置任何查询条件是查询所有\n        //UserExample example = new UserExample();\n        //List<User> users = userMapper.selectByExample(example);\n\n        //User user = userMapper.selectByPrimaryKey(1);\n        for (User user:users){\n            System.out.println(user.toString());\n        }\n    }\n}\n```\n\n#### mapper接口中的方法解析\n\nMybatis逆向工程中mapper接口中的方法解析\n\nmapper接口中的部分常用方法及功能如下：\n\n| 方法                                                         | 功能说明                                                     |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| int countByExample(UserExample example) thorws SQLException  | 按条件计数                                                   |\n| int deleteByPrimaryKey(Integer id) thorws SQLException       | 按主键删除                                                   |\n| int deleteByExample(UserExample example) thorws SQLException | 按条件删除                                                   |\n| String/Integer insert(User record) thorws SQLException       | 插入数据（返回值为ID）                                       |\n| User selectByPrimaryKey(Integer id) thorws SQLException      | 按主键查询                                                   |\n| ListselectByExample(UserExample example) thorws SQLException | 按条件查询                                                   |\n| ListselectByExampleWithBLOGs(UserExample example) thorws SQLException | 按条件查询（包括BLOB字段）。只有当数据表中的字段类型有为二进制的才会产生 |\n| int updateByPrimaryKey(User record) thorws SQLException      | 按主键更新                                                   |\n| int updateByPrimaryKeySelective(User record) thorws SQLException | 按主键更新值不为null的字段                                   |\n| int updateByExample(User record, UserExample example) thorws SQLException | 按条件更新                                                   |\n| int updateByExampleSelective(User record, UserExample example) thorws SQLException | 按条件更新值不为null的字段                                   |\n\n\n\n#### Mybatis逆向工程Example类解析\n\nmybatis的逆向工程中会生成实体类及实体类对应的example类，example类用于添加条件，相当where后面的部分。\n\n> 如果要查询所有，就不设置任何查询条件\n\n```java\nUserExample example = new UserExample();\nList<User> users = userMapper.selectByExample(example);\n```\n\nxxxExample example = new xxxExample();\nCriteria criteria = new Example().createCriteria();\nexample类中的部分常用方法及功能如下：\n\n| 方法                                       | 功能说明                                    |\n| ------------------------------------------ | ------------------------------------------- |\n| example.setOrderByClause(“字段名 ASC”);    | 添加升序排列条件，DESC为降序                |\n| example.setDistinct(false)                 | 去除重复，boolean型，true为选择不重复的记录 |\n| criteria.andXxxIsNull                      | 添加字段xxx为null的条件                     |\n| criteria.andXxxIsNotNull                   | 添加字段xxx不为null的条件                   |\n| criteria.andXxxEqualTo(value)              | 添加xxx字段等于value条件                    |\n| criteria.andXxxNotEqualTo(value)           | 添加xxx字段不等于value条件                  |\n| criteria.andXxxGreaterThan(value)          | 添加xxx字段大于value条件                    |\n| criteria.andXxxGreaterThanOrEqualTo(value) | 添加xxx字段大于等于value条件                |\n| criteria.andXxxLessThan(value)             | 添加xxx字段小于value条件                    |\n| criteria.andXxxLessThanOrEqualTo(value)    | 添加xxx字段小于等于value条件                |\n| criteria.andXxxIn(List<？>)                | 添加xxx字段值在List<？>条件                 |\n| criteria.andXxxNotIn(List<？>)             | 添加xxx字段值不在List<？>条件               |\n| criteria.andXxxLike(“%”+value+”%”)         | 添加xxx字段值为value的模糊查询条件          |\n| criteria.andXxxNotLike(“%”+value+”%”)      | 添加xxx字段值不为value的模糊查询条件        |\n| criteria.andXxxBetween(value1,value2)      | 添加xxx字段值在value1和value2之间条件       |\n| criteria.andXxxNotBetween(value1,value2)   | 添加xxx字段值不在value1和value2之间条件     |\n\n\n","source":"_posts/2020-04-01-02-Mybatis逆向工程使用.md","raw":"---\ntitle: 02-Mybatis逆向工程使用\ndate: 2020-04-01 20:56:16\ncategories:\n- 逆向工程\ntags:\n- Mybatis\n- 逆向工程\n---\n\n<center><font size=4 color=\"red\">02-Mybatis逆向工程使用</font></center>\n\n<!--more-->\n\n## Mybatis逆向工程使用\n\n#### 不使用spring+不使用mapper代理\n\nSqlMapConfig.xml的配置\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <!-- 引入数据源配置 database.properties 文件 -->\n    <properties resource=\"jdbc.properties\"></properties>\n\n    <!--配置mybatis 运行中的一些行为 -->\n    <settings>\n        <!-- 设置Mybatis的log实现为LOG4J -->\n        <setting name=\"logImpl\" value=\"LOG4J\"/>\n    </settings>\n\n    <typeAliases>\n        <!--\n        <typeAlias alias=\"User\" type=\"com.zy.entity.User\"/>\n         -->\n        <package name=\"com.hui.pojo\"/>\n    </typeAliases>\n\n    <!-- 配置mybatis运行环境 -->\n    <environments default=\"dev\">\n        <environment id=\"dev\">\n            <!-- 采用jdbc事务管理 -->\n            <transactionManager type=\"JDBC\"></transactionManager>\n            <!-- 采用Mybatis自带的数据源 POOLED -->\n            <dataSource type=\"POOLED\" >\n                <property name=\"driver\" value=\"${jdbc.driver}\"/>\n                <property name=\"url\" value=\"${jdbc.url}\"/>\n                <property name=\"username\" value=\"${jdbc.username}\"/>\n                <property name=\"password\" value=\"${jdbc.password}\"/>\n            </dataSource>\n        </environment>\n    </environments>\n\n    <!-- 将mapper文件加入到配置文件中 我的mapper文件放在了resources的mapper文件夹下-->\n    <mappers>\n        <mapper resource=\"mapper/UserMapper.xml\"/>\n    </mappers>\n</configuration>\n\n\n```\n\njdbc.properties的配置\n\n```properties\njdbc.driver=com.mysql.jdbc.Driver\njdbc.url=jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8\njdbc.username=root\njdbc.password=123456\n```\n\n测试的类\n\n```java\npackage com.hui.test;\n\nimport com.hui.pojo.User;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class DemoTest {\n    @Test\n    public void testSession() throws IOException {\n        //加载mybatis的配置文件\n        String resources=\"SqlMapConfig.xml\";\n        InputStream inputStream= Resources.getResourceAsStream(resources);\n        //获取sqlSessionFactory工厂\n        SqlSessionFactory sqlSessionFactory=new SqlSessionFactoryBuilder().build(inputStream);\n        //通过工程获取sqlSession\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        //执行sql语句 user是命名空间，起了别名的\n        User user = sqlSession.selectOne(\"user.selectByPrimaryKey\", '1');\n        System.out.println(user.toString());\n        //释放资源\n        sqlSession.close();\n    }\n}\n```\n\n#### 不使用spring+使用mapper代理\n\nSqlMapConfig.xml和jdbc.properties的配置和**不适用spring+不适用mapper代理**方式一样，只有测试的类不一样\n\n```java\npackage com.hui.test;\n\nimport com.hui.pojo.User;\nimport org.apache.ibatis.io.Resources;\nimport org.apache.ibatis.session.SqlSession;\nimport org.apache.ibatis.session.SqlSessionFactory;\nimport org.apache.ibatis.session.SqlSessionFactoryBuilder;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.IOException;\nimport java.io.InputStream;\n\npublic class DemoTest {\n    @Test\n    public void testSession() throws IOException {\n        //加载mybatis的配置文件\n        String resources=\"SqlMapConfig.xml\";\n        InputStream inputStream= Resources.getResourceAsStream(resources);\n        //获取sqlSessionFactory工厂\n        SqlSessionFactory sqlSessionFactory=new SqlSessionFactoryBuilder().build(inputStream);\n        //通过工程获取sqlSession\n        SqlSession sqlSession = sqlSessionFactory.openSession();\n        // 获取mapper代理对象\n        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);\n        User user = userMapper.selectByPrimaryKey(1);\n        System.out.println(user.toString());\n        //释放资源\n        sqlSession.close();\n    }\n}\n```\n\n#### 使用spring+使用mapper代理\n\nSqlMapConfig.xml的配置\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    \n</configuration>\n```\n\napplicationContext.xml的配置：管理mybatis\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:p=\"http://www.springframework.org/schema/p\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\" xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd\n\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd\n\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\">\n\n    <!-- 配置 读取properties文件 jdbc.properties -->\n    <context:property-placeholder location=\"classpath:jdbc.properties\" />\n\n    <!-- 配置 数据源 -->\n    <bean id=\"dataSource\" class=\"com.alibaba.druid.pool.DruidDataSource\">\n        <property name=\"driverClassName\" value=\"${jdbc.driver}\" />\n        <property name=\"url\" value=\"${jdbc.url}\" />\n        <property name=\"username\" value=\"${jdbc.username}\" />\n        <property name=\"password\" value=\"${jdbc.password}\" />\n    </bean>\n\n    <!-- 配置SqlSessionFactory -->\n    <bean id=\"sqlSessionFactory\" class=\"org.mybatis.spring.SqlSessionFactoryBean\">\n        <!-- 设置MyBatis核心配置文件 -->\n        <property name=\"configLocation\" value=\"classpath:SqlMapConfig.xml\" />\n        <!-- 设置数据源 -->\n        <property name=\"dataSource\" ref=\"dataSource\" />\n        <!--配置别名包扫描-->\n        <property name=\"typeAliasesPackage\" value=\"com.hui.pojo\"/>\n        <!--配置mapper的位置 很重要-->\n        <property name=\"mapperLocations\" value=\"classpath:mapper/*.xml\" />\n    </bean>\n\n    <!-- 配置Mapper扫描 -->\n    <bean class=\"org.mybatis.spring.mapper.MapperScannerConfigurer\">\n        <!-- 设置Mapper扫描包 -->\n        <property name=\"basePackage\" value=\"com.hui.mapper\" />\n    </bean>\n</beans>\n```\n\njdbc.properties的配置和上面的一样\n\n测试的类\n\n```java\npackage com.hui.test;\n\nimport com.hui.mapper.UserMapper;\nimport com.hui.pojo.User;\nimport com.hui.pojo.UserExample;\nimport org.junit.jupiter.api.Test;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport java.io.IOException;\nimport java.util.List;\n\n\npublic class DemoTest {\n    @Test\n    public void testhelper() throws IOException {\n        //初始化spring容器\n        ApplicationContext context=new ClassPathXmlApplicationContext(\"classpath:spring/applicationContext.xml\");\n        //获取mapper代理对象\n        UserMapper userMapper = context.getBean(UserMapper.class);\n        \n        UserExample example = new UserExample();\n        UserExample.Criteria criteria = example.createCriteria();\n        criteria.andUseridEqualTo(1);\n        \n        List<User> users = userMapper.selectByExample(example);\n        \n        //不设置任何查询条件是查询所有\n        //UserExample example = new UserExample();\n        //List<User> users = userMapper.selectByExample(example);\n\n        //User user = userMapper.selectByPrimaryKey(1);\n        for (User user:users){\n            System.out.println(user.toString());\n        }\n    }\n}\n```\n\n#### mapper接口中的方法解析\n\nMybatis逆向工程中mapper接口中的方法解析\n\nmapper接口中的部分常用方法及功能如下：\n\n| 方法                                                         | 功能说明                                                     |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| int countByExample(UserExample example) thorws SQLException  | 按条件计数                                                   |\n| int deleteByPrimaryKey(Integer id) thorws SQLException       | 按主键删除                                                   |\n| int deleteByExample(UserExample example) thorws SQLException | 按条件删除                                                   |\n| String/Integer insert(User record) thorws SQLException       | 插入数据（返回值为ID）                                       |\n| User selectByPrimaryKey(Integer id) thorws SQLException      | 按主键查询                                                   |\n| ListselectByExample(UserExample example) thorws SQLException | 按条件查询                                                   |\n| ListselectByExampleWithBLOGs(UserExample example) thorws SQLException | 按条件查询（包括BLOB字段）。只有当数据表中的字段类型有为二进制的才会产生 |\n| int updateByPrimaryKey(User record) thorws SQLException      | 按主键更新                                                   |\n| int updateByPrimaryKeySelective(User record) thorws SQLException | 按主键更新值不为null的字段                                   |\n| int updateByExample(User record, UserExample example) thorws SQLException | 按条件更新                                                   |\n| int updateByExampleSelective(User record, UserExample example) thorws SQLException | 按条件更新值不为null的字段                                   |\n\n\n\n#### Mybatis逆向工程Example类解析\n\nmybatis的逆向工程中会生成实体类及实体类对应的example类，example类用于添加条件，相当where后面的部分。\n\n> 如果要查询所有，就不设置任何查询条件\n\n```java\nUserExample example = new UserExample();\nList<User> users = userMapper.selectByExample(example);\n```\n\nxxxExample example = new xxxExample();\nCriteria criteria = new Example().createCriteria();\nexample类中的部分常用方法及功能如下：\n\n| 方法                                       | 功能说明                                    |\n| ------------------------------------------ | ------------------------------------------- |\n| example.setOrderByClause(“字段名 ASC”);    | 添加升序排列条件，DESC为降序                |\n| example.setDistinct(false)                 | 去除重复，boolean型，true为选择不重复的记录 |\n| criteria.andXxxIsNull                      | 添加字段xxx为null的条件                     |\n| criteria.andXxxIsNotNull                   | 添加字段xxx不为null的条件                   |\n| criteria.andXxxEqualTo(value)              | 添加xxx字段等于value条件                    |\n| criteria.andXxxNotEqualTo(value)           | 添加xxx字段不等于value条件                  |\n| criteria.andXxxGreaterThan(value)          | 添加xxx字段大于value条件                    |\n| criteria.andXxxGreaterThanOrEqualTo(value) | 添加xxx字段大于等于value条件                |\n| criteria.andXxxLessThan(value)             | 添加xxx字段小于value条件                    |\n| criteria.andXxxLessThanOrEqualTo(value)    | 添加xxx字段小于等于value条件                |\n| criteria.andXxxIn(List<？>)                | 添加xxx字段值在List<？>条件                 |\n| criteria.andXxxNotIn(List<？>)             | 添加xxx字段值不在List<？>条件               |\n| criteria.andXxxLike(“%”+value+”%”)         | 添加xxx字段值为value的模糊查询条件          |\n| criteria.andXxxNotLike(“%”+value+”%”)      | 添加xxx字段值不为value的模糊查询条件        |\n| criteria.andXxxBetween(value1,value2)      | 添加xxx字段值在value1和value2之间条件       |\n| criteria.andXxxNotBetween(value1,value2)   | 添加xxx字段值不在value1和value2之间条件     |\n\n\n","slug":"2020-04-01-02-Mybatis逆向工程使用","published":1,"updated":"2020-04-01T12:57:15.906Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wk004854tn1ooigbji","content":"<center><font size=\"4\" color=\"red\">02-Mybatis逆向工程使用</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Mybatis逆向工程使用\"><a href=\"#Mybatis逆向工程使用\" class=\"headerlink\" title=\"Mybatis逆向工程使用\"></a>Mybatis逆向工程使用</h2><h4 id=\"不使用spring-不使用mapper代理\"><a href=\"#不使用spring-不使用mapper代理\" class=\"headerlink\" title=\"不使用spring+不使用mapper代理\"></a>不使用spring+不使用mapper代理</h4><p>SqlMapConfig.xml的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 引入数据源配置 database.properties 文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"jdbc.properties\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置mybatis 运行中的一些行为 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置Mybatis的log实现为LOG4J --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">\"logImpl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"LOG4J\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;typeAlias alias=\"User\" type=\"com.zy.entity.User\"/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">         --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.hui.pojo\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置mybatis运行环境 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"dev\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dev\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 采用jdbc事务管理 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">transactionManager</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 采用Mybatis自带的数据源 POOLED --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span> &gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 将mapper文件加入到配置文件中 我的mapper文件放在了resources的mapper文件夹下--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"mapper/UserMapper.xml\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>jdbc.properties的配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">jdbc.url=jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8</span><br><span class=\"line\">jdbc.username=root</span><br><span class=\"line\">jdbc.password=123456</span><br></pre></td></tr></table></figure>\n<p>测试的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.io.Resources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSession</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//加载mybatis的配置文件</span></span><br><span class=\"line\">        String resources=<span class=\"string\">\"SqlMapConfig.xml\"</span>;</span><br><span class=\"line\">        InputStream inputStream= Resources.getResourceAsStream(resources);</span><br><span class=\"line\">        <span class=\"comment\">//获取sqlSessionFactory工厂</span></span><br><span class=\"line\">        SqlSessionFactory sqlSessionFactory=<span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class=\"line\">        <span class=\"comment\">//通过工程获取sqlSession</span></span><br><span class=\"line\">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//执行sql语句 user是命名空间，起了别名的</span></span><br><span class=\"line\">        User user = sqlSession.selectOne(<span class=\"string\">\"user.selectByPrimaryKey\"</span>, <span class=\"string\">'1'</span>);</span><br><span class=\"line\">        System.out.println(user.toString());</span><br><span class=\"line\">        <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"不使用spring-使用mapper代理\"><a href=\"#不使用spring-使用mapper代理\" class=\"headerlink\" title=\"不使用spring+使用mapper代理\"></a>不使用spring+使用mapper代理</h4><p>SqlMapConfig.xml和jdbc.properties的配置和<strong>不适用spring+不适用mapper代理</strong>方式一样，只有测试的类不一样</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.io.Resources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSession</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//加载mybatis的配置文件</span></span><br><span class=\"line\">        String resources=<span class=\"string\">\"SqlMapConfig.xml\"</span>;</span><br><span class=\"line\">        InputStream inputStream= Resources.getResourceAsStream(resources);</span><br><span class=\"line\">        <span class=\"comment\">//获取sqlSessionFactory工厂</span></span><br><span class=\"line\">        SqlSessionFactory sqlSessionFactory=<span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class=\"line\">        <span class=\"comment\">//通过工程获取sqlSession</span></span><br><span class=\"line\">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">// 获取mapper代理对象</span></span><br><span class=\"line\">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">        User user = userMapper.selectByPrimaryKey(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(user.toString());</span><br><span class=\"line\">        <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用spring-使用mapper代理\"><a href=\"#使用spring-使用mapper代理\" class=\"headerlink\" title=\"使用spring+使用mapper代理\"></a>使用spring+使用mapper代理</h4><p>SqlMapConfig.xml的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>applicationContext.xml的配置：管理mybatis</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 读取properties文件 jdbc.properties --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:jdbc.properties\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 数据源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SqlSessionFactory --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sqlSessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置MyBatis核心配置文件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:SqlMapConfig.xml\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置数据源 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--配置别名包扫描--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"typeAliasesPackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.pojo\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--配置mapper的位置 很重要--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mapperLocations\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:mapper/*.xml\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置Mapper扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.mapper.MapperScannerConfigurer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置Mapper扫描包 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"basePackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.mapper\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>jdbc.properties的配置和上面的一样</p>\n<p>测试的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.UserExample;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testhelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化spring容器</span></span><br><span class=\"line\">        ApplicationContext context=<span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:spring/applicationContext.xml\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取mapper代理对象</span></span><br><span class=\"line\">        UserMapper userMapper = context.getBean(UserMapper.class);</span><br><span class=\"line\">        </span><br><span class=\"line\">        UserExample example = <span class=\"keyword\">new</span> UserExample();</span><br><span class=\"line\">        UserExample.Criteria criteria = example.createCriteria();</span><br><span class=\"line\">        criteria.andUseridEqualTo(<span class=\"number\">1</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectByExample(example);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//不设置任何查询条件是查询所有</span></span><br><span class=\"line\">        <span class=\"comment\">//UserExample example = new UserExample();</span></span><br><span class=\"line\">        <span class=\"comment\">//List&lt;User&gt; users = userMapper.selectByExample(example);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//User user = userMapper.selectByPrimaryKey(1);</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user:users)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"mapper接口中的方法解析\"><a href=\"#mapper接口中的方法解析\" class=\"headerlink\" title=\"mapper接口中的方法解析\"></a>mapper接口中的方法解析</h4><p>Mybatis逆向工程中mapper接口中的方法解析</p>\n<p>mapper接口中的部分常用方法及功能如下：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>int countByExample(UserExample example) thorws SQLException</td>\n<td>按条件计数</td>\n</tr>\n<tr>\n<td>int deleteByPrimaryKey(Integer id) thorws SQLException</td>\n<td>按主键删除</td>\n</tr>\n<tr>\n<td>int deleteByExample(UserExample example) thorws SQLException</td>\n<td>按条件删除</td>\n</tr>\n<tr>\n<td>String/Integer insert(User record) thorws SQLException</td>\n<td>插入数据（返回值为ID）</td>\n</tr>\n<tr>\n<td>User selectByPrimaryKey(Integer id) thorws SQLException</td>\n<td>按主键查询</td>\n</tr>\n<tr>\n<td>ListselectByExample(UserExample example) thorws SQLException</td>\n<td>按条件查询</td>\n</tr>\n<tr>\n<td>ListselectByExampleWithBLOGs(UserExample example) thorws SQLException</td>\n<td>按条件查询（包括BLOB字段）。只有当数据表中的字段类型有为二进制的才会产生</td>\n</tr>\n<tr>\n<td>int updateByPrimaryKey(User record) thorws SQLException</td>\n<td>按主键更新</td>\n</tr>\n<tr>\n<td>int updateByPrimaryKeySelective(User record) thorws SQLException</td>\n<td>按主键更新值不为null的字段</td>\n</tr>\n<tr>\n<td>int updateByExample(User record, UserExample example) thorws SQLException</td>\n<td>按条件更新</td>\n</tr>\n<tr>\n<td>int updateByExampleSelective(User record, UserExample example) thorws SQLException</td>\n<td>按条件更新值不为null的字段</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Mybatis逆向工程Example类解析\"><a href=\"#Mybatis逆向工程Example类解析\" class=\"headerlink\" title=\"Mybatis逆向工程Example类解析\"></a>Mybatis逆向工程Example类解析</h4><p>mybatis的逆向工程中会生成实体类及实体类对应的example类，example类用于添加条件，相当where后面的部分。</p>\n<blockquote>\n<p>如果要查询所有，就不设置任何查询条件</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UserExample example = <span class=\"keyword\">new</span> UserExample();</span><br><span class=\"line\">List&lt;User&gt; users = userMapper.selectByExample(example);</span><br></pre></td></tr></table></figure>\n<p>xxxExample example = new xxxExample();<br>Criteria criteria = new Example().createCriteria();<br>example类中的部分常用方法及功能如下：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>example.setOrderByClause(“字段名 ASC”);</td>\n<td>添加升序排列条件，DESC为降序</td>\n</tr>\n<tr>\n<td>example.setDistinct(false)</td>\n<td>去除重复，boolean型，true为选择不重复的记录</td>\n</tr>\n<tr>\n<td>criteria.andXxxIsNull</td>\n<td>添加字段xxx为null的条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxIsNotNull</td>\n<td>添加字段xxx不为null的条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxEqualTo(value)</td>\n<td>添加xxx字段等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotEqualTo(value)</td>\n<td>添加xxx字段不等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxGreaterThan(value)</td>\n<td>添加xxx字段大于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxGreaterThanOrEqualTo(value)</td>\n<td>添加xxx字段大于等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxLessThan(value)</td>\n<td>添加xxx字段小于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxLessThanOrEqualTo(value)</td>\n<td>添加xxx字段小于等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxIn(List&lt;？&gt;)</td>\n<td>添加xxx字段值在List&lt;？&gt;条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotIn(List&lt;？&gt;)</td>\n<td>添加xxx字段值不在List&lt;？&gt;条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxLike(“%”+value+”%”)</td>\n<td>添加xxx字段值为value的模糊查询条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotLike(“%”+value+”%”)</td>\n<td>添加xxx字段值不为value的模糊查询条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxBetween(value1,value2)</td>\n<td>添加xxx字段值在value1和value2之间条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotBetween(value1,value2)</td>\n<td>添加xxx字段值不在value1和value2之间条件</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">02-Mybatis逆向工程使用</font></center>","more":"<h2 id=\"Mybatis逆向工程使用\"><a href=\"#Mybatis逆向工程使用\" class=\"headerlink\" title=\"Mybatis逆向工程使用\"></a>Mybatis逆向工程使用</h2><h4 id=\"不使用spring-不使用mapper代理\"><a href=\"#不使用spring-不使用mapper代理\" class=\"headerlink\" title=\"不使用spring+不使用mapper代理\"></a>不使用spring+不使用mapper代理</h4><p>SqlMapConfig.xml的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 引入数据源配置 database.properties 文件 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">properties</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"jdbc.properties\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置mybatis 运行中的一些行为 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置Mybatis的log实现为LOG4J --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">setting</span> <span class=\"attr\">name</span>=<span class=\"string\">\"logImpl\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"LOG4J\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">settings</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;typeAlias alias=\"User\" type=\"com.zy.entity.User\"/&gt;</span></span><br><span class=\"line\"><span class=\"comment\">         --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">package</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.hui.pojo\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">typeAliases</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置mybatis运行环境 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">environments</span> <span class=\"attr\">default</span>=<span class=\"string\">\"dev\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">environment</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dev\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 采用jdbc事务管理 --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">transactionManager</span> <span class=\"attr\">type</span>=<span class=\"string\">\"JDBC\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">transactionManager</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 采用Mybatis自带的数据源 POOLED --&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">dataSource</span> <span class=\"attr\">type</span>=<span class=\"string\">\"POOLED\"</span> &gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driver\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">dataSource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">environment</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">environments</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 将mapper文件加入到配置文件中 我的mapper文件放在了resources的mapper文件夹下--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">resource</span>=<span class=\"string\">\"mapper/UserMapper.xml\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">mappers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>jdbc.properties的配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class=\"line\">jdbc.url=jdbc:mysql://192.168.31.140:3306/test?characterEncoding=utf-8</span><br><span class=\"line\">jdbc.username=root</span><br><span class=\"line\">jdbc.password=123456</span><br></pre></td></tr></table></figure>\n<p>测试的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.io.Resources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSession</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//加载mybatis的配置文件</span></span><br><span class=\"line\">        String resources=<span class=\"string\">\"SqlMapConfig.xml\"</span>;</span><br><span class=\"line\">        InputStream inputStream= Resources.getResourceAsStream(resources);</span><br><span class=\"line\">        <span class=\"comment\">//获取sqlSessionFactory工厂</span></span><br><span class=\"line\">        SqlSessionFactory sqlSessionFactory=<span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class=\"line\">        <span class=\"comment\">//通过工程获取sqlSession</span></span><br><span class=\"line\">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">//执行sql语句 user是命名空间，起了别名的</span></span><br><span class=\"line\">        User user = sqlSession.selectOne(<span class=\"string\">\"user.selectByPrimaryKey\"</span>, <span class=\"string\">'1'</span>);</span><br><span class=\"line\">        System.out.println(user.toString());</span><br><span class=\"line\">        <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"不使用spring-使用mapper代理\"><a href=\"#不使用spring-使用mapper代理\" class=\"headerlink\" title=\"不使用spring+使用mapper代理\"></a>不使用spring+使用mapper代理</h4><p>SqlMapConfig.xml和jdbc.properties的配置和<strong>不适用spring+不适用mapper代理</strong>方式一样，只有测试的类不一样</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.io.Resources;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSession</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//加载mybatis的配置文件</span></span><br><span class=\"line\">        String resources=<span class=\"string\">\"SqlMapConfig.xml\"</span>;</span><br><span class=\"line\">        InputStream inputStream= Resources.getResourceAsStream(resources);</span><br><span class=\"line\">        <span class=\"comment\">//获取sqlSessionFactory工厂</span></span><br><span class=\"line\">        SqlSessionFactory sqlSessionFactory=<span class=\"keyword\">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class=\"line\">        <span class=\"comment\">//通过工程获取sqlSession</span></span><br><span class=\"line\">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class=\"line\">        <span class=\"comment\">// 获取mapper代理对象</span></span><br><span class=\"line\">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class=\"line\">        User user = userMapper.selectByPrimaryKey(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(user.toString());</span><br><span class=\"line\">        <span class=\"comment\">//释放资源</span></span><br><span class=\"line\">        sqlSession.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用spring-使用mapper代理\"><a href=\"#使用spring-使用mapper代理\" class=\"headerlink\" title=\"使用spring+使用mapper代理\"></a>使用spring+使用mapper代理</h4><p>SqlMapConfig.xml的配置</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>applicationContext.xml的配置：管理mybatis</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span> <span class=\"attr\">xmlns:p</span>=<span class=\"string\">\"http://www.springframework.org/schema/p\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span> <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">\thttp://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 读取properties文件 jdbc.properties --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:jdbc.properties\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置 数据源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.driver&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.url&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.username&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jdbc.password&#125;\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置SqlSessionFactory --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"sqlSessionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.SqlSessionFactoryBean\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置MyBatis核心配置文件 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"configLocation\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:SqlMapConfig.xml\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置数据源 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dataSource\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"dataSource\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--配置别名包扫描--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"typeAliasesPackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.pojo\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--配置mapper的位置 很重要--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"mapperLocations\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"classpath:mapper/*.xml\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 配置Mapper扫描 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.mybatis.spring.mapper.MapperScannerConfigurer\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- 设置Mapper扫描包 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"basePackage\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.hui.mapper\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>jdbc.properties的配置和上面的一样</p>\n<p>测试的类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.mapper.UserMapper;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.User;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.pojo.UserExample;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.jupiter.api.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testhelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化spring容器</span></span><br><span class=\"line\">        ApplicationContext context=<span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:spring/applicationContext.xml\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取mapper代理对象</span></span><br><span class=\"line\">        UserMapper userMapper = context.getBean(UserMapper.class);</span><br><span class=\"line\">        </span><br><span class=\"line\">        UserExample example = <span class=\"keyword\">new</span> UserExample();</span><br><span class=\"line\">        UserExample.Criteria criteria = example.createCriteria();</span><br><span class=\"line\">        criteria.andUseridEqualTo(<span class=\"number\">1</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectByExample(example);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//不设置任何查询条件是查询所有</span></span><br><span class=\"line\">        <span class=\"comment\">//UserExample example = new UserExample();</span></span><br><span class=\"line\">        <span class=\"comment\">//List&lt;User&gt; users = userMapper.selectByExample(example);</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//User user = userMapper.selectByPrimaryKey(1);</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (User user:users)&#123;</span><br><span class=\"line\">            System.out.println(user.toString());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"mapper接口中的方法解析\"><a href=\"#mapper接口中的方法解析\" class=\"headerlink\" title=\"mapper接口中的方法解析\"></a>mapper接口中的方法解析</h4><p>Mybatis逆向工程中mapper接口中的方法解析</p>\n<p>mapper接口中的部分常用方法及功能如下：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>int countByExample(UserExample example) thorws SQLException</td>\n<td>按条件计数</td>\n</tr>\n<tr>\n<td>int deleteByPrimaryKey(Integer id) thorws SQLException</td>\n<td>按主键删除</td>\n</tr>\n<tr>\n<td>int deleteByExample(UserExample example) thorws SQLException</td>\n<td>按条件删除</td>\n</tr>\n<tr>\n<td>String/Integer insert(User record) thorws SQLException</td>\n<td>插入数据（返回值为ID）</td>\n</tr>\n<tr>\n<td>User selectByPrimaryKey(Integer id) thorws SQLException</td>\n<td>按主键查询</td>\n</tr>\n<tr>\n<td>ListselectByExample(UserExample example) thorws SQLException</td>\n<td>按条件查询</td>\n</tr>\n<tr>\n<td>ListselectByExampleWithBLOGs(UserExample example) thorws SQLException</td>\n<td>按条件查询（包括BLOB字段）。只有当数据表中的字段类型有为二进制的才会产生</td>\n</tr>\n<tr>\n<td>int updateByPrimaryKey(User record) thorws SQLException</td>\n<td>按主键更新</td>\n</tr>\n<tr>\n<td>int updateByPrimaryKeySelective(User record) thorws SQLException</td>\n<td>按主键更新值不为null的字段</td>\n</tr>\n<tr>\n<td>int updateByExample(User record, UserExample example) thorws SQLException</td>\n<td>按条件更新</td>\n</tr>\n<tr>\n<td>int updateByExampleSelective(User record, UserExample example) thorws SQLException</td>\n<td>按条件更新值不为null的字段</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Mybatis逆向工程Example类解析\"><a href=\"#Mybatis逆向工程Example类解析\" class=\"headerlink\" title=\"Mybatis逆向工程Example类解析\"></a>Mybatis逆向工程Example类解析</h4><p>mybatis的逆向工程中会生成实体类及实体类对应的example类，example类用于添加条件，相当where后面的部分。</p>\n<blockquote>\n<p>如果要查询所有，就不设置任何查询条件</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UserExample example = <span class=\"keyword\">new</span> UserExample();</span><br><span class=\"line\">List&lt;User&gt; users = userMapper.selectByExample(example);</span><br></pre></td></tr></table></figure>\n<p>xxxExample example = new xxxExample();<br>Criteria criteria = new Example().createCriteria();<br>example类中的部分常用方法及功能如下：</p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>功能说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>example.setOrderByClause(“字段名 ASC”);</td>\n<td>添加升序排列条件，DESC为降序</td>\n</tr>\n<tr>\n<td>example.setDistinct(false)</td>\n<td>去除重复，boolean型，true为选择不重复的记录</td>\n</tr>\n<tr>\n<td>criteria.andXxxIsNull</td>\n<td>添加字段xxx为null的条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxIsNotNull</td>\n<td>添加字段xxx不为null的条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxEqualTo(value)</td>\n<td>添加xxx字段等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotEqualTo(value)</td>\n<td>添加xxx字段不等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxGreaterThan(value)</td>\n<td>添加xxx字段大于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxGreaterThanOrEqualTo(value)</td>\n<td>添加xxx字段大于等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxLessThan(value)</td>\n<td>添加xxx字段小于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxLessThanOrEqualTo(value)</td>\n<td>添加xxx字段小于等于value条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxIn(List&lt;？&gt;)</td>\n<td>添加xxx字段值在List&lt;？&gt;条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotIn(List&lt;？&gt;)</td>\n<td>添加xxx字段值不在List&lt;？&gt;条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxLike(“%”+value+”%”)</td>\n<td>添加xxx字段值为value的模糊查询条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotLike(“%”+value+”%”)</td>\n<td>添加xxx字段值不为value的模糊查询条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxBetween(value1,value2)</td>\n<td>添加xxx字段值在value1和value2之间条件</td>\n</tr>\n<tr>\n<td>criteria.andXxxNotBetween(value1,value2)</td>\n<td>添加xxx字段值不在value1和value2之间条件</td>\n</tr>\n</tbody>\n</table>"},{"title":"Pagehelper","date":"2020-04-01T20:47:08.000Z","_content":"\n<center><font size=4 color=\"red\">Pagehelper的使用</font></center>\n\n<!--more-->\n\n## Pagehelper的使用\n\nSqlMapConfig.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n    <!--pageHelper版本5以前的配置-->\n    <!--<plugins>-->\n    <!--    <plugin interceptor=\"com.github.pagehelper.PageHelper\">-->\n    <!--        <property name=\"dialect\" value=\"mysql\"/>-->\n    <!--    </plugin>-->\n    <!--</plugins>-->\n\n    <!--pageHelper版本5以后的配置-->\n    <plugins>\n        <!-- com.github.pagehelper为PageHelper类所在包名 -->\n        <plugin interceptor=\"com.github.pagehelper.PageInterceptor\">\n            <!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库-->\n            <property name=\"helperDialect\" value=\"mysql\"/>\n        </plugin>\n    </plugins>\n</configuration>\n```\n\n依赖jar包\n\n```xml\n<!--mybatis分页相关的-->\n<dependency>\n    <groupId>com.github.miemiedev</groupId>\n    <artifactId>mybatis-paginator</artifactId>\n    <version>1.2.15</version>\n</dependency>\n<dependency>\n    <groupId>com.github.pagehelper</groupId>\n    <artifactId>pagehelper</artifactId>\n    <version>5.1.2</version>\n</dependency>\n```\n\n设置分页信息\n\n```java\n//获取第1页，10条内容，默认查询总数count\nPagehelper.startPage(1,10);\n\n//紧跟着的第一个select方法会被分页\nList<User> list=userMapper.selectIf(1);\n```\n\n获取分页信息有两种方法\n\n第一种方法\n\n```java\n//分页后，实际返回的结果list类型是Page<E>，如果想取出分页信息，需要强制转换为Page<E>\nPage<User> userList=(Page<User>)list;\nuserList.getTotal();\n```\n\n第二种方法，**推荐使用第二种**\n\n```java\n//用PageInfo对结果进行包装\nPageInfo page=new PageInfo(list);\n//获取PageInfo全部属性，PageInfo包含了非常全面的分页属性\nassertEquals(1,page.getPageNum());\nassertEquals(10,page.getPageSize());\nassertEquals(1,page.getStartRow());\nassertEquals(10,page.getEndRow());\nassertEquals(183,page.getTotal());\nassertEquals(19,page.getPages());\nassertEquals(1,page.getFirstPage());\nassertEquals(8,page.getLastPage());\nassertEquals(true,page.isFirstPage());\nassertEquals(false,page.isLastPage());\nassertEquals(true,page.isHasNextPage());\nassertEquals(false,page.isHasPreviousPage());\n```\n\njava代码实践\n\n```java\npublic class DemoTest {\n    @Test\n    public void testhelper() throws IOException {\n        //初始化spring容器\n        ApplicationContext context=new ClassPathXmlApplicationContext(\"classpath:spring/applicationContext.xml\");\n        //获取mapper代理对象\n        UserMapper userMapper = context.getBean(UserMapper.class);\n\n        //取出第一页，一页2个信息\n        PageHelper.startPage(1,2);\n        UserExample example = new UserExample();\n\t\t\n        //去掉查询条件，是查询所有\n\t\t//UserExample.Criteria criteria = example.createCriteria();\n\t\t//criteria.andUseridEqualTo(1);\n        List<User> users = userMapper.selectByExample(example);\n        PageInfo<User> info=new PageInfo<User>(users);\n        //Assert.assertEquals(info.getPages(),3,null)的使用，第一个参数是实际参数，第二个是期望参数，第3个是报错信息\n        //Assert.assertEquals(info.getPages(),3,null);\n        System.out.println(info.getTotal());\n    }\n}\n```\n","source":"_posts/2020-04-01-Pagehelper.md","raw":"---\ntitle: Pagehelper\ndate: 2020-04-01 20:47:08\ncategories:\n- Pagehelper\ntags:\n- 分布式案例\n- Pagehelper\n---\n\n<center><font size=4 color=\"red\">Pagehelper的使用</font></center>\n\n<!--more-->\n\n## Pagehelper的使用\n\nSqlMapConfig.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n\n    <!--pageHelper版本5以前的配置-->\n    <!--<plugins>-->\n    <!--    <plugin interceptor=\"com.github.pagehelper.PageHelper\">-->\n    <!--        <property name=\"dialect\" value=\"mysql\"/>-->\n    <!--    </plugin>-->\n    <!--</plugins>-->\n\n    <!--pageHelper版本5以后的配置-->\n    <plugins>\n        <!-- com.github.pagehelper为PageHelper类所在包名 -->\n        <plugin interceptor=\"com.github.pagehelper.PageInterceptor\">\n            <!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库-->\n            <property name=\"helperDialect\" value=\"mysql\"/>\n        </plugin>\n    </plugins>\n</configuration>\n```\n\n依赖jar包\n\n```xml\n<!--mybatis分页相关的-->\n<dependency>\n    <groupId>com.github.miemiedev</groupId>\n    <artifactId>mybatis-paginator</artifactId>\n    <version>1.2.15</version>\n</dependency>\n<dependency>\n    <groupId>com.github.pagehelper</groupId>\n    <artifactId>pagehelper</artifactId>\n    <version>5.1.2</version>\n</dependency>\n```\n\n设置分页信息\n\n```java\n//获取第1页，10条内容，默认查询总数count\nPagehelper.startPage(1,10);\n\n//紧跟着的第一个select方法会被分页\nList<User> list=userMapper.selectIf(1);\n```\n\n获取分页信息有两种方法\n\n第一种方法\n\n```java\n//分页后，实际返回的结果list类型是Page<E>，如果想取出分页信息，需要强制转换为Page<E>\nPage<User> userList=(Page<User>)list;\nuserList.getTotal();\n```\n\n第二种方法，**推荐使用第二种**\n\n```java\n//用PageInfo对结果进行包装\nPageInfo page=new PageInfo(list);\n//获取PageInfo全部属性，PageInfo包含了非常全面的分页属性\nassertEquals(1,page.getPageNum());\nassertEquals(10,page.getPageSize());\nassertEquals(1,page.getStartRow());\nassertEquals(10,page.getEndRow());\nassertEquals(183,page.getTotal());\nassertEquals(19,page.getPages());\nassertEquals(1,page.getFirstPage());\nassertEquals(8,page.getLastPage());\nassertEquals(true,page.isFirstPage());\nassertEquals(false,page.isLastPage());\nassertEquals(true,page.isHasNextPage());\nassertEquals(false,page.isHasPreviousPage());\n```\n\njava代码实践\n\n```java\npublic class DemoTest {\n    @Test\n    public void testhelper() throws IOException {\n        //初始化spring容器\n        ApplicationContext context=new ClassPathXmlApplicationContext(\"classpath:spring/applicationContext.xml\");\n        //获取mapper代理对象\n        UserMapper userMapper = context.getBean(UserMapper.class);\n\n        //取出第一页，一页2个信息\n        PageHelper.startPage(1,2);\n        UserExample example = new UserExample();\n\t\t\n        //去掉查询条件，是查询所有\n\t\t//UserExample.Criteria criteria = example.createCriteria();\n\t\t//criteria.andUseridEqualTo(1);\n        List<User> users = userMapper.selectByExample(example);\n        PageInfo<User> info=new PageInfo<User>(users);\n        //Assert.assertEquals(info.getPages(),3,null)的使用，第一个参数是实际参数，第二个是期望参数，第3个是报错信息\n        //Assert.assertEquals(info.getPages(),3,null);\n        System.out.println(info.getTotal());\n    }\n}\n```\n","slug":"2020-04-01-Pagehelper","published":1,"updated":"2020-04-01T12:48:51.495Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wl004c54tn2welyciv","content":"<center><font size=\"4\" color=\"red\">Pagehelper的使用</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"Pagehelper的使用\"><a href=\"#Pagehelper的使用\" class=\"headerlink\" title=\"Pagehelper的使用\"></a>Pagehelper的使用</h2><p>SqlMapConfig.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--pageHelper版本5以前的配置--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;plugins&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    &lt;plugin interceptor=\"com.github.pagehelper.PageHelper\"&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--        &lt;property name=\"dialect\" value=\"mysql\"/&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    &lt;/plugin&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;/plugins&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--pageHelper版本5以后的配置--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">interceptor</span>=<span class=\"string\">\"com.github.pagehelper.PageInterceptor\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"helperDialect\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"mysql\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>依赖jar包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--mybatis分页相关的--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.miemiedev<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-paginator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.15<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>设置分页信息</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取第1页，10条内容，默认查询总数count</span></span><br><span class=\"line\">Pagehelper.startPage(<span class=\"number\">1</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//紧跟着的第一个select方法会被分页</span></span><br><span class=\"line\">List&lt;User&gt; list=userMapper.selectIf(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p>获取分页信息有两种方法</p>\n<p>第一种方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分页后，实际返回的结果list类型是Page&lt;E&gt;，如果想取出分页信息，需要强制转换为Page&lt;E&gt;</span></span><br><span class=\"line\">Page&lt;User&gt; userList=(Page&lt;User&gt;)list;</span><br><span class=\"line\">userList.getTotal();</span><br></pre></td></tr></table></figure>\n<p>第二种方法，<strong>推荐使用第二种</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//用PageInfo对结果进行包装</span></span><br><span class=\"line\">PageInfo page=<span class=\"keyword\">new</span> PageInfo(list);</span><br><span class=\"line\"><span class=\"comment\">//获取PageInfo全部属性，PageInfo包含了非常全面的分页属性</span></span><br><span class=\"line\">assertEquals(<span class=\"number\">1</span>,page.getPageNum());</span><br><span class=\"line\">assertEquals(<span class=\"number\">10</span>,page.getPageSize());</span><br><span class=\"line\">assertEquals(<span class=\"number\">1</span>,page.getStartRow());</span><br><span class=\"line\">assertEquals(<span class=\"number\">10</span>,page.getEndRow());</span><br><span class=\"line\">assertEquals(<span class=\"number\">183</span>,page.getTotal());</span><br><span class=\"line\">assertEquals(<span class=\"number\">19</span>,page.getPages());</span><br><span class=\"line\">assertEquals(<span class=\"number\">1</span>,page.getFirstPage());</span><br><span class=\"line\">assertEquals(<span class=\"number\">8</span>,page.getLastPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">true</span>,page.isFirstPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">false</span>,page.isLastPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">true</span>,page.isHasNextPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">false</span>,page.isHasPreviousPage());</span><br></pre></td></tr></table></figure>\n<p>java代码实践</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testhelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化spring容器</span></span><br><span class=\"line\">        ApplicationContext context=<span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:spring/applicationContext.xml\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取mapper代理对象</span></span><br><span class=\"line\">        UserMapper userMapper = context.getBean(UserMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//取出第一页，一页2个信息</span></span><br><span class=\"line\">        PageHelper.startPage(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        UserExample example = <span class=\"keyword\">new</span> UserExample();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"comment\">//去掉查询条件，是查询所有</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//UserExample.Criteria criteria = example.createCriteria();</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//criteria.andUseridEqualTo(1);</span></span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectByExample(example);</span><br><span class=\"line\">        PageInfo&lt;User&gt; info=<span class=\"keyword\">new</span> PageInfo&lt;User&gt;(users);</span><br><span class=\"line\">        <span class=\"comment\">//Assert.assertEquals(info.getPages(),3,null)的使用，第一个参数是实际参数，第二个是期望参数，第3个是报错信息</span></span><br><span class=\"line\">        <span class=\"comment\">//Assert.assertEquals(info.getPages(),3,null);</span></span><br><span class=\"line\">        System.out.println(info.getTotal());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">Pagehelper的使用</font></center>","more":"<h2 id=\"Pagehelper的使用\"><a href=\"#Pagehelper的使用\" class=\"headerlink\" title=\"Pagehelper的使用\"></a>Pagehelper的使用</h2><p>SqlMapConfig.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\" ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"</span></span><br><span class=\"line\"><span class=\"meta\">        \"http://mybatis.org/dtd/mybatis-3-config.dtd\"&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--pageHelper版本5以前的配置--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;plugins&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    &lt;plugin interceptor=\"com.github.pagehelper.PageHelper\"&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--        &lt;property name=\"dialect\" value=\"mysql\"/&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--    &lt;/plugin&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;/plugins&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--pageHelper版本5以后的配置--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- com.github.pagehelper为PageHelper类所在包名 --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">plugin</span> <span class=\"attr\">interceptor</span>=<span class=\"string\">\"com.github.pagehelper.PageInterceptor\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"comment\">&lt;!-- 设置数据库类型 Oracle,Mysql,MariaDB,SQLite,Hsqldb,PostgreSQL六种数据库--&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"helperDialect\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"mysql\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>依赖jar包</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--mybatis分页相关的--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.miemiedev<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mybatis-paginator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.2.15<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.pagehelper<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>pagehelper<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.1.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>设置分页信息</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//获取第1页，10条内容，默认查询总数count</span></span><br><span class=\"line\">Pagehelper.startPage(<span class=\"number\">1</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//紧跟着的第一个select方法会被分页</span></span><br><span class=\"line\">List&lt;User&gt; list=userMapper.selectIf(<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n<p>获取分页信息有两种方法</p>\n<p>第一种方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//分页后，实际返回的结果list类型是Page&lt;E&gt;，如果想取出分页信息，需要强制转换为Page&lt;E&gt;</span></span><br><span class=\"line\">Page&lt;User&gt; userList=(Page&lt;User&gt;)list;</span><br><span class=\"line\">userList.getTotal();</span><br></pre></td></tr></table></figure>\n<p>第二种方法，<strong>推荐使用第二种</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//用PageInfo对结果进行包装</span></span><br><span class=\"line\">PageInfo page=<span class=\"keyword\">new</span> PageInfo(list);</span><br><span class=\"line\"><span class=\"comment\">//获取PageInfo全部属性，PageInfo包含了非常全面的分页属性</span></span><br><span class=\"line\">assertEquals(<span class=\"number\">1</span>,page.getPageNum());</span><br><span class=\"line\">assertEquals(<span class=\"number\">10</span>,page.getPageSize());</span><br><span class=\"line\">assertEquals(<span class=\"number\">1</span>,page.getStartRow());</span><br><span class=\"line\">assertEquals(<span class=\"number\">10</span>,page.getEndRow());</span><br><span class=\"line\">assertEquals(<span class=\"number\">183</span>,page.getTotal());</span><br><span class=\"line\">assertEquals(<span class=\"number\">19</span>,page.getPages());</span><br><span class=\"line\">assertEquals(<span class=\"number\">1</span>,page.getFirstPage());</span><br><span class=\"line\">assertEquals(<span class=\"number\">8</span>,page.getLastPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">true</span>,page.isFirstPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">false</span>,page.isLastPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">true</span>,page.isHasNextPage());</span><br><span class=\"line\">assertEquals(<span class=\"keyword\">false</span>,page.isHasPreviousPage());</span><br></pre></td></tr></table></figure>\n<p>java代码实践</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testhelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化spring容器</span></span><br><span class=\"line\">        ApplicationContext context=<span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:spring/applicationContext.xml\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//获取mapper代理对象</span></span><br><span class=\"line\">        UserMapper userMapper = context.getBean(UserMapper.class);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//取出第一页，一页2个信息</span></span><br><span class=\"line\">        PageHelper.startPage(<span class=\"number\">1</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        UserExample example = <span class=\"keyword\">new</span> UserExample();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">        <span class=\"comment\">//去掉查询条件，是查询所有</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//UserExample.Criteria criteria = example.createCriteria();</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//criteria.andUseridEqualTo(1);</span></span><br><span class=\"line\">        List&lt;User&gt; users = userMapper.selectByExample(example);</span><br><span class=\"line\">        PageInfo&lt;User&gt; info=<span class=\"keyword\">new</span> PageInfo&lt;User&gt;(users);</span><br><span class=\"line\">        <span class=\"comment\">//Assert.assertEquals(info.getPages(),3,null)的使用，第一个参数是实际参数，第二个是期望参数，第3个是报错信息</span></span><br><span class=\"line\">        <span class=\"comment\">//Assert.assertEquals(info.getPages(),3,null);</span></span><br><span class=\"line\">        System.out.println(info.getTotal());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"02-redis使用","date":"2020-04-01T20:58:27.000Z","_content":"\n<center><font size=4 color=\"red\">02-redis使用</font></center>\n\n<!--more-->\n\n# Redis的使用\n\n## spring中使用redis\n\n#### 依赖Jar包\n\n```xml\n<--我用的版本：3.2.0-->\n<dependency>\n\t<groupId>redis.clients</groupId>\n\t<artifactId>jedis</artifactId>\n\t<version>${redis.version}</version>\n</dependency>\n<--我用的版本：2.2.5.RELEASE-->\n<dependency>\n\t<groupId>org.springframework.data</groupId>\n\t<artifactId>spring-data-redis</artifactId>\n\t<version>${spring.redis.version}</version>\n</dependency>\n```\n\n#### Spring-redis配置\n\n在spring的xml中，配置redis的连接池，并按照spring的规范，定义redisTemplate，方便service的调用\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t   xmlns:context=\"http://www.springframework.org/schema/context\"\n\txsi:schemaLocation=\"\n                     http://www.springframework.org/schema/beans\n                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n                     http://www.springframework.org/schema/context\n                     http://www.springframework.org/schema/context/spring-context-4.0.xsd \">\n\n    <context:property-placeholder location=\"classpath:redis.properties\" ignore-unresolvable=\"true\" />\n    <!-- redis集群开始 -->\n    <!-- string redis template definition 这个和下面的redisTemplate只能留一个-->\n<!--    <bean id=\"stringRedisTemplate\" class=\"org.springframework.data.redis.core.StringRedisTemplate\">-->\n<!--        <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\" />-->\n<!--    </bean>-->\n\n    <!-- redis template definition -->\n    <bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">\n        <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\" />\n        <property name=\"keySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\" />\n        </property>\n        <property name=\"valueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\" />\n        </property>\n        <property name=\"hashKeySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\" />\n        </property>\n        <property name=\"hashValueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\" />\n        </property>\n    </bean>\n\n    <!-- Spring-redis连接池管理工厂 -->\n    <bean id=\"jedisConnectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\">\n        <constructor-arg ref=\"redisClusterConfiguration\" />\n        <constructor-arg ref=\"jedisPoolConfig\" />\n    </bean>\n\n    <!-- 集群配置 -->\n    <bean id=\"redisClusterConfiguration\" class=\"org.springframework.data.redis.connection.RedisClusterConfiguration\">\n       <property name=\"clusterNodes\">\n              <set>\n                       <ref bean=\"clusterRedisNodes1\"/>\n                       <ref bean=\"clusterRedisNodes2\"/>\n                       <ref bean=\"clusterRedisNodes3\"/>\n                       <ref bean=\"clusterRedisNodes4\"/>\n                       <ref bean=\"clusterRedisNodes5\"/>\n                       <ref bean=\"clusterRedisNodes6\"/>\n              </set>\n       </property>\n       <property name=\"maxRedirects\" value=\"${spring.redis.maxRedirects}\" />\n    </bean>\n    <!-- 集群节点 -->\n     <bean id=\"clusterRedisNodes1\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes1.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes1.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes2\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes2.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes2.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes3\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes3.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes3.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes4\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes4.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes4.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes5\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes5.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes5.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes6\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes6.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes6.port}\" type=\"int\" />\n     </bean>\n\n    <!-- jedis配置 -->\n    <bean id=\"jedisPoolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">\n        <property name=\"maxTotal\" value=\"${spring.redis.pool.max-active}\" />\n        <property name=\"maxIdle\" value=\"${spring.redis.pool.max-idle}\" />\n        <property name=\"minIdle\" value=\"${spring.redis.pool.min-idle}\" />\n        <property name=\"maxWaitMillis\" value=\"${spring.redis.pool.max-wait}\" />\n        <property name=\"testOnBorrow\" value=\"true\" />\n    </bean>\n</beans>\n```\n\n#### redis.properties配置文件\n\n```properties\n###redis集群推送任务信息缓存\nspring.redis.cluster.nodes1.host=192.168.25.152\nspring.redis.cluster.nodes1.port=7000\nspring.redis.cluster.nodes2.host=192.168.25.152\nspring.redis.cluster.nodes2.port=7001\nspring.redis.cluster.nodes3.host=192.168.25.153\nspring.redis.cluster.nodes3.port=7000\nspring.redis.cluster.nodes4.host=192.168.25.153\nspring.redis.cluster.nodes4.port=7001\nspring.redis.cluster.nodes5.host=192.168.25.154\nspring.redis.cluster.nodes5.port=7000\nspring.redis.cluster.nodes6.host=192.168.25.154\nspring.redis.cluster.nodes6.port=7001\n## Redis数据库索引(默认为0) \nspring.redis.database=0\n## 连接超时时间（毫秒） \nspring.redis.timeout=60000\n## 最大重试次数\nspring.redis.maxRedirects=3\n## 连接池最大连接数（使用负值表示没有限制）如果是集群就是每个ip的连接数 \nspring.redis.pool.max-active=300\n## 连接池最大阻塞等待时间（使用负值表示没有限制） \nspring.redis.pool.max-wait=-1\n## 连接池中的最大空闲连接 \nspring.redis.pool.max-idle=100\n## 连接池中的最小空闲连接 \nspring.redis.pool.min-idle=20\n```\n\n#### 使用方法\n\n工具类\n\n```java\npackage com.hui.utils;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\nimport org.springframework.data.redis.core.Cursor;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.ScanOptions;\nimport org.springframework.data.redis.core.ZSetOperations;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\npublic class RedisUtil{\n\n    private Logger log = LoggerFactory.getLogger(this.getClass());\n\n    private final RedisTemplate<String, Object> redisTemplate;\n\n    public RedisUtil(RedisTemplate<String, Object> redisTemplate) {\n        //初始化时加载容器\n        ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"classpath:SpringRedis.xml\");\n        redisTemplate = applicationContext.getBean(RedisTemplate.class);\n        this.redisTemplate = redisTemplate;\n    }\n\n    /**\n     * 指定缓存失效时间\n     *\n     * @param key  键\n     * @param time 时间(秒)\n     * @return\n     */\n    public boolean expire(String key, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.expire(key, time, TimeUnit.SECONDS);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 根据key 获取过期时间\n     *\n     * @param key 键 不能为null\n     * @return 时间(秒) 返回0代表为永久有效\n     */\n    public long getExpire(String key) {\n        return redisTemplate.getExpire(key, TimeUnit.SECONDS);\n    }\n\n    /**\n     * 判断key是否存在\n     *\n     * @param key 键\n     * @return true 存在 false不存在\n     */\n    public boolean hasKey(String key) {\n        try {\n            return redisTemplate.hasKey(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 删除缓存\n     *\n     * @param key 可以传一个值 或多个\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void del(String... key) {\n        if (key != null && key.length > 0) {\n            if (key.length == 1) {\n                redisTemplate.delete(key[0]);\n            } else {\n                redisTemplate.delete(CollectionUtils.arrayToList(key));\n            }\n        }\n    }\n\n    // ============================String=============================\n\n    /**\n     * 普通缓存获取\n     *\n     * @param key 键\n     * @return 值\n     */\n    public Object get(String key) {\n        return key == null ? null : redisTemplate.opsForValue().get(key);\n    }\n\n    /**\n     * 普通缓存放入\n     *\n     * @param key   键\n     * @param value 值\n     * @return true成功 false失败\n     */\n    public boolean set(String key, Object value) {\n        try {\n            redisTemplate.opsForValue().set(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n\n    }\n\n    /**\n     * 普通缓存放入并设置时间\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒) time要大于0 如果time小于等于0 将设置无限期\n     * @return true成功 false 失败\n     */\n    public boolean set(String key, Object value, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);\n            } else {\n                set(key, value);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 递增\n     *\n     * @param key 键\n     * @param delta  要增加几(大于0)\n     * @return\n     */\n    public long incr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"递增因子必须大于0\");\n        }\n        return redisTemplate.opsForValue().increment(key, delta);\n    }\n\n    /**\n     * 递减\n     *\n     * @param key 键\n     * @param delta  要减少几(小于0)\n     * @return\n     */\n    public long decr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"递减因子必须大于0\");\n        }\n        return redisTemplate.opsForValue().increment(key, -delta);\n    }\n\n    // ================================Map=================================\n\n    /**\n     * HashGet\n     *\n     * @param key  键 不能为null\n     * @param item 项 不能为null\n     * @return 值\n     */\n    public Object hget(String key, String item) {\n        return redisTemplate.opsForHash().get(key, item);\n    }\n\n    /**\n     * 获取hashKey对应的所有键值\n     *\n     * @param key 键\n     * @return 对应的多个键值\n     */\n    public Map<Object, Object> hmget(String key) {\n        return redisTemplate.opsForHash().entries(key);\n    }\n\n    /**\n     * HashSet\n     *\n     * @param key 键\n     * @param map 对应多个键值\n     * @return true 成功 false 失败\n     */\n    public boolean hmset(String key, Map<String, Object> map) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * HashSet 并设置时间\n     *\n     * @param key  键\n     * @param map  对应多个键值\n     * @param time 时间(秒)\n     * @return true成功 false失败\n     */\n    public boolean hmset(String key, Map<String, Object> map, long time) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 向一张hash表中放入数据,如果不存在将创建\n     *\n     * @param key   键\n     * @param item  项\n     * @param value 值\n     * @return true 成功 false失败\n     */\n    public boolean hset(String key, String item, Object value) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 向一张hash表中放入数据,如果不存在将创建\n     *\n     * @param key   键\n     * @param item  项\n     * @param value 值\n     * @param time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间\n     * @return true 成功 false失败\n     */\n    public boolean hset(String key, String item, Object value, long time) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 删除hash表中的值\n     *\n     * @param key  键 不能为null\n     * @param item 项 可以使多个 不能为null\n     */\n    public void hdel(String key, Object... item) {\n        redisTemplate.opsForHash().delete(key, item);\n    }\n\n    /**\n     * 判断hash表中是否有该项的值\n     *\n     * @param key  键 不能为null\n     * @param item 项 不能为null\n     * @return true 存在 false不存在\n     */\n    public boolean hHasKey(String key, String item) {\n        return redisTemplate.opsForHash().hasKey(key, item);\n    }\n\n    /**\n     * hash递增 如果不存在,就会创建一个 并把新增后的值返回\n     *\n     * @param key  键\n     * @param item 项\n     * @param by   要增加几(大于0)\n     * @return\n     */\n    public double hincr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, by);\n    }\n\n    /**\n     * hash递减\n     *\n     * @param key  键\n     * @param item 项\n     * @param by   要减少记(小于0)\n     * @return\n     */\n    public double hdecr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, -by);\n    }\n\n    // ============================set=============================\n\n    /**\n     * 根据key获取Set中的所有值\n     *\n     * @param key 键\n     * @return\n     */\n    public Set<Object> sGet(String key) {\n        try {\n            return redisTemplate.opsForSet().members(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * 根据value从一个set中查询,是否存在\n     *\n     * @param key   键\n     * @param value 值\n     * @return true 存在 false不存在\n     */\n    public boolean sHasKey(String key, Object value) {\n        try {\n            return redisTemplate.opsForSet().isMember(key, value);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将数据放入set缓存\n     *\n     * @param key    键\n     * @param values 值 可以是多个\n     * @return 成功个数\n     */\n    public long sSet(String key, Object... values) {\n        try {\n            return redisTemplate.opsForSet().add(key, values);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 将set数据放入缓存\n     *\n     * @param key    键\n     * @param time   时间(秒)\n     * @param values 值 可以是多个\n     * @return 成功个数\n     */\n    public long sSetAndTime(String key, long time, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().add(key, values);\n            if (time > 0)\n                expire(key, time);\n            return count;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 获取set缓存的长度\n     *\n     * @param key 键\n     * @return\n     */\n    public long sGetSetSize(String key) {\n        try {\n            return redisTemplate.opsForSet().size(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 移除值为value的\n     *\n     * @param key    键\n     * @param values 值 可以是多个\n     * @return 移除的个数\n     */\n    public long setRemove(String key, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().remove(key, values);\n            return count;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n    // ===============================list=================================\n\n    /**\n     * 获取list缓存的内容\n     *\n     * @param key   键\n     * @param start 开始\n     * @param end   结束 0 到 -1代表所有值\n     * @return\n     */\n    public List<Object> lGet(String key, long start, long end) {\n        try {\n            return redisTemplate.opsForList().range(key, start, end);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * 获取list缓存的长度\n     *\n     * @param key 键\n     * @return\n     */\n    public long lGetListSize(String key) {\n        try {\n            return redisTemplate.opsForList().size(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 通过索引 获取list中的值\n     *\n     * @param key   键\n     * @param index 索引 index>=0时， 0 表头，1 第二个元素，依次类推；index<0时，-1，表尾，-2倒数第二个元素，依次类推\n     * @return\n     */\n    public Object lGetIndex(String key, long index) {\n        try {\n            return redisTemplate.opsForList().index(key, index);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @return\n     */\n    public boolean lSet(String key, Object value) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, Object value, long time) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @return\n     */\n    public boolean lSet(String key, List<Object> value) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, List<Object> value, long time) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 根据索引修改list中的某条数据\n     *\n     * @param key   键\n     * @param index 索引\n     * @param value 值\n     * @return\n     */\n    public boolean lUpdateIndex(String key, long index, Object value) {\n        try {\n            redisTemplate.opsForList().set(key, index, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 移除N个值为value\n     *\n     * @param key   键\n     * @param count 移除多少个\n     * @param value 值\n     * @return 移除的个数\n     */\n    public long lRemove(String key, long count, Object value) {\n        try {\n            Long remove = redisTemplate.opsForList().remove(key, count, value);\n            return remove;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    // ===============================sorted set=================================\n\n    /**\n     * 向有序集合添加一个成员的\n     * <p>\n     * ZADD key score1 member1 [score2 member2]\n     */\n    public boolean zadd(String key, Object member, double score, long time) {\n        try {\n            redisTemplate.opsForZSet().add(key, member, score);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]\n     * 通过分数返回有序集合指定区间内的成员\n     */\n    public Set<Object> zRangeByScore(String key, double minScore, double maxScore) {\n        try {\n            return redisTemplate.opsForZSet().rangeByScore(key, minScore, maxScore);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * ZSCORE key member\n     * 返回有序集中，成员的分数值\n     */\n    public Double zscore(String key, Object member) {\n        try {\n            return redisTemplate.opsForZSet().score(key, member);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * ZRANK key member 返回有序集合中指定成员的索引\n     */\n    public Long zrank(String key, Object member) {\n        try {\n            return redisTemplate.opsForZSet().rank(key, member);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * Zscan 迭代有序集合中的元素（包括元素成员和元素分值）\n     */\n    public Cursor<ZSetOperations.TypedTuple<Object>> zscan(String key) {\n        try {\n            Cursor<ZSetOperations.TypedTuple<Object>> cursor = redisTemplate.opsForZSet().scan(key, ScanOptions.NONE);\n            return cursor;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n}\n```\n\n测试类\n\n```java\npackage com.hui.test;\n\nimport com.hui.utils.RedisUtil;\nimport org.junit.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\n\nimport java.io.IOException;\n\npublic class DemoTest {\n\n    private Logger log = LoggerFactory.getLogger(this.getClass());\n\n    @Autowired\n    private RedisTemplate template;\n    \n    @Test\n    public void testhelper() throws IOException {\n        RedisUtil redisUtil=new RedisUtil(template);\n        //设值\n        redisUtil.set(\"address\", \"beijing\");\n        //通过key获取值\n        String value= (String) redisUtil.get(\"address\");\n        System.out.println(value);\n    }\n}\n```\n\n## springboot中使用redis\n\n暂时未记录，后续补上","source":"_posts/2020-04-01-02-redis使用.md","raw":"---\ntitle: 02-redis使用\ndate: 2020-04-01 20:58:27\ncategories:\n- redis\ntags:\n- redis\n---\n\n<center><font size=4 color=\"red\">02-redis使用</font></center>\n\n<!--more-->\n\n# Redis的使用\n\n## spring中使用redis\n\n#### 依赖Jar包\n\n```xml\n<--我用的版本：3.2.0-->\n<dependency>\n\t<groupId>redis.clients</groupId>\n\t<artifactId>jedis</artifactId>\n\t<version>${redis.version}</version>\n</dependency>\n<--我用的版本：2.2.5.RELEASE-->\n<dependency>\n\t<groupId>org.springframework.data</groupId>\n\t<artifactId>spring-data-redis</artifactId>\n\t<version>${spring.redis.version}</version>\n</dependency>\n```\n\n#### Spring-redis配置\n\n在spring的xml中，配置redis的连接池，并按照spring的规范，定义redisTemplate，方便service的调用\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t   xmlns:context=\"http://www.springframework.org/schema/context\"\n\txsi:schemaLocation=\"\n                     http://www.springframework.org/schema/beans\n                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd\n                     http://www.springframework.org/schema/context\n                     http://www.springframework.org/schema/context/spring-context-4.0.xsd \">\n\n    <context:property-placeholder location=\"classpath:redis.properties\" ignore-unresolvable=\"true\" />\n    <!-- redis集群开始 -->\n    <!-- string redis template definition 这个和下面的redisTemplate只能留一个-->\n<!--    <bean id=\"stringRedisTemplate\" class=\"org.springframework.data.redis.core.StringRedisTemplate\">-->\n<!--        <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\" />-->\n<!--    </bean>-->\n\n    <!-- redis template definition -->\n    <bean id=\"redisTemplate\" class=\"org.springframework.data.redis.core.RedisTemplate\">\n        <property name=\"connectionFactory\" ref=\"jedisConnectionFactory\" />\n        <property name=\"keySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\" />\n        </property>\n        <property name=\"valueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\" />\n        </property>\n        <property name=\"hashKeySerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.StringRedisSerializer\" />\n        </property>\n        <property name=\"hashValueSerializer\">\n            <bean class=\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\" />\n        </property>\n    </bean>\n\n    <!-- Spring-redis连接池管理工厂 -->\n    <bean id=\"jedisConnectionFactory\" class=\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\">\n        <constructor-arg ref=\"redisClusterConfiguration\" />\n        <constructor-arg ref=\"jedisPoolConfig\" />\n    </bean>\n\n    <!-- 集群配置 -->\n    <bean id=\"redisClusterConfiguration\" class=\"org.springframework.data.redis.connection.RedisClusterConfiguration\">\n       <property name=\"clusterNodes\">\n              <set>\n                       <ref bean=\"clusterRedisNodes1\"/>\n                       <ref bean=\"clusterRedisNodes2\"/>\n                       <ref bean=\"clusterRedisNodes3\"/>\n                       <ref bean=\"clusterRedisNodes4\"/>\n                       <ref bean=\"clusterRedisNodes5\"/>\n                       <ref bean=\"clusterRedisNodes6\"/>\n              </set>\n       </property>\n       <property name=\"maxRedirects\" value=\"${spring.redis.maxRedirects}\" />\n    </bean>\n    <!-- 集群节点 -->\n     <bean id=\"clusterRedisNodes1\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes1.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes1.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes2\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes2.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes2.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes3\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes3.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes3.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes4\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes4.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes4.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes5\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes5.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes5.port}\" type=\"int\" />\n     </bean>\n     <bean id=\"clusterRedisNodes6\"   class=\"org.springframework.data.redis.connection.RedisNode\">\n           <constructor-arg value=\"${spring.redis.cluster.nodes6.host}\" />\n           <constructor-arg value=\"${spring.redis.cluster.nodes6.port}\" type=\"int\" />\n     </bean>\n\n    <!-- jedis配置 -->\n    <bean id=\"jedisPoolConfig\" class=\"redis.clients.jedis.JedisPoolConfig\">\n        <property name=\"maxTotal\" value=\"${spring.redis.pool.max-active}\" />\n        <property name=\"maxIdle\" value=\"${spring.redis.pool.max-idle}\" />\n        <property name=\"minIdle\" value=\"${spring.redis.pool.min-idle}\" />\n        <property name=\"maxWaitMillis\" value=\"${spring.redis.pool.max-wait}\" />\n        <property name=\"testOnBorrow\" value=\"true\" />\n    </bean>\n</beans>\n```\n\n#### redis.properties配置文件\n\n```properties\n###redis集群推送任务信息缓存\nspring.redis.cluster.nodes1.host=192.168.25.152\nspring.redis.cluster.nodes1.port=7000\nspring.redis.cluster.nodes2.host=192.168.25.152\nspring.redis.cluster.nodes2.port=7001\nspring.redis.cluster.nodes3.host=192.168.25.153\nspring.redis.cluster.nodes3.port=7000\nspring.redis.cluster.nodes4.host=192.168.25.153\nspring.redis.cluster.nodes4.port=7001\nspring.redis.cluster.nodes5.host=192.168.25.154\nspring.redis.cluster.nodes5.port=7000\nspring.redis.cluster.nodes6.host=192.168.25.154\nspring.redis.cluster.nodes6.port=7001\n## Redis数据库索引(默认为0) \nspring.redis.database=0\n## 连接超时时间（毫秒） \nspring.redis.timeout=60000\n## 最大重试次数\nspring.redis.maxRedirects=3\n## 连接池最大连接数（使用负值表示没有限制）如果是集群就是每个ip的连接数 \nspring.redis.pool.max-active=300\n## 连接池最大阻塞等待时间（使用负值表示没有限制） \nspring.redis.pool.max-wait=-1\n## 连接池中的最大空闲连接 \nspring.redis.pool.max-idle=100\n## 连接池中的最小空闲连接 \nspring.redis.pool.min-idle=20\n```\n\n#### 使用方法\n\n工具类\n\n```java\npackage com.hui.utils;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\nimport org.springframework.data.redis.core.Cursor;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.data.redis.core.ScanOptions;\nimport org.springframework.data.redis.core.ZSetOperations;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\nimport java.util.concurrent.TimeUnit;\n\npublic class RedisUtil{\n\n    private Logger log = LoggerFactory.getLogger(this.getClass());\n\n    private final RedisTemplate<String, Object> redisTemplate;\n\n    public RedisUtil(RedisTemplate<String, Object> redisTemplate) {\n        //初始化时加载容器\n        ApplicationContext applicationContext = new ClassPathXmlApplicationContext(\"classpath:SpringRedis.xml\");\n        redisTemplate = applicationContext.getBean(RedisTemplate.class);\n        this.redisTemplate = redisTemplate;\n    }\n\n    /**\n     * 指定缓存失效时间\n     *\n     * @param key  键\n     * @param time 时间(秒)\n     * @return\n     */\n    public boolean expire(String key, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.expire(key, time, TimeUnit.SECONDS);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 根据key 获取过期时间\n     *\n     * @param key 键 不能为null\n     * @return 时间(秒) 返回0代表为永久有效\n     */\n    public long getExpire(String key) {\n        return redisTemplate.getExpire(key, TimeUnit.SECONDS);\n    }\n\n    /**\n     * 判断key是否存在\n     *\n     * @param key 键\n     * @return true 存在 false不存在\n     */\n    public boolean hasKey(String key) {\n        try {\n            return redisTemplate.hasKey(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 删除缓存\n     *\n     * @param key 可以传一个值 或多个\n     */\n    @SuppressWarnings(\"unchecked\")\n    public void del(String... key) {\n        if (key != null && key.length > 0) {\n            if (key.length == 1) {\n                redisTemplate.delete(key[0]);\n            } else {\n                redisTemplate.delete(CollectionUtils.arrayToList(key));\n            }\n        }\n    }\n\n    // ============================String=============================\n\n    /**\n     * 普通缓存获取\n     *\n     * @param key 键\n     * @return 值\n     */\n    public Object get(String key) {\n        return key == null ? null : redisTemplate.opsForValue().get(key);\n    }\n\n    /**\n     * 普通缓存放入\n     *\n     * @param key   键\n     * @param value 值\n     * @return true成功 false失败\n     */\n    public boolean set(String key, Object value) {\n        try {\n            redisTemplate.opsForValue().set(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n\n    }\n\n    /**\n     * 普通缓存放入并设置时间\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒) time要大于0 如果time小于等于0 将设置无限期\n     * @return true成功 false 失败\n     */\n    public boolean set(String key, Object value, long time) {\n        try {\n            if (time > 0) {\n                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);\n            } else {\n                set(key, value);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 递增\n     *\n     * @param key 键\n     * @param delta  要增加几(大于0)\n     * @return\n     */\n    public long incr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"递增因子必须大于0\");\n        }\n        return redisTemplate.opsForValue().increment(key, delta);\n    }\n\n    /**\n     * 递减\n     *\n     * @param key 键\n     * @param delta  要减少几(小于0)\n     * @return\n     */\n    public long decr(String key, long delta) {\n        if (delta < 0) {\n            throw new RuntimeException(\"递减因子必须大于0\");\n        }\n        return redisTemplate.opsForValue().increment(key, -delta);\n    }\n\n    // ================================Map=================================\n\n    /**\n     * HashGet\n     *\n     * @param key  键 不能为null\n     * @param item 项 不能为null\n     * @return 值\n     */\n    public Object hget(String key, String item) {\n        return redisTemplate.opsForHash().get(key, item);\n    }\n\n    /**\n     * 获取hashKey对应的所有键值\n     *\n     * @param key 键\n     * @return 对应的多个键值\n     */\n    public Map<Object, Object> hmget(String key) {\n        return redisTemplate.opsForHash().entries(key);\n    }\n\n    /**\n     * HashSet\n     *\n     * @param key 键\n     * @param map 对应多个键值\n     * @return true 成功 false 失败\n     */\n    public boolean hmset(String key, Map<String, Object> map) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * HashSet 并设置时间\n     *\n     * @param key  键\n     * @param map  对应多个键值\n     * @param time 时间(秒)\n     * @return true成功 false失败\n     */\n    public boolean hmset(String key, Map<String, Object> map, long time) {\n        try {\n            redisTemplate.opsForHash().putAll(key, map);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 向一张hash表中放入数据,如果不存在将创建\n     *\n     * @param key   键\n     * @param item  项\n     * @param value 值\n     * @return true 成功 false失败\n     */\n    public boolean hset(String key, String item, Object value) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 向一张hash表中放入数据,如果不存在将创建\n     *\n     * @param key   键\n     * @param item  项\n     * @param value 值\n     * @param time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间\n     * @return true 成功 false失败\n     */\n    public boolean hset(String key, String item, Object value, long time) {\n        try {\n            redisTemplate.opsForHash().put(key, item, value);\n            if (time > 0) {\n                expire(key, time);\n            }\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 删除hash表中的值\n     *\n     * @param key  键 不能为null\n     * @param item 项 可以使多个 不能为null\n     */\n    public void hdel(String key, Object... item) {\n        redisTemplate.opsForHash().delete(key, item);\n    }\n\n    /**\n     * 判断hash表中是否有该项的值\n     *\n     * @param key  键 不能为null\n     * @param item 项 不能为null\n     * @return true 存在 false不存在\n     */\n    public boolean hHasKey(String key, String item) {\n        return redisTemplate.opsForHash().hasKey(key, item);\n    }\n\n    /**\n     * hash递增 如果不存在,就会创建一个 并把新增后的值返回\n     *\n     * @param key  键\n     * @param item 项\n     * @param by   要增加几(大于0)\n     * @return\n     */\n    public double hincr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, by);\n    }\n\n    /**\n     * hash递减\n     *\n     * @param key  键\n     * @param item 项\n     * @param by   要减少记(小于0)\n     * @return\n     */\n    public double hdecr(String key, String item, double by) {\n        return redisTemplate.opsForHash().increment(key, item, -by);\n    }\n\n    // ============================set=============================\n\n    /**\n     * 根据key获取Set中的所有值\n     *\n     * @param key 键\n     * @return\n     */\n    public Set<Object> sGet(String key) {\n        try {\n            return redisTemplate.opsForSet().members(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * 根据value从一个set中查询,是否存在\n     *\n     * @param key   键\n     * @param value 值\n     * @return true 存在 false不存在\n     */\n    public boolean sHasKey(String key, Object value) {\n        try {\n            return redisTemplate.opsForSet().isMember(key, value);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将数据放入set缓存\n     *\n     * @param key    键\n     * @param values 值 可以是多个\n     * @return 成功个数\n     */\n    public long sSet(String key, Object... values) {\n        try {\n            return redisTemplate.opsForSet().add(key, values);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 将set数据放入缓存\n     *\n     * @param key    键\n     * @param time   时间(秒)\n     * @param values 值 可以是多个\n     * @return 成功个数\n     */\n    public long sSetAndTime(String key, long time, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().add(key, values);\n            if (time > 0)\n                expire(key, time);\n            return count;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 获取set缓存的长度\n     *\n     * @param key 键\n     * @return\n     */\n    public long sGetSetSize(String key) {\n        try {\n            return redisTemplate.opsForSet().size(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 移除值为value的\n     *\n     * @param key    键\n     * @param values 值 可以是多个\n     * @return 移除的个数\n     */\n    public long setRemove(String key, Object... values) {\n        try {\n            Long count = redisTemplate.opsForSet().remove(key, values);\n            return count;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n    // ===============================list=================================\n\n    /**\n     * 获取list缓存的内容\n     *\n     * @param key   键\n     * @param start 开始\n     * @param end   结束 0 到 -1代表所有值\n     * @return\n     */\n    public List<Object> lGet(String key, long start, long end) {\n        try {\n            return redisTemplate.opsForList().range(key, start, end);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * 获取list缓存的长度\n     *\n     * @param key 键\n     * @return\n     */\n    public long lGetListSize(String key) {\n        try {\n            return redisTemplate.opsForList().size(key);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    /**\n     * 通过索引 获取list中的值\n     *\n     * @param key   键\n     * @param index 索引 index>=0时， 0 表头，1 第二个元素，依次类推；index<0时，-1，表尾，-2倒数第二个元素，依次类推\n     * @return\n     */\n    public Object lGetIndex(String key, long index) {\n        try {\n            return redisTemplate.opsForList().index(key, index);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @return\n     */\n    public boolean lSet(String key, Object value) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, Object value, long time) {\n        try {\n            redisTemplate.opsForList().rightPush(key, value);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @return\n     */\n    public boolean lSet(String key, List<Object> value) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 将list放入缓存\n     *\n     * @param key   键\n     * @param value 值\n     * @param time  时间(秒)\n     * @return\n     */\n    public boolean lSet(String key, List<Object> value, long time) {\n        try {\n            redisTemplate.opsForList().rightPushAll(key, value);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 根据索引修改list中的某条数据\n     *\n     * @param key   键\n     * @param index 索引\n     * @param value 值\n     * @return\n     */\n    public boolean lUpdateIndex(String key, long index, Object value) {\n        try {\n            redisTemplate.opsForList().set(key, index, value);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * 移除N个值为value\n     *\n     * @param key   键\n     * @param count 移除多少个\n     * @param value 值\n     * @return 移除的个数\n     */\n    public long lRemove(String key, long count, Object value) {\n        try {\n            Long remove = redisTemplate.opsForList().remove(key, count, value);\n            return remove;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return 0;\n        }\n    }\n\n    // ===============================sorted set=================================\n\n    /**\n     * 向有序集合添加一个成员的\n     * <p>\n     * ZADD key score1 member1 [score2 member2]\n     */\n    public boolean zadd(String key, Object member, double score, long time) {\n        try {\n            redisTemplate.opsForZSet().add(key, member, score);\n            if (time > 0)\n                expire(key, time);\n            return true;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return false;\n        }\n    }\n\n    /**\n     * ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]\n     * 通过分数返回有序集合指定区间内的成员\n     */\n    public Set<Object> zRangeByScore(String key, double minScore, double maxScore) {\n        try {\n            return redisTemplate.opsForZSet().rangeByScore(key, minScore, maxScore);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * ZSCORE key member\n     * 返回有序集中，成员的分数值\n     */\n    public Double zscore(String key, Object member) {\n        try {\n            return redisTemplate.opsForZSet().score(key, member);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * ZRANK key member 返回有序集合中指定成员的索引\n     */\n    public Long zrank(String key, Object member) {\n        try {\n            return redisTemplate.opsForZSet().rank(key, member);\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n    /**\n     * Zscan 迭代有序集合中的元素（包括元素成员和元素分值）\n     */\n    public Cursor<ZSetOperations.TypedTuple<Object>> zscan(String key) {\n        try {\n            Cursor<ZSetOperations.TypedTuple<Object>> cursor = redisTemplate.opsForZSet().scan(key, ScanOptions.NONE);\n            return cursor;\n        } catch (Exception e) {\n            log.error(\"redis error: \", e);\n            return null;\n        }\n    }\n\n}\n```\n\n测试类\n\n```java\npackage com.hui.test;\n\nimport com.hui.utils.RedisUtil;\nimport org.junit.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\n\nimport java.io.IOException;\n\npublic class DemoTest {\n\n    private Logger log = LoggerFactory.getLogger(this.getClass());\n\n    @Autowired\n    private RedisTemplate template;\n    \n    @Test\n    public void testhelper() throws IOException {\n        RedisUtil redisUtil=new RedisUtil(template);\n        //设值\n        redisUtil.set(\"address\", \"beijing\");\n        //通过key获取值\n        String value= (String) redisUtil.get(\"address\");\n        System.out.println(value);\n    }\n}\n```\n\n## springboot中使用redis\n\n暂时未记录，后续补上","slug":"2020-04-01-02-redis使用","published":1,"updated":"2020-04-01T13:03:52.343Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wm004d54tnnmmovtws","content":"<center><font size=\"4\" color=\"red\">02-redis使用</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"Redis的使用\"><a href=\"#Redis的使用\" class=\"headerlink\" title=\"Redis的使用\"></a>Redis的使用</h1><h2 id=\"spring中使用redis\"><a href=\"#spring中使用redis\" class=\"headerlink\" title=\"spring中使用redis\"></a>spring中使用redis</h2><h4 id=\"依赖Jar包\"><a href=\"#依赖Jar包\" class=\"headerlink\" title=\"依赖Jar包\"></a>依赖Jar包</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">--我用的版本：3.2.0--</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>redis.clients<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jedis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;redis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">--我用的版本：2.2.5.RELEASE--</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.data<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.redis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Spring-redis配置\"><a href=\"#Spring-redis配置\" class=\"headerlink\" title=\"Spring-redis配置\"></a>Spring-redis配置</h4><p>在spring的xml中，配置redis的连接池，并按照spring的规范，定义redisTemplate，方便service的调用</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t   <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t   <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/context/spring-context-4.0.xsd \"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:redis.properties\"</span> <span class=\"attr\">ignore-unresolvable</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- redis集群开始 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- string redis template definition 这个和下面的redisTemplate只能留一个--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;bean id=\"stringRedisTemplate\" class=\"org.springframework.data.redis.core.StringRedisTemplate\"&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;property name=\"connectionFactory\" ref=\"jedisConnectionFactory\" /&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;/bean&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- redis template definition --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.core.RedisTemplate\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisConnectionFactory\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keySerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"valueSerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashKeySerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashValueSerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Spring-redis连接池管理工厂 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"redisClusterConfiguration\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPoolConfig\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 集群配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisClusterConfiguration\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisClusterConfiguration\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"clusterNodes\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes1\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes2\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes3\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes4\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes5\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes6\"</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxRedirects\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.maxRedirects&#125;\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 集群节点 --&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes1\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes1.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes1.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes2\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes2.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes2.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes3\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes3.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes3.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes4\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes4.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes4.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes5\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes5.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes5.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes6\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes6.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes6.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- jedis配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisPoolConfig\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redis.clients.jedis.JedisPoolConfig\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxTotal\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.max-active&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.max-idle&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.min-idle&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWaitMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.max-wait&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"redis-properties配置文件\"><a href=\"#redis-properties配置文件\" class=\"headerlink\" title=\"redis.properties配置文件\"></a>redis.properties配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###redis集群推送任务信息缓存</span><br><span class=\"line\">spring.redis.cluster.nodes1.host=192.168.25.152</span><br><span class=\"line\">spring.redis.cluster.nodes1.port=7000</span><br><span class=\"line\">spring.redis.cluster.nodes2.host=192.168.25.152</span><br><span class=\"line\">spring.redis.cluster.nodes2.port=7001</span><br><span class=\"line\">spring.redis.cluster.nodes3.host=192.168.25.153</span><br><span class=\"line\">spring.redis.cluster.nodes3.port=7000</span><br><span class=\"line\">spring.redis.cluster.nodes4.host=192.168.25.153</span><br><span class=\"line\">spring.redis.cluster.nodes4.port=7001</span><br><span class=\"line\">spring.redis.cluster.nodes5.host=192.168.25.154</span><br><span class=\"line\">spring.redis.cluster.nodes5.port=7000</span><br><span class=\"line\">spring.redis.cluster.nodes6.host=192.168.25.154</span><br><span class=\"line\">spring.redis.cluster.nodes6.port=7001</span><br><span class=\"line\">## Redis数据库索引(默认为0) </span><br><span class=\"line\">spring.redis.database=0</span><br><span class=\"line\">## 连接超时时间（毫秒） </span><br><span class=\"line\">spring.redis.timeout=60000</span><br><span class=\"line\">## 最大重试次数</span><br><span class=\"line\">spring.redis.maxRedirects=3</span><br><span class=\"line\">## 连接池最大连接数（使用负值表示没有限制）如果是集群就是每个ip的连接数 </span><br><span class=\"line\">spring.redis.pool.max-active=300</span><br><span class=\"line\">## 连接池最大阻塞等待时间（使用负值表示没有限制） </span><br><span class=\"line\">spring.redis.pool.max-wait=-1</span><br><span class=\"line\">## 连接池中的最大空闲连接 </span><br><span class=\"line\">spring.redis.pool.max-idle=100</span><br><span class=\"line\">## 连接池中的最小空闲连接 </span><br><span class=\"line\">spring.redis.pool.min-idle=20</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><p>工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.Cursor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.ScanOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.ZSetOperations;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.CollectionUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisUtil</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Logger log = LoggerFactory.getLogger(<span class=\"keyword\">this</span>.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">RedisUtil</span><span class=\"params\">(RedisTemplate&lt;String, Object&gt; redisTemplate)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化时加载容器</span></span><br><span class=\"line\">        ApplicationContext applicationContext = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:SpringRedis.xml\"</span>);</span><br><span class=\"line\">        redisTemplate = applicationContext.getBean(RedisTemplate.class);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.redisTemplate = redisTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定缓存失效时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">expire</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                redisTemplate.expire(key, time, TimeUnit.SECONDS);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据key 获取过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 时间(秒) 返回0代表为永久有效</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">getExpire</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.getExpire(key, TimeUnit.SECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断key是否存在</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasKey</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.hasKey(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 可以传一个值 或多个</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(String... key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key != <span class=\"keyword\">null</span> &amp;&amp; key.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.length == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                redisTemplate.delete(key[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                redisTemplate.delete(CollectionUtils.arrayToList(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ============================String=============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通缓存获取</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> key == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通缓存放入</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">set</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通缓存放入并设置时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒) time要大于0 如果time小于等于0 将设置无限期</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true成功 false 失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">set</span><span class=\"params\">(String key, Object value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                set(key, value);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 递增</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> delta  要增加几(大于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">incr</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> delta)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"递增因子必须大于0\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, delta);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 递减</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> delta  要减少几(小于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">decr</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> delta)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"递减因子必须大于0\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, -delta);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ================================Map=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * HashGet</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">hget</span><span class=\"params\">(String key, String item)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().get(key, item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取hashKey对应的所有键值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 对应的多个键值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Map&lt;Object, Object&gt; <span class=\"title\">hmget</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * HashSet</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map 对应多个键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 成功 false 失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hmset</span><span class=\"params\">(String key, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * HashSet 并设置时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map  对应多个键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hmset</span><span class=\"params\">(String key, Map&lt;String, Object&gt; map, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item  项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hset</span><span class=\"params\">(String key, String item, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item  项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hset</span><span class=\"params\">(String key, String item, Object value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除hash表中的值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项 可以使多个 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hdel</span><span class=\"params\">(String key, Object... item)</span> </span>&#123;</span><br><span class=\"line\">        redisTemplate.opsForHash().delete(key, item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断hash表中是否有该项的值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hHasKey</span><span class=\"params\">(String key, String item)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().hasKey(key, item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * hash递增 如果不存在,就会创建一个 并把新增后的值返回</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by   要增加几(大于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">hincr</span><span class=\"params\">(String key, String item, <span class=\"keyword\">double</span> by)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().increment(key, item, by);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * hash递减</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by   要减少记(小于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">hdecr</span><span class=\"params\">(String key, String item, <span class=\"keyword\">double</span> by)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().increment(key, item, -by);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ============================set=============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据key获取Set中的所有值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Set&lt;Object&gt; <span class=\"title\">sGet</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().members(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据value从一个set中查询,是否存在</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">sHasKey</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将数据放入set缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key    键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 成功个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">sSet</span><span class=\"params\">(String key, Object... values)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将set数据放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key    键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time   时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 成功个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">sSetAndTime</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> time, Object... values)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Long count = redisTemplate.opsForSet().add(key, values);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取set缓存的长度</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">sGetSetSize</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().size(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 移除值为value的</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key    键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 移除的个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">setRemove</span><span class=\"params\">(String key, Object... values)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Long count = redisTemplate.opsForSet().remove(key, values);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ===============================list=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取list缓存的内容</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> start 开始</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> end   结束 0 到 -1代表所有值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title\">lGet</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> start, <span class=\"keyword\">long</span> end)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取list缓存的长度</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">lGetListSize</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForList().size(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过索引 获取list中的值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 索引 index&gt;=0时， 0 表头，1 第二个元素，依次类推；index&lt;0时，-1，表尾，-2倒数第二个元素，依次类推</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">lGetIndex</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> index)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, Object value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, List&lt;Object&gt; value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, List&lt;Object&gt; value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据索引修改list中的某条数据</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lUpdateIndex</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> index, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().set(key, index, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 移除N个值为value</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> count 移除多少个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 移除的个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">lRemove</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> count, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Long remove = redisTemplate.opsForList().remove(key, count, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> remove;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ===============================sorted set=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向有序集合添加一个成员的</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * ZADD key score1 member1 [score2 member2]</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">zadd</span><span class=\"params\">(String key, Object member, <span class=\"keyword\">double</span> score, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForZSet().add(key, member, score);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过分数返回有序集合指定区间内的成员</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Set&lt;Object&gt; <span class=\"title\">zRangeByScore</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> minScore, <span class=\"keyword\">double</span> maxScore)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForZSet().rangeByScore(key, minScore, maxScore);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ZSCORE key member</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回有序集中，成员的分数值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Double <span class=\"title\">zscore</span><span class=\"params\">(String key, Object member)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForZSet().score(key, member);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ZRANK key member 返回有序集合中指定成员的索引</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">zrank</span><span class=\"params\">(String key, Object member)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForZSet().rank(key, member);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Zscan 迭代有序集合中的元素（包括元素成员和元素分值）</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Cursor&lt;ZSetOperations.TypedTuple&lt;Object&gt;&gt; zscan(String key) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Cursor&lt;ZSetOperations.TypedTuple&lt;Object&gt;&gt; cursor = redisTemplate.opsForZSet().scan(key, ScanOptions.NONE);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cursor;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.utils.RedisUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Logger log = LoggerFactory.getLogger(<span class=\"keyword\">this</span>.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate template;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testhelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        RedisUtil redisUtil=<span class=\"keyword\">new</span> RedisUtil(template);</span><br><span class=\"line\">        <span class=\"comment\">//设值</span></span><br><span class=\"line\">        redisUtil.set(<span class=\"string\">\"address\"</span>, <span class=\"string\">\"beijing\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过key获取值</span></span><br><span class=\"line\">        String value= (String) redisUtil.get(<span class=\"string\">\"address\"</span>);</span><br><span class=\"line\">        System.out.println(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"springboot中使用redis\"><a href=\"#springboot中使用redis\" class=\"headerlink\" title=\"springboot中使用redis\"></a>springboot中使用redis</h2><p>暂时未记录，后续补上</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">02-redis使用</font></center>","more":"<h1 id=\"Redis的使用\"><a href=\"#Redis的使用\" class=\"headerlink\" title=\"Redis的使用\"></a>Redis的使用</h1><h2 id=\"spring中使用redis\"><a href=\"#spring中使用redis\" class=\"headerlink\" title=\"spring中使用redis\"></a>spring中使用redis</h2><h4 id=\"依赖Jar包\"><a href=\"#依赖Jar包\" class=\"headerlink\" title=\"依赖Jar包\"></a>依赖Jar包</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">--我用的版本：3.2.0--</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>redis.clients<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jedis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;redis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">--我用的版本：2.2.5.RELEASE--</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.data<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-data-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.redis.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"Spring-redis配置\"><a href=\"#Spring-redis配置\" class=\"headerlink\" title=\"Spring-redis配置\"></a>Spring-redis配置</h4><p>在spring的xml中，配置redis的连接池，并按照spring的规范，定义redisTemplate，方便service的调用</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t   <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t   <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">                     http://www.springframework.org/schema/context/spring-context-4.0.xsd \"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:property-placeholder</span> <span class=\"attr\">location</span>=<span class=\"string\">\"classpath:redis.properties\"</span> <span class=\"attr\">ignore-unresolvable</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- redis集群开始 --&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- string redis template definition 这个和下面的redisTemplate只能留一个--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;bean id=\"stringRedisTemplate\" class=\"org.springframework.data.redis.core.StringRedisTemplate\"&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--        &lt;property name=\"connectionFactory\" ref=\"jedisConnectionFactory\" /&gt;--&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--    &lt;/bean&gt;--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- redis template definition --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.core.RedisTemplate\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisConnectionFactory\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"keySerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"valueSerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashKeySerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.StringRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"hashValueSerializer\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.serializer.JdkSerializationRedisSerializer\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- Spring-redis连接池管理工厂 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.jedis.JedisConnectionFactory\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"redisClusterConfiguration\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"jedisPoolConfig\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 集群配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"redisClusterConfiguration\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisClusterConfiguration\"</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"clusterNodes\"</span>&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes1\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes2\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes3\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes4\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes5\"</span>/&gt;</span></span><br><span class=\"line\">                       <span class=\"tag\">&lt;<span class=\"name\">ref</span> <span class=\"attr\">bean</span>=<span class=\"string\">\"clusterRedisNodes6\"</span>/&gt;</span></span><br><span class=\"line\">              <span class=\"tag\">&lt;/<span class=\"name\">set</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxRedirects\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.maxRedirects&#125;\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 集群节点 --&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes1\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes1.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes1.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes2\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes2.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes2.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes3\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes3.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes3.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes4\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes4.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes4.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes5\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes5.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes5.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"clusterRedisNodes6\"</span>   <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.data.redis.connection.RedisNode\"</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes6.host&#125;\"</span> /&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">constructor-arg</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.cluster.nodes6.port&#125;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"int\"</span> /&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- jedis配置 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jedisPoolConfig\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"redis.clients.jedis.JedisPoolConfig\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxTotal\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.max-active&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.max-idle&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"minIdle\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.min-idle&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"maxWaitMillis\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;spring.redis.pool.max-wait&#125;\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"testOnBorrow\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"redis-properties配置文件\"><a href=\"#redis-properties配置文件\" class=\"headerlink\" title=\"redis.properties配置文件\"></a>redis.properties配置文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###redis集群推送任务信息缓存</span><br><span class=\"line\">spring.redis.cluster.nodes1.host=192.168.25.152</span><br><span class=\"line\">spring.redis.cluster.nodes1.port=7000</span><br><span class=\"line\">spring.redis.cluster.nodes2.host=192.168.25.152</span><br><span class=\"line\">spring.redis.cluster.nodes2.port=7001</span><br><span class=\"line\">spring.redis.cluster.nodes3.host=192.168.25.153</span><br><span class=\"line\">spring.redis.cluster.nodes3.port=7000</span><br><span class=\"line\">spring.redis.cluster.nodes4.host=192.168.25.153</span><br><span class=\"line\">spring.redis.cluster.nodes4.port=7001</span><br><span class=\"line\">spring.redis.cluster.nodes5.host=192.168.25.154</span><br><span class=\"line\">spring.redis.cluster.nodes5.port=7000</span><br><span class=\"line\">spring.redis.cluster.nodes6.host=192.168.25.154</span><br><span class=\"line\">spring.redis.cluster.nodes6.port=7001</span><br><span class=\"line\">## Redis数据库索引(默认为0) </span><br><span class=\"line\">spring.redis.database=0</span><br><span class=\"line\">## 连接超时时间（毫秒） </span><br><span class=\"line\">spring.redis.timeout=60000</span><br><span class=\"line\">## 最大重试次数</span><br><span class=\"line\">spring.redis.maxRedirects=3</span><br><span class=\"line\">## 连接池最大连接数（使用负值表示没有限制）如果是集群就是每个ip的连接数 </span><br><span class=\"line\">spring.redis.pool.max-active=300</span><br><span class=\"line\">## 连接池最大阻塞等待时间（使用负值表示没有限制） </span><br><span class=\"line\">spring.redis.pool.max-wait=-1</span><br><span class=\"line\">## 连接池中的最大空闲连接 </span><br><span class=\"line\">spring.redis.pool.max-idle=100</span><br><span class=\"line\">## 连接池中的最小空闲连接 </span><br><span class=\"line\">spring.redis.pool.min-idle=20</span><br></pre></td></tr></table></figure>\n<h4 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h4><p>工具类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.ApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.Cursor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.ScanOptions;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.ZSetOperations;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.CollectionUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisUtil</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Logger log = LoggerFactory.getLogger(<span class=\"keyword\">this</span>.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> RedisTemplate&lt;String, Object&gt; redisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">RedisUtil</span><span class=\"params\">(RedisTemplate&lt;String, Object&gt; redisTemplate)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//初始化时加载容器</span></span><br><span class=\"line\">        ApplicationContext applicationContext = <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:SpringRedis.xml\"</span>);</span><br><span class=\"line\">        redisTemplate = applicationContext.getBean(RedisTemplate.class);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.redisTemplate = redisTemplate;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 指定缓存失效时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">expire</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                redisTemplate.expire(key, time, TimeUnit.SECONDS);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据key 获取过期时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 时间(秒) 返回0代表为永久有效</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">getExpire</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.getExpire(key, TimeUnit.SECONDS);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断key是否存在</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hasKey</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.hasKey(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 可以传一个值 或多个</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings</span>(<span class=\"string\">\"unchecked\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">del</span><span class=\"params\">(String... key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (key != <span class=\"keyword\">null</span> &amp;&amp; key.length &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (key.length == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                redisTemplate.delete(key[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                redisTemplate.delete(CollectionUtils.arrayToList(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ============================String=============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通缓存获取</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> key == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : redisTemplate.opsForValue().get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通缓存放入</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">set</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForValue().set(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 普通缓存放入并设置时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒) time要大于0 如果time小于等于0 将设置无限期</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true成功 false 失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">set</span><span class=\"params\">(String key, Object value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                set(key, value);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 递增</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> delta  要增加几(大于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">incr</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> delta)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"递增因子必须大于0\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, delta);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 递减</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> delta  要减少几(小于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">decr</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> delta)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (delta &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"递减因子必须大于0\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForValue().increment(key, -delta);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ================================Map=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * HashGet</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">hget</span><span class=\"params\">(String key, String item)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().get(key, item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取hashKey对应的所有键值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 对应的多个键值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Map&lt;Object, Object&gt; <span class=\"title\">hmget</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().entries(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * HashSet</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map 对应多个键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 成功 false 失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hmset</span><span class=\"params\">(String key, Map&lt;String, Object&gt; map)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * HashSet 并设置时间</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> map  对应多个键值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time 时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hmset</span><span class=\"params\">(String key, Map&lt;String, Object&gt; map, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().putAll(key, map);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item  项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hset</span><span class=\"params\">(String key, String item, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向一张hash表中放入数据,如果不存在将创建</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item  项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒) 注意:如果已存在的hash表有时间,这里将会替换原有的时间</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 成功 false失败</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hset</span><span class=\"params\">(String key, String item, Object value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForHash().put(key, item, value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 删除hash表中的值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项 可以使多个 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">hdel</span><span class=\"params\">(String key, Object... item)</span> </span>&#123;</span><br><span class=\"line\">        redisTemplate.opsForHash().delete(key, item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判断hash表中是否有该项的值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项 不能为null</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">hHasKey</span><span class=\"params\">(String key, String item)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().hasKey(key, item);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * hash递增 如果不存在,就会创建一个 并把新增后的值返回</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by   要增加几(大于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">hincr</span><span class=\"params\">(String key, String item, <span class=\"keyword\">double</span> by)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().increment(key, item, by);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * hash递减</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key  键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> item 项</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> by   要减少记(小于0)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">double</span> <span class=\"title\">hdecr</span><span class=\"params\">(String key, String item, <span class=\"keyword\">double</span> by)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redisTemplate.opsForHash().increment(key, item, -by);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ============================set=============================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据key获取Set中的所有值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Set&lt;Object&gt; <span class=\"title\">sGet</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().members(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据value从一个set中查询,是否存在</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> true 存在 false不存在</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">sHasKey</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().isMember(key, value);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将数据放入set缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key    键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 成功个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">sSet</span><span class=\"params\">(String key, Object... values)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().add(key, values);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将set数据放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key    键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time   时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 成功个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">sSetAndTime</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> time, Object... values)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Long count = redisTemplate.opsForSet().add(key, values);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取set缓存的长度</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">sGetSetSize</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForSet().size(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 移除值为value的</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key    键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> values 值 可以是多个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 移除的个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">setRemove</span><span class=\"params\">(String key, Object... values)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Long count = redisTemplate.opsForSet().remove(key, values);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> count;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// ===============================list=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取list缓存的内容</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> start 开始</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> end   结束 0 到 -1代表所有值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;Object&gt; <span class=\"title\">lGet</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> start, <span class=\"keyword\">long</span> end)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForList().range(key, start, end);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取list缓存的长度</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key 键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">lGetListSize</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForList().size(key);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过索引 获取list中的值</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 索引 index&gt;=0时， 0 表头，1 第二个元素，依次类推；index&lt;0时，-1，表尾，-2倒数第二个元素，依次类推</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">lGetIndex</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> index)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForList().index(key, index);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, Object value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPush(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, List&lt;Object&gt; value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 将list放入缓存</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> time  时间(秒)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lSet</span><span class=\"params\">(String key, List&lt;Object&gt; value, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().rightPushAll(key, value);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据索引修改list中的某条数据</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> index 索引</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">lUpdateIndex</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> index, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForList().set(key, index, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 移除N个值为value</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> key   键</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> count 移除多少个</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 移除的个数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">long</span> <span class=\"title\">lRemove</span><span class=\"params\">(String key, <span class=\"keyword\">long</span> count, Object value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Long remove = redisTemplate.opsForList().remove(key, count, value);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> remove;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ===============================sorted set=================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 向有序集合添加一个成员的</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * ZADD key score1 member1 [score2 member2]</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">zadd</span><span class=\"params\">(String key, Object member, <span class=\"keyword\">double</span> score, <span class=\"keyword\">long</span> time)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            redisTemplate.opsForZSet().add(key, member, score);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (time &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">                expire(key, time);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ZRANGEBYSCORE key min max [WITHSCORES] [LIMIT]</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过分数返回有序集合指定区间内的成员</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Set&lt;Object&gt; <span class=\"title\">zRangeByScore</span><span class=\"params\">(String key, <span class=\"keyword\">double</span> minScore, <span class=\"keyword\">double</span> maxScore)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForZSet().rangeByScore(key, minScore, maxScore);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ZSCORE key member</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回有序集中，成员的分数值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Double <span class=\"title\">zscore</span><span class=\"params\">(String key, Object member)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForZSet().score(key, member);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * ZRANK key member 返回有序集合中指定成员的索引</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Long <span class=\"title\">zrank</span><span class=\"params\">(String key, Object member)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redisTemplate.opsForZSet().rank(key, member);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Zscan 迭代有序集合中的元素（包括元素成员和元素分值）</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Cursor&lt;ZSetOperations.TypedTuple&lt;Object&gt;&gt; zscan(String key) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            Cursor&lt;ZSetOperations.TypedTuple&lt;Object&gt;&gt; cursor = redisTemplate.opsForZSet().scan(key, ScanOptions.NONE);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cursor;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.error(<span class=\"string\">\"redis error: \"</span>, e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.test;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.utils.RedisUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Logger log = LoggerFactory.getLogger(<span class=\"keyword\">this</span>.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RedisTemplate template;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testhelper</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        RedisUtil redisUtil=<span class=\"keyword\">new</span> RedisUtil(template);</span><br><span class=\"line\">        <span class=\"comment\">//设值</span></span><br><span class=\"line\">        redisUtil.set(<span class=\"string\">\"address\"</span>, <span class=\"string\">\"beijing\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//通过key获取值</span></span><br><span class=\"line\">        String value= (String) redisUtil.get(<span class=\"string\">\"address\"</span>);</span><br><span class=\"line\">        System.out.println(value);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"springboot中使用redis\"><a href=\"#springboot中使用redis\" class=\"headerlink\" title=\"springboot中使用redis\"></a>springboot中使用redis</h2><p>暂时未记录，后续补上</p>"},{"title":"01-ActiveMQ简介及JMS","date":"2020-07-14T23:27:39.000Z","_content":"\n<center><font size=4 color=\"red\">ActiveMQ简介及JMS</font></center>\n\n<!--more-->\n\n## ActiveMQ简介及JMS\n\n#### 什么是ActiveMQ\n\n[activeMQ官网](http://activemq.apache.org/)\n\n#### ActiveMQ的应用场景\n\nActiveMQ可以用于做：异步处理、应用解耦、流量削锋\n\n#### 什么是JMS\n\nJMS是java平台上有关面向消息中间件的技术规范，它便于消息系统中的java应用程序进行信息交换，并且通过提供标准的产生、发送、接受消息的接口简化企业应用的开发。\n\n##### JMS消息模型\n\n消息中间件一般有两种传递模式：点对点模式（P2P）和发布-订阅模式（Pub、Sub）\n\n1. P2P点对点模式：Queue队列模式\n2. Publish/Subscribe发布/订阅模式：Topic主题模式\n\n**点对点模式**\n\n生产者和消费者之间的消息往来\n\n> clientA是发布者，clientB是消费者，一个消息只有一个消费者\n\n![点对点模式](点对点模式.png)\n\n每个消息都被发送到特定的消息队列，接受者从队列中获取消息。队列保留着消息，知道他们被消费或超时\n\n特点：\n\n* 每个消息只有一个消费者（consumer），即一旦被消费，消息就不再在队列中了\n* 发送者和接收者之间在时间上没有依赖性，也就是说当发送者发送了消息之后，不管接收者有没有正在运行，它不会影响到消息被发送到队列。\n* 接收者在成功接收消息之后需向队列应答成功\n\n**发布/订阅模式**\n\n包含三个角色：主题（Topic），发布者（Publisher)，订阅者（Subscriber），多个发布者将消息发送到topic，系统将这些消息投递到订阅此topic的订阅者\n\n> clientA是发送者，clientB和ClientC是订阅者，一个消息可以有多个订阅者\n\n![发布-订阅模式](发布-订阅模式.png)\n\n发送者发送到topic的消息，只有订阅了topic的订阅者才会收到消息。topic实现了发布和订阅，当你发布一个消息，所有订阅这个topic的服务都能得到这个消息。，所以从1到N个订阅者都能得到这个消息的拷贝。\n\n特点：\n\n* 每个消息可以有多个消费者\n* 发布者和订阅者之间有时间上的依赖性，要先订阅主题，再来发送消息（不能先发送，再订阅）\n* 订阅者必须保持运行的转态，才能接受发布者发布的消息\n\n##### JMS编程API\n\n| 要素              | 作用                                                         |\n| ----------------- | ------------------------------------------------------------ |\n| Destination       | 表示消息所有通道的目标定义，用来定义消息从发送端发出后要走的通道，而不是接收方。Destination属于管理类对象 |\n| ConnectionFactory | 顾名思义，用于创建连接对象。ConnectionFactory属于管理类对象  |\n| Connection        | 连接接口，所负责的重要工作是创建Session                      |\n| Session           | 会话接口，这是一个非常重要的对象，消息发送者、消息接收者以及消息对象本身，都是通过这个会话对象创建的 |\n| MessageConsumer   | 消息的消费者，也就是订阅消息并处理消息的对象                 |\n| MessageProducer   | 消息的生产者，也就是用来发送消息的对象                       |\n\n* Destination：Destination的意思是消息生产者的消息发送目标或者说消息消费者的消息来源，对于消息生产者来说，它的Destination是某个队列（Queue）或某个主题（Topic）；对于消费者来说，它的Destination也是某个队列或主题（即消息来源）。所以，Destination实际上就是两种类型的对象：Queue、Topic\n* ConnectionFactory：创建Connection对象的工厂，针对两种不同jms消息模型，分别有QueueConnectionFactory和TopicConnectionFactory两种\n* Connection：表示在客户端和JMS系统之间建立的连接（对TCP/IP socket的包装），Connection可以产生一个或多个Session\n* Session：Session是我们对消息进行操作的接口，可以通过session创建生产者、消费者、消息等。Session提供了事务的功能，如果需要使用session发送/接收多个消息时，可以将这些发送/接收动作放到一个事务中\n* Producer（消息生产者）：消息生产者由Session创建，并用于将消息发送到Destination。同样，消息生产者分两种类型：QueueSender和TopicPublisher。可以调用消息生产者的方法（send和publish方法）发送消息\n* Consumer（消息消费者）：消息消费者由Session创建，用于接收被发送到Destination的消息。两种类型：QueueReceiver和TopicSubscriber。可分别通过session的createReceiver（Queue）或createSubscriber（Topic）来创建。当然，也可以通过session的createDurableSubscriber方法来创建持久化的订阅者\n* MessageListener：消息监听器。如果注册了消息监听器，一旦消息送到，将自动调用监听器的onMessage方法。EJB中的MDB（Message-Driven Bean）就是一种MessageListener\n\n**整个API的图解**\n\n![JMS的API图解](JMS的API图解.png)\n\n## ActiveMQ的安装\n\n#### 安装\n\nactiveMQ的[下载地址](http://activemq.apache.org/download-archives)\n\n```powershell\n# 第一步，安装jdk\n\n# 第二步，把activeMQ的压缩包（apache-Activemq-5.14.5-bin.tar.gz）上传到linux系统\n\n# 第三步 解压压缩包\n$ tar -zxvf apache-Activemq-5.14.5-bin.tar.gz\n\n# 第四步 进入apache-Activemq-5.14.5的bin目录\n$ cd apache-Activemq-5.14.5/bin\n\n# 第五步 启动activemq\n./activemq start\n\n# 第六步 停止activemq\n./activemq stop\n```\n\n##### 访问\n\n```\n页面控制台：http://192.168.25.180:8161/   (监控)\n请求地址：tcp:ip:61616   （java代码访问消息中间件）\n```\n\n账号密码都是：admin\n\n![activemq](activemq.png)\n\n","source":"_posts/2020-07-14-01-ActiveMQ简介及JMS.md","raw":"---\ntitle: 01-ActiveMQ简介及JMS\ndate: 2020-07-14 23:27:39\ncategories:\n- ActiveMQ\ntags:\n- ActiveMQ\n- JMS\n---\n\n<center><font size=4 color=\"red\">ActiveMQ简介及JMS</font></center>\n\n<!--more-->\n\n## ActiveMQ简介及JMS\n\n#### 什么是ActiveMQ\n\n[activeMQ官网](http://activemq.apache.org/)\n\n#### ActiveMQ的应用场景\n\nActiveMQ可以用于做：异步处理、应用解耦、流量削锋\n\n#### 什么是JMS\n\nJMS是java平台上有关面向消息中间件的技术规范，它便于消息系统中的java应用程序进行信息交换，并且通过提供标准的产生、发送、接受消息的接口简化企业应用的开发。\n\n##### JMS消息模型\n\n消息中间件一般有两种传递模式：点对点模式（P2P）和发布-订阅模式（Pub、Sub）\n\n1. P2P点对点模式：Queue队列模式\n2. Publish/Subscribe发布/订阅模式：Topic主题模式\n\n**点对点模式**\n\n生产者和消费者之间的消息往来\n\n> clientA是发布者，clientB是消费者，一个消息只有一个消费者\n\n![点对点模式](点对点模式.png)\n\n每个消息都被发送到特定的消息队列，接受者从队列中获取消息。队列保留着消息，知道他们被消费或超时\n\n特点：\n\n* 每个消息只有一个消费者（consumer），即一旦被消费，消息就不再在队列中了\n* 发送者和接收者之间在时间上没有依赖性，也就是说当发送者发送了消息之后，不管接收者有没有正在运行，它不会影响到消息被发送到队列。\n* 接收者在成功接收消息之后需向队列应答成功\n\n**发布/订阅模式**\n\n包含三个角色：主题（Topic），发布者（Publisher)，订阅者（Subscriber），多个发布者将消息发送到topic，系统将这些消息投递到订阅此topic的订阅者\n\n> clientA是发送者，clientB和ClientC是订阅者，一个消息可以有多个订阅者\n\n![发布-订阅模式](发布-订阅模式.png)\n\n发送者发送到topic的消息，只有订阅了topic的订阅者才会收到消息。topic实现了发布和订阅，当你发布一个消息，所有订阅这个topic的服务都能得到这个消息。，所以从1到N个订阅者都能得到这个消息的拷贝。\n\n特点：\n\n* 每个消息可以有多个消费者\n* 发布者和订阅者之间有时间上的依赖性，要先订阅主题，再来发送消息（不能先发送，再订阅）\n* 订阅者必须保持运行的转态，才能接受发布者发布的消息\n\n##### JMS编程API\n\n| 要素              | 作用                                                         |\n| ----------------- | ------------------------------------------------------------ |\n| Destination       | 表示消息所有通道的目标定义，用来定义消息从发送端发出后要走的通道，而不是接收方。Destination属于管理类对象 |\n| ConnectionFactory | 顾名思义，用于创建连接对象。ConnectionFactory属于管理类对象  |\n| Connection        | 连接接口，所负责的重要工作是创建Session                      |\n| Session           | 会话接口，这是一个非常重要的对象，消息发送者、消息接收者以及消息对象本身，都是通过这个会话对象创建的 |\n| MessageConsumer   | 消息的消费者，也就是订阅消息并处理消息的对象                 |\n| MessageProducer   | 消息的生产者，也就是用来发送消息的对象                       |\n\n* Destination：Destination的意思是消息生产者的消息发送目标或者说消息消费者的消息来源，对于消息生产者来说，它的Destination是某个队列（Queue）或某个主题（Topic）；对于消费者来说，它的Destination也是某个队列或主题（即消息来源）。所以，Destination实际上就是两种类型的对象：Queue、Topic\n* ConnectionFactory：创建Connection对象的工厂，针对两种不同jms消息模型，分别有QueueConnectionFactory和TopicConnectionFactory两种\n* Connection：表示在客户端和JMS系统之间建立的连接（对TCP/IP socket的包装），Connection可以产生一个或多个Session\n* Session：Session是我们对消息进行操作的接口，可以通过session创建生产者、消费者、消息等。Session提供了事务的功能，如果需要使用session发送/接收多个消息时，可以将这些发送/接收动作放到一个事务中\n* Producer（消息生产者）：消息生产者由Session创建，并用于将消息发送到Destination。同样，消息生产者分两种类型：QueueSender和TopicPublisher。可以调用消息生产者的方法（send和publish方法）发送消息\n* Consumer（消息消费者）：消息消费者由Session创建，用于接收被发送到Destination的消息。两种类型：QueueReceiver和TopicSubscriber。可分别通过session的createReceiver（Queue）或createSubscriber（Topic）来创建。当然，也可以通过session的createDurableSubscriber方法来创建持久化的订阅者\n* MessageListener：消息监听器。如果注册了消息监听器，一旦消息送到，将自动调用监听器的onMessage方法。EJB中的MDB（Message-Driven Bean）就是一种MessageListener\n\n**整个API的图解**\n\n![JMS的API图解](JMS的API图解.png)\n\n## ActiveMQ的安装\n\n#### 安装\n\nactiveMQ的[下载地址](http://activemq.apache.org/download-archives)\n\n```powershell\n# 第一步，安装jdk\n\n# 第二步，把activeMQ的压缩包（apache-Activemq-5.14.5-bin.tar.gz）上传到linux系统\n\n# 第三步 解压压缩包\n$ tar -zxvf apache-Activemq-5.14.5-bin.tar.gz\n\n# 第四步 进入apache-Activemq-5.14.5的bin目录\n$ cd apache-Activemq-5.14.5/bin\n\n# 第五步 启动activemq\n./activemq start\n\n# 第六步 停止activemq\n./activemq stop\n```\n\n##### 访问\n\n```\n页面控制台：http://192.168.25.180:8161/   (监控)\n请求地址：tcp:ip:61616   （java代码访问消息中间件）\n```\n\n账号密码都是：admin\n\n![activemq](activemq.png)\n\n","slug":"2020-07-14-01-ActiveMQ简介及JMS","published":1,"updated":"2020-07-14T15:33:21.156Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wo004g54tnx65qxnq0","content":"<center><font size=\"4\" color=\"red\">ActiveMQ简介及JMS</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"ActiveMQ简介及JMS\"><a href=\"#ActiveMQ简介及JMS\" class=\"headerlink\" title=\"ActiveMQ简介及JMS\"></a>ActiveMQ简介及JMS</h2><h4 id=\"什么是ActiveMQ\"><a href=\"#什么是ActiveMQ\" class=\"headerlink\" title=\"什么是ActiveMQ\"></a>什么是ActiveMQ</h4><p><a href=\"http://activemq.apache.org/\" target=\"_blank\" rel=\"noopener\">activeMQ官网</a></p>\n<h4 id=\"ActiveMQ的应用场景\"><a href=\"#ActiveMQ的应用场景\" class=\"headerlink\" title=\"ActiveMQ的应用场景\"></a>ActiveMQ的应用场景</h4><p>ActiveMQ可以用于做：异步处理、应用解耦、流量削锋</p>\n<h4 id=\"什么是JMS\"><a href=\"#什么是JMS\" class=\"headerlink\" title=\"什么是JMS\"></a>什么是JMS</h4><p>JMS是java平台上有关面向消息中间件的技术规范，它便于消息系统中的java应用程序进行信息交换，并且通过提供标准的产生、发送、接受消息的接口简化企业应用的开发。</p>\n<h5 id=\"JMS消息模型\"><a href=\"#JMS消息模型\" class=\"headerlink\" title=\"JMS消息模型\"></a>JMS消息模型</h5><p>消息中间件一般有两种传递模式：点对点模式（P2P）和发布-订阅模式（Pub、Sub）</p>\n<ol>\n<li>P2P点对点模式：Queue队列模式</li>\n<li>Publish/Subscribe发布/订阅模式：Topic主题模式</li>\n</ol>\n<p><strong>点对点模式</strong></p>\n<p>生产者和消费者之间的消息往来</p>\n<blockquote>\n<p>clientA是发布者，clientB是消费者，一个消息只有一个消费者</p>\n</blockquote>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/点对点模式.png\" alt=\"点对点模式\"></p>\n<p>每个消息都被发送到特定的消息队列，接受者从队列中获取消息。队列保留着消息，知道他们被消费或超时</p>\n<p>特点：</p>\n<ul>\n<li>每个消息只有一个消费者（consumer），即一旦被消费，消息就不再在队列中了</li>\n<li>发送者和接收者之间在时间上没有依赖性，也就是说当发送者发送了消息之后，不管接收者有没有正在运行，它不会影响到消息被发送到队列。</li>\n<li>接收者在成功接收消息之后需向队列应答成功</li>\n</ul>\n<p><strong>发布/订阅模式</strong></p>\n<p>包含三个角色：主题（Topic），发布者（Publisher)，订阅者（Subscriber），多个发布者将消息发送到topic，系统将这些消息投递到订阅此topic的订阅者</p>\n<blockquote>\n<p>clientA是发送者，clientB和ClientC是订阅者，一个消息可以有多个订阅者</p>\n</blockquote>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/发布-订阅模式.png\" alt=\"发布-订阅模式\"></p>\n<p>发送者发送到topic的消息，只有订阅了topic的订阅者才会收到消息。topic实现了发布和订阅，当你发布一个消息，所有订阅这个topic的服务都能得到这个消息。，所以从1到N个订阅者都能得到这个消息的拷贝。</p>\n<p>特点：</p>\n<ul>\n<li>每个消息可以有多个消费者</li>\n<li>发布者和订阅者之间有时间上的依赖性，要先订阅主题，再来发送消息（不能先发送，再订阅）</li>\n<li>订阅者必须保持运行的转态，才能接受发布者发布的消息</li>\n</ul>\n<h5 id=\"JMS编程API\"><a href=\"#JMS编程API\" class=\"headerlink\" title=\"JMS编程API\"></a>JMS编程API</h5><table>\n<thead>\n<tr>\n<th>要素</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Destination</td>\n<td>表示消息所有通道的目标定义，用来定义消息从发送端发出后要走的通道，而不是接收方。Destination属于管理类对象</td>\n</tr>\n<tr>\n<td>ConnectionFactory</td>\n<td>顾名思义，用于创建连接对象。ConnectionFactory属于管理类对象</td>\n</tr>\n<tr>\n<td>Connection</td>\n<td>连接接口，所负责的重要工作是创建Session</td>\n</tr>\n<tr>\n<td>Session</td>\n<td>会话接口，这是一个非常重要的对象，消息发送者、消息接收者以及消息对象本身，都是通过这个会话对象创建的</td>\n</tr>\n<tr>\n<td>MessageConsumer</td>\n<td>消息的消费者，也就是订阅消息并处理消息的对象</td>\n</tr>\n<tr>\n<td>MessageProducer</td>\n<td>消息的生产者，也就是用来发送消息的对象</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Destination：Destination的意思是消息生产者的消息发送目标或者说消息消费者的消息来源，对于消息生产者来说，它的Destination是某个队列（Queue）或某个主题（Topic）；对于消费者来说，它的Destination也是某个队列或主题（即消息来源）。所以，Destination实际上就是两种类型的对象：Queue、Topic</li>\n<li>ConnectionFactory：创建Connection对象的工厂，针对两种不同jms消息模型，分别有QueueConnectionFactory和TopicConnectionFactory两种</li>\n<li>Connection：表示在客户端和JMS系统之间建立的连接（对TCP/IP socket的包装），Connection可以产生一个或多个Session</li>\n<li>Session：Session是我们对消息进行操作的接口，可以通过session创建生产者、消费者、消息等。Session提供了事务的功能，如果需要使用session发送/接收多个消息时，可以将这些发送/接收动作放到一个事务中</li>\n<li>Producer（消息生产者）：消息生产者由Session创建，并用于将消息发送到Destination。同样，消息生产者分两种类型：QueueSender和TopicPublisher。可以调用消息生产者的方法（send和publish方法）发送消息</li>\n<li>Consumer（消息消费者）：消息消费者由Session创建，用于接收被发送到Destination的消息。两种类型：QueueReceiver和TopicSubscriber。可分别通过session的createReceiver（Queue）或createSubscriber（Topic）来创建。当然，也可以通过session的createDurableSubscriber方法来创建持久化的订阅者</li>\n<li>MessageListener：消息监听器。如果注册了消息监听器，一旦消息送到，将自动调用监听器的onMessage方法。EJB中的MDB（Message-Driven Bean）就是一种MessageListener</li>\n</ul>\n<p><strong>整个API的图解</strong></p>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/JMS的API图解.png\" alt=\"JMS的API图解\"></p>\n<h2 id=\"ActiveMQ的安装\"><a href=\"#ActiveMQ的安装\" class=\"headerlink\" title=\"ActiveMQ的安装\"></a>ActiveMQ的安装</h2><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>activeMQ的<a href=\"http://activemq.apache.org/download-archives\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第一步，安装jdk</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第二步，把activeMQ的压缩包（apache-Activemq-5.14.5-bin.tar.gz）上传到linux系统</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第三步 解压压缩包</span></span><br><span class=\"line\">$ tar -zxvf apache-Activemq-<span class=\"number\">5.14</span>.<span class=\"number\">5</span>-bin.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第四步 进入apache-Activemq-5.14.5的bin目录</span></span><br><span class=\"line\">$ cd apache-Activemq-<span class=\"number\">5.14</span>.<span class=\"number\">5</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第五步 启动activemq</span></span><br><span class=\"line\">./activemq start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第六步 停止activemq</span></span><br><span class=\"line\">./activemq stop</span><br></pre></td></tr></table></figure>\n<h5 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">页面控制台：http://192.168.25.180:8161/   (监控)</span><br><span class=\"line\">请求地址：tcp:ip:61616   （java代码访问消息中间件）</span><br></pre></td></tr></table></figure>\n<p>账号密码都是：admin</p>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/activemq.png\" alt=\"activemq\"></p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">ActiveMQ简介及JMS</font></center>","more":"<h2 id=\"ActiveMQ简介及JMS\"><a href=\"#ActiveMQ简介及JMS\" class=\"headerlink\" title=\"ActiveMQ简介及JMS\"></a>ActiveMQ简介及JMS</h2><h4 id=\"什么是ActiveMQ\"><a href=\"#什么是ActiveMQ\" class=\"headerlink\" title=\"什么是ActiveMQ\"></a>什么是ActiveMQ</h4><p><a href=\"http://activemq.apache.org/\" target=\"_blank\" rel=\"noopener\">activeMQ官网</a></p>\n<h4 id=\"ActiveMQ的应用场景\"><a href=\"#ActiveMQ的应用场景\" class=\"headerlink\" title=\"ActiveMQ的应用场景\"></a>ActiveMQ的应用场景</h4><p>ActiveMQ可以用于做：异步处理、应用解耦、流量削锋</p>\n<h4 id=\"什么是JMS\"><a href=\"#什么是JMS\" class=\"headerlink\" title=\"什么是JMS\"></a>什么是JMS</h4><p>JMS是java平台上有关面向消息中间件的技术规范，它便于消息系统中的java应用程序进行信息交换，并且通过提供标准的产生、发送、接受消息的接口简化企业应用的开发。</p>\n<h5 id=\"JMS消息模型\"><a href=\"#JMS消息模型\" class=\"headerlink\" title=\"JMS消息模型\"></a>JMS消息模型</h5><p>消息中间件一般有两种传递模式：点对点模式（P2P）和发布-订阅模式（Pub、Sub）</p>\n<ol>\n<li>P2P点对点模式：Queue队列模式</li>\n<li>Publish/Subscribe发布/订阅模式：Topic主题模式</li>\n</ol>\n<p><strong>点对点模式</strong></p>\n<p>生产者和消费者之间的消息往来</p>\n<blockquote>\n<p>clientA是发布者，clientB是消费者，一个消息只有一个消费者</p>\n</blockquote>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/点对点模式.png\" alt=\"点对点模式\"></p>\n<p>每个消息都被发送到特定的消息队列，接受者从队列中获取消息。队列保留着消息，知道他们被消费或超时</p>\n<p>特点：</p>\n<ul>\n<li>每个消息只有一个消费者（consumer），即一旦被消费，消息就不再在队列中了</li>\n<li>发送者和接收者之间在时间上没有依赖性，也就是说当发送者发送了消息之后，不管接收者有没有正在运行，它不会影响到消息被发送到队列。</li>\n<li>接收者在成功接收消息之后需向队列应答成功</li>\n</ul>\n<p><strong>发布/订阅模式</strong></p>\n<p>包含三个角色：主题（Topic），发布者（Publisher)，订阅者（Subscriber），多个发布者将消息发送到topic，系统将这些消息投递到订阅此topic的订阅者</p>\n<blockquote>\n<p>clientA是发送者，clientB和ClientC是订阅者，一个消息可以有多个订阅者</p>\n</blockquote>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/发布-订阅模式.png\" alt=\"发布-订阅模式\"></p>\n<p>发送者发送到topic的消息，只有订阅了topic的订阅者才会收到消息。topic实现了发布和订阅，当你发布一个消息，所有订阅这个topic的服务都能得到这个消息。，所以从1到N个订阅者都能得到这个消息的拷贝。</p>\n<p>特点：</p>\n<ul>\n<li>每个消息可以有多个消费者</li>\n<li>发布者和订阅者之间有时间上的依赖性，要先订阅主题，再来发送消息（不能先发送，再订阅）</li>\n<li>订阅者必须保持运行的转态，才能接受发布者发布的消息</li>\n</ul>\n<h5 id=\"JMS编程API\"><a href=\"#JMS编程API\" class=\"headerlink\" title=\"JMS编程API\"></a>JMS编程API</h5><table>\n<thead>\n<tr>\n<th>要素</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Destination</td>\n<td>表示消息所有通道的目标定义，用来定义消息从发送端发出后要走的通道，而不是接收方。Destination属于管理类对象</td>\n</tr>\n<tr>\n<td>ConnectionFactory</td>\n<td>顾名思义，用于创建连接对象。ConnectionFactory属于管理类对象</td>\n</tr>\n<tr>\n<td>Connection</td>\n<td>连接接口，所负责的重要工作是创建Session</td>\n</tr>\n<tr>\n<td>Session</td>\n<td>会话接口，这是一个非常重要的对象，消息发送者、消息接收者以及消息对象本身，都是通过这个会话对象创建的</td>\n</tr>\n<tr>\n<td>MessageConsumer</td>\n<td>消息的消费者，也就是订阅消息并处理消息的对象</td>\n</tr>\n<tr>\n<td>MessageProducer</td>\n<td>消息的生产者，也就是用来发送消息的对象</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>Destination：Destination的意思是消息生产者的消息发送目标或者说消息消费者的消息来源，对于消息生产者来说，它的Destination是某个队列（Queue）或某个主题（Topic）；对于消费者来说，它的Destination也是某个队列或主题（即消息来源）。所以，Destination实际上就是两种类型的对象：Queue、Topic</li>\n<li>ConnectionFactory：创建Connection对象的工厂，针对两种不同jms消息模型，分别有QueueConnectionFactory和TopicConnectionFactory两种</li>\n<li>Connection：表示在客户端和JMS系统之间建立的连接（对TCP/IP socket的包装），Connection可以产生一个或多个Session</li>\n<li>Session：Session是我们对消息进行操作的接口，可以通过session创建生产者、消费者、消息等。Session提供了事务的功能，如果需要使用session发送/接收多个消息时，可以将这些发送/接收动作放到一个事务中</li>\n<li>Producer（消息生产者）：消息生产者由Session创建，并用于将消息发送到Destination。同样，消息生产者分两种类型：QueueSender和TopicPublisher。可以调用消息生产者的方法（send和publish方法）发送消息</li>\n<li>Consumer（消息消费者）：消息消费者由Session创建，用于接收被发送到Destination的消息。两种类型：QueueReceiver和TopicSubscriber。可分别通过session的createReceiver（Queue）或createSubscriber（Topic）来创建。当然，也可以通过session的createDurableSubscriber方法来创建持久化的订阅者</li>\n<li>MessageListener：消息监听器。如果注册了消息监听器，一旦消息送到，将自动调用监听器的onMessage方法。EJB中的MDB（Message-Driven Bean）就是一种MessageListener</li>\n</ul>\n<p><strong>整个API的图解</strong></p>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/JMS的API图解.png\" alt=\"JMS的API图解\"></p>\n<h2 id=\"ActiveMQ的安装\"><a href=\"#ActiveMQ的安装\" class=\"headerlink\" title=\"ActiveMQ的安装\"></a>ActiveMQ的安装</h2><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><p>activeMQ的<a href=\"http://activemq.apache.org/download-archives\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 第一步，安装jdk</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第二步，把activeMQ的压缩包（apache-Activemq-5.14.5-bin.tar.gz）上传到linux系统</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第三步 解压压缩包</span></span><br><span class=\"line\">$ tar -zxvf apache-Activemq-<span class=\"number\">5.14</span>.<span class=\"number\">5</span>-bin.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第四步 进入apache-Activemq-5.14.5的bin目录</span></span><br><span class=\"line\">$ cd apache-Activemq-<span class=\"number\">5.14</span>.<span class=\"number\">5</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第五步 启动activemq</span></span><br><span class=\"line\">./activemq start</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第六步 停止activemq</span></span><br><span class=\"line\">./activemq stop</span><br></pre></td></tr></table></figure>\n<h5 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">页面控制台：http://192.168.25.180:8161/   (监控)</span><br><span class=\"line\">请求地址：tcp:ip:61616   （java代码访问消息中间件）</span><br></pre></td></tr></table></figure>\n<p>账号密码都是：admin</p>\n<p><img src=\"/2020/07/15/2020-07-14-01-ActiveMQ简介及JMS/activemq.png\" alt=\"activemq\"></p>"},{"title":"02-Java操作ActiveMQ","date":"2020-07-14T23:35:30.000Z","_content":"\n<center><font size=4 color=\"red\">Java操作ActiveMQ</font></center>\n\n<!--more-->\n\n\n\n## 原生JMS API操作ActiveMQ\n\n#### PTP模式\n\n##### 引入坐标\n\n```xml\n<dependency>\n  <groupId>org.apache.activemq</groupId>\n  <artifactId>activemq-all</artifactId>\n  <version>5.14.5</version>\n</dependency>\n```\n\n##### 代码实现\n\n**发送消息**\n\n```\n1.创建连接工厂\n2.创建连接\n3.打开连接\n4.创建session\n5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）\n6.创建消息生产者\n7.创建消息\n8.发送消息\n9.释放资源\n```\n\ncom.hui.producer.PTP_Producer\n\n```java\npackage com.hui.producer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示点对点模式---消息生产者\n */\npublic class PTP_Producer {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：（后续讲解）\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：queue01\n        Queue queue = session.createQueue(\"queue01\");\n\n        //6.创建消息生产者,并指定要发送的队列：queue\n        MessageProducer producer = session.createProducer(queue);\n\n        //7.创建消息,createTextMessage是文本类型\n        TextMessage testMessage = session.createTextMessage(\"test message\");\n\n        //8.发送消息\n        producer.send(testMessage);\n\n        System.out.println(\"消息发送完成\");\n\n        //9.释放资源\n        session.close();\n        connection.close();\n    }\n}\n```\n\n执行该代码，在后台页面可以查看到有一个消息已经发送上了\n\n![queue01](queue01.png)\n\n**接收消息-第一种**\n\n```\n1.创建连接工厂\n2.创建连接\n3.打开连接\n4.创建session\n5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）\n6.创建消息消费者\n7.接收消息\n8.释放资源\n```\n\ncom.hui.consumer.PTP_Consumer\n\n```java\npackage com.hui.consumer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示点对点模式---接收消息，第一种方案\n */\npublic class PTP_Consumer {\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start(); \n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样\n        Queue queue = session.createQueue(\"queue01\");\n\n        //6.创建消息消费者,并指定从哪个队列接收消息\n        MessageConsumer consumer = session.createConsumer(queue);\n\n        //7.接收消息\n        while (true){\n            Message message = consumer.receive();\n\n            //如果没有消息，就直接结束\n            if (message==null){\n                break;\n            }\n\n            //如果有消息，判断是否是文本类型的消息\n            if (message instanceof TextMessage){\n                TextMessage textMessage=(TextMessage) message;\n                System.out.println(\"接收的消息是：\"+textMessage.getText());\n            }\n        }\n\n        //8.释放资源\n        session.close();\n        connection.close();\n    }\n}\n```\n\n**接收消息-第二种，监听器接收，常用**\n\n> 注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收\n\n```java\npackage com.hui.consumer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示点对点模式---接收消息，第二种方案---常用\n */\npublic class PTP_ConsumerListener {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样\n        Queue queue = session.createQueue(\"queue01\");\n\n        //6.创建消息消费者,并指定从哪个队列接收消息\n        MessageConsumer consumer = session.createConsumer(queue);\n\n        //7.设置监听器来接收消息\n        consumer.setMessageListener(new MessageListener() {\n            //处理信息\n            public void onMessage(Message message) {\n                //如果有消息，判断是否是文本类型的消息\n                if (message instanceof TextMessage){\n                    TextMessage textMessage=(TextMessage) message;\n                    try {\n                        System.out.println(\"接收的消息是：\"+textMessage.getText());\n                    } catch (JMSException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        });\n\n        //注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收\n    }\n}\n```\n\n#### 发布/订阅模式\n\n> 注意发布/订阅模式一定要先启动消费者，再启动生产者。就是一定要先订阅，再发送。\n\n**订阅消息**\n\n因为常用监听模式，这里只使用监听的做演示\n\ncom.hui.consumer.PS_ConsumerListener\n\n```java\npackage com.hui.consumer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示发布/订阅模式---接收消息，第二种方案---常用\n */\npublic class PS_ConsumerListener {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样\n        Topic topic = session.createTopic(\"topic01\");\n\n        //6.创建消息消费者,并指定从哪个队列接收消息\n        MessageConsumer consumer = session.createConsumer(topic);\n\n        //7.设置监听器来接收消息\n        consumer.setMessageListener(new MessageListener() {\n            //处理信息\n            public void onMessage(Message message) {\n                //如果有消息，判断是否是文本类型的消息\n                if (message instanceof TextMessage){\n                    TextMessage textMessage=(TextMessage) message;\n                    try {\n                        System.out.println(\"接收的消息是：\"+textMessage.getText());\n                    } catch (JMSException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        });\n\n        //注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收\n    }\n}\n```\n\n**发送消息**\n\ncom.hui.producer.PS_Producer\n\n```java\npackage com.hui.producer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示发布/订阅模式---消息生产者\n */\npublic class PS_Producer {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：topic01\n        Topic topic = session.createTopic(\"topic01\");\n\n        //6.创建消息生产者,并指定要发送的队列：queue\n        MessageProducer producer = session.createProducer(topic);\n\n        //7.创建消息,createTextMessage是文本类型\n        TextMessage testMessage = session.createTextMessage(\"test message--topic\");\n\n        //8.发送消息\n        producer.send(testMessage);\n\n        System.out.println(\"消息发送完成\");\n\n        //9.释放资源\n        session.close();\n        connection.close();\n    }\n}\n```\n\n## Spring操作ActiveMQ\n\n#### 添加pom依赖\n\n```xml\n<properties>\n    <spring.version>5.0.2.RELEASE</spring.version>\n</properties>\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-context</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-jms</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-test</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-tx</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.aspectj</groupId>\n        <artifactId>aspectjweaver</artifactId>\n        <version>1.9.2</version>\n    </dependency>\n\n    <!--这个jar包是必须的\n            5.0.2.RELEASE版本的Spring需要使用JMS 2.0版本，但spring-jms的依赖没有自动导入JMS 2.0，而activemq-core会导入JMS 1.1的依赖\n            所以需要添加以下依赖解决\n        -->\n    <dependency>\n        <groupId>javax.jms</groupId>\n        <artifactId>javax.jms-api</artifactId>\n        <version>2.0.1</version>\n    </dependency>\n\n    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.12</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.activemq</groupId>\n        <artifactId>activemq-all</artifactId>\n        <version>5.14.5</version>\n    </dependency>\n</dependencies>\n```\n\n#### 发送消息\n\n##### Spring整合ActiveMQ的xml文件\n\napplicationContext-producer.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:amq=\"http://activemq.apache.org/schema/core\"\n       xmlns:jms=\"http://www.springframework.org/schema/jms\"\n       xsi:schemaLocation=\"\n       http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/aop\n       http://www.springframework.org/aop/spring-aop.xsd\n       http://www.springframework.org/schema/context\n       http://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/tx\n       http://www.springframework.org/schema/tx/spring-tx.xsd\n       http://www.springframework.org/schema/jms\n       http://www.springframework.org/schema/jms/spring-jms.xsd\n       http://activemq.apache.org/schema/core\n       http://activemq.apache.org/schema/core/activemq-core.xsd\">\n\n    <!--创建连接工厂-->\n    <amq:connectionFactory\n            id=\"amqConnectionFactory\"\n            brokerURL=\"tcp://192.168.25.181:61616\"\n            userName=\"admin\"\n            password=\"admin\"/>\n\n    <!--创建缓存连接工厂-->\n    <bean id=\"cachingConnectionFactory\" class=\"org.springframework.jms.connection.CachingConnectionFactory\">\n        <!--注入连接工厂-->\n        <property name=\"targetConnectionFactory\" ref=\"amqConnectionFactory\"/>\n        <!--缓存消息信息-->\n        <property name=\"sessionCacheSize\" value=\"5\"/>\n    </bean>\n\n    <!--创建用于点对点发送的JmsTemplate-->\n    <bean id=\"jmsQueueTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">\n        <!--注入缓存连接工厂-->\n        <property name=\"connectionFactory\" ref=\"cachingConnectionFactory\"/>\n        <!--指定是否为点对点模式 为false就是点对点模式-->\n        <property name=\"pubSubDomain\" value=\"false\"/>\n    </bean>\n\n    <!--创建用于发布/订阅发送的JmsTemplate-->\n    <bean id=\"jmsTopicTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">\n        <!--注入缓存连接工厂-->\n        <property name=\"connectionFactory\" ref=\"cachingConnectionFactory\"/>\n        <!--指定是否为发布/订阅模式 为true就是发布/订阅模式-->\n        <property name=\"pubSubDomain\" value=\"true\"/>\n    </bean>\n</beans>\n```\n\n**发送消息代码实现**\n\n**点对点模式**\n\ncom.hui.producer.Spring_PTPProducer\n\n```java\npackage com.hui.producer;\n\nimport org.junit.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport javax.annotation.Resource;\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.Session;\nimport javax.jms.TextMessage;\n\n/**\n * spring与activemq整合的点对点发送演示\n */\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext-producer.xml\")\npublic class Spring_PTPProducer {\n\n    //@Resource(name = \"JmsQueueTemplate\")\n    @Autowired\n    @Qualifier(\"jmsQueueTemplate\")\n    private JmsTemplate jmsQueueTemplate;\n\n    @Test\n    public void ptpSender(){\n        /**\n         * 参数一：指定队列的名称\n         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现\n         */\n        jmsQueueTemplate.send(\"spring-ptp\", new MessageCreator() {\n            public Message createMessage(Session session) throws JMSException {\n                TextMessage textMessage = session.createTextMessage(\"spring-queue message\");\n                return textMessage;\n            }\n        });\n        System.out.println(\"queue消息发送成功\");\n    }\n}\n```\n\n**发布/订阅模式**\n\ncom.hui.producer.Spring_PSProducer\n\n```java\npackage com.hui.producer;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport javax.annotation.Resource;\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.Session;\nimport javax.jms.TextMessage;\n\n/**\n * spring与activemq整合的发布/订阅发送演示\n */\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext-producer.xml\")\npublic class Spring_PSProducer {\n\n    @Resource(name = \"jmsTopicTemplate\")\n    private JmsTemplate jmsTopicTemplate;\n\n    @Test\n    public void pcSender(){\n        /**\n         * 参数一：指定队列的名称\n         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现\n         */\n        jmsTopicTemplate.send(\"spring-pc\", new MessageCreator() {\n            public Message createMessage(Session session) throws JMSException {\n                TextMessage textMessage = session.createTextMessage(\"spring-topic message\");\n                return textMessage;\n            }\n        });\n        System.out.println(\"topic消息发送成功\");\n    }\n}\n```\n\n#### 接收消息\n\n##### Spring整合ActiveMQ的xml文件\n\napplicationContext-consumer.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:amq=\"http://activemq.apache.org/schema/core\"\n       xmlns:jms=\"http://www.springframework.org/schema/jms\"\n       xsi:schemaLocation=\"\n       http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/aop\n       http://www.springframework.org/aop/spring-aop.xsd\n       http://www.springframework.org/schema/context\n       http://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/tx\n       http://www.springframework.org/schema/tx/spring-tx.xsd\n       http://www.springframework.org/schema/jms\n       http://www.springframework.org/schema/jms/spring-jms.xsd\n       http://activemq.apache.org/schema/core\n       http://activemq.apache.org/schema/core/activemq-core.xsd\">\n\n    <!--创建连接工厂-->\n    <amq:connectionFactory\n            id=\"amqConnectionFactory\"\n            brokerURL=\"tcp://192.168.25.181:61616\"\n            userName=\"admin\"\n            password=\"admin\"/>\n\n    <!--创建缓存连接工厂-->\n    <bean id=\"cachingConnectionFactory\" class=\"org.springframework.jms.connection.CachingConnectionFactory\">\n        <!--注入连接工厂-->\n        <property name=\"targetConnectionFactory\" ref=\"amqConnectionFactory\"/>\n        <!--缓存消息信息-->\n        <property name=\"sessionCacheSize\" value=\"5\"/>\n    </bean>\n\n    <!--配置消息监听主键扫描-->\n    <context:component-scan base-package=\"com.hui.listener\"/>\n\n    <!--配置监听器（点对点）-->\n    <!--\n        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）\n    -->\n    <jms:listener-container connection-factory=\"cachingConnectionFactory\" destination-type=\"queue\">\n        <!--\n            destination:监听的队列名称\n            ref：监听类，需要代码编写，使用component注解注入到容器中\n        -->\n        <jms:listener destination=\"spring-ptp\" ref=\"queueListener\"/>\n    </jms:listener-container>\n\n    <!--配置监听器（发布/订阅）-->\n    <!--\n        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）\n    -->\n    <jms:listener-container connection-factory=\"cachingConnectionFactory\" destination-type=\"topic\">\n        <!--\n            destination:监听的队列名称\n            ref：监听类，需要代码编写，使用component注解注入到容器中\n        -->\n        <jms:listener destination=\"spring-pc\" ref=\"topicListener\"/>\n    </jms:listener-container>\n</beans>\n```\n\n##### 监听器代码实现\n\n**点对点模式监听**\n\ncom.hui.listener.QueueListener\n\n```java\npackage com.hui.listener;\n\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.MessageListener;\nimport javax.jms.TextMessage;\n\n/**\n * 点对点模式的监听类\n */\n@Component\npublic class QueueListener implements MessageListener {\n\n    //接收消息\n    public void onMessage(Message message) {\n        if (message instanceof TextMessage){\n            TextMessage testMessage = (TextMessage)message;\n            try {\n                System.out.println(\"topic的消息：\"+testMessage.getText());\n            } catch (JMSException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n**发布/订阅模式监听**\n\ncom.hui.listener.TopicListener\n\n```java\npackage com.hui.listener;\n\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.MessageListener;\nimport javax.jms.TextMessage;\n\n/**\n * 发布/订阅模式的监听类\n */\n@Component\npublic class TopicListener implements MessageListener {\n\n    //接收消息\n    public void onMessage(Message message) {\n        if (message instanceof TextMessage){\n            TextMessage testMessage = (TextMessage)message;\n            try {\n                System.out.println(\"topic的消息：\"+testMessage.getText());\n            } catch (JMSException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n##### 启动监听器\n\ncom.hui.consumer.SpringConsumer\n\n```java\npackage com.hui.consumer;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport java.io.IOException;\n\n/**\n * 用于启动消费方监听\n */\npublic class SpringConsumer {\n    public static void main(String[] args) throws IOException {\n        //1.加载配置文件\n        ClassPathXmlApplicationContext context=\n                new ClassPathXmlApplicationContext(\"classpath:applicationContext-consumer.xml\");\n\n        //2.启动\n        context.start();\n\n        //3.阻塞方法，让程序一直处于等待状态，不停止\n        System.in.read();\n    }\n}\n```\n\n## SpringBoot操作ActiveMQ\n\n#### pom文件的依赖\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-activemq</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n    </dependency>\n</dependencies>\n```\n\n#### appliction.properties配置\n\n> 注意：如果想要切换点对点模式和发布/订阅模式，只需要修改spring.jms.pub-sub-domain既可，代码不用改\n\n```properties\nserver.port=8080\n# 服务名称（与SpringCloud整合使用）\nspring.application.name=activemq-producer\n\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n#### 发送消息\n\ncom.hui.producer.SpringBootProducer\n\n```java\npackage com.hui.producer;\n\nimport com.hui.springbootactivemq.SpringbootactivemqApplication;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.jms.core.JmsMessagingTemplate;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\n/**\n * 演示springboot与activemq的整合--消息生产者\n */\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest(classes = SpringbootactivemqApplication.class)\npublic class SpringBootProducer {\n\n    @Autowired\n    private JmsMessagingTemplate jmsMessagingTemplate;\n    \n    @Autowired\n    private JmsTemplate jmsTemplate;\n\n    @Test\n    public void ptpSender(){\n\n        /**\n         * 第一种发送消息的方法\n         * 参数一：队列的名称\n         * 参数二：消息内容\n         */\n        jmsMessagingTemplate.convertAndSend(\"springboot-queue\",\"springboot queue message\");\n        System.out.println(\"消息发送成功\");\n    }\n    \n        @Test\n    public void ptpSender2(){\n\t   /**\n         * 第二种发送消息的方法\n         */\n        jmsTemplate.send(\"springboot_queue2\", new MessageCreator() {\n            @Override\n            public Message createMessage(Session session) throws JMSException {\n                TextMessage textMessage = session.createTextMessage(\"springboot queue message2\");\n                return textMessage;\n            }\n        });\n        System.out.println(\"消息发送成功\");\n    }\n}\n```\n\n#### 接收消息\n\n> 注意：接收消息的监听包必须和启动类在一个包下：springbootactivemq\n\ncom.hui.springbootactivemq.listener.MessageListener\n\n```java\npackage com.hui.springbootactivemq.listener;\n\nimport org.springframework.jms.annotation.JmsListener;\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.TextMessage;\n\n/**\n * 用于监听消息类，既可用于队列监听，也可以用于主题监听\n */\n@Component\npublic class MessageListener {\n\n    @JmsListener(destination = \"springboot_queue\")\n    public void receiveMessage(Message message){\n        if (message instanceof TextMessage){\n            TextMessage textMessage = (TextMessage) message;\n            try {\n                System.out.println(\"接收到的消息：\"+textMessage.getText());\n            } catch (JMSException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n","source":"_posts/2020-07-14-02-Java操作ActiveMQ.md","raw":"---\ntitle: 02-Java操作ActiveMQ\ndate: 2020-07-14 23:35:30\ncategories:\n- ActiveMQ\n- JMS API\n- Spring\ntags:\n---\n\n<center><font size=4 color=\"red\">Java操作ActiveMQ</font></center>\n\n<!--more-->\n\n\n\n## 原生JMS API操作ActiveMQ\n\n#### PTP模式\n\n##### 引入坐标\n\n```xml\n<dependency>\n  <groupId>org.apache.activemq</groupId>\n  <artifactId>activemq-all</artifactId>\n  <version>5.14.5</version>\n</dependency>\n```\n\n##### 代码实现\n\n**发送消息**\n\n```\n1.创建连接工厂\n2.创建连接\n3.打开连接\n4.创建session\n5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）\n6.创建消息生产者\n7.创建消息\n8.发送消息\n9.释放资源\n```\n\ncom.hui.producer.PTP_Producer\n\n```java\npackage com.hui.producer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示点对点模式---消息生产者\n */\npublic class PTP_Producer {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：（后续讲解）\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：queue01\n        Queue queue = session.createQueue(\"queue01\");\n\n        //6.创建消息生产者,并指定要发送的队列：queue\n        MessageProducer producer = session.createProducer(queue);\n\n        //7.创建消息,createTextMessage是文本类型\n        TextMessage testMessage = session.createTextMessage(\"test message\");\n\n        //8.发送消息\n        producer.send(testMessage);\n\n        System.out.println(\"消息发送完成\");\n\n        //9.释放资源\n        session.close();\n        connection.close();\n    }\n}\n```\n\n执行该代码，在后台页面可以查看到有一个消息已经发送上了\n\n![queue01](queue01.png)\n\n**接收消息-第一种**\n\n```\n1.创建连接工厂\n2.创建连接\n3.打开连接\n4.创建session\n5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）\n6.创建消息消费者\n7.接收消息\n8.释放资源\n```\n\ncom.hui.consumer.PTP_Consumer\n\n```java\npackage com.hui.consumer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示点对点模式---接收消息，第一种方案\n */\npublic class PTP_Consumer {\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start(); \n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样\n        Queue queue = session.createQueue(\"queue01\");\n\n        //6.创建消息消费者,并指定从哪个队列接收消息\n        MessageConsumer consumer = session.createConsumer(queue);\n\n        //7.接收消息\n        while (true){\n            Message message = consumer.receive();\n\n            //如果没有消息，就直接结束\n            if (message==null){\n                break;\n            }\n\n            //如果有消息，判断是否是文本类型的消息\n            if (message instanceof TextMessage){\n                TextMessage textMessage=(TextMessage) message;\n                System.out.println(\"接收的消息是：\"+textMessage.getText());\n            }\n        }\n\n        //8.释放资源\n        session.close();\n        connection.close();\n    }\n}\n```\n\n**接收消息-第二种，监听器接收，常用**\n\n> 注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收\n\n```java\npackage com.hui.consumer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示点对点模式---接收消息，第二种方案---常用\n */\npublic class PTP_ConsumerListener {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样\n        Queue queue = session.createQueue(\"queue01\");\n\n        //6.创建消息消费者,并指定从哪个队列接收消息\n        MessageConsumer consumer = session.createConsumer(queue);\n\n        //7.设置监听器来接收消息\n        consumer.setMessageListener(new MessageListener() {\n            //处理信息\n            public void onMessage(Message message) {\n                //如果有消息，判断是否是文本类型的消息\n                if (message instanceof TextMessage){\n                    TextMessage textMessage=(TextMessage) message;\n                    try {\n                        System.out.println(\"接收的消息是：\"+textMessage.getText());\n                    } catch (JMSException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        });\n\n        //注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收\n    }\n}\n```\n\n#### 发布/订阅模式\n\n> 注意发布/订阅模式一定要先启动消费者，再启动生产者。就是一定要先订阅，再发送。\n\n**订阅消息**\n\n因为常用监听模式，这里只使用监听的做演示\n\ncom.hui.consumer.PS_ConsumerListener\n\n```java\npackage com.hui.consumer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示发布/订阅模式---接收消息，第二种方案---常用\n */\npublic class PS_ConsumerListener {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样\n        Topic topic = session.createTopic(\"topic01\");\n\n        //6.创建消息消费者,并指定从哪个队列接收消息\n        MessageConsumer consumer = session.createConsumer(topic);\n\n        //7.设置监听器来接收消息\n        consumer.setMessageListener(new MessageListener() {\n            //处理信息\n            public void onMessage(Message message) {\n                //如果有消息，判断是否是文本类型的消息\n                if (message instanceof TextMessage){\n                    TextMessage textMessage=(TextMessage) message;\n                    try {\n                        System.out.println(\"接收的消息是：\"+textMessage.getText());\n                    } catch (JMSException e) {\n                        e.printStackTrace();\n                    }\n                }\n            }\n        });\n\n        //注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收\n    }\n}\n```\n\n**发送消息**\n\ncom.hui.producer.PS_Producer\n\n```java\npackage com.hui.producer;\n\nimport org.apache.activemq.ActiveMQConnectionFactory;\n\nimport javax.jms.*;\n\n/**\n * 演示发布/订阅模式---消息生产者\n */\npublic class PS_Producer {\n\n    public static void main(String[] args) throws JMSException {\n\n        //1.创建连接工厂\n        ConnectionFactory factory=new ActiveMQConnectionFactory(\"tcp://192.168.25.181:61616\");\n\n        //2.创建连接\n        Connection connection = factory.createConnection();\n\n        //3.打开连接\n        connection.start();\n\n        //4.创建session\n        /**\n         * createSession：\n         *      参数一：是否开启事务\n         *      参数二：消息确认机制\n         */\n        Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);\n\n        //5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：topic01\n        Topic topic = session.createTopic(\"topic01\");\n\n        //6.创建消息生产者,并指定要发送的队列：queue\n        MessageProducer producer = session.createProducer(topic);\n\n        //7.创建消息,createTextMessage是文本类型\n        TextMessage testMessage = session.createTextMessage(\"test message--topic\");\n\n        //8.发送消息\n        producer.send(testMessage);\n\n        System.out.println(\"消息发送完成\");\n\n        //9.释放资源\n        session.close();\n        connection.close();\n    }\n}\n```\n\n## Spring操作ActiveMQ\n\n#### 添加pom依赖\n\n```xml\n<properties>\n    <spring.version>5.0.2.RELEASE</spring.version>\n</properties>\n\n<dependencies>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-context</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-jms</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-test</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-tx</artifactId>\n        <version>${spring.version}</version>\n    </dependency>\n    <dependency>\n        <groupId>org.aspectj</groupId>\n        <artifactId>aspectjweaver</artifactId>\n        <version>1.9.2</version>\n    </dependency>\n\n    <!--这个jar包是必须的\n            5.0.2.RELEASE版本的Spring需要使用JMS 2.0版本，但spring-jms的依赖没有自动导入JMS 2.0，而activemq-core会导入JMS 1.1的依赖\n            所以需要添加以下依赖解决\n        -->\n    <dependency>\n        <groupId>javax.jms</groupId>\n        <artifactId>javax.jms-api</artifactId>\n        <version>2.0.1</version>\n    </dependency>\n\n    <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.12</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.activemq</groupId>\n        <artifactId>activemq-all</artifactId>\n        <version>5.14.5</version>\n    </dependency>\n</dependencies>\n```\n\n#### 发送消息\n\n##### Spring整合ActiveMQ的xml文件\n\napplicationContext-producer.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:amq=\"http://activemq.apache.org/schema/core\"\n       xmlns:jms=\"http://www.springframework.org/schema/jms\"\n       xsi:schemaLocation=\"\n       http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/aop\n       http://www.springframework.org/aop/spring-aop.xsd\n       http://www.springframework.org/schema/context\n       http://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/tx\n       http://www.springframework.org/schema/tx/spring-tx.xsd\n       http://www.springframework.org/schema/jms\n       http://www.springframework.org/schema/jms/spring-jms.xsd\n       http://activemq.apache.org/schema/core\n       http://activemq.apache.org/schema/core/activemq-core.xsd\">\n\n    <!--创建连接工厂-->\n    <amq:connectionFactory\n            id=\"amqConnectionFactory\"\n            brokerURL=\"tcp://192.168.25.181:61616\"\n            userName=\"admin\"\n            password=\"admin\"/>\n\n    <!--创建缓存连接工厂-->\n    <bean id=\"cachingConnectionFactory\" class=\"org.springframework.jms.connection.CachingConnectionFactory\">\n        <!--注入连接工厂-->\n        <property name=\"targetConnectionFactory\" ref=\"amqConnectionFactory\"/>\n        <!--缓存消息信息-->\n        <property name=\"sessionCacheSize\" value=\"5\"/>\n    </bean>\n\n    <!--创建用于点对点发送的JmsTemplate-->\n    <bean id=\"jmsQueueTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">\n        <!--注入缓存连接工厂-->\n        <property name=\"connectionFactory\" ref=\"cachingConnectionFactory\"/>\n        <!--指定是否为点对点模式 为false就是点对点模式-->\n        <property name=\"pubSubDomain\" value=\"false\"/>\n    </bean>\n\n    <!--创建用于发布/订阅发送的JmsTemplate-->\n    <bean id=\"jmsTopicTemplate\" class=\"org.springframework.jms.core.JmsTemplate\">\n        <!--注入缓存连接工厂-->\n        <property name=\"connectionFactory\" ref=\"cachingConnectionFactory\"/>\n        <!--指定是否为发布/订阅模式 为true就是发布/订阅模式-->\n        <property name=\"pubSubDomain\" value=\"true\"/>\n    </bean>\n</beans>\n```\n\n**发送消息代码实现**\n\n**点对点模式**\n\ncom.hui.producer.Spring_PTPProducer\n\n```java\npackage com.hui.producer;\n\nimport org.junit.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\nimport org.junit.runner.RunWith;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport javax.annotation.Resource;\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.Session;\nimport javax.jms.TextMessage;\n\n/**\n * spring与activemq整合的点对点发送演示\n */\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext-producer.xml\")\npublic class Spring_PTPProducer {\n\n    //@Resource(name = \"JmsQueueTemplate\")\n    @Autowired\n    @Qualifier(\"jmsQueueTemplate\")\n    private JmsTemplate jmsQueueTemplate;\n\n    @Test\n    public void ptpSender(){\n        /**\n         * 参数一：指定队列的名称\n         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现\n         */\n        jmsQueueTemplate.send(\"spring-ptp\", new MessageCreator() {\n            public Message createMessage(Session session) throws JMSException {\n                TextMessage textMessage = session.createTextMessage(\"spring-queue message\");\n                return textMessage;\n            }\n        });\n        System.out.println(\"queue消息发送成功\");\n    }\n}\n```\n\n**发布/订阅模式**\n\ncom.hui.producer.Spring_PSProducer\n\n```java\npackage com.hui.producer;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.jms.core.JmsTemplate;\nimport org.springframework.jms.core.MessageCreator;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\nimport javax.annotation.Resource;\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.Session;\nimport javax.jms.TextMessage;\n\n/**\n * spring与activemq整合的发布/订阅发送演示\n */\n@RunWith(SpringJUnit4ClassRunner.class)\n@ContextConfiguration(locations = \"classpath:applicationContext-producer.xml\")\npublic class Spring_PSProducer {\n\n    @Resource(name = \"jmsTopicTemplate\")\n    private JmsTemplate jmsTopicTemplate;\n\n    @Test\n    public void pcSender(){\n        /**\n         * 参数一：指定队列的名称\n         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现\n         */\n        jmsTopicTemplate.send(\"spring-pc\", new MessageCreator() {\n            public Message createMessage(Session session) throws JMSException {\n                TextMessage textMessage = session.createTextMessage(\"spring-topic message\");\n                return textMessage;\n            }\n        });\n        System.out.println(\"topic消息发送成功\");\n    }\n}\n```\n\n#### 接收消息\n\n##### Spring整合ActiveMQ的xml文件\n\napplicationContext-consumer.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:aop=\"http://www.springframework.org/schema/aop\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xmlns:tx=\"http://www.springframework.org/schema/tx\"\n       xmlns:amq=\"http://activemq.apache.org/schema/core\"\n       xmlns:jms=\"http://www.springframework.org/schema/jms\"\n       xsi:schemaLocation=\"\n       http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/aop\n       http://www.springframework.org/aop/spring-aop.xsd\n       http://www.springframework.org/schema/context\n       http://www.springframework.org/schema/context/spring-context.xsd\n       http://www.springframework.org/schema/tx\n       http://www.springframework.org/schema/tx/spring-tx.xsd\n       http://www.springframework.org/schema/jms\n       http://www.springframework.org/schema/jms/spring-jms.xsd\n       http://activemq.apache.org/schema/core\n       http://activemq.apache.org/schema/core/activemq-core.xsd\">\n\n    <!--创建连接工厂-->\n    <amq:connectionFactory\n            id=\"amqConnectionFactory\"\n            brokerURL=\"tcp://192.168.25.181:61616\"\n            userName=\"admin\"\n            password=\"admin\"/>\n\n    <!--创建缓存连接工厂-->\n    <bean id=\"cachingConnectionFactory\" class=\"org.springframework.jms.connection.CachingConnectionFactory\">\n        <!--注入连接工厂-->\n        <property name=\"targetConnectionFactory\" ref=\"amqConnectionFactory\"/>\n        <!--缓存消息信息-->\n        <property name=\"sessionCacheSize\" value=\"5\"/>\n    </bean>\n\n    <!--配置消息监听主键扫描-->\n    <context:component-scan base-package=\"com.hui.listener\"/>\n\n    <!--配置监听器（点对点）-->\n    <!--\n        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）\n    -->\n    <jms:listener-container connection-factory=\"cachingConnectionFactory\" destination-type=\"queue\">\n        <!--\n            destination:监听的队列名称\n            ref：监听类，需要代码编写，使用component注解注入到容器中\n        -->\n        <jms:listener destination=\"spring-ptp\" ref=\"queueListener\"/>\n    </jms:listener-container>\n\n    <!--配置监听器（发布/订阅）-->\n    <!--\n        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）\n    -->\n    <jms:listener-container connection-factory=\"cachingConnectionFactory\" destination-type=\"topic\">\n        <!--\n            destination:监听的队列名称\n            ref：监听类，需要代码编写，使用component注解注入到容器中\n        -->\n        <jms:listener destination=\"spring-pc\" ref=\"topicListener\"/>\n    </jms:listener-container>\n</beans>\n```\n\n##### 监听器代码实现\n\n**点对点模式监听**\n\ncom.hui.listener.QueueListener\n\n```java\npackage com.hui.listener;\n\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.MessageListener;\nimport javax.jms.TextMessage;\n\n/**\n * 点对点模式的监听类\n */\n@Component\npublic class QueueListener implements MessageListener {\n\n    //接收消息\n    public void onMessage(Message message) {\n        if (message instanceof TextMessage){\n            TextMessage testMessage = (TextMessage)message;\n            try {\n                System.out.println(\"topic的消息：\"+testMessage.getText());\n            } catch (JMSException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n**发布/订阅模式监听**\n\ncom.hui.listener.TopicListener\n\n```java\npackage com.hui.listener;\n\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.MessageListener;\nimport javax.jms.TextMessage;\n\n/**\n * 发布/订阅模式的监听类\n */\n@Component\npublic class TopicListener implements MessageListener {\n\n    //接收消息\n    public void onMessage(Message message) {\n        if (message instanceof TextMessage){\n            TextMessage testMessage = (TextMessage)message;\n            try {\n                System.out.println(\"topic的消息：\"+testMessage.getText());\n            } catch (JMSException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n\n##### 启动监听器\n\ncom.hui.consumer.SpringConsumer\n\n```java\npackage com.hui.consumer;\n\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\nimport java.io.IOException;\n\n/**\n * 用于启动消费方监听\n */\npublic class SpringConsumer {\n    public static void main(String[] args) throws IOException {\n        //1.加载配置文件\n        ClassPathXmlApplicationContext context=\n                new ClassPathXmlApplicationContext(\"classpath:applicationContext-consumer.xml\");\n\n        //2.启动\n        context.start();\n\n        //3.阻塞方法，让程序一直处于等待状态，不停止\n        System.in.read();\n    }\n}\n```\n\n## SpringBoot操作ActiveMQ\n\n#### pom文件的依赖\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-activemq</artifactId>\n    </dependency>\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n\n    <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-test</artifactId>\n    </dependency>\n</dependencies>\n```\n\n#### appliction.properties配置\n\n> 注意：如果想要切换点对点模式和发布/订阅模式，只需要修改spring.jms.pub-sub-domain既可，代码不用改\n\n```properties\nserver.port=8080\n# 服务名称（与SpringCloud整合使用）\nspring.application.name=activemq-producer\n\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n#### 发送消息\n\ncom.hui.producer.SpringBootProducer\n\n```java\npackage com.hui.producer;\n\nimport com.hui.springbootactivemq.SpringbootactivemqApplication;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.jms.core.JmsMessagingTemplate;\nimport org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n\n/**\n * 演示springboot与activemq的整合--消息生产者\n */\n@RunWith(SpringJUnit4ClassRunner.class)\n@SpringBootTest(classes = SpringbootactivemqApplication.class)\npublic class SpringBootProducer {\n\n    @Autowired\n    private JmsMessagingTemplate jmsMessagingTemplate;\n    \n    @Autowired\n    private JmsTemplate jmsTemplate;\n\n    @Test\n    public void ptpSender(){\n\n        /**\n         * 第一种发送消息的方法\n         * 参数一：队列的名称\n         * 参数二：消息内容\n         */\n        jmsMessagingTemplate.convertAndSend(\"springboot-queue\",\"springboot queue message\");\n        System.out.println(\"消息发送成功\");\n    }\n    \n        @Test\n    public void ptpSender2(){\n\t   /**\n         * 第二种发送消息的方法\n         */\n        jmsTemplate.send(\"springboot_queue2\", new MessageCreator() {\n            @Override\n            public Message createMessage(Session session) throws JMSException {\n                TextMessage textMessage = session.createTextMessage(\"springboot queue message2\");\n                return textMessage;\n            }\n        });\n        System.out.println(\"消息发送成功\");\n    }\n}\n```\n\n#### 接收消息\n\n> 注意：接收消息的监听包必须和启动类在一个包下：springbootactivemq\n\ncom.hui.springbootactivemq.listener.MessageListener\n\n```java\npackage com.hui.springbootactivemq.listener;\n\nimport org.springframework.jms.annotation.JmsListener;\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.JMSException;\nimport javax.jms.Message;\nimport javax.jms.TextMessage;\n\n/**\n * 用于监听消息类，既可用于队列监听，也可以用于主题监听\n */\n@Component\npublic class MessageListener {\n\n    @JmsListener(destination = \"springboot_queue\")\n    public void receiveMessage(Message message){\n        if (message instanceof TextMessage){\n            TextMessage textMessage = (TextMessage) message;\n            try {\n                System.out.println(\"接收到的消息：\"+textMessage.getText());\n            } catch (JMSException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n```\n","slug":"2020-07-14-02-Java操作ActiveMQ","published":1,"updated":"2020-07-14T15:38:29.270Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wp004j54tnxf3bzrec","content":"<center><font size=\"4\" color=\"red\">Java操作ActiveMQ</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"原生JMS-API操作ActiveMQ\"><a href=\"#原生JMS-API操作ActiveMQ\" class=\"headerlink\" title=\"原生JMS API操作ActiveMQ\"></a>原生JMS API操作ActiveMQ</h2><h4 id=\"PTP模式\"><a href=\"#PTP模式\" class=\"headerlink\" title=\"PTP模式\"></a>PTP模式</h4><h5 id=\"引入坐标\"><a href=\"#引入坐标\" class=\"headerlink\" title=\"引入坐标\"></a>引入坐标</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.activemq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activemq-all<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.14.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h5><p><strong>发送消息</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.创建连接工厂</span><br><span class=\"line\">2.创建连接</span><br><span class=\"line\">3.打开连接</span><br><span class=\"line\">4.创建session</span><br><span class=\"line\">5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）</span><br><span class=\"line\">6.创建消息生产者</span><br><span class=\"line\">7.创建消息</span><br><span class=\"line\">8.发送消息</span><br><span class=\"line\">9.释放资源</span><br></pre></td></tr></table></figure>\n<p>com.hui.producer.PTP_Producer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示点对点模式---消息生产者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PTP_Producer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：（后续讲解）</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：queue01</span></span><br><span class=\"line\">        Queue queue = session.createQueue(<span class=\"string\">\"queue01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息生产者,并指定要发送的队列：queue</span></span><br><span class=\"line\">        MessageProducer producer = session.createProducer(queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.创建消息,createTextMessage是文本类型</span></span><br><span class=\"line\">        TextMessage testMessage = session.createTextMessage(<span class=\"string\">\"test message\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.发送消息</span></span><br><span class=\"line\">        producer.send(testMessage);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送完成\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//9.释放资源</span></span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行该代码，在后台页面可以查看到有一个消息已经发送上了</p>\n<p><img src=\"/2020/07/15/2020-07-14-02-Java操作ActiveMQ/queue01.png\" alt=\"queue01\"></p>\n<p><strong>接收消息-第一种</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.创建连接工厂</span><br><span class=\"line\">2.创建连接</span><br><span class=\"line\">3.打开连接</span><br><span class=\"line\">4.创建session</span><br><span class=\"line\">5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）</span><br><span class=\"line\">6.创建消息消费者</span><br><span class=\"line\">7.接收消息</span><br><span class=\"line\">8.释放资源</span><br></pre></td></tr></table></figure>\n<p>com.hui.consumer.PTP_Consumer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示点对点模式---接收消息，第一种方案</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PTP_Consumer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start(); </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样</span></span><br><span class=\"line\">        Queue queue = session.createQueue(<span class=\"string\">\"queue01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息消费者,并指定从哪个队列接收消息</span></span><br><span class=\"line\">        MessageConsumer consumer = session.createConsumer(queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.接收消息</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Message message = consumer.receive();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//如果没有消息，就直接结束</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (message==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//如果有消息，判断是否是文本类型的消息</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">                TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"接收的消息是：\"</span>+textMessage.getText());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.释放资源</span></span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>接收消息-第二种，监听器接收，常用</strong></p>\n<blockquote>\n<p>注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示点对点模式---接收消息，第二种方案---常用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PTP_ConsumerListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样</span></span><br><span class=\"line\">        Queue queue = session.createQueue(<span class=\"string\">\"queue01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息消费者,并指定从哪个队列接收消息</span></span><br><span class=\"line\">        MessageConsumer consumer = session.createConsumer(queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.设置监听器来接收消息</span></span><br><span class=\"line\">        consumer.setMessageListener(<span class=\"keyword\">new</span> MessageListener() &#123;</span><br><span class=\"line\">            <span class=\"comment\">//处理信息</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果有消息，判断是否是文本类型的消息</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">                    TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"接收的消息是：\"</span>+textMessage.getText());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"发布-订阅模式\"><a href=\"#发布-订阅模式\" class=\"headerlink\" title=\"发布/订阅模式\"></a>发布/订阅模式</h4><blockquote>\n<p>注意发布/订阅模式一定要先启动消费者，再启动生产者。就是一定要先订阅，再发送。</p>\n</blockquote>\n<p><strong>订阅消息</strong></p>\n<p>因为常用监听模式，这里只使用监听的做演示</p>\n<p>com.hui.consumer.PS_ConsumerListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示发布/订阅模式---接收消息，第二种方案---常用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PS_ConsumerListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样</span></span><br><span class=\"line\">        Topic topic = session.createTopic(<span class=\"string\">\"topic01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息消费者,并指定从哪个队列接收消息</span></span><br><span class=\"line\">        MessageConsumer consumer = session.createConsumer(topic);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.设置监听器来接收消息</span></span><br><span class=\"line\">        consumer.setMessageListener(<span class=\"keyword\">new</span> MessageListener() &#123;</span><br><span class=\"line\">            <span class=\"comment\">//处理信息</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果有消息，判断是否是文本类型的消息</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">                    TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"接收的消息是：\"</span>+textMessage.getText());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>发送消息</strong></p>\n<p>com.hui.producer.PS_Producer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示发布/订阅模式---消息生产者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PS_Producer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：topic01</span></span><br><span class=\"line\">        Topic topic = session.createTopic(<span class=\"string\">\"topic01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息生产者,并指定要发送的队列：queue</span></span><br><span class=\"line\">        MessageProducer producer = session.createProducer(topic);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.创建消息,createTextMessage是文本类型</span></span><br><span class=\"line\">        TextMessage testMessage = session.createTextMessage(<span class=\"string\">\"test message--topic\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.发送消息</span></span><br><span class=\"line\">        producer.send(testMessage);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送完成\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//9.释放资源</span></span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Spring操作ActiveMQ\"><a href=\"#Spring操作ActiveMQ\" class=\"headerlink\" title=\"Spring操作ActiveMQ\"></a>Spring操作ActiveMQ</h2><h4 id=\"添加pom依赖\"><a href=\"#添加pom依赖\" class=\"headerlink\" title=\"添加pom依赖\"></a>添加pom依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spring.version</span>&gt;</span>5.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-jms<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-tx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.aspectj<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aspectjweaver<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--这个jar包是必须的</span></span><br><span class=\"line\"><span class=\"comment\">            5.0.2.RELEASE版本的Spring需要使用JMS 2.0版本，但spring-jms的依赖没有自动导入JMS 2.0，而activemq-core会导入JMS 1.1的依赖</span></span><br><span class=\"line\"><span class=\"comment\">            所以需要添加以下依赖解决</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.jms<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.jms-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.activemq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activemq-all<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.14.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"发送消息\"><a href=\"#发送消息\" class=\"headerlink\" title=\"发送消息\"></a>发送消息</h4><h5 id=\"Spring整合ActiveMQ的xml文件\"><a href=\"#Spring整合ActiveMQ的xml文件\" class=\"headerlink\" title=\"Spring整合ActiveMQ的xml文件\"></a>Spring整合ActiveMQ的xml文件</h5><p>applicationContext-producer.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:amq</span>=<span class=\"string\">\"http://activemq.apache.org/schema/core\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:jms</span>=<span class=\"string\">\"http://www.springframework.org/schema/jms\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/aop</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/aop/spring-aop.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms/spring-jms.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core/activemq-core.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">amq:connectionFactory</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">id</span>=<span class=\"string\">\"amqConnectionFactory\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">brokerURL</span>=<span class=\"string\">\"tcp://192.168.25.181:61616\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">userName</span>=<span class=\"string\">\"admin\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">password</span>=<span class=\"string\">\"admin\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建缓存连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.connection.CachingConnectionFactory\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"targetConnectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"amqConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--缓存消息信息--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionCacheSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"5\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建用于点对点发送的JmsTemplate--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jmsQueueTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.core.JmsTemplate\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入缓存连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"cachingConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--指定是否为点对点模式 为false就是点对点模式--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pubSubDomain\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建用于发布/订阅发送的JmsTemplate--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jmsTopicTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.core.JmsTemplate\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入缓存连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"cachingConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--指定是否为发布/订阅模式 为true就是发布/订阅模式--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pubSubDomain\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>发送消息代码实现</strong></p>\n<p><strong>点对点模式</strong></p>\n<p>com.hui.producer.Spring_PTPProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.MessageCreator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Resource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Session;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * spring与activemq整合的点对点发送演示</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(locations = <span class=\"string\">\"classpath:applicationContext-producer.xml\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Spring_PTPProducer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//@Resource(name = \"JmsQueueTemplate\")</span></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"meta\">@Qualifier</span>(<span class=\"string\">\"jmsQueueTemplate\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsTemplate jmsQueueTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数一：指定队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsQueueTemplate.send(<span class=\"string\">\"spring-ptp\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">                TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"spring-queue message\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"queue消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>发布/订阅模式</strong></p>\n<p>com.hui.producer.Spring_PSProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.MessageCreator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Resource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Session;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * spring与activemq整合的发布/订阅发送演示</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(locations = <span class=\"string\">\"classpath:applicationContext-producer.xml\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Spring_PSProducer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span>(name = <span class=\"string\">\"jmsTopicTemplate\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsTemplate jmsTopicTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pcSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数一：指定队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsTopicTemplate.send(<span class=\"string\">\"spring-pc\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">                TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"spring-topic message\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"topic消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"接收消息\"><a href=\"#接收消息\" class=\"headerlink\" title=\"接收消息\"></a>接收消息</h4><h5 id=\"Spring整合ActiveMQ的xml文件-1\"><a href=\"#Spring整合ActiveMQ的xml文件-1\" class=\"headerlink\" title=\"Spring整合ActiveMQ的xml文件\"></a>Spring整合ActiveMQ的xml文件</h5><p>applicationContext-consumer.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:amq</span>=<span class=\"string\">\"http://activemq.apache.org/schema/core\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:jms</span>=<span class=\"string\">\"http://www.springframework.org/schema/jms\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/aop</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/aop/spring-aop.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms/spring-jms.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core/activemq-core.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">amq:connectionFactory</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">id</span>=<span class=\"string\">\"amqConnectionFactory\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">brokerURL</span>=<span class=\"string\">\"tcp://192.168.25.181:61616\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">userName</span>=<span class=\"string\">\"admin\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">password</span>=<span class=\"string\">\"admin\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建缓存连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.connection.CachingConnectionFactory\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"targetConnectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"amqConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--缓存消息信息--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionCacheSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"5\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置消息监听主键扫描--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.hui.listener\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置监听器（点对点）--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jms:listener-container</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">destination-type</span>=<span class=\"string\">\"queue\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            destination:监听的队列名称</span></span><br><span class=\"line\"><span class=\"comment\">            ref：监听类，需要代码编写，使用component注解注入到容器中</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jms:listener</span> <span class=\"attr\">destination</span>=<span class=\"string\">\"spring-ptp\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"queueListener\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">jms:listener-container</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置监听器（发布/订阅）--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jms:listener-container</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">destination-type</span>=<span class=\"string\">\"topic\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            destination:监听的队列名称</span></span><br><span class=\"line\"><span class=\"comment\">            ref：监听类，需要代码编写，使用component注解注入到容器中</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jms:listener</span> <span class=\"attr\">destination</span>=<span class=\"string\">\"spring-pc\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"topicListener\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">jms:listener-container</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"监听器代码实现\"><a href=\"#监听器代码实现\" class=\"headerlink\" title=\"监听器代码实现\"></a>监听器代码实现</h5><p><strong>点对点模式监听</strong></p>\n<p>com.hui.listener.QueueListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.MessageListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 点对点模式的监听类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QueueListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//接收消息</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage testMessage = (TextMessage)message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"topic的消息：\"</span>+testMessage.getText());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>发布/订阅模式监听</strong></p>\n<p>com.hui.listener.TopicListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.MessageListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 发布/订阅模式的监听类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TopicListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//接收消息</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage testMessage = (TextMessage)message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"topic的消息：\"</span>+testMessage.getText());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动监听器\"><a href=\"#启动监听器\" class=\"headerlink\" title=\"启动监听器\"></a>启动监听器</h5><p>com.hui.consumer.SpringConsumer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于启动消费方监听</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringConsumer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.加载配置文件</span></span><br><span class=\"line\">        ClassPathXmlApplicationContext context=</span><br><span class=\"line\">                <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:applicationContext-consumer.xml\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.启动</span></span><br><span class=\"line\">        context.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.阻塞方法，让程序一直处于等待状态，不停止</span></span><br><span class=\"line\">        System.in.read();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SpringBoot操作ActiveMQ\"><a href=\"#SpringBoot操作ActiveMQ\" class=\"headerlink\" title=\"SpringBoot操作ActiveMQ\"></a>SpringBoot操作ActiveMQ</h2><h4 id=\"pom文件的依赖\"><a href=\"#pom文件的依赖\" class=\"headerlink\" title=\"pom文件的依赖\"></a>pom文件的依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-activemq<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"appliction-properties配置\"><a href=\"#appliction-properties配置\" class=\"headerlink\" title=\"appliction.properties配置\"></a>appliction.properties配置</h4><blockquote>\n<p>注意：如果想要切换点对点模式和发布/订阅模式，只需要修改spring.jms.pub-sub-domain既可，代码不用改</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=8080</span><br><span class=\"line\"># 服务名称（与SpringCloud整合使用）</span><br><span class=\"line\">spring.application.name=activemq-producer</span><br><span class=\"line\"></span><br><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<h4 id=\"发送消息-1\"><a href=\"#发送消息-1\" class=\"headerlink\" title=\"发送消息\"></a>发送消息</h4><p>com.hui.producer.SpringBootProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.springbootactivemq.SpringbootactivemqApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsMessagingTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示springboot与activemq的整合--消息生产者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(classes = SpringbootactivemqApplication.class)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootProducer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsMessagingTemplate jmsMessagingTemplate;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsTemplate jmsTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第一种发送消息的方法</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数一：队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数二：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsMessagingTemplate.convertAndSend(<span class=\"string\">\"springboot-queue\"</span>,<span class=\"string\">\"springboot queue message\"</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第二种发送消息的方法</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsTemplate.send(<span class=\"string\">\"springboot_queue2\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">                TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"springboot queue message2\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"接收消息-1\"><a href=\"#接收消息-1\" class=\"headerlink\" title=\"接收消息\"></a>接收消息</h4><blockquote>\n<p>注意：接收消息的监听包必须和启动类在一个包下：springbootactivemq</p>\n</blockquote>\n<p>com.hui.springbootactivemq.listener.MessageListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.annotation.JmsListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于监听消息类，既可用于队列监听，也可以用于主题监听</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage textMessage = (TextMessage) message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+textMessage.getText());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">Java操作ActiveMQ</font></center>","more":"<h2 id=\"原生JMS-API操作ActiveMQ\"><a href=\"#原生JMS-API操作ActiveMQ\" class=\"headerlink\" title=\"原生JMS API操作ActiveMQ\"></a>原生JMS API操作ActiveMQ</h2><h4 id=\"PTP模式\"><a href=\"#PTP模式\" class=\"headerlink\" title=\"PTP模式\"></a>PTP模式</h4><h5 id=\"引入坐标\"><a href=\"#引入坐标\" class=\"headerlink\" title=\"引入坐标\"></a>引入坐标</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.activemq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activemq-all<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.14.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h5><p><strong>发送消息</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.创建连接工厂</span><br><span class=\"line\">2.创建连接</span><br><span class=\"line\">3.打开连接</span><br><span class=\"line\">4.创建session</span><br><span class=\"line\">5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）</span><br><span class=\"line\">6.创建消息生产者</span><br><span class=\"line\">7.创建消息</span><br><span class=\"line\">8.发送消息</span><br><span class=\"line\">9.释放资源</span><br></pre></td></tr></table></figure>\n<p>com.hui.producer.PTP_Producer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示点对点模式---消息生产者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PTP_Producer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：（后续讲解）</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：queue01</span></span><br><span class=\"line\">        Queue queue = session.createQueue(<span class=\"string\">\"queue01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息生产者,并指定要发送的队列：queue</span></span><br><span class=\"line\">        MessageProducer producer = session.createProducer(queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.创建消息,createTextMessage是文本类型</span></span><br><span class=\"line\">        TextMessage testMessage = session.createTextMessage(<span class=\"string\">\"test message\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.发送消息</span></span><br><span class=\"line\">        producer.send(testMessage);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送完成\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//9.释放资源</span></span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>执行该代码，在后台页面可以查看到有一个消息已经发送上了</p>\n<p><img src=\"/2020/07/15/2020-07-14-02-Java操作ActiveMQ/queue01.png\" alt=\"queue01\"></p>\n<p><strong>接收消息-第一种</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.创建连接工厂</span><br><span class=\"line\">2.创建连接</span><br><span class=\"line\">3.打开连接</span><br><span class=\"line\">4.创建session</span><br><span class=\"line\">5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）</span><br><span class=\"line\">6.创建消息消费者</span><br><span class=\"line\">7.接收消息</span><br><span class=\"line\">8.释放资源</span><br></pre></td></tr></table></figure>\n<p>com.hui.consumer.PTP_Consumer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示点对点模式---接收消息，第一种方案</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PTP_Consumer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start(); </span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样</span></span><br><span class=\"line\">        Queue queue = session.createQueue(<span class=\"string\">\"queue01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息消费者,并指定从哪个队列接收消息</span></span><br><span class=\"line\">        MessageConsumer consumer = session.createConsumer(queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.接收消息</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\">            Message message = consumer.receive();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//如果没有消息，就直接结束</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (message==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//如果有消息，判断是否是文本类型的消息</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">                TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"接收的消息是：\"</span>+textMessage.getText());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.释放资源</span></span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>接收消息-第二种，监听器接收，常用</strong></p>\n<blockquote>\n<p>注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示点对点模式---接收消息，第二种方案---常用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PTP_ConsumerListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样</span></span><br><span class=\"line\">        Queue queue = session.createQueue(<span class=\"string\">\"queue01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息消费者,并指定从哪个队列接收消息</span></span><br><span class=\"line\">        MessageConsumer consumer = session.createConsumer(queue);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.设置监听器来接收消息</span></span><br><span class=\"line\">        consumer.setMessageListener(<span class=\"keyword\">new</span> MessageListener() &#123;</span><br><span class=\"line\">            <span class=\"comment\">//处理信息</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果有消息，判断是否是文本类型的消息</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">                    TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"接收的消息是：\"</span>+textMessage.getText());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"发布-订阅模式\"><a href=\"#发布-订阅模式\" class=\"headerlink\" title=\"发布/订阅模式\"></a>发布/订阅模式</h4><blockquote>\n<p>注意发布/订阅模式一定要先启动消费者，再启动生产者。就是一定要先订阅，再发送。</p>\n</blockquote>\n<p><strong>订阅消息</strong></p>\n<p>因为常用监听模式，这里只使用监听的做演示</p>\n<p>com.hui.consumer.PS_ConsumerListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示发布/订阅模式---接收消息，第二种方案---常用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PS_ConsumerListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.指定目标地址（Queue：点对点消息，Topic：发布订阅信息）保持和生产者一样</span></span><br><span class=\"line\">        Topic topic = session.createTopic(<span class=\"string\">\"topic01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息消费者,并指定从哪个队列接收消息</span></span><br><span class=\"line\">        MessageConsumer consumer = session.createConsumer(topic);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.设置监听器来接收消息</span></span><br><span class=\"line\">        consumer.setMessageListener(<span class=\"keyword\">new</span> MessageListener() &#123;</span><br><span class=\"line\">            <span class=\"comment\">//处理信息</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">//如果有消息，判断是否是文本类型的消息</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">                    TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        System.out.println(<span class=\"string\">\"接收的消息是：\"</span>+textMessage.getText());</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//注意：在监听器的模式下千万不要关闭连接，一旦关闭，消息无法接收</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>发送消息</strong></p>\n<p>com.hui.producer.PS_Producer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.activemq.ActiveMQConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示发布/订阅模式---消息生产者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PS_Producer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//1.创建连接工厂</span></span><br><span class=\"line\">        ConnectionFactory factory=<span class=\"keyword\">new</span> ActiveMQConnectionFactory(<span class=\"string\">\"tcp://192.168.25.181:61616\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.创建连接</span></span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.打开连接</span></span><br><span class=\"line\">        connection.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//4.创建session</span></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * createSession：</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数一：是否开启事务</span></span><br><span class=\"line\"><span class=\"comment\">         *      参数二：消息确认机制</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        Session session = connection.createSession(<span class=\"keyword\">false</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//5.创建目标地址（Queue：点对点消息，Topic：发布订阅信息）,也是队列地址，指定地址名称是：topic01</span></span><br><span class=\"line\">        Topic topic = session.createTopic(<span class=\"string\">\"topic01\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//6.创建消息生产者,并指定要发送的队列：queue</span></span><br><span class=\"line\">        MessageProducer producer = session.createProducer(topic);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//7.创建消息,createTextMessage是文本类型</span></span><br><span class=\"line\">        TextMessage testMessage = session.createTextMessage(<span class=\"string\">\"test message--topic\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//8.发送消息</span></span><br><span class=\"line\">        producer.send(testMessage);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送完成\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//9.释放资源</span></span><br><span class=\"line\">        session.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Spring操作ActiveMQ\"><a href=\"#Spring操作ActiveMQ\" class=\"headerlink\" title=\"Spring操作ActiveMQ\"></a>Spring操作ActiveMQ</h2><h4 id=\"添加pom依赖\"><a href=\"#添加pom依赖\" class=\"headerlink\" title=\"添加pom依赖\"></a>添加pom依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">spring.version</span>&gt;</span>5.0.2.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">spring.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-context<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-jms<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-tx<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.aspectj<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>aspectjweaver<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--这个jar包是必须的</span></span><br><span class=\"line\"><span class=\"comment\">            5.0.2.RELEASE版本的Spring需要使用JMS 2.0版本，但spring-jms的依赖没有自动导入JMS 2.0，而activemq-core会导入JMS 1.1的依赖</span></span><br><span class=\"line\"><span class=\"comment\">            所以需要添加以下依赖解决</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>javax.jms<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.jms-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>junit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>4.12<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.activemq<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>activemq-all<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>5.14.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"发送消息\"><a href=\"#发送消息\" class=\"headerlink\" title=\"发送消息\"></a>发送消息</h4><h5 id=\"Spring整合ActiveMQ的xml文件\"><a href=\"#Spring整合ActiveMQ的xml文件\" class=\"headerlink\" title=\"Spring整合ActiveMQ的xml文件\"></a>Spring整合ActiveMQ的xml文件</h5><p>applicationContext-producer.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:amq</span>=<span class=\"string\">\"http://activemq.apache.org/schema/core\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:jms</span>=<span class=\"string\">\"http://www.springframework.org/schema/jms\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/aop</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/aop/spring-aop.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms/spring-jms.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core/activemq-core.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">amq:connectionFactory</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">id</span>=<span class=\"string\">\"amqConnectionFactory\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">brokerURL</span>=<span class=\"string\">\"tcp://192.168.25.181:61616\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">userName</span>=<span class=\"string\">\"admin\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">password</span>=<span class=\"string\">\"admin\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建缓存连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.connection.CachingConnectionFactory\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"targetConnectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"amqConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--缓存消息信息--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionCacheSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"5\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建用于点对点发送的JmsTemplate--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jmsQueueTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.core.JmsTemplate\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入缓存连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"cachingConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--指定是否为点对点模式 为false就是点对点模式--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pubSubDomain\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建用于发布/订阅发送的JmsTemplate--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"jmsTopicTemplate\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.core.JmsTemplate\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入缓存连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"connectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"cachingConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--指定是否为发布/订阅模式 为true就是发布/订阅模式--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"pubSubDomain\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>发送消息代码实现</strong></p>\n<p><strong>点对点模式</strong></p>\n<p>com.hui.producer.Spring_PTPProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.MessageCreator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Resource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Session;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * spring与activemq整合的点对点发送演示</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(locations = <span class=\"string\">\"classpath:applicationContext-producer.xml\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Spring_PTPProducer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//@Resource(name = \"JmsQueueTemplate\")</span></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"meta\">@Qualifier</span>(<span class=\"string\">\"jmsQueueTemplate\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsTemplate jmsQueueTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数一：指定队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsQueueTemplate.send(<span class=\"string\">\"spring-ptp\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">                TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"spring-queue message\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"queue消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>发布/订阅模式</strong></p>\n<p>com.hui.producer.Spring_PSProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.MessageCreator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.ContextConfiguration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.Resource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Session;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * spring与activemq整合的发布/订阅发送演示</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@ContextConfiguration</span>(locations = <span class=\"string\">\"classpath:applicationContext-producer.xml\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Spring_PSProducer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Resource</span>(name = <span class=\"string\">\"jmsTopicTemplate\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsTemplate jmsTopicTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pcSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数一：指定队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数二：MessageCreator接口，我们需要提供该接口的匿名内部实现</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsTopicTemplate.send(<span class=\"string\">\"spring-pc\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">                TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"spring-topic message\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"topic消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"接收消息\"><a href=\"#接收消息\" class=\"headerlink\" title=\"接收消息\"></a>接收消息</h4><h5 id=\"Spring整合ActiveMQ的xml文件-1\"><a href=\"#Spring整合ActiveMQ的xml文件-1\" class=\"headerlink\" title=\"Spring整合ActiveMQ的xml文件\"></a>Spring整合ActiveMQ的xml文件</h5><p>applicationContext-consumer.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">beans</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.springframework.org/schema/beans\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:aop</span>=<span class=\"string\">\"http://www.springframework.org/schema/aop\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:context</span>=<span class=\"string\">\"http://www.springframework.org/schema/context\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:tx</span>=<span class=\"string\">\"http://www.springframework.org/schema/tx\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:amq</span>=<span class=\"string\">\"http://activemq.apache.org/schema/core\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xmlns:jms</span>=<span class=\"string\">\"http://www.springframework.org/schema/jms\"</span></span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/aop</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/aop/spring-aop.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://www.springframework.org/schema/jms/spring-jms.xsd</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"string\">       http://activemq.apache.org/schema/core/activemq-core.xsd\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">amq:connectionFactory</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">id</span>=<span class=\"string\">\"amqConnectionFactory\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">brokerURL</span>=<span class=\"string\">\"tcp://192.168.25.181:61616\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">userName</span>=<span class=\"string\">\"admin\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">password</span>=<span class=\"string\">\"admin\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--创建缓存连接工厂--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">id</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.springframework.jms.connection.CachingConnectionFactory\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--注入连接工厂--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"targetConnectionFactory\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"amqConnectionFactory\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--缓存消息信息--&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"sessionCacheSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"5\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置消息监听主键扫描--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">context:component-scan</span> <span class=\"attr\">base-package</span>=<span class=\"string\">\"com.hui.listener\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置监听器（点对点）--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jms:listener-container</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">destination-type</span>=<span class=\"string\">\"queue\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            destination:监听的队列名称</span></span><br><span class=\"line\"><span class=\"comment\">            ref：监听类，需要代码编写，使用component注解注入到容器中</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jms:listener</span> <span class=\"attr\">destination</span>=<span class=\"string\">\"spring-ptp\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"queueListener\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">jms:listener-container</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--配置监听器（发布/订阅）--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        destination-type:目标的类型（queue：点对点模式，topic：发布/订阅模式）</span></span><br><span class=\"line\"><span class=\"comment\">    --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jms:listener-container</span> <span class=\"attr\">connection-factory</span>=<span class=\"string\">\"cachingConnectionFactory\"</span> <span class=\"attr\">destination-type</span>=<span class=\"string\">\"topic\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">            destination:监听的队列名称</span></span><br><span class=\"line\"><span class=\"comment\">            ref：监听类，需要代码编写，使用component注解注入到容器中</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">jms:listener</span> <span class=\"attr\">destination</span>=<span class=\"string\">\"spring-pc\"</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"topicListener\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">jms:listener-container</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">beans</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"监听器代码实现\"><a href=\"#监听器代码实现\" class=\"headerlink\" title=\"监听器代码实现\"></a>监听器代码实现</h5><p><strong>点对点模式监听</strong></p>\n<p>com.hui.listener.QueueListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.MessageListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 点对点模式的监听类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">QueueListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//接收消息</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage testMessage = (TextMessage)message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"topic的消息：\"</span>+testMessage.getText());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>发布/订阅模式监听</strong></p>\n<p>com.hui.listener.TopicListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.MessageListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 发布/订阅模式的监听类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TopicListener</span> <span class=\"keyword\">implements</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//接收消息</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMessage</span><span class=\"params\">(Message message)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage testMessage = (TextMessage)message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"topic的消息：\"</span>+testMessage.getText());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"启动监听器\"><a href=\"#启动监听器\" class=\"headerlink\" title=\"启动监听器\"></a>启动监听器</h5><p>com.hui.consumer.SpringConsumer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.consumer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于启动消费方监听</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringConsumer</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//1.加载配置文件</span></span><br><span class=\"line\">        ClassPathXmlApplicationContext context=</span><br><span class=\"line\">                <span class=\"keyword\">new</span> ClassPathXmlApplicationContext(<span class=\"string\">\"classpath:applicationContext-consumer.xml\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//2.启动</span></span><br><span class=\"line\">        context.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//3.阻塞方法，让程序一直处于等待状态，不停止</span></span><br><span class=\"line\">        System.in.read();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"SpringBoot操作ActiveMQ\"><a href=\"#SpringBoot操作ActiveMQ\" class=\"headerlink\" title=\"SpringBoot操作ActiveMQ\"></a>SpringBoot操作ActiveMQ</h2><h4 id=\"pom文件的依赖\"><a href=\"#pom文件的依赖\" class=\"headerlink\" title=\"pom文件的依赖\"></a>pom文件的依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-activemq<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-test<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"appliction-properties配置\"><a href=\"#appliction-properties配置\" class=\"headerlink\" title=\"appliction.properties配置\"></a>appliction.properties配置</h4><blockquote>\n<p>注意：如果想要切换点对点模式和发布/订阅模式，只需要修改spring.jms.pub-sub-domain既可，代码不用改</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port=8080</span><br><span class=\"line\"># 服务名称（与SpringCloud整合使用）</span><br><span class=\"line\">spring.application.name=activemq-producer</span><br><span class=\"line\"></span><br><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<h4 id=\"发送消息-1\"><a href=\"#发送消息-1\" class=\"headerlink\" title=\"发送消息\"></a>发送消息</h4><p>com.hui.producer.SpringBootProducer</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.producer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.hui.springbootactivemq.SpringbootactivemqApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.Test;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.junit.runner.RunWith;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsMessagingTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.test.context.junit4.SpringJUnit4ClassRunner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 演示springboot与activemq的整合--消息生产者</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span>(classes = SpringbootactivemqApplication.class)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpringBootProducer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsMessagingTemplate jmsMessagingTemplate;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsTemplate jmsTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第一种发送消息的方法</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数一：队列的名称</span></span><br><span class=\"line\"><span class=\"comment\">         * 参数二：消息内容</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsMessagingTemplate.convertAndSend(<span class=\"string\">\"springboot-queue\"</span>,<span class=\"string\">\"springboot queue message\"</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">         * 第二种发送消息的方法</span></span><br><span class=\"line\"><span class=\"comment\">         */</span></span><br><span class=\"line\">        jmsTemplate.send(<span class=\"string\">\"springboot_queue2\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">                TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"springboot queue message2\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息发送成功\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"接收消息-1\"><a href=\"#接收消息-1\" class=\"headerlink\" title=\"接收消息\"></a>接收消息</h4><blockquote>\n<p>注意：接收消息的监听包必须和启动类在一个包下：springbootactivemq</p>\n</blockquote>\n<p>com.hui.springbootactivemq.listener.MessageListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.annotation.JmsListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.JMSException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.Message;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.TextMessage;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于监听消息类，既可用于队列监听，也可以用于主题监听</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage textMessage = (TextMessage) message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+textMessage.getText());</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"03-ActiveMQ高级讲解","date":"2020-07-14T23:39:00.000Z","_content":"\n<center><font size=4 color=\"red\">ActiveMQ高级讲解</font></center>\n\n<!--more-->\n\n## ActiveMQ消息组成与高级特性\n\n#### JMS消息组成详解\n\n整个JMS协议组成结构如下\n\n| 结构         | 描述                  |\n| ------------ | --------------------- |\n| JMS Provider | 消息中间件/消息服务器 |\n| JMS Producer | 消息生产者            |\n| JMS Consumer | 消息消费者            |\n| JMS Message  | 消息（重要）          |\n\n重点讲解JMS Message，其有三部分组成：\n\n* 消息头\n* 消息体\n* 消息属性\n\n##### JMS消息头\n\nJMS消息头预定义了若干字段用于客户端与JMS提供者之间识别和发送消息，预编译如下：\n\n> 其中标黑的为重要的消息头\n\n| 名称              | 描述                                                         |\n| ----------------- | ------------------------------------------------------------ |\n| **MessageID**     | 唯一标识提供者发送的每一条消息，这个字段由提供者设置，不能修改。客户机只有在接收到消息后才能确实消息的Message ID |\n| **Destination**   | 消息发送的队列方式和队列名称，在发送过程中由提供者设置       |\n| **CorrelationID** | 通常用于链接响应消息与请求消息，由消息的JMS程序（代码）设置  |\n| Timestamp         | 提供者发送信息的时间，有提供者在发送过程中设置               |\n| Reply To          | 请求程序用它来指出回复消息应发送的地方，由发送消息的JMS程序设置 |\n| **Expiration**    | 消息失效的时间，值0表明消息不会过期，默认0                   |\n| **DeliveryMode**  | 消息持久化，包括DeliveryMode.NON_PERSISTENT和DeliveryMode.PERSISTENT |\n| **Priority**      | 消息的优先级。0-4表示普通消息，5-9表示加急消息。ActiveMQ不保证优先级高就一定先发送，只保证了加急消息必须先于普通消息发送。默认是4 |\n| Redelivered       | 消息的重发标志，false：代表消息是第一次发送。true：代表消息为重发消息 |\n| Type              | JMS程序用它来指出消息的类型                                  |\n\n> 需要注意，在传送消息时，消息头的值有JMS提供者来设置，因此**开发者使用以上setJMSXXX()方法分配的值会被忽略**，即虽然设置了，但是无效。只有以下几个值可以由开发者设置\n\n**CorrelationID，Reply To，Type**\n\n发送方设置方式如下：\n\n```java\n@Test\npublic void ptpSender2(){\n\n    jmsTemplate.send(\"springboot_queue2\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            TextMessage textMessage = session.createTextMessage(\"springboot queue message2\");\n            textMessage.setJMSCorrelationID(\"abcdefg\");\n            textMessage.setJMSExpiration(3000);\n            textMessage.setJMSDeliveryMode(DeliveryMode.NON_PERSISTENT);\n            return textMessage;\n        }\n    });\n    System.out.println(\"消息发送成功\");\n}\n```\n\n接收方直接使用getJMSXXX()获取就行了\n\n##### JMS消息体\n\n在消息体中，JMS有5中类型的消息格式，让我们可以以不同的形式发送和接收消息，并提供了已有消息格式的兼容，不同的消息类型如下：\n\n```\nTextMessage：一个字符串对象\nMapMessage：一套名称-键值对\nObjectMessage：一个序列化的java对象\nBytesMessage：一个字节的数据流\nStreamMessage：Java原始值的数据流\n```\n\n**TextMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            TextMessage textMessage = session.createTextMessage(\"springboot queue message2\");\n            return textMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof TextMessage){\n        TextMessage textMessage = (TextMessage) message;\n        try {\n            System.out.println(\"接收到的消息：\"+textMessage.getText());\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**MapMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            MapMessage mapMessage = session.createMapMessage();\n            //第一个是key，第二个是value\n            mapMessage.setString(\"name\",\"张三\");\n            //第一个是key，第二个是value\n            mapMessage.setInt(\"age\",13);\n            return mapMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof MapMessage){\n        MapMessage mapMessage=(MapMessage) message;\n        try {\n            System.out.println(\"接收到的消息：\"+mapMessage.getString(\"name\"));\n            System.out.println(\"接收到的消息：\"+mapMessage.getString(\"age\"));\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**ObjectMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            User user=new User();\n            user.setName(\"李四\");\n            user.setAge(14);\n            //User对象必须实现序列化Serializable\n            ObjectMessage objectMessage = session.createObjectMessage(user);\n            return objectMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof ObjectMessage){\n        ObjectMessage objectMessage=(ObjectMessage) message;\n        try {\n            User user=(User)objectMessage.getObject();\n            System.out.println(\"接收到的消息：\"+user.getName());\n            System.out.println(\"接收到的消息：\"+user.getAge());\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n> 注意：此时启动会报以下错误\n\n```log\njavax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class com.hui.pojo.User! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes\n```\n\n原因是：ActiveMQ5.12后，为了安全考虑，ActiveMQ默认不接受自定义的序列化对象，需要将自定义的加入受信任的列表,即设置：`spring.activemq.packages.trust-all=true`\n\n```properties\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n# false表示不信任自定义的对象，true表示信任。默认为false\nspring.activemq.packages.trust-all=true\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n**BytesMessage**\n\n演示把一个图片的流发送到消息队列，然后从消息队列读取\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            BytesMessage bytesMessage = session.createBytesMessage();\n\n            try {\n                /**\n                     * 整体流程：\n                     *      1.读取文件成流\n                     *      2.创建一个空的字节数组，数组长度就是文件的字节长度\n                     *      3.把文件流读入到字节数组中\n                     *      4.把字节数组写入到bytesMessage中\n                     */\n                //1.读取文件\n                File file=new File(\"src/main/resources/static/photo.png\");\n                //2.构建文件文件流\n                FileInputStream fis=new FileInputStream(file);\n                //3.把文件流写入到缓存数组中\n                byte[] buffer=new byte[(int)file.length()];\n                fis.read(buffer);\n                //4.把缓存输入写入到bytesMessage中\n                bytesMessage.writeBytes(buffer);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n\n            return bytesMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof BytesMessage){\n        BytesMessage bytesMessage=(BytesMessage) message;\n        try {\n            /**\n                 * 整体流程：\n                 *      1.创建一个空的字节数组，长度就是bytesMessage的长度\n                 *      2.把bytesMessage读入到空的字节数组中\n                 *      3.创建一个文件输出流，指定文件路径\n                 *      4.把字节数组中的数据写入到文件输出流中\n                 */\n            //1.设置缓存数组\n            byte[] buffer=new byte[(int)bytesMessage.getBodyLength()];\n            //2.把字节信息读入到缓存数组\n            bytesMessage.readBytes(buffer);\n            //3.构建文件输出流\n            FileOutputStream fos=new FileOutputStream(\"src/main/resources/static/photocopy.png\");\n            //4.把数据写出\n            fos.write(buffer);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**StreamMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            StreamMessage streamMessage = session.createStreamMessage();\n            streamMessage.writeString(\"streamMessage演示\");\n            streamMessage.writeInt(20);\n            return streamMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof StreamMessage){\n        StreamMessage streamMessage=(StreamMessage) message;\n        try {\n            System.out.println(\"接收消息：\"+streamMessage.readString());\n            System.out.println(\"接收消息：\"+streamMessage.readInt());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**JMS消息属性**\n\n我们可以给消息设置自定义属性，这个属性只要是为了给消息打标记，用于实现消息的过滤功能\n\n```java\nXXXMessage.setXXXProperty(\"Property\",Property);\n//例如：\ntextMessage.setStringProperty(\"订单\",\"order\");\n```\n\n#### 消息持久化\n\n消息持久化是保证消息不丢失的重要方式！！！\n\nActiveMQ提供了三种消息存储方式：\n\n1. 基于Memory消息存储-基于内存的消息存储（不常用）\n2. 基于日志消息存储方式，KahaDB是ActiveMQ的默认日志存储方式，它提供了容量的提升和恢复能力\n3. 基于JDBC的消息存储方式-数据存储于数据库（例如MySql）中\n\n> 注意：消费者消费了消息后，持久化的消息要被删除，防止消息被复用\n\n**基于Memory消息存储**\n\n要使用基于Memory消息存储，需要配置`spring.jms.template.delivery-mode=non_persistent`\n\n```properties\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n# false表示不信任自定义的对象，true表示信任。默认为false\nspring.activemq.packages.trust-all=true\n# 使用基于Memory消息存储\nspring.jms.template.delivery-mode=non_persistent\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n**基于日志消息存储方式**\n\n要使用基于日志消息存储方式，需要配置`spring.jms.template.delivery-mode=persistent`\n\n```properties\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n# false表示不信任自定义的对象，true表示信任。默认为false\nspring.activemq.packages.trust-all=true\n# 使用基于日志消息存储方式\nspring.jms.template.delivery-mode=persistent\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n存储位置：存储在ActiveMQ部署的服务器端的data目录下的kahaDB下\n\n**基于JDBC的消息存储方式**\n\n1. application.properties配置：\n\n```properties\nspring.jms.template.delivery-mode=persistent\n```\n\n2. 在ActiveMQ部署的主机上，路径：/usr/local/activemq/conf,修改activemq.xml文件\n\n```xml\n<!-- 配置 数据库连接池 -->\n<bean name=\"activemq-mysql\" class=\"com.alibaba.druid.pool.DruidDataSource\" destroy-method=\"clone\">\n    <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\" />\n    <property name=\"url\" value=\"jdbc:mysql://192.168.31.140:3306/db_activimq\" />\n    <property name=\"username\" value=\"root\" />\n    <property name=\"password\" value=\"123456\" />\n</bean>\n\n<!-- dataSource的值就是数据库的id -->\n<persistenceAdapter>\n    <jdbcPersistenceAdapter dataSource=\"#activemq-mysql\"/>\n</persistenceAdapter>\n```\n\n具体的配置位置如图：\n\n![基于数据库的持久化-数据库连接池](基于数据库的持久化-数据库连接池.png)\n\n![基于数据库的持久化-配置](基于数据库的持久化-配置.png)\n\n3. 拷贝mysql和druid数据源的jar包到activemq部署主机的activemq的bin目录下\n\n```\nmysql-connector-java-5.1.28.jar\ndruid-1.0.9.jar\n```\n\n4. 重启activemq,重启前要开启数据库，并创建的有库db_activimq\n\n```powershell\n$ ./activemq restart\n```\n\n重启成功后，在数据库db-activemq库中就会新增3张表，其中表activemq_msgs记录的就是消息\n\n![db-activemq](db-activemq.png)\n\n#### ActiveMQ的消息事务\n\n消息事务是保证消息传递原子性的一个重要特性，和JDBC的事务特征类似\n\n一个事务性发送，基于一组消息，要么能够全部保证到达服务器，要么都不到达服务器\n\n生产者、消费者与消息服务器直接都支持事务性，但是ActiveMQ的事务主要偏向于生产者的应用，即使生产者的消息如果出现异常，所有消息都不能发送到ActiveMQ服务器\n\n##### 生产者应用事务\n\n**普通版本的事务控制**\n\n只需要在创建Session时，打开事务控制即可\n\n```java\n@Test\npublic void sendMessageTx(){\n    ConnectionFactory factory = jmsMessagingTemplate.getConnectionFactory();\n    Session session =null;\n    try {\n        Connection connection = factory.createConnection();\n        //创建session时，使用true打开事务控制\n        session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);\n        //创建生产者\n        MessageProducer producer = session.createProducer(session.createQueue(\"queue_tx\"));\n\n        //发送消息\n        for (int i=1;i<=10;i++){\n            TextMessage textMessage = session.createTextMessage(\"发送的消息：\" + i);\n            producer.send(textMessage);\n            //演示异常\n            if (i==4){\n                int j=10/0;\n            }\n        }\n        //注意：一旦开启事务，就必须使用commit进行事务提交，否则无法发送到MQ服务器\n        session.commit();\n    } catch (JMSException e) {\n        e.printStackTrace();\n        //如果出现异常，就回滚\n        try {\n            session.rollback();\n        } catch (JMSException ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n```\n\n**Spring控制事务**\n\nActiveMQ配置类：com.hui.springbootactivemq.config.ActiveMQConfig\n\n> 不配置无法控制事务\n\n```java\npackage com.hui.springbootactivemq.config;\n\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jms.connection.JmsTransactionManager;\nimport org.springframework.transaction.PlatformTransactionManager;\n\nimport javax.jms.ConnectionFactory;\n\n@Configuration\npublic class ActiveMQConfig {\n\n    /**\n     * 添加jms事务管理器\n     */\n    @Bean\n    public PlatformTransactionManager createTransactionManager(@Qualifier(\"jmsConnectionFactory\") ConnectionFactory connectionFactory){\n        return new JmsTransactionManager(connectionFactory);\n    }\n}\n```\n\n事务版控制事务层：com.hui.springbootactivemq.service.MessageProducerService\n\n```java\npackage com.hui.springbootactivemq.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jms.core.JmsMessagingTemplate;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Service(\"messageProducerService\")\npublic class MessageProducerService {\n\n    @Autowired\n    private JmsMessagingTemplate jmsMessagingTemplate;\n\n    @Transactional\n    public void sendMessageTx(){\n        for (int i=1;i<=10;i++){\n            if (i==4){\n                int j=10/0;\n            }\n            jmsMessagingTemplate.convertAndSend(\"spring_queue_tx\",\"发送消息：\"+i);\n        }\n\n    }\n}\n```\n\n测试：\n\n```java\n@Autowired\nprivate MessageProducerService messageProducerService;\n\n@Test\npublic void sendMessageSpringTx(){\n    messageProducerService.sendMessageTx();\n}\n```\n\n##### 消费者应用事务\n\n消息监听器应用事务:com.hui.springbootactivemq.listener.MessageListener\n\n```java\npackage com.hui.springbootactivemq.listener;\n\nimport org.springframework.jms.annotation.JmsListener;\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.*;\n\n/**\n * 用于监听消息类，既可用于队列监听，也可以用于主题监听\n */\n@Component\npublic class MessageListener {\n\n    @JmsListener(destination = \"springboot_queue\")\n    //如果要控制事务，需要加入session\n    public void receiveMessage(Message message,Session session){\n        if (message instanceof TextMessage){\n            TextMessage textMessage=(TextMessage) message;\n            try {\n                System.out.println(\"接收消息：\"+textMessage.getText());\n                \n                //提交事务\n                session.commit();\n            } catch (Exception e) {\n                e.printStackTrace();\n                //回滚事务\n                try {\n                    //一旦事务回滚，MQ会重发消息，一共重发6次\n                    session.rollback();\n                } catch (JMSException ex) {\n                    ex.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n","source":"_posts/2020-07-14-03-ActiveMQ高级讲解.md","raw":"---\ntitle: 03-ActiveMQ高级讲解\ndate: 2020-07-14 23:39:00\ncategories:\n- ActiveMQ\ntags:\n- ActiveMQ\n- 消息持久化\n- 消息事务\n---\n\n<center><font size=4 color=\"red\">ActiveMQ高级讲解</font></center>\n\n<!--more-->\n\n## ActiveMQ消息组成与高级特性\n\n#### JMS消息组成详解\n\n整个JMS协议组成结构如下\n\n| 结构         | 描述                  |\n| ------------ | --------------------- |\n| JMS Provider | 消息中间件/消息服务器 |\n| JMS Producer | 消息生产者            |\n| JMS Consumer | 消息消费者            |\n| JMS Message  | 消息（重要）          |\n\n重点讲解JMS Message，其有三部分组成：\n\n* 消息头\n* 消息体\n* 消息属性\n\n##### JMS消息头\n\nJMS消息头预定义了若干字段用于客户端与JMS提供者之间识别和发送消息，预编译如下：\n\n> 其中标黑的为重要的消息头\n\n| 名称              | 描述                                                         |\n| ----------------- | ------------------------------------------------------------ |\n| **MessageID**     | 唯一标识提供者发送的每一条消息，这个字段由提供者设置，不能修改。客户机只有在接收到消息后才能确实消息的Message ID |\n| **Destination**   | 消息发送的队列方式和队列名称，在发送过程中由提供者设置       |\n| **CorrelationID** | 通常用于链接响应消息与请求消息，由消息的JMS程序（代码）设置  |\n| Timestamp         | 提供者发送信息的时间，有提供者在发送过程中设置               |\n| Reply To          | 请求程序用它来指出回复消息应发送的地方，由发送消息的JMS程序设置 |\n| **Expiration**    | 消息失效的时间，值0表明消息不会过期，默认0                   |\n| **DeliveryMode**  | 消息持久化，包括DeliveryMode.NON_PERSISTENT和DeliveryMode.PERSISTENT |\n| **Priority**      | 消息的优先级。0-4表示普通消息，5-9表示加急消息。ActiveMQ不保证优先级高就一定先发送，只保证了加急消息必须先于普通消息发送。默认是4 |\n| Redelivered       | 消息的重发标志，false：代表消息是第一次发送。true：代表消息为重发消息 |\n| Type              | JMS程序用它来指出消息的类型                                  |\n\n> 需要注意，在传送消息时，消息头的值有JMS提供者来设置，因此**开发者使用以上setJMSXXX()方法分配的值会被忽略**，即虽然设置了，但是无效。只有以下几个值可以由开发者设置\n\n**CorrelationID，Reply To，Type**\n\n发送方设置方式如下：\n\n```java\n@Test\npublic void ptpSender2(){\n\n    jmsTemplate.send(\"springboot_queue2\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            TextMessage textMessage = session.createTextMessage(\"springboot queue message2\");\n            textMessage.setJMSCorrelationID(\"abcdefg\");\n            textMessage.setJMSExpiration(3000);\n            textMessage.setJMSDeliveryMode(DeliveryMode.NON_PERSISTENT);\n            return textMessage;\n        }\n    });\n    System.out.println(\"消息发送成功\");\n}\n```\n\n接收方直接使用getJMSXXX()获取就行了\n\n##### JMS消息体\n\n在消息体中，JMS有5中类型的消息格式，让我们可以以不同的形式发送和接收消息，并提供了已有消息格式的兼容，不同的消息类型如下：\n\n```\nTextMessage：一个字符串对象\nMapMessage：一套名称-键值对\nObjectMessage：一个序列化的java对象\nBytesMessage：一个字节的数据流\nStreamMessage：Java原始值的数据流\n```\n\n**TextMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            TextMessage textMessage = session.createTextMessage(\"springboot queue message2\");\n            return textMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof TextMessage){\n        TextMessage textMessage = (TextMessage) message;\n        try {\n            System.out.println(\"接收到的消息：\"+textMessage.getText());\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**MapMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            MapMessage mapMessage = session.createMapMessage();\n            //第一个是key，第二个是value\n            mapMessage.setString(\"name\",\"张三\");\n            //第一个是key，第二个是value\n            mapMessage.setInt(\"age\",13);\n            return mapMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof MapMessage){\n        MapMessage mapMessage=(MapMessage) message;\n        try {\n            System.out.println(\"接收到的消息：\"+mapMessage.getString(\"name\"));\n            System.out.println(\"接收到的消息：\"+mapMessage.getString(\"age\"));\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**ObjectMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            User user=new User();\n            user.setName(\"李四\");\n            user.setAge(14);\n            //User对象必须实现序列化Serializable\n            ObjectMessage objectMessage = session.createObjectMessage(user);\n            return objectMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof ObjectMessage){\n        ObjectMessage objectMessage=(ObjectMessage) message;\n        try {\n            User user=(User)objectMessage.getObject();\n            System.out.println(\"接收到的消息：\"+user.getName());\n            System.out.println(\"接收到的消息：\"+user.getAge());\n        } catch (JMSException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n> 注意：此时启动会报以下错误\n\n```log\njavax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class com.hui.pojo.User! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes\n```\n\n原因是：ActiveMQ5.12后，为了安全考虑，ActiveMQ默认不接受自定义的序列化对象，需要将自定义的加入受信任的列表,即设置：`spring.activemq.packages.trust-all=true`\n\n```properties\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n# false表示不信任自定义的对象，true表示信任。默认为false\nspring.activemq.packages.trust-all=true\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n**BytesMessage**\n\n演示把一个图片的流发送到消息队列，然后从消息队列读取\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            BytesMessage bytesMessage = session.createBytesMessage();\n\n            try {\n                /**\n                     * 整体流程：\n                     *      1.读取文件成流\n                     *      2.创建一个空的字节数组，数组长度就是文件的字节长度\n                     *      3.把文件流读入到字节数组中\n                     *      4.把字节数组写入到bytesMessage中\n                     */\n                //1.读取文件\n                File file=new File(\"src/main/resources/static/photo.png\");\n                //2.构建文件文件流\n                FileInputStream fis=new FileInputStream(file);\n                //3.把文件流写入到缓存数组中\n                byte[] buffer=new byte[(int)file.length()];\n                fis.read(buffer);\n                //4.把缓存输入写入到bytesMessage中\n                bytesMessage.writeBytes(buffer);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n\n            return bytesMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof BytesMessage){\n        BytesMessage bytesMessage=(BytesMessage) message;\n        try {\n            /**\n                 * 整体流程：\n                 *      1.创建一个空的字节数组，长度就是bytesMessage的长度\n                 *      2.把bytesMessage读入到空的字节数组中\n                 *      3.创建一个文件输出流，指定文件路径\n                 *      4.把字节数组中的数据写入到文件输出流中\n                 */\n            //1.设置缓存数组\n            byte[] buffer=new byte[(int)bytesMessage.getBodyLength()];\n            //2.把字节信息读入到缓存数组\n            bytesMessage.readBytes(buffer);\n            //3.构建文件输出流\n            FileOutputStream fos=new FileOutputStream(\"src/main/resources/static/photocopy.png\");\n            //4.把数据写出\n            fos.write(buffer);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**StreamMessage**\n\n发送：\n\n```java\npublic void ptpSender(){\n\n    jmsTemplate.send(\"springboot_queue\", new MessageCreator() {\n        @Override\n        public Message createMessage(Session session) throws JMSException {\n            StreamMessage streamMessage = session.createStreamMessage();\n            streamMessage.writeString(\"streamMessage演示\");\n            streamMessage.writeInt(20);\n            return streamMessage;\n        }\n    });\n}\n```\n\n接收：\n\n```java\n@JmsListener(destination = \"springboot_queue\")\npublic void receiveMessage(Message message){\n    if (message instanceof StreamMessage){\n        StreamMessage streamMessage=(StreamMessage) message;\n        try {\n            System.out.println(\"接收消息：\"+streamMessage.readString());\n            System.out.println(\"接收消息：\"+streamMessage.readInt());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n**JMS消息属性**\n\n我们可以给消息设置自定义属性，这个属性只要是为了给消息打标记，用于实现消息的过滤功能\n\n```java\nXXXMessage.setXXXProperty(\"Property\",Property);\n//例如：\ntextMessage.setStringProperty(\"订单\",\"order\");\n```\n\n#### 消息持久化\n\n消息持久化是保证消息不丢失的重要方式！！！\n\nActiveMQ提供了三种消息存储方式：\n\n1. 基于Memory消息存储-基于内存的消息存储（不常用）\n2. 基于日志消息存储方式，KahaDB是ActiveMQ的默认日志存储方式，它提供了容量的提升和恢复能力\n3. 基于JDBC的消息存储方式-数据存储于数据库（例如MySql）中\n\n> 注意：消费者消费了消息后，持久化的消息要被删除，防止消息被复用\n\n**基于Memory消息存储**\n\n要使用基于Memory消息存储，需要配置`spring.jms.template.delivery-mode=non_persistent`\n\n```properties\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n# false表示不信任自定义的对象，true表示信任。默认为false\nspring.activemq.packages.trust-all=true\n# 使用基于Memory消息存储\nspring.jms.template.delivery-mode=non_persistent\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n**基于日志消息存储方式**\n\n要使用基于日志消息存储方式，需要配置`spring.jms.template.delivery-mode=persistent`\n\n```properties\n# springboot与activemq整合配置\nspring.activemq.broker-url=tcp://192.168.25.181:61616\nspring.activemq.user=admin\nspring.activemq.password=admin\n# false表示不信任自定义的对象，true表示信任。默认为false\nspring.activemq.packages.trust-all=true\n# 使用基于日志消息存储方式\nspring.jms.template.delivery-mode=persistent\n\n# 指定发送模式 false是点对点模式  true是发布/订阅模式\nspring.jms.pub-sub-domain=false\n```\n\n存储位置：存储在ActiveMQ部署的服务器端的data目录下的kahaDB下\n\n**基于JDBC的消息存储方式**\n\n1. application.properties配置：\n\n```properties\nspring.jms.template.delivery-mode=persistent\n```\n\n2. 在ActiveMQ部署的主机上，路径：/usr/local/activemq/conf,修改activemq.xml文件\n\n```xml\n<!-- 配置 数据库连接池 -->\n<bean name=\"activemq-mysql\" class=\"com.alibaba.druid.pool.DruidDataSource\" destroy-method=\"clone\">\n    <property name=\"driverClassName\" value=\"com.mysql.jdbc.Driver\" />\n    <property name=\"url\" value=\"jdbc:mysql://192.168.31.140:3306/db_activimq\" />\n    <property name=\"username\" value=\"root\" />\n    <property name=\"password\" value=\"123456\" />\n</bean>\n\n<!-- dataSource的值就是数据库的id -->\n<persistenceAdapter>\n    <jdbcPersistenceAdapter dataSource=\"#activemq-mysql\"/>\n</persistenceAdapter>\n```\n\n具体的配置位置如图：\n\n![基于数据库的持久化-数据库连接池](基于数据库的持久化-数据库连接池.png)\n\n![基于数据库的持久化-配置](基于数据库的持久化-配置.png)\n\n3. 拷贝mysql和druid数据源的jar包到activemq部署主机的activemq的bin目录下\n\n```\nmysql-connector-java-5.1.28.jar\ndruid-1.0.9.jar\n```\n\n4. 重启activemq,重启前要开启数据库，并创建的有库db_activimq\n\n```powershell\n$ ./activemq restart\n```\n\n重启成功后，在数据库db-activemq库中就会新增3张表，其中表activemq_msgs记录的就是消息\n\n![db-activemq](db-activemq.png)\n\n#### ActiveMQ的消息事务\n\n消息事务是保证消息传递原子性的一个重要特性，和JDBC的事务特征类似\n\n一个事务性发送，基于一组消息，要么能够全部保证到达服务器，要么都不到达服务器\n\n生产者、消费者与消息服务器直接都支持事务性，但是ActiveMQ的事务主要偏向于生产者的应用，即使生产者的消息如果出现异常，所有消息都不能发送到ActiveMQ服务器\n\n##### 生产者应用事务\n\n**普通版本的事务控制**\n\n只需要在创建Session时，打开事务控制即可\n\n```java\n@Test\npublic void sendMessageTx(){\n    ConnectionFactory factory = jmsMessagingTemplate.getConnectionFactory();\n    Session session =null;\n    try {\n        Connection connection = factory.createConnection();\n        //创建session时，使用true打开事务控制\n        session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);\n        //创建生产者\n        MessageProducer producer = session.createProducer(session.createQueue(\"queue_tx\"));\n\n        //发送消息\n        for (int i=1;i<=10;i++){\n            TextMessage textMessage = session.createTextMessage(\"发送的消息：\" + i);\n            producer.send(textMessage);\n            //演示异常\n            if (i==4){\n                int j=10/0;\n            }\n        }\n        //注意：一旦开启事务，就必须使用commit进行事务提交，否则无法发送到MQ服务器\n        session.commit();\n    } catch (JMSException e) {\n        e.printStackTrace();\n        //如果出现异常，就回滚\n        try {\n            session.rollback();\n        } catch (JMSException ex) {\n            ex.printStackTrace();\n        }\n    }\n}\n```\n\n**Spring控制事务**\n\nActiveMQ配置类：com.hui.springbootactivemq.config.ActiveMQConfig\n\n> 不配置无法控制事务\n\n```java\npackage com.hui.springbootactivemq.config;\n\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jms.connection.JmsTransactionManager;\nimport org.springframework.transaction.PlatformTransactionManager;\n\nimport javax.jms.ConnectionFactory;\n\n@Configuration\npublic class ActiveMQConfig {\n\n    /**\n     * 添加jms事务管理器\n     */\n    @Bean\n    public PlatformTransactionManager createTransactionManager(@Qualifier(\"jmsConnectionFactory\") ConnectionFactory connectionFactory){\n        return new JmsTransactionManager(connectionFactory);\n    }\n}\n```\n\n事务版控制事务层：com.hui.springbootactivemq.service.MessageProducerService\n\n```java\npackage com.hui.springbootactivemq.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jms.core.JmsMessagingTemplate;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Service(\"messageProducerService\")\npublic class MessageProducerService {\n\n    @Autowired\n    private JmsMessagingTemplate jmsMessagingTemplate;\n\n    @Transactional\n    public void sendMessageTx(){\n        for (int i=1;i<=10;i++){\n            if (i==4){\n                int j=10/0;\n            }\n            jmsMessagingTemplate.convertAndSend(\"spring_queue_tx\",\"发送消息：\"+i);\n        }\n\n    }\n}\n```\n\n测试：\n\n```java\n@Autowired\nprivate MessageProducerService messageProducerService;\n\n@Test\npublic void sendMessageSpringTx(){\n    messageProducerService.sendMessageTx();\n}\n```\n\n##### 消费者应用事务\n\n消息监听器应用事务:com.hui.springbootactivemq.listener.MessageListener\n\n```java\npackage com.hui.springbootactivemq.listener;\n\nimport org.springframework.jms.annotation.JmsListener;\nimport org.springframework.stereotype.Component;\n\nimport javax.jms.*;\n\n/**\n * 用于监听消息类，既可用于队列监听，也可以用于主题监听\n */\n@Component\npublic class MessageListener {\n\n    @JmsListener(destination = \"springboot_queue\")\n    //如果要控制事务，需要加入session\n    public void receiveMessage(Message message,Session session){\n        if (message instanceof TextMessage){\n            TextMessage textMessage=(TextMessage) message;\n            try {\n                System.out.println(\"接收消息：\"+textMessage.getText());\n                \n                //提交事务\n                session.commit();\n            } catch (Exception e) {\n                e.printStackTrace();\n                //回滚事务\n                try {\n                    //一旦事务回滚，MQ会重发消息，一共重发6次\n                    session.rollback();\n                } catch (JMSException ex) {\n                    ex.printStackTrace();\n                }\n            }\n        }\n    }\n}\n```\n","slug":"2020-07-14-03-ActiveMQ高级讲解","published":1,"updated":"2020-07-14T15:43:05.457Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wr004n54tnpne39a9t","content":"<center><font size=\"4\" color=\"red\">ActiveMQ高级讲解</font></center>\n\n<a id=\"more\"></a>\n<h2 id=\"ActiveMQ消息组成与高级特性\"><a href=\"#ActiveMQ消息组成与高级特性\" class=\"headerlink\" title=\"ActiveMQ消息组成与高级特性\"></a>ActiveMQ消息组成与高级特性</h2><h4 id=\"JMS消息组成详解\"><a href=\"#JMS消息组成详解\" class=\"headerlink\" title=\"JMS消息组成详解\"></a>JMS消息组成详解</h4><p>整个JMS协议组成结构如下</p>\n<table>\n<thead>\n<tr>\n<th>结构</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JMS Provider</td>\n<td>消息中间件/消息服务器</td>\n</tr>\n<tr>\n<td>JMS Producer</td>\n<td>消息生产者</td>\n</tr>\n<tr>\n<td>JMS Consumer</td>\n<td>消息消费者</td>\n</tr>\n<tr>\n<td>JMS Message</td>\n<td>消息（重要）</td>\n</tr>\n</tbody>\n</table>\n<p>重点讲解JMS Message，其有三部分组成：</p>\n<ul>\n<li>消息头</li>\n<li>消息体</li>\n<li>消息属性</li>\n</ul>\n<h5 id=\"JMS消息头\"><a href=\"#JMS消息头\" class=\"headerlink\" title=\"JMS消息头\"></a>JMS消息头</h5><p>JMS消息头预定义了若干字段用于客户端与JMS提供者之间识别和发送消息，预编译如下：</p>\n<blockquote>\n<p>其中标黑的为重要的消息头</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>MessageID</strong></td>\n<td>唯一标识提供者发送的每一条消息，这个字段由提供者设置，不能修改。客户机只有在接收到消息后才能确实消息的Message ID</td>\n</tr>\n<tr>\n<td><strong>Destination</strong></td>\n<td>消息发送的队列方式和队列名称，在发送过程中由提供者设置</td>\n</tr>\n<tr>\n<td><strong>CorrelationID</strong></td>\n<td>通常用于链接响应消息与请求消息，由消息的JMS程序（代码）设置</td>\n</tr>\n<tr>\n<td>Timestamp</td>\n<td>提供者发送信息的时间，有提供者在发送过程中设置</td>\n</tr>\n<tr>\n<td>Reply To</td>\n<td>请求程序用它来指出回复消息应发送的地方，由发送消息的JMS程序设置</td>\n</tr>\n<tr>\n<td><strong>Expiration</strong></td>\n<td>消息失效的时间，值0表明消息不会过期，默认0</td>\n</tr>\n<tr>\n<td><strong>DeliveryMode</strong></td>\n<td>消息持久化，包括DeliveryMode.NON_PERSISTENT和DeliveryMode.PERSISTENT</td>\n</tr>\n<tr>\n<td><strong>Priority</strong></td>\n<td>消息的优先级。0-4表示普通消息，5-9表示加急消息。ActiveMQ不保证优先级高就一定先发送，只保证了加急消息必须先于普通消息发送。默认是4</td>\n</tr>\n<tr>\n<td>Redelivered</td>\n<td>消息的重发标志，false：代表消息是第一次发送。true：代表消息为重发消息</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>JMS程序用它来指出消息的类型</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要注意，在传送消息时，消息头的值有JMS提供者来设置，因此<strong>开发者使用以上setJMSXXX()方法分配的值会被忽略</strong>，即虽然设置了，但是无效。只有以下几个值可以由开发者设置</p>\n</blockquote>\n<p><strong>CorrelationID，Reply To，Type</strong></p>\n<p>发送方设置方式如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue2\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"springboot queue message2\"</span>);</span><br><span class=\"line\">            textMessage.setJMSCorrelationID(<span class=\"string\">\"abcdefg\"</span>);</span><br><span class=\"line\">            textMessage.setJMSExpiration(<span class=\"number\">3000</span>);</span><br><span class=\"line\">            textMessage.setJMSDeliveryMode(DeliveryMode.NON_PERSISTENT);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"消息发送成功\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收方直接使用getJMSXXX()获取就行了</p>\n<h5 id=\"JMS消息体\"><a href=\"#JMS消息体\" class=\"headerlink\" title=\"JMS消息体\"></a>JMS消息体</h5><p>在消息体中，JMS有5中类型的消息格式，让我们可以以不同的形式发送和接收消息，并提供了已有消息格式的兼容，不同的消息类型如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextMessage：一个字符串对象</span><br><span class=\"line\">MapMessage：一套名称-键值对</span><br><span class=\"line\">ObjectMessage：一个序列化的java对象</span><br><span class=\"line\">BytesMessage：一个字节的数据流</span><br><span class=\"line\">StreamMessage：Java原始值的数据流</span><br></pre></td></tr></table></figure>\n<p><strong>TextMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"springboot queue message2\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">        TextMessage textMessage = (TextMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+textMessage.getText());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>MapMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            MapMessage mapMessage = session.createMapMessage();</span><br><span class=\"line\">            <span class=\"comment\">//第一个是key，第二个是value</span></span><br><span class=\"line\">            mapMessage.setString(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"张三\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//第一个是key，第二个是value</span></span><br><span class=\"line\">            mapMessage.setInt(<span class=\"string\">\"age\"</span>,<span class=\"number\">13</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mapMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> MapMessage)&#123;</span><br><span class=\"line\">        MapMessage mapMessage=(MapMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+mapMessage.getString(<span class=\"string\">\"name\"</span>));</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+mapMessage.getString(<span class=\"string\">\"age\"</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>ObjectMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            User user=<span class=\"keyword\">new</span> User();</span><br><span class=\"line\">            user.setName(<span class=\"string\">\"李四\"</span>);</span><br><span class=\"line\">            user.setAge(<span class=\"number\">14</span>);</span><br><span class=\"line\">            <span class=\"comment\">//User对象必须实现序列化Serializable</span></span><br><span class=\"line\">            ObjectMessage objectMessage = session.createObjectMessage(user);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> objectMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> ObjectMessage)&#123;</span><br><span class=\"line\">        ObjectMessage objectMessage=(ObjectMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            User user=(User)objectMessage.getObject();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+user.getName());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+user.getAge());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：此时启动会报以下错误</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class com.hui.pojo.User! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes</span><br></pre></td></tr></table></figure>\n<p>原因是：ActiveMQ5.12后，为了安全考虑，ActiveMQ默认不接受自定义的序列化对象，需要将自定义的加入受信任的列表,即设置：<code>spring.activemq.packages.trust-all=true</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"># false表示不信任自定义的对象，true表示信任。默认为false</span><br><span class=\"line\">spring.activemq.packages.trust-all=true</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<p><strong>BytesMessage</strong></p>\n<p>演示把一个图片的流发送到消息队列，然后从消息队列读取</p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            BytesMessage bytesMessage = session.createBytesMessage();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">                     * 整体流程：</span></span><br><span class=\"line\"><span class=\"comment\">                     *      1.读取文件成流</span></span><br><span class=\"line\"><span class=\"comment\">                     *      2.创建一个空的字节数组，数组长度就是文件的字节长度</span></span><br><span class=\"line\"><span class=\"comment\">                     *      3.把文件流读入到字节数组中</span></span><br><span class=\"line\"><span class=\"comment\">                     *      4.把字节数组写入到bytesMessage中</span></span><br><span class=\"line\"><span class=\"comment\">                     */</span></span><br><span class=\"line\">                <span class=\"comment\">//1.读取文件</span></span><br><span class=\"line\">                File file=<span class=\"keyword\">new</span> File(<span class=\"string\">\"src/main/resources/static/photo.png\"</span>);</span><br><span class=\"line\">                <span class=\"comment\">//2.构建文件文件流</span></span><br><span class=\"line\">                FileInputStream fis=<span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\">                <span class=\"comment\">//3.把文件流写入到缓存数组中</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>)file.length()];</span><br><span class=\"line\">                fis.read(buffer);</span><br><span class=\"line\">                <span class=\"comment\">//4.把缓存输入写入到bytesMessage中</span></span><br><span class=\"line\">                bytesMessage.writeBytes(buffer);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> bytesMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> BytesMessage)&#123;</span><br><span class=\"line\">        BytesMessage bytesMessage=(BytesMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">                 * 整体流程：</span></span><br><span class=\"line\"><span class=\"comment\">                 *      1.创建一个空的字节数组，长度就是bytesMessage的长度</span></span><br><span class=\"line\"><span class=\"comment\">                 *      2.把bytesMessage读入到空的字节数组中</span></span><br><span class=\"line\"><span class=\"comment\">                 *      3.创建一个文件输出流，指定文件路径</span></span><br><span class=\"line\"><span class=\"comment\">                 *      4.把字节数组中的数据写入到文件输出流中</span></span><br><span class=\"line\"><span class=\"comment\">                 */</span></span><br><span class=\"line\">            <span class=\"comment\">//1.设置缓存数组</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>)bytesMessage.getBodyLength()];</span><br><span class=\"line\">            <span class=\"comment\">//2.把字节信息读入到缓存数组</span></span><br><span class=\"line\">            bytesMessage.readBytes(buffer);</span><br><span class=\"line\">            <span class=\"comment\">//3.构建文件输出流</span></span><br><span class=\"line\">            FileOutputStream fos=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"src/main/resources/static/photocopy.png\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//4.把数据写出</span></span><br><span class=\"line\">            fos.write(buffer);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>StreamMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            StreamMessage streamMessage = session.createStreamMessage();</span><br><span class=\"line\">            streamMessage.writeString(<span class=\"string\">\"streamMessage演示\"</span>);</span><br><span class=\"line\">            streamMessage.writeInt(<span class=\"number\">20</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> streamMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> StreamMessage)&#123;</span><br><span class=\"line\">        StreamMessage streamMessage=(StreamMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收消息：\"</span>+streamMessage.readString());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收消息：\"</span>+streamMessage.readInt());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>JMS消息属性</strong></p>\n<p>我们可以给消息设置自定义属性，这个属性只要是为了给消息打标记，用于实现消息的过滤功能</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XXXMessage.setXXXProperty(<span class=\"string\">\"Property\"</span>,Property);</span><br><span class=\"line\"><span class=\"comment\">//例如：</span></span><br><span class=\"line\">textMessage.setStringProperty(<span class=\"string\">\"订单\"</span>,<span class=\"string\">\"order\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"消息持久化\"><a href=\"#消息持久化\" class=\"headerlink\" title=\"消息持久化\"></a>消息持久化</h4><p>消息持久化是保证消息不丢失的重要方式！！！</p>\n<p>ActiveMQ提供了三种消息存储方式：</p>\n<ol>\n<li>基于Memory消息存储-基于内存的消息存储（不常用）</li>\n<li>基于日志消息存储方式，KahaDB是ActiveMQ的默认日志存储方式，它提供了容量的提升和恢复能力</li>\n<li>基于JDBC的消息存储方式-数据存储于数据库（例如MySql）中</li>\n</ol>\n<blockquote>\n<p>注意：消费者消费了消息后，持久化的消息要被删除，防止消息被复用</p>\n</blockquote>\n<p><strong>基于Memory消息存储</strong></p>\n<p>要使用基于Memory消息存储，需要配置<code>spring.jms.template.delivery-mode=non_persistent</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"># false表示不信任自定义的对象，true表示信任。默认为false</span><br><span class=\"line\">spring.activemq.packages.trust-all=true</span><br><span class=\"line\"># 使用基于Memory消息存储</span><br><span class=\"line\">spring.jms.template.delivery-mode=non_persistent</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<p><strong>基于日志消息存储方式</strong></p>\n<p>要使用基于日志消息存储方式，需要配置<code>spring.jms.template.delivery-mode=persistent</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"># false表示不信任自定义的对象，true表示信任。默认为false</span><br><span class=\"line\">spring.activemq.packages.trust-all=true</span><br><span class=\"line\"># 使用基于日志消息存储方式</span><br><span class=\"line\">spring.jms.template.delivery-mode=persistent</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<p>存储位置：存储在ActiveMQ部署的服务器端的data目录下的kahaDB下</p>\n<p><strong>基于JDBC的消息存储方式</strong></p>\n<ol>\n<li>application.properties配置：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.jms.template.delivery-mode=persistent</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在ActiveMQ部署的主机上，路径：/usr/local/activemq/conf,修改activemq.xml文件</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 配置 数据库连接池 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">\"activemq-mysql\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"clone\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://192.168.31.140:3306/db_activimq\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123456\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- dataSource的值就是数据库的id --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">persistenceAdapter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jdbcPersistenceAdapter</span> <span class=\"attr\">dataSource</span>=<span class=\"string\">\"#activemq-mysql\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">persistenceAdapter</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>具体的配置位置如图：</p>\n<p><img src=\"/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-数据库连接池.png\" alt=\"基于数据库的持久化-数据库连接池\"></p>\n<p><img src=\"/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-配置.png\" alt=\"基于数据库的持久化-配置\"></p>\n<ol start=\"3\">\n<li>拷贝mysql和druid数据源的jar包到activemq部署主机的activemq的bin目录下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql-connector-java-5.1.28.jar</span><br><span class=\"line\">druid-1.0.9.jar</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>重启activemq,重启前要开启数据库，并创建的有库db_activimq</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./activemq restart</span><br></pre></td></tr></table></figure>\n<p>重启成功后，在数据库db-activemq库中就会新增3张表，其中表activemq_msgs记录的就是消息</p>\n<p><img src=\"/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/db-activemq.png\" alt=\"db-activemq\"></p>\n<h4 id=\"ActiveMQ的消息事务\"><a href=\"#ActiveMQ的消息事务\" class=\"headerlink\" title=\"ActiveMQ的消息事务\"></a>ActiveMQ的消息事务</h4><p>消息事务是保证消息传递原子性的一个重要特性，和JDBC的事务特征类似</p>\n<p>一个事务性发送，基于一组消息，要么能够全部保证到达服务器，要么都不到达服务器</p>\n<p>生产者、消费者与消息服务器直接都支持事务性，但是ActiveMQ的事务主要偏向于生产者的应用，即使生产者的消息如果出现异常，所有消息都不能发送到ActiveMQ服务器</p>\n<h5 id=\"生产者应用事务\"><a href=\"#生产者应用事务\" class=\"headerlink\" title=\"生产者应用事务\"></a>生产者应用事务</h5><p><strong>普通版本的事务控制</strong></p>\n<p>只需要在创建Session时，打开事务控制即可</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessageTx</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ConnectionFactory factory = jmsMessagingTemplate.getConnectionFactory();</span><br><span class=\"line\">    Session session =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\">        <span class=\"comment\">//创建session时，使用true打开事务控制</span></span><br><span class=\"line\">        session = connection.createSession(<span class=\"keyword\">true</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\">        <span class=\"comment\">//创建生产者</span></span><br><span class=\"line\">        MessageProducer producer = session.createProducer(session.createQueue(<span class=\"string\">\"queue_tx\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//发送消息</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">            TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"发送的消息：\"</span> + i);</span><br><span class=\"line\">            producer.send(textMessage);</span><br><span class=\"line\">            <span class=\"comment\">//演示异常</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j=<span class=\"number\">10</span>/<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//注意：一旦开启事务，就必须使用commit进行事务提交，否则无法发送到MQ服务器</span></span><br><span class=\"line\">        session.commit();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"comment\">//如果出现异常，就回滚</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            session.rollback();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException ex) &#123;</span><br><span class=\"line\">            ex.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Spring控制事务</strong></p>\n<p>ActiveMQ配置类：com.hui.springbootactivemq.config.ActiveMQConfig</p>\n<blockquote>\n<p>不配置无法控制事务</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.connection.JmsTransactionManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.transaction.PlatformTransactionManager;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.ConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActiveMQConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加jms事务管理器</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PlatformTransactionManager <span class=\"title\">createTransactionManager</span><span class=\"params\">(@Qualifier(<span class=\"string\">\"jmsConnectionFactory\"</span>)</span> ConnectionFactory connectionFactory)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> JmsTransactionManager(connectionFactory);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>事务版控制事务层：com.hui.springbootactivemq.service.MessageProducerService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsMessagingTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span>(<span class=\"string\">\"messageProducerService\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageProducerService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsMessagingTemplate jmsMessagingTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessageTx</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j=<span class=\"number\">10</span>/<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            jmsMessagingTemplate.convertAndSend(<span class=\"string\">\"spring_queue_tx\"</span>,<span class=\"string\">\"发送消息：\"</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> MessageProducerService messageProducerService;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessageSpringTx</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    messageProducerService.sendMessageTx();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"消费者应用事务\"><a href=\"#消费者应用事务\" class=\"headerlink\" title=\"消费者应用事务\"></a>消费者应用事务</h5><p>消息监听器应用事务:com.hui.springbootactivemq.listener.MessageListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.annotation.JmsListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于监听消息类，既可用于队列监听，也可以用于主题监听</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">//如果要控制事务，需要加入session</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message,Session session)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"接收消息：\"</span>+textMessage.getText());</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">                session.commit();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                <span class=\"comment\">//回滚事务</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//一旦事务回滚，MQ会重发消息，一共重发6次</span></span><br><span class=\"line\">                    session.rollback();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (JMSException ex) &#123;</span><br><span class=\"line\">                    ex.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">ActiveMQ高级讲解</font></center>","more":"<h2 id=\"ActiveMQ消息组成与高级特性\"><a href=\"#ActiveMQ消息组成与高级特性\" class=\"headerlink\" title=\"ActiveMQ消息组成与高级特性\"></a>ActiveMQ消息组成与高级特性</h2><h4 id=\"JMS消息组成详解\"><a href=\"#JMS消息组成详解\" class=\"headerlink\" title=\"JMS消息组成详解\"></a>JMS消息组成详解</h4><p>整个JMS协议组成结构如下</p>\n<table>\n<thead>\n<tr>\n<th>结构</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>JMS Provider</td>\n<td>消息中间件/消息服务器</td>\n</tr>\n<tr>\n<td>JMS Producer</td>\n<td>消息生产者</td>\n</tr>\n<tr>\n<td>JMS Consumer</td>\n<td>消息消费者</td>\n</tr>\n<tr>\n<td>JMS Message</td>\n<td>消息（重要）</td>\n</tr>\n</tbody>\n</table>\n<p>重点讲解JMS Message，其有三部分组成：</p>\n<ul>\n<li>消息头</li>\n<li>消息体</li>\n<li>消息属性</li>\n</ul>\n<h5 id=\"JMS消息头\"><a href=\"#JMS消息头\" class=\"headerlink\" title=\"JMS消息头\"></a>JMS消息头</h5><p>JMS消息头预定义了若干字段用于客户端与JMS提供者之间识别和发送消息，预编译如下：</p>\n<blockquote>\n<p>其中标黑的为重要的消息头</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>MessageID</strong></td>\n<td>唯一标识提供者发送的每一条消息，这个字段由提供者设置，不能修改。客户机只有在接收到消息后才能确实消息的Message ID</td>\n</tr>\n<tr>\n<td><strong>Destination</strong></td>\n<td>消息发送的队列方式和队列名称，在发送过程中由提供者设置</td>\n</tr>\n<tr>\n<td><strong>CorrelationID</strong></td>\n<td>通常用于链接响应消息与请求消息，由消息的JMS程序（代码）设置</td>\n</tr>\n<tr>\n<td>Timestamp</td>\n<td>提供者发送信息的时间，有提供者在发送过程中设置</td>\n</tr>\n<tr>\n<td>Reply To</td>\n<td>请求程序用它来指出回复消息应发送的地方，由发送消息的JMS程序设置</td>\n</tr>\n<tr>\n<td><strong>Expiration</strong></td>\n<td>消息失效的时间，值0表明消息不会过期，默认0</td>\n</tr>\n<tr>\n<td><strong>DeliveryMode</strong></td>\n<td>消息持久化，包括DeliveryMode.NON_PERSISTENT和DeliveryMode.PERSISTENT</td>\n</tr>\n<tr>\n<td><strong>Priority</strong></td>\n<td>消息的优先级。0-4表示普通消息，5-9表示加急消息。ActiveMQ不保证优先级高就一定先发送，只保证了加急消息必须先于普通消息发送。默认是4</td>\n</tr>\n<tr>\n<td>Redelivered</td>\n<td>消息的重发标志，false：代表消息是第一次发送。true：代表消息为重发消息</td>\n</tr>\n<tr>\n<td>Type</td>\n<td>JMS程序用它来指出消息的类型</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>需要注意，在传送消息时，消息头的值有JMS提供者来设置，因此<strong>开发者使用以上setJMSXXX()方法分配的值会被忽略</strong>，即虽然设置了，但是无效。只有以下几个值可以由开发者设置</p>\n</blockquote>\n<p><strong>CorrelationID，Reply To，Type</strong></p>\n<p>发送方设置方式如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue2\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"springboot queue message2\"</span>);</span><br><span class=\"line\">            textMessage.setJMSCorrelationID(<span class=\"string\">\"abcdefg\"</span>);</span><br><span class=\"line\">            textMessage.setJMSExpiration(<span class=\"number\">3000</span>);</span><br><span class=\"line\">            textMessage.setJMSDeliveryMode(DeliveryMode.NON_PERSISTENT);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"消息发送成功\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收方直接使用getJMSXXX()获取就行了</p>\n<h5 id=\"JMS消息体\"><a href=\"#JMS消息体\" class=\"headerlink\" title=\"JMS消息体\"></a>JMS消息体</h5><p>在消息体中，JMS有5中类型的消息格式，让我们可以以不同的形式发送和接收消息，并提供了已有消息格式的兼容，不同的消息类型如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TextMessage：一个字符串对象</span><br><span class=\"line\">MapMessage：一套名称-键值对</span><br><span class=\"line\">ObjectMessage：一个序列化的java对象</span><br><span class=\"line\">BytesMessage：一个字节的数据流</span><br><span class=\"line\">StreamMessage：Java原始值的数据流</span><br></pre></td></tr></table></figure>\n<p><strong>TextMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"springboot queue message2\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> textMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">        TextMessage textMessage = (TextMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+textMessage.getText());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>MapMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            MapMessage mapMessage = session.createMapMessage();</span><br><span class=\"line\">            <span class=\"comment\">//第一个是key，第二个是value</span></span><br><span class=\"line\">            mapMessage.setString(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"张三\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//第一个是key，第二个是value</span></span><br><span class=\"line\">            mapMessage.setInt(<span class=\"string\">\"age\"</span>,<span class=\"number\">13</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mapMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> MapMessage)&#123;</span><br><span class=\"line\">        MapMessage mapMessage=(MapMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+mapMessage.getString(<span class=\"string\">\"name\"</span>));</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+mapMessage.getString(<span class=\"string\">\"age\"</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>ObjectMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            User user=<span class=\"keyword\">new</span> User();</span><br><span class=\"line\">            user.setName(<span class=\"string\">\"李四\"</span>);</span><br><span class=\"line\">            user.setAge(<span class=\"number\">14</span>);</span><br><span class=\"line\">            <span class=\"comment\">//User对象必须实现序列化Serializable</span></span><br><span class=\"line\">            ObjectMessage objectMessage = session.createObjectMessage(user);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> objectMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> ObjectMessage)&#123;</span><br><span class=\"line\">        ObjectMessage objectMessage=(ObjectMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            User user=(User)objectMessage.getObject();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+user.getName());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收到的消息：\"</span>+user.getAge());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：此时启动会报以下错误</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javax.jms.JMSException: Failed to build body from content. Serializable class not available to broker. Reason: java.lang.ClassNotFoundException: Forbidden class com.hui.pojo.User! This class is not trusted to be serialized as ObjectMessage payload. Please take a look at http://activemq.apache.org/objectmessage.html for more information on how to configure trusted classes</span><br></pre></td></tr></table></figure>\n<p>原因是：ActiveMQ5.12后，为了安全考虑，ActiveMQ默认不接受自定义的序列化对象，需要将自定义的加入受信任的列表,即设置：<code>spring.activemq.packages.trust-all=true</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"># false表示不信任自定义的对象，true表示信任。默认为false</span><br><span class=\"line\">spring.activemq.packages.trust-all=true</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<p><strong>BytesMessage</strong></p>\n<p>演示把一个图片的流发送到消息队列，然后从消息队列读取</p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            BytesMessage bytesMessage = session.createBytesMessage();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">                     * 整体流程：</span></span><br><span class=\"line\"><span class=\"comment\">                     *      1.读取文件成流</span></span><br><span class=\"line\"><span class=\"comment\">                     *      2.创建一个空的字节数组，数组长度就是文件的字节长度</span></span><br><span class=\"line\"><span class=\"comment\">                     *      3.把文件流读入到字节数组中</span></span><br><span class=\"line\"><span class=\"comment\">                     *      4.把字节数组写入到bytesMessage中</span></span><br><span class=\"line\"><span class=\"comment\">                     */</span></span><br><span class=\"line\">                <span class=\"comment\">//1.读取文件</span></span><br><span class=\"line\">                File file=<span class=\"keyword\">new</span> File(<span class=\"string\">\"src/main/resources/static/photo.png\"</span>);</span><br><span class=\"line\">                <span class=\"comment\">//2.构建文件文件流</span></span><br><span class=\"line\">                FileInputStream fis=<span class=\"keyword\">new</span> FileInputStream(file);</span><br><span class=\"line\">                <span class=\"comment\">//3.把文件流写入到缓存数组中</span></span><br><span class=\"line\">                <span class=\"keyword\">byte</span>[] buffer=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>)file.length()];</span><br><span class=\"line\">                fis.read(buffer);</span><br><span class=\"line\">                <span class=\"comment\">//4.把缓存输入写入到bytesMessage中</span></span><br><span class=\"line\">                bytesMessage.writeBytes(buffer);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> bytesMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> BytesMessage)&#123;</span><br><span class=\"line\">        BytesMessage bytesMessage=(BytesMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">                 * 整体流程：</span></span><br><span class=\"line\"><span class=\"comment\">                 *      1.创建一个空的字节数组，长度就是bytesMessage的长度</span></span><br><span class=\"line\"><span class=\"comment\">                 *      2.把bytesMessage读入到空的字节数组中</span></span><br><span class=\"line\"><span class=\"comment\">                 *      3.创建一个文件输出流，指定文件路径</span></span><br><span class=\"line\"><span class=\"comment\">                 *      4.把字节数组中的数据写入到文件输出流中</span></span><br><span class=\"line\"><span class=\"comment\">                 */</span></span><br><span class=\"line\">            <span class=\"comment\">//1.设置缓存数组</span></span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer=<span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[(<span class=\"keyword\">int</span>)bytesMessage.getBodyLength()];</span><br><span class=\"line\">            <span class=\"comment\">//2.把字节信息读入到缓存数组</span></span><br><span class=\"line\">            bytesMessage.readBytes(buffer);</span><br><span class=\"line\">            <span class=\"comment\">//3.构建文件输出流</span></span><br><span class=\"line\">            FileOutputStream fos=<span class=\"keyword\">new</span> FileOutputStream(<span class=\"string\">\"src/main/resources/static/photocopy.png\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//4.把数据写出</span></span><br><span class=\"line\">            fos.write(buffer);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>StreamMessage</strong></p>\n<p>发送：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ptpSender</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    jmsTemplate.send(<span class=\"string\">\"springboot_queue\"</span>, <span class=\"keyword\">new</span> MessageCreator() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> Message <span class=\"title\">createMessage</span><span class=\"params\">(Session session)</span> <span class=\"keyword\">throws</span> JMSException </span>&#123;</span><br><span class=\"line\">            StreamMessage streamMessage = session.createStreamMessage();</span><br><span class=\"line\">            streamMessage.writeString(<span class=\"string\">\"streamMessage演示\"</span>);</span><br><span class=\"line\">            streamMessage.writeInt(<span class=\"number\">20</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> streamMessage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>接收：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> StreamMessage)&#123;</span><br><span class=\"line\">        StreamMessage streamMessage=(StreamMessage) message;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收消息：\"</span>+streamMessage.readString());</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"接收消息：\"</span>+streamMessage.readInt());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>JMS消息属性</strong></p>\n<p>我们可以给消息设置自定义属性，这个属性只要是为了给消息打标记，用于实现消息的过滤功能</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XXXMessage.setXXXProperty(<span class=\"string\">\"Property\"</span>,Property);</span><br><span class=\"line\"><span class=\"comment\">//例如：</span></span><br><span class=\"line\">textMessage.setStringProperty(<span class=\"string\">\"订单\"</span>,<span class=\"string\">\"order\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"消息持久化\"><a href=\"#消息持久化\" class=\"headerlink\" title=\"消息持久化\"></a>消息持久化</h4><p>消息持久化是保证消息不丢失的重要方式！！！</p>\n<p>ActiveMQ提供了三种消息存储方式：</p>\n<ol>\n<li>基于Memory消息存储-基于内存的消息存储（不常用）</li>\n<li>基于日志消息存储方式，KahaDB是ActiveMQ的默认日志存储方式，它提供了容量的提升和恢复能力</li>\n<li>基于JDBC的消息存储方式-数据存储于数据库（例如MySql）中</li>\n</ol>\n<blockquote>\n<p>注意：消费者消费了消息后，持久化的消息要被删除，防止消息被复用</p>\n</blockquote>\n<p><strong>基于Memory消息存储</strong></p>\n<p>要使用基于Memory消息存储，需要配置<code>spring.jms.template.delivery-mode=non_persistent</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"># false表示不信任自定义的对象，true表示信任。默认为false</span><br><span class=\"line\">spring.activemq.packages.trust-all=true</span><br><span class=\"line\"># 使用基于Memory消息存储</span><br><span class=\"line\">spring.jms.template.delivery-mode=non_persistent</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<p><strong>基于日志消息存储方式</strong></p>\n<p>要使用基于日志消息存储方式，需要配置<code>spring.jms.template.delivery-mode=persistent</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># springboot与activemq整合配置</span><br><span class=\"line\">spring.activemq.broker-url=tcp://192.168.25.181:61616</span><br><span class=\"line\">spring.activemq.user=admin</span><br><span class=\"line\">spring.activemq.password=admin</span><br><span class=\"line\"># false表示不信任自定义的对象，true表示信任。默认为false</span><br><span class=\"line\">spring.activemq.packages.trust-all=true</span><br><span class=\"line\"># 使用基于日志消息存储方式</span><br><span class=\"line\">spring.jms.template.delivery-mode=persistent</span><br><span class=\"line\"></span><br><span class=\"line\"># 指定发送模式 false是点对点模式  true是发布/订阅模式</span><br><span class=\"line\">spring.jms.pub-sub-domain=false</span><br></pre></td></tr></table></figure>\n<p>存储位置：存储在ActiveMQ部署的服务器端的data目录下的kahaDB下</p>\n<p><strong>基于JDBC的消息存储方式</strong></p>\n<ol>\n<li>application.properties配置：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.jms.template.delivery-mode=persistent</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在ActiveMQ部署的主机上，路径：/usr/local/activemq/conf,修改activemq.xml文件</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 配置 数据库连接池 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">bean</span> <span class=\"attr\">name</span>=<span class=\"string\">\"activemq-mysql\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"com.alibaba.druid.pool.DruidDataSource\"</span> <span class=\"attr\">destroy-method</span>=<span class=\"string\">\"clone\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"driverClassName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"com.mysql.jdbc.Driver\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"url\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"jdbc:mysql://192.168.31.140:3306/db_activimq\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"username\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"root\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"123456\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">bean</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- dataSource的值就是数据库的id --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">persistenceAdapter</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">jdbcPersistenceAdapter</span> <span class=\"attr\">dataSource</span>=<span class=\"string\">\"#activemq-mysql\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">persistenceAdapter</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>具体的配置位置如图：</p>\n<p><img src=\"/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-数据库连接池.png\" alt=\"基于数据库的持久化-数据库连接池\"></p>\n<p><img src=\"/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-配置.png\" alt=\"基于数据库的持久化-配置\"></p>\n<ol start=\"3\">\n<li>拷贝mysql和druid数据源的jar包到activemq部署主机的activemq的bin目录下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql-connector-java-5.1.28.jar</span><br><span class=\"line\">druid-1.0.9.jar</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>重启activemq,重启前要开启数据库，并创建的有库db_activimq</li>\n</ol>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ./activemq restart</span><br></pre></td></tr></table></figure>\n<p>重启成功后，在数据库db-activemq库中就会新增3张表，其中表activemq_msgs记录的就是消息</p>\n<p><img src=\"/2020/07/15/2020-07-14-03-ActiveMQ高级讲解/db-activemq.png\" alt=\"db-activemq\"></p>\n<h4 id=\"ActiveMQ的消息事务\"><a href=\"#ActiveMQ的消息事务\" class=\"headerlink\" title=\"ActiveMQ的消息事务\"></a>ActiveMQ的消息事务</h4><p>消息事务是保证消息传递原子性的一个重要特性，和JDBC的事务特征类似</p>\n<p>一个事务性发送，基于一组消息，要么能够全部保证到达服务器，要么都不到达服务器</p>\n<p>生产者、消费者与消息服务器直接都支持事务性，但是ActiveMQ的事务主要偏向于生产者的应用，即使生产者的消息如果出现异常，所有消息都不能发送到ActiveMQ服务器</p>\n<h5 id=\"生产者应用事务\"><a href=\"#生产者应用事务\" class=\"headerlink\" title=\"生产者应用事务\"></a>生产者应用事务</h5><p><strong>普通版本的事务控制</strong></p>\n<p>只需要在创建Session时，打开事务控制即可</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessageTx</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    ConnectionFactory factory = jmsMessagingTemplate.getConnectionFactory();</span><br><span class=\"line\">    Session session =<span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        Connection connection = factory.createConnection();</span><br><span class=\"line\">        <span class=\"comment\">//创建session时，使用true打开事务控制</span></span><br><span class=\"line\">        session = connection.createSession(<span class=\"keyword\">true</span>, Session.AUTO_ACKNOWLEDGE);</span><br><span class=\"line\">        <span class=\"comment\">//创建生产者</span></span><br><span class=\"line\">        MessageProducer producer = session.createProducer(session.createQueue(<span class=\"string\">\"queue_tx\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//发送消息</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">            TextMessage textMessage = session.createTextMessage(<span class=\"string\">\"发送的消息：\"</span> + i);</span><br><span class=\"line\">            producer.send(textMessage);</span><br><span class=\"line\">            <span class=\"comment\">//演示异常</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j=<span class=\"number\">10</span>/<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//注意：一旦开启事务，就必须使用commit进行事务提交，否则无法发送到MQ服务器</span></span><br><span class=\"line\">        session.commit();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (JMSException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">        <span class=\"comment\">//如果出现异常，就回滚</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            session.rollback();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (JMSException ex) &#123;</span><br><span class=\"line\">            ex.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>Spring控制事务</strong></p>\n<p>ActiveMQ配置类：com.hui.springbootactivemq.config.ActiveMQConfig</p>\n<blockquote>\n<p>不配置无法控制事务</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.config;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.connection.JmsTransactionManager;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.transaction.PlatformTransactionManager;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.ConnectionFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ActiveMQConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 添加jms事务管理器</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PlatformTransactionManager <span class=\"title\">createTransactionManager</span><span class=\"params\">(@Qualifier(<span class=\"string\">\"jmsConnectionFactory\"</span>)</span> ConnectionFactory connectionFactory)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> JmsTransactionManager(connectionFactory);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>事务版控制事务层：com.hui.springbootactivemq.service.MessageProducerService</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.core.JmsMessagingTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Service;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Service</span>(<span class=\"string\">\"messageProducerService\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageProducerService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JmsMessagingTemplate jmsMessagingTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Transactional</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessageTx</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">10</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i==<span class=\"number\">4</span>)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> j=<span class=\"number\">10</span>/<span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            jmsMessagingTemplate.convertAndSend(<span class=\"string\">\"spring_queue_tx\"</span>,<span class=\"string\">\"发送消息：\"</span>+i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>测试：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> MessageProducerService messageProducerService;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Test</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessageSpringTx</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    messageProducerService.sendMessageTx();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"消费者应用事务\"><a href=\"#消费者应用事务\" class=\"headerlink\" title=\"消费者应用事务\"></a>消费者应用事务</h5><p>消息监听器应用事务:com.hui.springbootactivemq.listener.MessageListener</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.hui.springbootactivemq.listener;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.jms.annotation.JmsListener;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.jms.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 用于监听消息类，既可用于队列监听，也可以用于主题监听</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MessageListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@JmsListener</span>(destination = <span class=\"string\">\"springboot_queue\"</span>)</span><br><span class=\"line\">    <span class=\"comment\">//如果要控制事务，需要加入session</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">receiveMessage</span><span class=\"params\">(Message message,Session session)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (message <span class=\"keyword\">instanceof</span> TextMessage)&#123;</span><br><span class=\"line\">            TextMessage textMessage=(TextMessage) message;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"接收消息：\"</span>+textMessage.getText());</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">//提交事务</span></span><br><span class=\"line\">                session.commit();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">                <span class=\"comment\">//回滚事务</span></span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//一旦事务回滚，MQ会重发消息，一共重发6次</span></span><br><span class=\"line\">                    session.rollback();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (JMSException ex) &#123;</span><br><span class=\"line\">                    ex.printStackTrace();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Ubuntu Install Oracle","date":"2019-05-29T16:54:48.000Z","_content":"\n<center><font size=4 color=\"red\">Ubuntu 18.04 Docker 安装 Oracle Database</font></center>\n\n<!--more-->\n\n# 使用docker安装oracle\n\n## 登录docker\n\n```shell\ndocker login\n```\n\n相应的输入注册的docker用户名和密码，如果没有注册，先去docker官网注册\n\nhttps://hub.docker.com\n\n## 下载oracle镜像\n\n拉取oracle镜像\n\n```shell\ndocker pull deepdiver/docker-oracle-xe-11g\n```\n\n运行oracle\n\n```shell\ndocker run -d -p 49160:22 -p 49161:1521 deepdiver/docker-oracle-xe-11g\n```\n\n查询oracle镜像是否已经存在\n\n```shell\ndocker ps\n```\n\n显示如下就说明镜像已经存在了\n\n```shell\nCONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS              PORTS                                                      NAMES\ncc6bc8d8aa17        deepdiver/docker-oracle-xe-11g   \"/bin/sh -c 'sed -i …\"   16 seconds ago      Up 11 seconds       8080/tcp, 0.0.0.0:49160->22/tcp, 0.0.0.0:49161->1521/tcp   hardcore_engelbart\n```\n\n将容器的名称重新命名为oracle\n\n```shell\ndocker rename hardcore_engelbart oracle\n```\n\n进入oracle的容器\n\n```shell\ndocker exec -it oracle bash\n```\n\n进入oracle\n\n```shell\nsqlplus /nolog\n```\n\n使用system进入oracle\n\n```shell\nconnect system\n```\n\n会提示输入密码，密码为：oracle\n\n然后出现以下信息\n\n```shell\nERROR:\nORA-28002: the password will expire within 7 days\n\n\nConnected.\n```\n\n这个密码只能适用7天，因此需要修改密码,退出oracle的system，在oracle容器里：\n\n先给oracle权限\n\n```shell\nsu oracle\n```\n\n以sysdba的方式进入oracle\n\n```shell\nsqlplus / as sysdba\n```\n\n修改密码时间权限\n\n```sql\nalter profile default limit password_life_time unlimited;\n```\n\n查询修改后的密码配置情况\n\n```sql\nselect * from dba_profiles s where s.profile='DEFAULT' and resource_name='PASSWORD_LIFE_TIME';\n```\n如果DEFAULT为unlimit就是配置成功了\n\n## 远程登录方式\n\n```shell\nConnection Type:Basic\nport:49161\nService Name:xe\nService Name的类型:SID\nRole:Default\nUser name:system\npassword:oracle\n```\n\n## Mac下载SQL*Plus和Basic\n\n默认Mac下已经下载了连接oracle的工具，我下载的是Navicat Premium\n\n下载SQL*Plus和Basic链接：\n\nhttp://www.oracle.com/technetwork/topics/intel-macsoft-096467.html\n\n下载内容：\n\ninstantclient-basic-macos.x64–11.2.0.4.0.zip\ninstantclient-sqlplus-macos.x64–11.2.0.4.0.zip\n\ncd到下载内容所在的文件夹下\n\n把下载好的文件放到~/Library/Caches/Homebrew下\n\n```shell\nmv instantclient-basic-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew\nmv instantclient-sqlplus-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew\n```\n\n执行以下命令\n\n```shell\n$ brew tap InstantClientTap/instantclient\n$ brew install instantclient-basic\n$ brew install instantclient-sqlplus\n```\n\n在运行brew install instantclient-basic和brew install instantclient-sqlplus命令时，也许会出现错误提示信息，要求对instantclient-basic-macos.x64–11.2.0.4.0.zip和instantclient-sqlplus-macos.x64–11.2.0.4.0.zip改名并移动到~/Library/Caches/Homebrew/Download下。复制要修改的名称改名并复制就可\n\n例如：\n\n```shell\nTo this location (a specific filename in homebrew cache directory):\n\n  /Users/wanghui/Library/Caches/Homebrew/downloads/1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b--instantclient-basic-macos.x64-18.1.0.0.0.zip\n```\n\n进入~/Library/Caches/Homebrew，将instantclient-basic-macos.x64–11.2.0.4.0.zip修改为1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b--instantclient-basic-macos.x64-18.1.0.0.0.zip，然后移动到~/Library/Caches/Homebrew/downloads\n\n## 配置Navicat Premium\n\nNavicat Premium --> Preferences --> Environment\n\n默认的安装路径\n\n`/usr/local/Cellar/instantclient-sqlplus/18.1.0.0.0`\n\n将其填入\n\n![](oracle.png)\n\n这个是我本人的\n\n个人oracle账号：\n\nConnect database with following setting:\n\n    hostname: localhost\n    port: 1521\n    sid: EE\n    service name: EE.oracle.docker\n    username: system\n    password: oracle\n\nTo connect using sqlplus:\n\n<pre>\nsqlplus system/oracle@//localhost:1521/EE.oracle.docker\n</pre>\n\nPassword for SYS & SYSTEM:\n\n    oracle\n\n\n","source":"_posts/Ubuntu-Install-Oracle.md","raw":"---\ntitle: Ubuntu Install Oracle\ndate: 2019-05-29 16:54:48\ncategories:\n- Oracle\ntags: \n- ubuntu\n- install\n- oracle\n---\n\n<center><font size=4 color=\"red\">Ubuntu 18.04 Docker 安装 Oracle Database</font></center>\n\n<!--more-->\n\n# 使用docker安装oracle\n\n## 登录docker\n\n```shell\ndocker login\n```\n\n相应的输入注册的docker用户名和密码，如果没有注册，先去docker官网注册\n\nhttps://hub.docker.com\n\n## 下载oracle镜像\n\n拉取oracle镜像\n\n```shell\ndocker pull deepdiver/docker-oracle-xe-11g\n```\n\n运行oracle\n\n```shell\ndocker run -d -p 49160:22 -p 49161:1521 deepdiver/docker-oracle-xe-11g\n```\n\n查询oracle镜像是否已经存在\n\n```shell\ndocker ps\n```\n\n显示如下就说明镜像已经存在了\n\n```shell\nCONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS              PORTS                                                      NAMES\ncc6bc8d8aa17        deepdiver/docker-oracle-xe-11g   \"/bin/sh -c 'sed -i …\"   16 seconds ago      Up 11 seconds       8080/tcp, 0.0.0.0:49160->22/tcp, 0.0.0.0:49161->1521/tcp   hardcore_engelbart\n```\n\n将容器的名称重新命名为oracle\n\n```shell\ndocker rename hardcore_engelbart oracle\n```\n\n进入oracle的容器\n\n```shell\ndocker exec -it oracle bash\n```\n\n进入oracle\n\n```shell\nsqlplus /nolog\n```\n\n使用system进入oracle\n\n```shell\nconnect system\n```\n\n会提示输入密码，密码为：oracle\n\n然后出现以下信息\n\n```shell\nERROR:\nORA-28002: the password will expire within 7 days\n\n\nConnected.\n```\n\n这个密码只能适用7天，因此需要修改密码,退出oracle的system，在oracle容器里：\n\n先给oracle权限\n\n```shell\nsu oracle\n```\n\n以sysdba的方式进入oracle\n\n```shell\nsqlplus / as sysdba\n```\n\n修改密码时间权限\n\n```sql\nalter profile default limit password_life_time unlimited;\n```\n\n查询修改后的密码配置情况\n\n```sql\nselect * from dba_profiles s where s.profile='DEFAULT' and resource_name='PASSWORD_LIFE_TIME';\n```\n如果DEFAULT为unlimit就是配置成功了\n\n## 远程登录方式\n\n```shell\nConnection Type:Basic\nport:49161\nService Name:xe\nService Name的类型:SID\nRole:Default\nUser name:system\npassword:oracle\n```\n\n## Mac下载SQL*Plus和Basic\n\n默认Mac下已经下载了连接oracle的工具，我下载的是Navicat Premium\n\n下载SQL*Plus和Basic链接：\n\nhttp://www.oracle.com/technetwork/topics/intel-macsoft-096467.html\n\n下载内容：\n\ninstantclient-basic-macos.x64–11.2.0.4.0.zip\ninstantclient-sqlplus-macos.x64–11.2.0.4.0.zip\n\ncd到下载内容所在的文件夹下\n\n把下载好的文件放到~/Library/Caches/Homebrew下\n\n```shell\nmv instantclient-basic-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew\nmv instantclient-sqlplus-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew\n```\n\n执行以下命令\n\n```shell\n$ brew tap InstantClientTap/instantclient\n$ brew install instantclient-basic\n$ brew install instantclient-sqlplus\n```\n\n在运行brew install instantclient-basic和brew install instantclient-sqlplus命令时，也许会出现错误提示信息，要求对instantclient-basic-macos.x64–11.2.0.4.0.zip和instantclient-sqlplus-macos.x64–11.2.0.4.0.zip改名并移动到~/Library/Caches/Homebrew/Download下。复制要修改的名称改名并复制就可\n\n例如：\n\n```shell\nTo this location (a specific filename in homebrew cache directory):\n\n  /Users/wanghui/Library/Caches/Homebrew/downloads/1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b--instantclient-basic-macos.x64-18.1.0.0.0.zip\n```\n\n进入~/Library/Caches/Homebrew，将instantclient-basic-macos.x64–11.2.0.4.0.zip修改为1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b--instantclient-basic-macos.x64-18.1.0.0.0.zip，然后移动到~/Library/Caches/Homebrew/downloads\n\n## 配置Navicat Premium\n\nNavicat Premium --> Preferences --> Environment\n\n默认的安装路径\n\n`/usr/local/Cellar/instantclient-sqlplus/18.1.0.0.0`\n\n将其填入\n\n![](oracle.png)\n\n这个是我本人的\n\n个人oracle账号：\n\nConnect database with following setting:\n\n    hostname: localhost\n    port: 1521\n    sid: EE\n    service name: EE.oracle.docker\n    username: system\n    password: oracle\n\nTo connect using sqlplus:\n\n<pre>\nsqlplus system/oracle@//localhost:1521/EE.oracle.docker\n</pre>\n\nPassword for SYS & SYSTEM:\n\n    oracle\n\n\n","slug":"Ubuntu-Install-Oracle","published":1,"updated":"2019-08-10T04:35:46.764Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6ws004q54tn2lme16m6","content":"<center><font size=\"4\" color=\"red\">Ubuntu 18.04 Docker 安装 Oracle Database</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"使用docker安装oracle\"><a href=\"#使用docker安装oracle\" class=\"headerlink\" title=\"使用docker安装oracle\"></a>使用docker安装oracle</h1><h2 id=\"登录docker\"><a href=\"#登录docker\" class=\"headerlink\" title=\"登录docker\"></a>登录docker</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login</span><br></pre></td></tr></table></figure>\n<p>相应的输入注册的docker用户名和密码，如果没有注册，先去docker官网注册</p>\n<p><a href=\"https://hub.docker.com\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com</a></p>\n<h2 id=\"下载oracle镜像\"><a href=\"#下载oracle镜像\" class=\"headerlink\" title=\"下载oracle镜像\"></a>下载oracle镜像</h2><p>拉取oracle镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull deepdiver/docker-oracle-xe-11g</span><br></pre></td></tr></table></figure>\n<p>运行oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 49160:22 -p 49161:1521 deepdiver/docker-oracle-xe-11g</span><br></pre></td></tr></table></figure>\n<p>查询oracle镜像是否已经存在</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<p>显示如下就说明镜像已经存在了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS              PORTS                                                      NAMES</span><br><span class=\"line\">cc6bc8d8aa17        deepdiver/docker-oracle-xe-11g   \"/bin/sh -c 'sed -i …\"   16 seconds ago      Up 11 seconds       8080/tcp, 0.0.0.0:49160-&gt;22/tcp, 0.0.0.0:49161-&gt;1521/tcp   hardcore_engelbart</span><br></pre></td></tr></table></figure>\n<p>将容器的名称重新命名为oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rename hardcore_engelbart oracle</span><br></pre></td></tr></table></figure>\n<p>进入oracle的容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it oracle bash</span><br></pre></td></tr></table></figure>\n<p>进入oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlplus /nolog</span><br></pre></td></tr></table></figure>\n<p>使用system进入oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connect system</span><br></pre></td></tr></table></figure>\n<p>会提示输入密码，密码为：oracle</p>\n<p>然后出现以下信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR:</span><br><span class=\"line\">ORA-28002: the password will expire within 7 days</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Connected.</span><br></pre></td></tr></table></figure>\n<p>这个密码只能适用7天，因此需要修改密码,退出oracle的system，在oracle容器里：</p>\n<p>先给oracle权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su oracle</span><br></pre></td></tr></table></figure>\n<p>以sysdba的方式进入oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlplus / as sysdba</span><br></pre></td></tr></table></figure>\n<p>修改密码时间权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> profile <span class=\"keyword\">default</span> <span class=\"keyword\">limit</span> password_life_time <span class=\"keyword\">unlimited</span>;</span><br></pre></td></tr></table></figure>\n<p>查询修改后的密码配置情况</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> dba_profiles s <span class=\"keyword\">where</span> s.profile=<span class=\"string\">'DEFAULT'</span> <span class=\"keyword\">and</span> resource_name=<span class=\"string\">'PASSWORD_LIFE_TIME'</span>;</span><br></pre></td></tr></table></figure>\n<p>如果DEFAULT为unlimit就是配置成功了</p>\n<h2 id=\"远程登录方式\"><a href=\"#远程登录方式\" class=\"headerlink\" title=\"远程登录方式\"></a>远程登录方式</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Connection Type:Basic</span><br><span class=\"line\">port:49161</span><br><span class=\"line\">Service Name:xe</span><br><span class=\"line\">Service Name的类型:SID</span><br><span class=\"line\">Role:Default</span><br><span class=\"line\">User name:system</span><br><span class=\"line\">password:oracle</span><br></pre></td></tr></table></figure>\n<h2 id=\"Mac下载SQL-Plus和Basic\"><a href=\"#Mac下载SQL-Plus和Basic\" class=\"headerlink\" title=\"Mac下载SQL*Plus和Basic\"></a>Mac下载SQL*Plus和Basic</h2><p>默认Mac下已经下载了连接oracle的工具，我下载的是Navicat Premium</p>\n<p>下载SQL*Plus和Basic链接：</p>\n<p><a href=\"http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html</a></p>\n<p>下载内容：</p>\n<p>instantclient-basic-macos.x64–11.2.0.4.0.zip<br>instantclient-sqlplus-macos.x64–11.2.0.4.0.zip</p>\n<p>cd到下载内容所在的文件夹下</p>\n<p>把下载好的文件放到~/Library/Caches/Homebrew下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv instantclient-basic-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew</span><br><span class=\"line\">mv instantclient-sqlplus-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew</span><br></pre></td></tr></table></figure>\n<p>执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew tap InstantClientTap/instantclient</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install instantclient-basic</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install instantclient-sqlplus</span><br></pre></td></tr></table></figure>\n<p>在运行brew install instantclient-basic和brew install instantclient-sqlplus命令时，也许会出现错误提示信息，要求对instantclient-basic-macos.x64–11.2.0.4.0.zip和instantclient-sqlplus-macos.x64–11.2.0.4.0.zip改名并移动到~/Library/Caches/Homebrew/Download下。复制要修改的名称改名并复制就可</p>\n<p>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">To this location (a specific filename in homebrew cache directory):</span><br><span class=\"line\"></span><br><span class=\"line\">  /Users/wanghui/Library/Caches/Homebrew/downloads/1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b--instantclient-basic-macos.x64-18.1.0.0.0.zip</span><br></pre></td></tr></table></figure>\n<p>进入~/Library/Caches/Homebrew，将instantclient-basic-macos.x64–11.2.0.4.0.zip修改为1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b–instantclient-basic-macos.x64-18.1.0.0.0.zip，然后移动到~/Library/Caches/Homebrew/downloads</p>\n<h2 id=\"配置Navicat-Premium\"><a href=\"#配置Navicat-Premium\" class=\"headerlink\" title=\"配置Navicat Premium\"></a>配置Navicat Premium</h2><p>Navicat Premium –&gt; Preferences –&gt; Environment</p>\n<p>默认的安装路径</p>\n<p><code>/usr/local/Cellar/instantclient-sqlplus/18.1.0.0.0</code></p>\n<p>将其填入</p>\n<p><img src=\"/2019/05/30/Ubuntu-Install-Oracle/oracle.png\" alt></p>\n<p>这个是我本人的</p>\n<p>个人oracle账号：</p>\n<p>Connect database with following setting:</p>\n<pre><code>hostname: localhost\nport: 1521\nsid: EE\nservice name: EE.oracle.docker\nusername: system\npassword: oracle\n</code></pre><p>To connect using sqlplus:</p>\n<pre>\nsqlplus system/oracle@//localhost:1521/EE.oracle.docker\n</pre>\n\n<p>Password for SYS &amp; SYSTEM:</p>\n<pre><code>oracle\n</code></pre>","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">Ubuntu 18.04 Docker 安装 Oracle Database</font></center>","more":"<h1 id=\"使用docker安装oracle\"><a href=\"#使用docker安装oracle\" class=\"headerlink\" title=\"使用docker安装oracle\"></a>使用docker安装oracle</h1><h2 id=\"登录docker\"><a href=\"#登录docker\" class=\"headerlink\" title=\"登录docker\"></a>登录docker</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login</span><br></pre></td></tr></table></figure>\n<p>相应的输入注册的docker用户名和密码，如果没有注册，先去docker官网注册</p>\n<p><a href=\"https://hub.docker.com\" target=\"_blank\" rel=\"noopener\">https://hub.docker.com</a></p>\n<h2 id=\"下载oracle镜像\"><a href=\"#下载oracle镜像\" class=\"headerlink\" title=\"下载oracle镜像\"></a>下载oracle镜像</h2><p>拉取oracle镜像</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull deepdiver/docker-oracle-xe-11g</span><br></pre></td></tr></table></figure>\n<p>运行oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d -p 49160:22 -p 49161:1521 deepdiver/docker-oracle-xe-11g</span><br></pre></td></tr></table></figure>\n<p>查询oracle镜像是否已经存在</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps</span><br></pre></td></tr></table></figure>\n<p>显示如下就说明镜像已经存在了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CONTAINER ID        IMAGE                            COMMAND                  CREATED             STATUS              PORTS                                                      NAMES</span><br><span class=\"line\">cc6bc8d8aa17        deepdiver/docker-oracle-xe-11g   \"/bin/sh -c 'sed -i …\"   16 seconds ago      Up 11 seconds       8080/tcp, 0.0.0.0:49160-&gt;22/tcp, 0.0.0.0:49161-&gt;1521/tcp   hardcore_engelbart</span><br></pre></td></tr></table></figure>\n<p>将容器的名称重新命名为oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker rename hardcore_engelbart oracle</span><br></pre></td></tr></table></figure>\n<p>进入oracle的容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it oracle bash</span><br></pre></td></tr></table></figure>\n<p>进入oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlplus /nolog</span><br></pre></td></tr></table></figure>\n<p>使用system进入oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connect system</span><br></pre></td></tr></table></figure>\n<p>会提示输入密码，密码为：oracle</p>\n<p>然后出现以下信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR:</span><br><span class=\"line\">ORA-28002: the password will expire within 7 days</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Connected.</span><br></pre></td></tr></table></figure>\n<p>这个密码只能适用7天，因此需要修改密码,退出oracle的system，在oracle容器里：</p>\n<p>先给oracle权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su oracle</span><br></pre></td></tr></table></figure>\n<p>以sysdba的方式进入oracle</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlplus / as sysdba</span><br></pre></td></tr></table></figure>\n<p>修改密码时间权限</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> profile <span class=\"keyword\">default</span> <span class=\"keyword\">limit</span> password_life_time <span class=\"keyword\">unlimited</span>;</span><br></pre></td></tr></table></figure>\n<p>查询修改后的密码配置情况</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> dba_profiles s <span class=\"keyword\">where</span> s.profile=<span class=\"string\">'DEFAULT'</span> <span class=\"keyword\">and</span> resource_name=<span class=\"string\">'PASSWORD_LIFE_TIME'</span>;</span><br></pre></td></tr></table></figure>\n<p>如果DEFAULT为unlimit就是配置成功了</p>\n<h2 id=\"远程登录方式\"><a href=\"#远程登录方式\" class=\"headerlink\" title=\"远程登录方式\"></a>远程登录方式</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Connection Type:Basic</span><br><span class=\"line\">port:49161</span><br><span class=\"line\">Service Name:xe</span><br><span class=\"line\">Service Name的类型:SID</span><br><span class=\"line\">Role:Default</span><br><span class=\"line\">User name:system</span><br><span class=\"line\">password:oracle</span><br></pre></td></tr></table></figure>\n<h2 id=\"Mac下载SQL-Plus和Basic\"><a href=\"#Mac下载SQL-Plus和Basic\" class=\"headerlink\" title=\"Mac下载SQL*Plus和Basic\"></a>Mac下载SQL*Plus和Basic</h2><p>默认Mac下已经下载了连接oracle的工具，我下载的是Navicat Premium</p>\n<p>下载SQL*Plus和Basic链接：</p>\n<p><a href=\"http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html</a></p>\n<p>下载内容：</p>\n<p>instantclient-basic-macos.x64–11.2.0.4.0.zip<br>instantclient-sqlplus-macos.x64–11.2.0.4.0.zip</p>\n<p>cd到下载内容所在的文件夹下</p>\n<p>把下载好的文件放到~/Library/Caches/Homebrew下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv instantclient-basic-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew</span><br><span class=\"line\">mv instantclient-sqlplus-macos.x64-18.1.0.0.0.zip ~/Library/Caches/Homebrew</span><br></pre></td></tr></table></figure>\n<p>执行以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> brew tap InstantClientTap/instantclient</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install instantclient-basic</span><br><span class=\"line\"><span class=\"meta\">$</span> brew install instantclient-sqlplus</span><br></pre></td></tr></table></figure>\n<p>在运行brew install instantclient-basic和brew install instantclient-sqlplus命令时，也许会出现错误提示信息，要求对instantclient-basic-macos.x64–11.2.0.4.0.zip和instantclient-sqlplus-macos.x64–11.2.0.4.0.zip改名并移动到~/Library/Caches/Homebrew/Download下。复制要修改的名称改名并复制就可</p>\n<p>例如：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">To this location (a specific filename in homebrew cache directory):</span><br><span class=\"line\"></span><br><span class=\"line\">  /Users/wanghui/Library/Caches/Homebrew/downloads/1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b--instantclient-basic-macos.x64-18.1.0.0.0.zip</span><br></pre></td></tr></table></figure>\n<p>进入~/Library/Caches/Homebrew，将instantclient-basic-macos.x64–11.2.0.4.0.zip修改为1ace9ca784e431112e837a769fc89eae38ad1489165c38aa698139d25d8fd96b–instantclient-basic-macos.x64-18.1.0.0.0.zip，然后移动到~/Library/Caches/Homebrew/downloads</p>\n<h2 id=\"配置Navicat-Premium\"><a href=\"#配置Navicat-Premium\" class=\"headerlink\" title=\"配置Navicat Premium\"></a>配置Navicat Premium</h2><p>Navicat Premium –&gt; Preferences –&gt; Environment</p>\n<p>默认的安装路径</p>\n<p><code>/usr/local/Cellar/instantclient-sqlplus/18.1.0.0.0</code></p>\n<p>将其填入</p>\n<p><img src=\"/2019/05/30/Ubuntu-Install-Oracle/oracle.png\" alt></p>\n<p>这个是我本人的</p>\n<p>个人oracle账号：</p>\n<p>Connect database with following setting:</p>\n<pre><code>hostname: localhost\nport: 1521\nsid: EE\nservice name: EE.oracle.docker\nusername: system\npassword: oracle\n</code></pre><p>To connect using sqlplus:</p>\n<pre>\nsqlplus system/oracle@//localhost:1521/EE.oracle.docker\n</pre>\n\n<p>Password for SYS &amp; SYSTEM:</p>\n<pre><code>oracle\n</code></pre>"},{"title":"Ubuntu18.04 VM","date":"2019-05-28T11:12:24.000Z","_content":"\n<center><font size=4 color=\"red\">配置Ubuntu 18.04基础镜像</font></center>\n\n<!--more-->\n\n# 在Windows上安装Ubuntu18.04虚拟机\n\n## 下载Ubuntu18.04的镜像\n\n下载链接\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/\n\n下载的版本\nubuntu-18.04.2-live-server-amd64.iso\n\n## 在VMware里安装虚拟机\n\n安装过程省略,这里主要讲解开启虚拟机后的一些设置\n\n修改镜像地址,改成阿里云的.\nhttps://mirrors.aliyun.com/ubuntu/\n\n![](aaa.jpg)\n\n选择：Use An Entire Disk And Set Up LVM\n\n![](03.jpg)\n\n![](05.jpg)\n\n![](07.jpg)\n\n选择安装openSSH,如果这个没有安装,进入到系统后,要执行以下命令安装\n`$ apt install openssh-server`\n\n其它的都不用配置,直接done\n\n## 开启虚拟机root用户权限\n\n设置root的密码并开启root权限\n\n```shell\n$ sudo passwd\n$ su root\n```\n\n修改root的权限配置文件\n`vi /etc/ssh/sshd_config`\n\n修改如下\n\n![](01.jpg)\n\n重启ssh服务\n`service ssh restart`\n\n在Xshell里使用root用户登录\n\n![](04.jpg)\n\n![](06.jpg)\n\n## 设置静态ip和DNS\n\n编辑配置文件\n\n`/etc/netplan/50-cloud-init.yaml`\n\n```shell\nnetwork:\n    ethernets:\n        ens33:\n         addresses: [192.168.10.129/24]\n         gateway4: 192.168.10.2\n         nameservers:\n           addresses:\n           - 114.114.114.114\n           - 114.114.115.115\n    version: 2\n```\n\n使其生效\n`netplan apply`\n\n配置文件里的ens33是和`ip a`里得到的一致\n\n![](02.jpg)\n\n> 注意这个配置文件的格式,一个空格都可能导致配置出错\n\n启动service\n`systemctl start systemd-resolved.service`\n\n设置为开机自启动\n`systemctl enable systemd-resolved.service`\n\n重启\n`reboot`\n\n试验网络\n`ping www.baidu.com`\n\n检查ip地址是否是自己设置的静态ip\n`ip a`\n\n做个快照\n`鼠标右键虚拟机-->快照-->拍摄快照`\n\n## 交换空间的设置\n\n关闭交换空间\n`swapoff -a`\n\n避免开机启动交换空间\n`vi /etc/fstab`\n修饰掉带swap的一行\n\n关闭防火墙\n`ufw disable`\n\n关机\n`shotdown -h now`\n\n开机做个快照\n`鼠标右键虚拟机-->快照-->拍摄快照`\n\n## 安装docker\n\n使用APT安装docker,方法来源:\n\nhttps://funtl.com/zh/service-mesh-kubernetes/%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87.html#%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85-docker\n\n```shell\n# 更新软件源\nsudo apt-get update\n# 安装所需依赖\nsudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common\n# 安装 GPG 证书\ncurl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -\n# 新增软件源信息\nsudo add-apt-repository \"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable\"\n# 再次更新软件源\nsudo apt-get -y update\n# 安装 Docker CE 版\nsudo apt-get -y install docker-ce\n```\n\n验证\n```shell\nroot@yytubuntu:~# docker version\nClient:\n Version:           18.09.6\n API version:       1.39\n Go version:        go1.10.8\n Git commit:        481bc77\n Built:             Sat May  4 02:35:57 2019\n OS/Arch:           linux/amd64\n Experimental:      false\n\nServer: Docker Engine - Community\n Engine:\n  Version:          18.09.6\n  API version:      1.39 (minimum version 1.12)\n  Go version:       go1.10.8\n  Git commit:       481bc77\n  Built:            Sat May  4 01:59:36 2019\n  OS/Arch:          linux/amd64\n  Experimental:     false\n```\n\n## 配置加速\n\n方法来源地址:\n\nhttps://cr.console.aliyun.com/cn-hangzhou/instances/mirrors?accounttraceid=9b8e4567-a62c-4723-95e0-6fcb5b44c87f\n\n逐条输入以下命令\n\n```shell\nsudo mkdir -p /etc/docker\n\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://veoukc4z.mirror.aliyuncs.com\"]\n}\nEOF\n\nsudo systemctl daemon-reload\n\nsudo systemctl restart docker\n```\n\n查看是否配置成功\n\n输入`docker info`,出现以下信息就是配置成功了\n\n```shell\nRegistry Mirrors:\nhttps://veoukc4z.mirror.aliyuncs.com/\n```\n\n## 使用pip安装docker-compose\n\n获取get-pip.py方法来源,安装这个是为了安装pip:\n\nhttps://pip.pypa.io/en/stable/installing/\n\n获取get-pip.py命令\n\n```shell\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\n```\n\n要安装get-pip.py需要python,get-pip.py不能和本机自带的python相和谐,所以要自己安装python\n\n使用ppa安装python\n\n安装ppa\n\n`sudo add-apt-repository ppa:deadsnakes/ppa`\n\n安装python\n\n`apt install python3.7`\n\n安装get-pip.py\n\n`python3.7 get-pip.py`\n\n更改pip的镜像源\n\n更改方式的地址来源:\n\nhttps://mirrors.tuna.tsinghua.edu.cn/help/pypi\n\n使用临时镜像升级pip,提高网速\n\n```shell\n$ pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U\n```\n\n升级pip到最新版本后进行配置\n\n```shell\n$ pip install pip -U\n$ pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n安装docker-compose\n\n`$ pip install -U docker-compose`\n\n删除get-pip.py\n\n```shell\n$ ls\n$ rm -fr get-pip.py\n```\n\n关机\n\n`$ reboot`\n\n开机做个快照\n\n## 克隆\n\n克隆不是新创建一个虚拟机,而是在原有虚拟机上做改变,不会影响最初的base虚拟机\n\n`鼠标右键-->管理-->克隆`\n\n## 导出OVF格式文件\n\n导出的文件删除了DVD驱动,导入到新的VMware后要添加DVD驱动和镜像\n\n\n","source":"_posts/Ubuntu18-04-VM.md","raw":"---\ntitle: Ubuntu18.04 VM\ndate: 2019-05-28 11:12:24\ncategories:\n- 虚拟机\ntags: \n- ubuntu18.04\n- install\n- VM\n---\n\n<center><font size=4 color=\"red\">配置Ubuntu 18.04基础镜像</font></center>\n\n<!--more-->\n\n# 在Windows上安装Ubuntu18.04虚拟机\n\n## 下载Ubuntu18.04的镜像\n\n下载链接\nhttps://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/\n\n下载的版本\nubuntu-18.04.2-live-server-amd64.iso\n\n## 在VMware里安装虚拟机\n\n安装过程省略,这里主要讲解开启虚拟机后的一些设置\n\n修改镜像地址,改成阿里云的.\nhttps://mirrors.aliyun.com/ubuntu/\n\n![](aaa.jpg)\n\n选择：Use An Entire Disk And Set Up LVM\n\n![](03.jpg)\n\n![](05.jpg)\n\n![](07.jpg)\n\n选择安装openSSH,如果这个没有安装,进入到系统后,要执行以下命令安装\n`$ apt install openssh-server`\n\n其它的都不用配置,直接done\n\n## 开启虚拟机root用户权限\n\n设置root的密码并开启root权限\n\n```shell\n$ sudo passwd\n$ su root\n```\n\n修改root的权限配置文件\n`vi /etc/ssh/sshd_config`\n\n修改如下\n\n![](01.jpg)\n\n重启ssh服务\n`service ssh restart`\n\n在Xshell里使用root用户登录\n\n![](04.jpg)\n\n![](06.jpg)\n\n## 设置静态ip和DNS\n\n编辑配置文件\n\n`/etc/netplan/50-cloud-init.yaml`\n\n```shell\nnetwork:\n    ethernets:\n        ens33:\n         addresses: [192.168.10.129/24]\n         gateway4: 192.168.10.2\n         nameservers:\n           addresses:\n           - 114.114.114.114\n           - 114.114.115.115\n    version: 2\n```\n\n使其生效\n`netplan apply`\n\n配置文件里的ens33是和`ip a`里得到的一致\n\n![](02.jpg)\n\n> 注意这个配置文件的格式,一个空格都可能导致配置出错\n\n启动service\n`systemctl start systemd-resolved.service`\n\n设置为开机自启动\n`systemctl enable systemd-resolved.service`\n\n重启\n`reboot`\n\n试验网络\n`ping www.baidu.com`\n\n检查ip地址是否是自己设置的静态ip\n`ip a`\n\n做个快照\n`鼠标右键虚拟机-->快照-->拍摄快照`\n\n## 交换空间的设置\n\n关闭交换空间\n`swapoff -a`\n\n避免开机启动交换空间\n`vi /etc/fstab`\n修饰掉带swap的一行\n\n关闭防火墙\n`ufw disable`\n\n关机\n`shotdown -h now`\n\n开机做个快照\n`鼠标右键虚拟机-->快照-->拍摄快照`\n\n## 安装docker\n\n使用APT安装docker,方法来源:\n\nhttps://funtl.com/zh/service-mesh-kubernetes/%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87.html#%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85-docker\n\n```shell\n# 更新软件源\nsudo apt-get update\n# 安装所需依赖\nsudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common\n# 安装 GPG 证书\ncurl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -\n# 新增软件源信息\nsudo add-apt-repository \"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable\"\n# 再次更新软件源\nsudo apt-get -y update\n# 安装 Docker CE 版\nsudo apt-get -y install docker-ce\n```\n\n验证\n```shell\nroot@yytubuntu:~# docker version\nClient:\n Version:           18.09.6\n API version:       1.39\n Go version:        go1.10.8\n Git commit:        481bc77\n Built:             Sat May  4 02:35:57 2019\n OS/Arch:           linux/amd64\n Experimental:      false\n\nServer: Docker Engine - Community\n Engine:\n  Version:          18.09.6\n  API version:      1.39 (minimum version 1.12)\n  Go version:       go1.10.8\n  Git commit:       481bc77\n  Built:            Sat May  4 01:59:36 2019\n  OS/Arch:          linux/amd64\n  Experimental:     false\n```\n\n## 配置加速\n\n方法来源地址:\n\nhttps://cr.console.aliyun.com/cn-hangzhou/instances/mirrors?accounttraceid=9b8e4567-a62c-4723-95e0-6fcb5b44c87f\n\n逐条输入以下命令\n\n```shell\nsudo mkdir -p /etc/docker\n\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://veoukc4z.mirror.aliyuncs.com\"]\n}\nEOF\n\nsudo systemctl daemon-reload\n\nsudo systemctl restart docker\n```\n\n查看是否配置成功\n\n输入`docker info`,出现以下信息就是配置成功了\n\n```shell\nRegistry Mirrors:\nhttps://veoukc4z.mirror.aliyuncs.com/\n```\n\n## 使用pip安装docker-compose\n\n获取get-pip.py方法来源,安装这个是为了安装pip:\n\nhttps://pip.pypa.io/en/stable/installing/\n\n获取get-pip.py命令\n\n```shell\ncurl https://bootstrap.pypa.io/get-pip.py -o get-pip.py\n```\n\n要安装get-pip.py需要python,get-pip.py不能和本机自带的python相和谐,所以要自己安装python\n\n使用ppa安装python\n\n安装ppa\n\n`sudo add-apt-repository ppa:deadsnakes/ppa`\n\n安装python\n\n`apt install python3.7`\n\n安装get-pip.py\n\n`python3.7 get-pip.py`\n\n更改pip的镜像源\n\n更改方式的地址来源:\n\nhttps://mirrors.tuna.tsinghua.edu.cn/help/pypi\n\n使用临时镜像升级pip,提高网速\n\n```shell\n$ pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U\n```\n\n升级pip到最新版本后进行配置\n\n```shell\n$ pip install pip -U\n$ pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple\n```\n\n安装docker-compose\n\n`$ pip install -U docker-compose`\n\n删除get-pip.py\n\n```shell\n$ ls\n$ rm -fr get-pip.py\n```\n\n关机\n\n`$ reboot`\n\n开机做个快照\n\n## 克隆\n\n克隆不是新创建一个虚拟机,而是在原有虚拟机上做改变,不会影响最初的base虚拟机\n\n`鼠标右键-->管理-->克隆`\n\n## 导出OVF格式文件\n\n导出的文件删除了DVD驱动,导入到新的VMware后要添加DVD驱动和镜像\n\n\n","slug":"Ubuntu18-04-VM","published":1,"updated":"2020-04-04T14:11:39.635Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckcm4u6wu004u54tn4wzhdwa2","content":"<center><font size=\"4\" color=\"red\">配置Ubuntu 18.04基础镜像</font></center>\n\n<a id=\"more\"></a>\n<h1 id=\"在Windows上安装Ubuntu18-04虚拟机\"><a href=\"#在Windows上安装Ubuntu18-04虚拟机\" class=\"headerlink\" title=\"在Windows上安装Ubuntu18.04虚拟机\"></a>在Windows上安装Ubuntu18.04虚拟机</h1><h2 id=\"下载Ubuntu18-04的镜像\"><a href=\"#下载Ubuntu18-04的镜像\" class=\"headerlink\" title=\"下载Ubuntu18.04的镜像\"></a>下载Ubuntu18.04的镜像</h2><p>下载链接<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/</a></p>\n<p>下载的版本<br>ubuntu-18.04.2-live-server-amd64.iso</p>\n<h2 id=\"在VMware里安装虚拟机\"><a href=\"#在VMware里安装虚拟机\" class=\"headerlink\" title=\"在VMware里安装虚拟机\"></a>在VMware里安装虚拟机</h2><p>安装过程省略,这里主要讲解开启虚拟机后的一些设置</p>\n<p>修改镜像地址,改成阿里云的.<br><a href=\"https://mirrors.aliyun.com/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.aliyun.com/ubuntu/</a></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/aaa.jpg\" alt></p>\n<p>选择：Use An Entire Disk And Set Up LVM</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/03.jpg\" alt></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/05.jpg\" alt></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/07.jpg\" alt></p>\n<p>选择安装openSSH,如果这个没有安装,进入到系统后,要执行以下命令安装<br><code>$ apt install openssh-server</code></p>\n<p>其它的都不用配置,直接done</p>\n<h2 id=\"开启虚拟机root用户权限\"><a href=\"#开启虚拟机root用户权限\" class=\"headerlink\" title=\"开启虚拟机root用户权限\"></a>开启虚拟机root用户权限</h2><p>设置root的密码并开启root权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo passwd</span><br><span class=\"line\"><span class=\"meta\">$</span> su root</span><br></pre></td></tr></table></figure>\n<p>修改root的权限配置文件<br><code>vi /etc/ssh/sshd_config</code></p>\n<p>修改如下</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/01.jpg\" alt></p>\n<p>重启ssh服务<br><code>service ssh restart</code></p>\n<p>在Xshell里使用root用户登录</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/04.jpg\" alt></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/06.jpg\" alt></p>\n<h2 id=\"设置静态ip和DNS\"><a href=\"#设置静态ip和DNS\" class=\"headerlink\" title=\"设置静态ip和DNS\"></a>设置静态ip和DNS</h2><p>编辑配置文件</p>\n<p><code>/etc/netplan/50-cloud-init.yaml</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">network:</span><br><span class=\"line\">    ethernets:</span><br><span class=\"line\">        ens33:</span><br><span class=\"line\">         addresses: [192.168.10.129/24]</span><br><span class=\"line\">         gateway4: 192.168.10.2</span><br><span class=\"line\">         nameservers:</span><br><span class=\"line\">           addresses:</span><br><span class=\"line\">           - 114.114.114.114</span><br><span class=\"line\">           - 114.114.115.115</span><br><span class=\"line\">    version: 2</span><br></pre></td></tr></table></figure>\n<p>使其生效<br><code>netplan apply</code></p>\n<p>配置文件里的ens33是和<code>ip a</code>里得到的一致</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/02.jpg\" alt></p>\n<blockquote>\n<p>注意这个配置文件的格式,一个空格都可能导致配置出错</p>\n</blockquote>\n<p>启动service<br><code>systemctl start systemd-resolved.service</code></p>\n<p>设置为开机自启动<br><code>systemctl enable systemd-resolved.service</code></p>\n<p>重启<br><code>reboot</code></p>\n<p>试验网络<br><code>ping www.baidu.com</code></p>\n<p>检查ip地址是否是自己设置的静态ip<br><code>ip a</code></p>\n<p>做个快照<br><code>鼠标右键虚拟机--&gt;快照--&gt;拍摄快照</code></p>\n<h2 id=\"交换空间的设置\"><a href=\"#交换空间的设置\" class=\"headerlink\" title=\"交换空间的设置\"></a>交换空间的设置</h2><p>关闭交换空间<br><code>swapoff -a</code></p>\n<p>避免开机启动交换空间<br><code>vi /etc/fstab</code><br>修饰掉带swap的一行</p>\n<p>关闭防火墙<br><code>ufw disable</code></p>\n<p>关机<br><code>shotdown -h now</code></p>\n<p>开机做个快照<br><code>鼠标右键虚拟机--&gt;快照--&gt;拍摄快照</code></p>\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><p>使用APT安装docker,方法来源:</p>\n<p><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87.html#%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85-docker\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87.html#%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85-docker</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 更新软件源</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装所需依赖</span><br><span class=\"line\">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 GPG 证书</span><br><span class=\"line\">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\"><span class=\"meta\">#</span> 新增软件源信息</span><br><span class=\"line\">sudo add-apt-repository \"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable\"</span><br><span class=\"line\"><span class=\"meta\">#</span> 再次更新软件源</span><br><span class=\"line\">sudo apt-get -y update</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 Docker CE 版</span><br><span class=\"line\">sudo apt-get -y install docker-ce</span><br></pre></td></tr></table></figure>\n<p>验证<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@yytubuntu:~# docker version</span><br><span class=\"line\">Client:</span><br><span class=\"line\"> Version:           18.09.6</span><br><span class=\"line\"> API version:       1.39</span><br><span class=\"line\"> Go version:        go1.10.8</span><br><span class=\"line\"> Git commit:        481bc77</span><br><span class=\"line\"> Built:             Sat May  4 02:35:57 2019</span><br><span class=\"line\"> OS/Arch:           linux/amd64</span><br><span class=\"line\"> Experimental:      false</span><br><span class=\"line\"></span><br><span class=\"line\">Server: Docker Engine - Community</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:          18.09.6</span><br><span class=\"line\">  API version:      1.39 (minimum version 1.12)</span><br><span class=\"line\">  Go version:       go1.10.8</span><br><span class=\"line\">  Git commit:       481bc77</span><br><span class=\"line\">  Built:            Sat May  4 01:59:36 2019</span><br><span class=\"line\">  OS/Arch:          linux/amd64</span><br><span class=\"line\">  Experimental:     false</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置加速\"><a href=\"#配置加速\" class=\"headerlink\" title=\"配置加速\"></a>配置加速</h2><p>方法来源地址:</p>\n<p><a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors?accounttraceid=9b8e4567-a62c-4723-95e0-6fcb5b44c87f\" target=\"_blank\" rel=\"noopener\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors?accounttraceid=9b8e4567-a62c-4723-95e0-6fcb5b44c87f</a></p>\n<p>逐条输入以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\"></span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  \"registry-mirrors\": [\"https://veoukc4z.mirror.aliyuncs.com\"]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\"></span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<p>查看是否配置成功</p>\n<p>输入<code>docker info</code>,出现以下信息就是配置成功了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Registry Mirrors:</span><br><span class=\"line\">https://veoukc4z.mirror.aliyuncs.com/</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用pip安装docker-compose\"><a href=\"#使用pip安装docker-compose\" class=\"headerlink\" title=\"使用pip安装docker-compose\"></a>使用pip安装docker-compose</h2><p>获取get-pip.py方法来源,安装这个是为了安装pip:</p>\n<p><a href=\"https://pip.pypa.io/en/stable/installing/\" target=\"_blank\" rel=\"noopener\">https://pip.pypa.io/en/stable/installing/</a></p>\n<p>获取get-pip.py命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br></pre></td></tr></table></figure>\n<p>要安装get-pip.py需要python,get-pip.py不能和本机自带的python相和谐,所以要自己安装python</p>\n<p>使用ppa安装python</p>\n<p>安装ppa</p>\n<p><code>sudo add-apt-repository ppa:deadsnakes/ppa</code></p>\n<p>安装python</p>\n<p><code>apt install python3.7</code></p>\n<p>安装get-pip.py</p>\n<p><code>python3.7 get-pip.py</code></p>\n<p>更改pip的镜像源</p>\n<p>更改方式的地址来源:</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/pypi\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/help/pypi</a></p>\n<p>使用临时镜像升级pip,提高网速</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br></pre></td></tr></table></figure>\n<p>升级pip到最新版本后进行配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> pip install pip -U</span><br><span class=\"line\"><span class=\"meta\">$</span> pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n<p>安装docker-compose</p>\n<p><code>$ pip install -U docker-compose</code></p>\n<p>删除get-pip.py</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ls</span><br><span class=\"line\"><span class=\"meta\">$</span> rm -fr get-pip.py</span><br></pre></td></tr></table></figure>\n<p>关机</p>\n<p><code>$ reboot</code></p>\n<p>开机做个快照</p>\n<h2 id=\"克隆\"><a href=\"#克隆\" class=\"headerlink\" title=\"克隆\"></a>克隆</h2><p>克隆不是新创建一个虚拟机,而是在原有虚拟机上做改变,不会影响最初的base虚拟机</p>\n<p><code>鼠标右键--&gt;管理--&gt;克隆</code></p>\n<h2 id=\"导出OVF格式文件\"><a href=\"#导出OVF格式文件\" class=\"headerlink\" title=\"导出OVF格式文件\"></a>导出OVF格式文件</h2><p>导出的文件删除了DVD驱动,导入到新的VMware后要添加DVD驱动和镜像</p>\n","site":{"data":{}},"excerpt":"<center><font size=\"4\" color=\"red\">配置Ubuntu 18.04基础镜像</font></center>","more":"<h1 id=\"在Windows上安装Ubuntu18-04虚拟机\"><a href=\"#在Windows上安装Ubuntu18-04虚拟机\" class=\"headerlink\" title=\"在Windows上安装Ubuntu18.04虚拟机\"></a>在Windows上安装Ubuntu18.04虚拟机</h1><h2 id=\"下载Ubuntu18-04的镜像\"><a href=\"#下载Ubuntu18-04的镜像\" class=\"headerlink\" title=\"下载Ubuntu18.04的镜像\"></a>下载Ubuntu18.04的镜像</h2><p>下载链接<br><a href=\"https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-releases/18.04/</a></p>\n<p>下载的版本<br>ubuntu-18.04.2-live-server-amd64.iso</p>\n<h2 id=\"在VMware里安装虚拟机\"><a href=\"#在VMware里安装虚拟机\" class=\"headerlink\" title=\"在VMware里安装虚拟机\"></a>在VMware里安装虚拟机</h2><p>安装过程省略,这里主要讲解开启虚拟机后的一些设置</p>\n<p>修改镜像地址,改成阿里云的.<br><a href=\"https://mirrors.aliyun.com/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.aliyun.com/ubuntu/</a></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/aaa.jpg\" alt></p>\n<p>选择：Use An Entire Disk And Set Up LVM</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/03.jpg\" alt></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/05.jpg\" alt></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/07.jpg\" alt></p>\n<p>选择安装openSSH,如果这个没有安装,进入到系统后,要执行以下命令安装<br><code>$ apt install openssh-server</code></p>\n<p>其它的都不用配置,直接done</p>\n<h2 id=\"开启虚拟机root用户权限\"><a href=\"#开启虚拟机root用户权限\" class=\"headerlink\" title=\"开启虚拟机root用户权限\"></a>开启虚拟机root用户权限</h2><p>设置root的密码并开启root权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> sudo passwd</span><br><span class=\"line\"><span class=\"meta\">$</span> su root</span><br></pre></td></tr></table></figure>\n<p>修改root的权限配置文件<br><code>vi /etc/ssh/sshd_config</code></p>\n<p>修改如下</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/01.jpg\" alt></p>\n<p>重启ssh服务<br><code>service ssh restart</code></p>\n<p>在Xshell里使用root用户登录</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/04.jpg\" alt></p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/06.jpg\" alt></p>\n<h2 id=\"设置静态ip和DNS\"><a href=\"#设置静态ip和DNS\" class=\"headerlink\" title=\"设置静态ip和DNS\"></a>设置静态ip和DNS</h2><p>编辑配置文件</p>\n<p><code>/etc/netplan/50-cloud-init.yaml</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">network:</span><br><span class=\"line\">    ethernets:</span><br><span class=\"line\">        ens33:</span><br><span class=\"line\">         addresses: [192.168.10.129/24]</span><br><span class=\"line\">         gateway4: 192.168.10.2</span><br><span class=\"line\">         nameservers:</span><br><span class=\"line\">           addresses:</span><br><span class=\"line\">           - 114.114.114.114</span><br><span class=\"line\">           - 114.114.115.115</span><br><span class=\"line\">    version: 2</span><br></pre></td></tr></table></figure>\n<p>使其生效<br><code>netplan apply</code></p>\n<p>配置文件里的ens33是和<code>ip a</code>里得到的一致</p>\n<p><img src=\"/2019/05/28/Ubuntu18-04-VM/02.jpg\" alt></p>\n<blockquote>\n<p>注意这个配置文件的格式,一个空格都可能导致配置出错</p>\n</blockquote>\n<p>启动service<br><code>systemctl start systemd-resolved.service</code></p>\n<p>设置为开机自启动<br><code>systemctl enable systemd-resolved.service</code></p>\n<p>重启<br><code>reboot</code></p>\n<p>试验网络<br><code>ping www.baidu.com</code></p>\n<p>检查ip地址是否是自己设置的静态ip<br><code>ip a</code></p>\n<p>做个快照<br><code>鼠标右键虚拟机--&gt;快照--&gt;拍摄快照</code></p>\n<h2 id=\"交换空间的设置\"><a href=\"#交换空间的设置\" class=\"headerlink\" title=\"交换空间的设置\"></a>交换空间的设置</h2><p>关闭交换空间<br><code>swapoff -a</code></p>\n<p>避免开机启动交换空间<br><code>vi /etc/fstab</code><br>修饰掉带swap的一行</p>\n<p>关闭防火墙<br><code>ufw disable</code></p>\n<p>关机<br><code>shotdown -h now</code></p>\n<p>开机做个快照<br><code>鼠标右键虚拟机--&gt;快照--&gt;拍摄快照</code></p>\n<h2 id=\"安装docker\"><a href=\"#安装docker\" class=\"headerlink\" title=\"安装docker\"></a>安装docker</h2><p>使用APT安装docker,方法来源:</p>\n<p><a href=\"https://funtl.com/zh/service-mesh-kubernetes/%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87.html#%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85-docker\" target=\"_blank\" rel=\"noopener\">https://funtl.com/zh/service-mesh-kubernetes/%E5%AE%89%E8%A3%85%E5%89%8D%E7%9A%84%E5%87%86%E5%A4%87.html#%E4%BD%BF%E7%94%A8-apt-%E5%AE%89%E8%A3%85-docker</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 更新软件源</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装所需依赖</span><br><span class=\"line\">sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 GPG 证书</span><br><span class=\"line\">curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\"><span class=\"meta\">#</span> 新增软件源信息</span><br><span class=\"line\">sudo add-apt-repository \"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu $(lsb_release -cs) stable\"</span><br><span class=\"line\"><span class=\"meta\">#</span> 再次更新软件源</span><br><span class=\"line\">sudo apt-get -y update</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 Docker CE 版</span><br><span class=\"line\">sudo apt-get -y install docker-ce</span><br></pre></td></tr></table></figure>\n<p>验证<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@yytubuntu:~# docker version</span><br><span class=\"line\">Client:</span><br><span class=\"line\"> Version:           18.09.6</span><br><span class=\"line\"> API version:       1.39</span><br><span class=\"line\"> Go version:        go1.10.8</span><br><span class=\"line\"> Git commit:        481bc77</span><br><span class=\"line\"> Built:             Sat May  4 02:35:57 2019</span><br><span class=\"line\"> OS/Arch:           linux/amd64</span><br><span class=\"line\"> Experimental:      false</span><br><span class=\"line\"></span><br><span class=\"line\">Server: Docker Engine - Community</span><br><span class=\"line\"> Engine:</span><br><span class=\"line\">  Version:          18.09.6</span><br><span class=\"line\">  API version:      1.39 (minimum version 1.12)</span><br><span class=\"line\">  Go version:       go1.10.8</span><br><span class=\"line\">  Git commit:       481bc77</span><br><span class=\"line\">  Built:            Sat May  4 01:59:36 2019</span><br><span class=\"line\">  OS/Arch:          linux/amd64</span><br><span class=\"line\">  Experimental:     false</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"配置加速\"><a href=\"#配置加速\" class=\"headerlink\" title=\"配置加速\"></a>配置加速</h2><p>方法来源地址:</p>\n<p><a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors?accounttraceid=9b8e4567-a62c-4723-95e0-6fcb5b44c87f\" target=\"_blank\" rel=\"noopener\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors?accounttraceid=9b8e4567-a62c-4723-95e0-6fcb5b44c87f</a></p>\n<p>逐条输入以下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\"></span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  \"registry-mirrors\": [\"https://veoukc4z.mirror.aliyuncs.com\"]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\"></span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\"></span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<p>查看是否配置成功</p>\n<p>输入<code>docker info</code>,出现以下信息就是配置成功了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Registry Mirrors:</span><br><span class=\"line\">https://veoukc4z.mirror.aliyuncs.com/</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用pip安装docker-compose\"><a href=\"#使用pip安装docker-compose\" class=\"headerlink\" title=\"使用pip安装docker-compose\"></a>使用pip安装docker-compose</h2><p>获取get-pip.py方法来源,安装这个是为了安装pip:</p>\n<p><a href=\"https://pip.pypa.io/en/stable/installing/\" target=\"_blank\" rel=\"noopener\">https://pip.pypa.io/en/stable/installing/</a></p>\n<p>获取get-pip.py命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py</span><br></pre></td></tr></table></figure>\n<p>要安装get-pip.py需要python,get-pip.py不能和本机自带的python相和谐,所以要自己安装python</p>\n<p>使用ppa安装python</p>\n<p>安装ppa</p>\n<p><code>sudo add-apt-repository ppa:deadsnakes/ppa</code></p>\n<p>安装python</p>\n<p><code>apt install python3.7</code></p>\n<p>安装get-pip.py</p>\n<p><code>python3.7 get-pip.py</code></p>\n<p>更改pip的镜像源</p>\n<p>更改方式的地址来源:</p>\n<p><a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/pypi\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/help/pypi</a></p>\n<p>使用临时镜像升级pip,提高网速</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br></pre></td></tr></table></figure>\n<p>升级pip到最新版本后进行配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> pip install pip -U</span><br><span class=\"line\"><span class=\"meta\">$</span> pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>\n<p>安装docker-compose</p>\n<p><code>$ pip install -U docker-compose</code></p>\n<p>删除get-pip.py</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> ls</span><br><span class=\"line\"><span class=\"meta\">$</span> rm -fr get-pip.py</span><br></pre></td></tr></table></figure>\n<p>关机</p>\n<p><code>$ reboot</code></p>\n<p>开机做个快照</p>\n<h2 id=\"克隆\"><a href=\"#克隆\" class=\"headerlink\" title=\"克隆\"></a>克隆</h2><p>克隆不是新创建一个虚拟机,而是在原有虚拟机上做改变,不会影响最初的base虚拟机</p>\n<p><code>鼠标右键--&gt;管理--&gt;克隆</code></p>\n<h2 id=\"导出OVF格式文件\"><a href=\"#导出OVF格式文件\" class=\"headerlink\" title=\"导出OVF格式文件\"></a>导出OVF格式文件</h2><p>导出的文件删除了DVD驱动,导入到新的VMware后要添加DVD驱动和镜像</p>"}],"PostAsset":[{"_id":"source/_posts/2019-06-08-冒泡排序法/BubbleSort.gif","slug":"BubbleSort.gif","post":"ckcm4u6v8001b54tn1i1457af","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-08-插入排序法/InsertSort.gif","slug":"InsertSort.gif","post":"ckcm4u6v9001g54tnnpne0fr8","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-11-SSM整合配置文件/ssm.png","slug":"ssm.png","post":"ckcm4u6vb001j54tnfzmepc8o","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-12-Maven/maven.jpg","slug":"maven.jpg","post":"ckcm4u6vd001n54tnavrv0zek","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-12-选择排序法/SelectSort.gif","slug":"SelectSort.gif","post":"ckcm4u6vh001x54tnxo08pors","modified":0,"renderable":0},{"_id":"source/_posts/2019-11-20-01-vue的入门/01.png","slug":"01.png","post":"ckcm4u6vq002g54tn5ofn8276","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-git配置多个ssh-key/addsshkey.jpg","slug":"addsshkey.jpg","post":"ckcm4u6w8003l54tnkytvd5m7","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-12-Vue中使用json-server/jsonServer.png","slug":"jsonServer.png","post":"ckcm4u6wa003n54tnqu5kedlx","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-02-Java操作ActiveMQ/queue01.png","slug":"queue01.png","post":"ckcm4u6wp004j54tnxf3bzrec","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu-Install-Oracle/oracle.png","slug":"oracle.png","post":"ckcm4u6ws004q54tn2lme16m6","modified":0,"renderable":0},{"_id":"source/_posts/2019-12-31-activiti入门01/holiday.jpg","slug":"holiday.jpg","post":"ckcm4u6w2003754tnag8cwvbx","modified":0,"renderable":0},{"_id":"source/_posts/2019-12-31-activiti入门01/persion.jpg","slug":"persion.jpg","post":"ckcm4u6w2003754tnag8cwvbx","modified":0,"renderable":0},{"_id":"source/_posts/2020-04-01-01-Mybatis逆向工程搭建/generator.png","slug":"generator.png","post":"ckcm4u6wi004254tn7i8ldsl0","modified":0,"renderable":0},{"_id":"source/_posts/2020-04-01-01-Mybatis逆向工程搭建/springbootgenerator.png","slug":"springbootgenerator.png","post":"ckcm4u6wi004254tn7i8ldsl0","modified":0,"renderable":0},{"_id":"source/_posts/2020-04-01-01-redis搭建/rediscluster.png","slug":"rediscluster.png","post":"ckcm4u6wj004654tnyrqs1rvu","modified":0,"renderable":0},{"_id":"source/_posts/2020-04-01-01-redis搭建/redisserver.png","slug":"redisserver.png","post":"ckcm4u6wj004654tnyrqs1rvu","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-24-GitFlow工作流/01.png","slug":"01.png","post":"ckcm4u6vm002854tn2dmf39ej","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-24-GitFlow工作流/02.png","slug":"02.png","post":"ckcm4u6vm002854tn2dmf39ej","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-24-GitFlow工作流/03.png","slug":"03.png","post":"ckcm4u6vm002854tn2dmf39ej","modified":0,"renderable":0},{"_id":"source/_posts/2019-11-20-05-webpack/01.png","slug":"01.png","post":"ckcm4u6vw002t54tnsm0sct3c","modified":0,"renderable":0},{"_id":"source/_posts/2019-11-20-05-webpack/02.png","slug":"02.png","post":"ckcm4u6vw002t54tnsm0sct3c","modified":0,"renderable":0},{"_id":"source/_posts/2019-11-20-05-webpack/03.png","slug":"03.png","post":"ckcm4u6vw002t54tnsm0sct3c","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解/db-activemq.png","slug":"db-activemq.png","post":"ckcm4u6wr004n54tnpne39a9t","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-数据库连接池.png","slug":"基于数据库的持久化-数据库连接池.png","post":"ckcm4u6wr004n54tnpne39a9t","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-03-ActiveMQ高级讲解/基于数据库的持久化-配置.png","slug":"基于数据库的持久化-配置.png","post":"ckcm4u6wr004n54tnpne39a9t","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/listener.jpg","slug":"listener.jpg","post":"ckcm4u6w3003c54tn18yct1ap","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/mylistener.jpg","slug":"mylistener.jpg","post":"ckcm4u6w3003c54tn18yct1ap","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/processvariable.jpg","slug":"processvariable.jpg","post":"ckcm4u6w3003c54tn18yct1ap","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-acticiti-任务分配和流程变量/uel.jpg","slug":"uel.jpg","post":"ckcm4u6w3003c54tn18yct1ap","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-activiti-组和网关/candidate.jpg","slug":"candidate.jpg","post":"ckcm4u6w5003f54tn9c5rnj2y","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-activiti-组和网关/exclusive.png","slug":"exclusive.png","post":"ckcm4u6w5003f54tn9c5rnj2y","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-activiti-组和网关/inclusive.png","slug":"inclusive.png","post":"ckcm4u6w5003f54tn9c5rnj2y","modified":0,"renderable":0},{"_id":"source/_posts/2020-01-02-activiti-组和网关/parallel.png","slug":"parallel.png","post":"ckcm4u6w5003f54tn9c5rnj2y","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/JMS的API图解.png","slug":"JMS的API图解.png","post":"ckcm4u6wo004g54tnx65qxnq0","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/activemq.png","slug":"activemq.png","post":"ckcm4u6wo004g54tnx65qxnq0","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/发布-订阅模式.png","slug":"发布-订阅模式.png","post":"ckcm4u6wo004g54tnx65qxnq0","modified":0,"renderable":0},{"_id":"source/_posts/2020-07-14-01-ActiveMQ简介及JMS/点对点模式.png","slug":"点对点模式.png","post":"ckcm4u6wo004g54tnx65qxnq0","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/01.png","slug":"01.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/02.png","slug":"02.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/03.png","slug":"03.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/04.png","slug":"04.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/05.png","slug":"05.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/06.png","slug":"06.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-25-Jenkins部署项目-项目运行02/07.png","slug":"07.png","post":"ckcm4u6vp002e54tnasnnf5w6","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/01.jpg","slug":"01.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/02.jpg","slug":"02.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/03.jpg","slug":"03.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/04.jpg","slug":"04.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/05.jpg","slug":"05.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/06.jpg","slug":"06.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/07.jpg","slug":"07.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/Ubuntu18-04-VM/aaa.jpg","slug":"aaa.jpg","post":"ckcm4u6wu004u54tn4wzhdwa2","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/01.png","slug":"01.png","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/02.jpg","slug":"02.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/03.png","slug":"03.png","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/04.jpg","slug":"04.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/05.jpg","slug":"05.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/06.jpg","slug":"06.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/07.png","slug":"07.png","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/08.jpg","slug":"08.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/09.jpg","slug":"09.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/10.jpg","slug":"10.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/11.png","slug":"11.png","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/12.jpg","slug":"12.jpg","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/13.png","slug":"13.png","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-22-Jenkins部署项目-项目运行/14.png","slug":"14.png","post":"ckcm4u6vk002354tng94cqwrx","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/01.png","slug":"01.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/02.png","slug":"02.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/03.png","slug":"03.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/04.png","slug":"04.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/05.png","slug":"05.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/06.png","slug":"06.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/07.png","slug":"07.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/08.png","slug":"08.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/09.jpg","slug":"09.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/10.jpg","slug":"10.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/11.jpg","slug":"11.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/12.jpg","slug":"12.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/13.png","slug":"13.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/14.png","slug":"14.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/15.jpg","slug":"15.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/16.png","slug":"16.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/17.png","slug":"17.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/18.png","slug":"18.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/19.jpg","slug":"19.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/20.jpg","slug":"20.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/21.png","slug":"21.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/22.png","slug":"22.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/23.png","slug":"23.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/24.jpg","slug":"24.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/25.png","slug":"25.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/26.jpg","slug":"26.jpg","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0},{"_id":"source/_posts/2019-06-20-Jenkins部署项目-环境搭建/27.png","slug":"27.png","post":"ckcm4u6vn002954tnv77xfqtf","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckcm4u6uc000154tnssgzh6d8","category_id":"ckcm4u6ui000454tng7z9lf3q","_id":"ckcm4u6up000d54tn07j276hf"},{"post_id":"ckcm4u6um000b54tnxz2hfh1o","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6us000i54tnilkvmzwv"},{"post_id":"ckcm4u6ug000354tn5egbtzk5","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6uv000m54tnpwo23auz"},{"post_id":"ckcm4u6up000g54tnfedabc2h","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6uy000p54tnag30qezz"},{"post_id":"ckcm4u6uj000654tn8plo083l","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6v0000u54tnfy1zpwca"},{"post_id":"ckcm4u6ur000h54tngnqevmoy","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6v1000x54tnxhb4fg1v"},{"post_id":"ckcm4u6uk000754tne50a34z7","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6v3001054tnkjdqmpqf"},{"post_id":"ckcm4u6uy000o54tn51jegmvn","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6v4001354tntqacyq21"},{"post_id":"ckcm4u6v0000t54tn4pwrvqk5","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6v6001654tnr4bnlzmf"},{"post_id":"ckcm4u6ul000854tnrwywcca5","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6v7001954tntp0fmn02"},{"post_id":"ckcm4u6uo000c54tn22ycx0pb","category_id":"ckcm4u6v2000y54tn6xjmj6zv","_id":"ckcm4u6v8001c54tn7mg90iqv"},{"post_id":"ckcm4u6v3001254tnl2dqc5bj","category_id":"ckcm4u6um000954tnmy8ey6zn","_id":"ckcm4u6va001h54tnuuy4igtj"},{"post_id":"ckcm4u6uu000l54tn6ub471gc","category_id":"ckcm4u6v4001454tnaqcunp0a","_id":"ckcm4u6vc001k54tni6tst0a9"},{"post_id":"ckcm4u6v8001b54tn1i1457af","category_id":"ckcm4u6ui000454tng7z9lf3q","_id":"ckcm4u6vd001o54tnv5cavr23"},{"post_id":"ckcm4u6v9001g54tnnpne0fr8","category_id":"ckcm4u6ui000454tng7z9lf3q","_id":"ckcm4u6vf001r54tnbyb699ly"},{"post_id":"ckcm4u6v1000w54tnpq3rla38","category_id":"ckcm4u6v8001d54tnactji3xn","_id":"ckcm4u6vh001w54tnsyeb06h9"},{"post_id":"ckcm4u6v2000z54tn21twiefn","category_id":"ckcm4u6v8001d54tnactji3xn","_id":"ckcm4u6vi001y54tnrwfvj037"},{"post_id":"ckcm4u6v5001554tnhkyh12ce","category_id":"ckcm4u6vf001s54tno4nw0wo0","_id":"ckcm4u6vl002554tn4s7i0lgm"},{"post_id":"ckcm4u6v6001854tnwsraehzo","category_id":"ckcm4u6v8001d54tnactji3xn","_id":"ckcm4u6vo002a54tnneac8n5l"},{"post_id":"ckcm4u6vb001j54tnfzmepc8o","category_id":"ckcm4u6vl002454tnu2x3tn41","_id":"ckcm4u6vq002f54tniqf87033"},{"post_id":"ckcm4u6vd001n54tnavrv0zek","category_id":"ckcm4u6vo002b54tn374eqsnf","_id":"ckcm4u6vu002o54tntoebqccp"},{"post_id":"ckcm4u6vq002g54tn5ofn8276","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6vv002s54tnxd4ssa6w"},{"post_id":"ckcm4u6vs002k54tnx55hjkq5","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6vx002u54tnci55frr3"},{"post_id":"ckcm4u6ve001q54tnk61dyis2","category_id":"ckcm4u6vo002b54tn374eqsnf","_id":"ckcm4u6vy002y54tnbg6dosva"},{"post_id":"ckcm4u6vt002m54tnlbzq0jkd","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6vz003054tnh6swrj17"},{"post_id":"ckcm4u6vv002r54tng87umvz3","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6w1003554tnnvivjvik"},{"post_id":"ckcm4u6vg001v54tnyvln5ov7","category_id":"ckcm4u6vu002n54tn7blk4tns","_id":"ckcm4u6w2003854tn29a751k8"},{"post_id":"ckcm4u6vw002t54tnsm0sct3c","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6w4003d54tn99oinrv7"},{"post_id":"ckcm4u6vy002x54tnltrf60tc","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6w5003g54tnsrk1ic5f"},{"post_id":"ckcm4u6vj002154tna4m4q696","category_id":"ckcm4u6vx002w54tnxfp31dv9","_id":"ckcm4u6w8003k54tn1v74bh7u"},{"post_id":"ckcm4u6vz002z54tnv8rfn3p4","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6w9003m54tnbynqt3ez"},{"post_id":"ckcm4u6w0003454tnslkjkql4","category_id":"ckcm4u6up000e54tn3yss0htm","_id":"ckcm4u6wa003p54tnrkn31d1p"},{"post_id":"ckcm4u6vk002354tng94cqwrx","category_id":"ckcm4u6w0003254tn7x3t4na7","_id":"ckcm4u6wc003t54tn7kiwnkmv"},{"post_id":"ckcm4u6vm002854tn2dmf39ej","category_id":"ckcm4u6w3003b54tnb4lxj2wz","_id":"ckcm4u6wf003x54tn5hkdqgpq"},{"post_id":"ckcm4u6w8003l54tnkytvd5m7","category_id":"ckcm4u6w3003b54tnb4lxj2wz","_id":"ckcm4u6wh004154tnhp2fhhsk"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","category_id":"ckcm4u6w0003254tn7x3t4na7","_id":"ckcm4u6wi004454tndx3w0npa"},{"post_id":"ckcm4u6vo002d54tnv4njketx","category_id":"ckcm4u6w3003b54tnb4lxj2wz","_id":"ckcm4u6wj004754tntc0bkxwt"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","category_id":"ckcm4u6w0003254tn7x3t4na7","_id":"ckcm4u6wk004954tnm0hmo7zo"},{"post_id":"ckcm4u6w2003754tnag8cwvbx","category_id":"ckcm4u6wi004354tnl6bk0hjc","_id":"ckcm4u6wn004f54tn3z99qtwy"},{"post_id":"ckcm4u6w3003c54tn18yct1ap","category_id":"ckcm4u6wi004354tnl6bk0hjc","_id":"ckcm4u6wq004l54tn6shoc8dw"},{"post_id":"ckcm4u6w5003f54tn9c5rnj2y","category_id":"ckcm4u6wi004354tnl6bk0hjc","_id":"ckcm4u6wu004s54tnb6eo4u7k"},{"post_id":"ckcm4u6w6003i54tnt289bphs","category_id":"ckcm4u6wi004354tnl6bk0hjc","_id":"ckcm4u6wv004w54tnr623je1f"},{"post_id":"ckcm4u6wa003n54tnqu5kedlx","category_id":"ckcm4u6wu004r54tnli2lojt9","_id":"ckcm4u6wx005154tnw20lixsh"},{"post_id":"ckcm4u6wb003s54tnkj7ejvl3","category_id":"ckcm4u6wu004r54tnli2lojt9","_id":"ckcm4u6wy005554tn69p1qqm3"},{"post_id":"ckcm4u6wc003v54tnitmqu82i","category_id":"ckcm4u6ww005054tnlz8phh1x","_id":"ckcm4u6wz005954tn3gwpps1k"},{"post_id":"ckcm4u6wg004054tnkne5aw6y","category_id":"ckcm4u6ww005054tnlz8phh1x","_id":"ckcm4u6wz005b54tnwhuffkhn"},{"post_id":"ckcm4u6wi004254tn7i8ldsl0","category_id":"ckcm4u6wz005854tnl7xqqtib","_id":"ckcm4u6x0005e54tn7rdq9pdu"},{"post_id":"ckcm4u6wj004654tnyrqs1rvu","category_id":"ckcm4u6wz005c54tntt4v6q8v","_id":"ckcm4u6x1005l54tnfsmy521p"},{"post_id":"ckcm4u6wk004854tn1ooigbji","category_id":"ckcm4u6wz005854tnl7xqqtib","_id":"ckcm4u6x2005o54tnviko1hze"},{"post_id":"ckcm4u6wl004c54tn2welyciv","category_id":"ckcm4u6x1005k54tnwf2lhy3z","_id":"ckcm4u6x3005s54tnfn034q27"},{"post_id":"ckcm4u6wm004d54tnnmmovtws","category_id":"ckcm4u6wz005c54tntt4v6q8v","_id":"ckcm4u6x3005u54tnqp6bwora"},{"post_id":"ckcm4u6wo004g54tnx65qxnq0","category_id":"ckcm4u6x3005r54tnazeply42","_id":"ckcm4u6x4005y54tnw3n7x91m"},{"post_id":"ckcm4u6wr004n54tnpne39a9t","category_id":"ckcm4u6x3005r54tnazeply42","_id":"ckcm4u6x6006554tntkx5bx8g"},{"post_id":"ckcm4u6ws004q54tn2lme16m6","category_id":"ckcm4u6x5006254tny9ck2pry","_id":"ckcm4u6x6006a54tnt87eb92g"},{"post_id":"ckcm4u6wu004u54tn4wzhdwa2","category_id":"ckcm4u6x6006754tnckq7sz1a","_id":"ckcm4u6x7006e54tneubu2e04"},{"post_id":"ckcm4u6wp004j54tnxf3bzrec","category_id":"ckcm4u6x3005r54tnazeply42","_id":"ckcm4u6xa006m54tneedkmena"},{"post_id":"ckcm4u6wp004j54tnxf3bzrec","category_id":"ckcm4u6x7006d54tn0cgo1bve","_id":"ckcm4u6xa006o54tnb8qzk6ur"},{"post_id":"ckcm4u6wp004j54tnxf3bzrec","category_id":"ckcm4u6x8006g54tnebek4bn3","_id":"ckcm4u6xa006q54tni323qnya"}],"PostTag":[{"post_id":"ckcm4u6uc000154tnssgzh6d8","tag_id":"ckcm4u6uj000554tnqu5rlip5","_id":"ckcm4u6uv000n54tnx56k4uco"},{"post_id":"ckcm4u6uc000154tnssgzh6d8","tag_id":"ckcm4u6um000a54tnm57cjzsy","_id":"ckcm4u6uz000q54tn4rlftl1w"},{"post_id":"ckcm4u6uc000154tnssgzh6d8","tag_id":"ckcm4u6up000f54tnocfp8evw","_id":"ckcm4u6v0000v54tnh3apr0ou"},{"post_id":"ckcm4u6ug000354tn5egbtzk5","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6v7001a54tninu423hc"},{"post_id":"ckcm4u6ug000354tn5egbtzk5","tag_id":"ckcm4u6uz000s54tnatiiooa0","_id":"ckcm4u6v9001e54tnaba549h4"},{"post_id":"ckcm4u6ug000354tn5egbtzk5","tag_id":"ckcm4u6v3001154tnwvcm3noh","_id":"ckcm4u6vb001i54tnw4xhal3j"},{"post_id":"ckcm4u6uj000654tn8plo083l","tag_id":"ckcm4u6v6001754tnztgu1pxn","_id":"ckcm4u6ve001p54tnjlat88uw"},{"post_id":"ckcm4u6uj000654tn8plo083l","tag_id":"ckcm4u6v9001f54tnuqeujftn","_id":"ckcm4u6vf001t54tnhn0j3bx4"},{"post_id":"ckcm4u6uk000754tne50a34z7","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6vk002254tndv8rjz6e"},{"post_id":"ckcm4u6uk000754tne50a34z7","tag_id":"ckcm4u6uz000s54tnatiiooa0","_id":"ckcm4u6vl002654tn6fh863zn"},{"post_id":"ckcm4u6ul000854tnrwywcca5","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6vs002j54tn8ylssfxx"},{"post_id":"ckcm4u6ul000854tnrwywcca5","tag_id":"ckcm4u6uz000s54tnatiiooa0","_id":"ckcm4u6vt002l54tna2d4wjfn"},{"post_id":"ckcm4u6ul000854tnrwywcca5","tag_id":"ckcm4u6vo002c54tnxw54mvxt","_id":"ckcm4u6vv002q54tnot55acy8"},{"post_id":"ckcm4u6vy002x54tnltrf60tc","tag_id":"ckcm4u6v9001f54tnuqeujftn","_id":"ckcm4u6w0003354tntfxdm27m"},{"post_id":"ckcm4u6um000b54tnxz2hfh1o","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6w2003654tnvefbwmwh"},{"post_id":"ckcm4u6um000b54tnxz2hfh1o","tag_id":"ckcm4u6uz000s54tnatiiooa0","_id":"ckcm4u6w3003a54tng37jychs"},{"post_id":"ckcm4u6um000b54tnxz2hfh1o","tag_id":"ckcm4u6vx002v54tn9cv019rv","_id":"ckcm4u6w4003e54tnt3ji9bxo"},{"post_id":"ckcm4u6uo000c54tn22ycx0pb","tag_id":"ckcm4u6w0003154tn1wqe90i6","_id":"ckcm4u6wb003r54tndjlvrk6y"},{"post_id":"ckcm4u6uo000c54tn22ycx0pb","tag_id":"ckcm4u6w3003954tnbv5ckylm","_id":"ckcm4u6wc003u54tnh5wl2cca"},{"post_id":"ckcm4u6uo000c54tn22ycx0pb","tag_id":"ckcm4u6w6003h54tn064kuo1u","_id":"ckcm4u6wg003z54tng3s22naq"},{"post_id":"ckcm4u6up000g54tnfedabc2h","tag_id":"ckcm4u6wa003q54tn399a01yt","_id":"ckcm4u6wp004i54tnw9po2b85"},{"post_id":"ckcm4u6up000g54tnfedabc2h","tag_id":"ckcm4u6wg003y54tnk0bah63b","_id":"ckcm4u6wq004m54tni2fph8l9"},{"post_id":"ckcm4u6up000g54tnfedabc2h","tag_id":"ckcm4u6wj004554tn8xx5bb1u","_id":"ckcm4u6ws004p54tn86pdv2iv"},{"post_id":"ckcm4u6up000g54tnfedabc2h","tag_id":"ckcm4u6wl004b54tnvvr0s6aj","_id":"ckcm4u6wu004t54tnzvx7gjxv"},{"post_id":"ckcm4u6ur000h54tngnqevmoy","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6ww004z54tn7zytk4w5"},{"post_id":"ckcm4u6ur000h54tngnqevmoy","tag_id":"ckcm4u6uz000s54tnatiiooa0","_id":"ckcm4u6wx005254tnpd3ny0x8"},{"post_id":"ckcm4u6ur000h54tngnqevmoy","tag_id":"ckcm4u6wv004v54tnkoq75i4a","_id":"ckcm4u6wx005454tnmtjl9ep4"},{"post_id":"ckcm4u6uu000l54tn6ub471gc","tag_id":"ckcm4u6ww004y54tn3qebwjq4","_id":"ckcm4u6x0005f54tn54qge8ka"},{"post_id":"ckcm4u6uu000l54tn6ub471gc","tag_id":"ckcm4u6wx005354tnhgw67al0","_id":"ckcm4u6x1005h54tnsrr1osyd"},{"post_id":"ckcm4u6uu000l54tn6ub471gc","tag_id":"ckcm4u6wy005754tndzuxltux","_id":"ckcm4u6x1005j54tniveo7p4d"},{"post_id":"ckcm4u6uu000l54tn6ub471gc","tag_id":"ckcm4u6wz005a54tnyy0xe3ob","_id":"ckcm4u6x2005m54tnt4pglqtb"},{"post_id":"ckcm4u6uy000o54tn51jegmvn","tag_id":"ckcm4u6wa003q54tn399a01yt","_id":"ckcm4u6x5005z54tnt18l4e75"},{"post_id":"ckcm4u6uy000o54tn51jegmvn","tag_id":"ckcm4u6x1005i54tn6kgres36","_id":"ckcm4u6x5006054tn8a1b7oj2"},{"post_id":"ckcm4u6uy000o54tn51jegmvn","tag_id":"ckcm4u6x2005n54tnqicrexpm","_id":"ckcm4u6x5006354tnfah4ovf8"},{"post_id":"ckcm4u6uy000o54tn51jegmvn","tag_id":"ckcm4u6x2005q54tnonzjhoqb","_id":"ckcm4u6x5006454tnyir7cdbx"},{"post_id":"ckcm4u6uy000o54tn51jegmvn","tag_id":"ckcm4u6x3005t54tned6jmhm0","_id":"ckcm4u6x6006854tnjq5qk94a"},{"post_id":"ckcm4u6v0000t54tn4pwrvqk5","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6x6006954tnnjuf48b5"},{"post_id":"ckcm4u6v0000t54tn4pwrvqk5","tag_id":"ckcm4u6x4005w54tn52djkdbu","_id":"ckcm4u6x7006c54tnzwsr95cp"},{"post_id":"ckcm4u6v1000w54tnpq3rla38","tag_id":"ckcm4u6x5006154tnzhe1go3l","_id":"ckcm4u6x9006i54tnypllhabi"},{"post_id":"ckcm4u6v1000w54tnpq3rla38","tag_id":"ckcm4u6x6006654tnnk45jgel","_id":"ckcm4u6x9006j54tnfrqeqzyh"},{"post_id":"ckcm4u6v1000w54tnpq3rla38","tag_id":"ckcm4u6x7006b54tnv25e3m0o","_id":"ckcm4u6xa006l54tng56pnxuu"},{"post_id":"ckcm4u6v1000w54tnpq3rla38","tag_id":"ckcm4u6x7006f54tnay2pibrn","_id":"ckcm4u6xa006n54tn6m5203w2"},{"post_id":"ckcm4u6v2000z54tn21twiefn","tag_id":"ckcm4u6x5006154tnzhe1go3l","_id":"ckcm4u6xb006s54tnf3adzan3"},{"post_id":"ckcm4u6v2000z54tn21twiefn","tag_id":"ckcm4u6x9006k54tnc5g8nasl","_id":"ckcm4u6xb006t54tnqsslowrd"},{"post_id":"ckcm4u6v2000z54tn21twiefn","tag_id":"ckcm4u6xa006p54tn980llsen","_id":"ckcm4u6xb006v54tn1jjtfps1"},{"post_id":"ckcm4u6v3001254tnl2dqc5bj","tag_id":"ckcm4u6us000k54tn2fwn3if4","_id":"ckcm4u6xb006w54tnl8tpgb3t"},{"post_id":"ckcm4u6v3001254tnl2dqc5bj","tag_id":"ckcm4u6xa006r54tn6behqqj9","_id":"ckcm4u6xc006y54tnnkda65hh"},{"post_id":"ckcm4u6v5001554tnhkyh12ce","tag_id":"ckcm4u6xb006u54tn8pgthviu","_id":"ckcm4u6xc007054tnnp6ztfe6"},{"post_id":"ckcm4u6v5001554tnhkyh12ce","tag_id":"ckcm4u6xc006x54tnydpmy5ba","_id":"ckcm4u6xc007154tn1hywcwr0"},{"post_id":"ckcm4u6v6001854tnwsraehzo","tag_id":"ckcm4u6x5006154tnzhe1go3l","_id":"ckcm4u6xe007554tnx33lrpq9"},{"post_id":"ckcm4u6v6001854tnwsraehzo","tag_id":"ckcm4u6x6006654tnnk45jgel","_id":"ckcm4u6xe007654tnrz089mzf"},{"post_id":"ckcm4u6v6001854tnwsraehzo","tag_id":"ckcm4u6xd007354tnpckxyov8","_id":"ckcm4u6xe007854tn9k8sqx21"},{"post_id":"ckcm4u6v8001b54tn1i1457af","tag_id":"ckcm4u6xd007454tnh9qkfm3c","_id":"ckcm4u6xe007a54tnyhaxg6vi"},{"post_id":"ckcm4u6v8001b54tn1i1457af","tag_id":"ckcm4u6xe007754tnbxdu4vax","_id":"ckcm4u6xf007b54tn025j0awe"},{"post_id":"ckcm4u6v9001g54tnnpne0fr8","tag_id":"ckcm4u6xe007954tnsfp7qhja","_id":"ckcm4u6xf007e54tnejtakid3"},{"post_id":"ckcm4u6v9001g54tnnpne0fr8","tag_id":"ckcm4u6xe007754tnbxdu4vax","_id":"ckcm4u6xf007f54tnk8uryyel"},{"post_id":"ckcm4u6vb001j54tnfzmepc8o","tag_id":"ckcm4u6xf007d54tneqkmri3f","_id":"ckcm4u6xg007i54tnuohdxtnu"},{"post_id":"ckcm4u6vb001j54tnfzmepc8o","tag_id":"ckcm4u6xg007g54tn99n7pihr","_id":"ckcm4u6xg007j54tndldz3l18"},{"post_id":"ckcm4u6vd001n54tnavrv0zek","tag_id":"ckcm4u6xg007h54tna8mm8qxm","_id":"ckcm4u6xh007m54tnj4hkdql9"},{"post_id":"ckcm4u6vd001n54tnavrv0zek","tag_id":"ckcm4u6xg007k54tn74lcs3xo","_id":"ckcm4u6xh007n54tnkzvs5cvt"},{"post_id":"ckcm4u6ve001q54tnk61dyis2","tag_id":"ckcm4u6xg007l54tn6izwlteu","_id":"ckcm4u6xi007q54tnxncnhtbj"},{"post_id":"ckcm4u6ve001q54tnk61dyis2","tag_id":"ckcm4u6xf007d54tneqkmri3f","_id":"ckcm4u6xi007r54tnwfkgeu0n"},{"post_id":"ckcm4u6vg001v54tnyvln5ov7","tag_id":"ckcm4u6xh007p54tnuch4iq13","_id":"ckcm4u6xi007u54tnxm5v5o3n"},{"post_id":"ckcm4u6vg001v54tnyvln5ov7","tag_id":"ckcm4u6xi007s54tn4g7dd0t1","_id":"ckcm4u6xi007v54tnft0oo2zq"},{"post_id":"ckcm4u6vj002154tna4m4q696","tag_id":"ckcm4u6xi007t54tnpxysz2sb","_id":"ckcm4u6xj007y54tnohrproex"},{"post_id":"ckcm4u6vj002154tna4m4q696","tag_id":"ckcm4u6xj007w54tn00jp5f8t","_id":"ckcm4u6xj007z54tnjykfxyqh"},{"post_id":"ckcm4u6vk002354tng94cqwrx","tag_id":"ckcm4u6xj007x54tnucqg2951","_id":"ckcm4u6xl008654tnc4rrbr9h"},{"post_id":"ckcm4u6vk002354tng94cqwrx","tag_id":"ckcm4u6xj008054tnnphg4pez","_id":"ckcm4u6xl008754tn9cz9xy3h"},{"post_id":"ckcm4u6vk002354tng94cqwrx","tag_id":"ckcm4u6xj008154tnx3isjgng","_id":"ckcm4u6xl008954tnonbammxk"},{"post_id":"ckcm4u6vk002354tng94cqwrx","tag_id":"ckcm4u6xk008254tnxbm5qmwa","_id":"ckcm4u6xl008a54tni6we1ug0"},{"post_id":"ckcm4u6vk002354tng94cqwrx","tag_id":"ckcm4u6xk008354tnvrpsabq5","_id":"ckcm4u6xm008c54tn2trxob1v"},{"post_id":"ckcm4u6vk002354tng94cqwrx","tag_id":"ckcm4u6xk008454tngxqkckve","_id":"ckcm4u6xm008d54tnstwkde0h"},{"post_id":"ckcm4u6vm002854tn2dmf39ej","tag_id":"ckcm4u6xk008554tnbyu5zlel","_id":"ckcm4u6xm008f54tn6z9fuvd4"},{"post_id":"ckcm4u6vm002854tn2dmf39ej","tag_id":"ckcm4u6xl008854tnas9u1fna","_id":"ckcm4u6xn008g54tn5uhhjlz2"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","tag_id":"ckcm4u6xj007x54tnucqg2951","_id":"ckcm4u6xp008m54tnw6w6pgy7"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","tag_id":"ckcm4u6xj008054tnnphg4pez","_id":"ckcm4u6xp008n54tnwml6eq5u"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","tag_id":"ckcm4u6xj008154tnx3isjgng","_id":"ckcm4u6xp008p54tnqpinc7wx"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","tag_id":"ckcm4u6xk008254tnxbm5qmwa","_id":"ckcm4u6xp008q54tntbespj8d"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","tag_id":"ckcm4u6xk008354tnvrpsabq5","_id":"ckcm4u6xq008s54tnarosa5xm"},{"post_id":"ckcm4u6vn002954tnv77xfqtf","tag_id":"ckcm4u6xk008454tngxqkckve","_id":"ckcm4u6xq008t54tnn39qmyhl"},{"post_id":"ckcm4u6vo002d54tnv4njketx","tag_id":"ckcm4u6x1005i54tn6kgres36","_id":"ckcm4u6xr008w54tn2g5bp2a6"},{"post_id":"ckcm4u6vo002d54tnv4njketx","tag_id":"ckcm4u6xp008o54tn6uuig0lb","_id":"ckcm4u6xr008x54tnco46sm7b"},{"post_id":"ckcm4u6vo002d54tnv4njketx","tag_id":"ckcm4u6xp008r54tnsb2wf0gy","_id":"ckcm4u6xr008z54tnm3rma363"},{"post_id":"ckcm4u6vo002d54tnv4njketx","tag_id":"ckcm4u6xq008u54tnpuiaezqq","_id":"ckcm4u6xr009054tnaxoilprl"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","tag_id":"ckcm4u6xj007x54tnucqg2951","_id":"ckcm4u6xt009654tnooipv38z"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","tag_id":"ckcm4u6xj008054tnnphg4pez","_id":"ckcm4u6xu009754tnqp2qj3zv"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","tag_id":"ckcm4u6xj008154tnx3isjgng","_id":"ckcm4u6xv009954tndvkrrsy1"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","tag_id":"ckcm4u6xk008254tnxbm5qmwa","_id":"ckcm4u6xv009a54tn3id51ivb"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","tag_id":"ckcm4u6xk008354tnvrpsabq5","_id":"ckcm4u6xw009c54tnhvmh88pl"},{"post_id":"ckcm4u6vp002e54tnasnnf5w6","tag_id":"ckcm4u6xk008454tngxqkckve","_id":"ckcm4u6xw009d54tnmusk1mkv"},{"post_id":"ckcm4u6vq002g54tn5ofn8276","tag_id":"ckcm4u6xt009554tn4zw53tsy","_id":"ckcm4u6xx009f54tn8trbwuuo"},{"post_id":"ckcm4u6vq002g54tn5ofn8276","tag_id":"ckcm4u6xu009854tn1uk6hhk5","_id":"ckcm4u6xx009g54tn9p2juqxt"},{"post_id":"ckcm4u6vs002k54tnx55hjkq5","tag_id":"ckcm4u6xv009b54tnmtsq6siq","_id":"ckcm4u6xx009h54tncxbeb0r3"},{"post_id":"ckcm4u6vs002k54tnx55hjkq5","tag_id":"ckcm4u6v9001f54tnuqeujftn","_id":"ckcm4u6xx009j54tnfvimk6bw"},{"post_id":"ckcm4u6vt002m54tnlbzq0jkd","tag_id":"ckcm4u6xx009e54tnka36xb5g","_id":"ckcm4u6xy009n54tn4c95cmw1"},{"post_id":"ckcm4u6vt002m54tnlbzq0jkd","tag_id":"ckcm4u6xx009i54tnmb3vdtph","_id":"ckcm4u6xz009o54tnnn7vl8u2"},{"post_id":"ckcm4u6vt002m54tnlbzq0jkd","tag_id":"ckcm4u6xy009k54tno9526lyn","_id":"ckcm4u6xz009q54tnv8264csl"},{"post_id":"ckcm4u6vt002m54tnlbzq0jkd","tag_id":"ckcm4u6xy009l54tnuqsmj2db","_id":"ckcm4u6xz009r54tnocimquzr"},{"post_id":"ckcm4u6vv002r54tng87umvz3","tag_id":"ckcm4u6xy009m54tnj8l2lrw9","_id":"ckcm4u6y0009t54tn4y0700mo"},{"post_id":"ckcm4u6vv002r54tng87umvz3","tag_id":"ckcm4u6xz009p54tnr8qu5jij","_id":"ckcm4u6y0009u54tnjmown2il"},{"post_id":"ckcm4u6vw002t54tnsm0sct3c","tag_id":"ckcm4u6v6001754tnztgu1pxn","_id":"ckcm4u6y1009x54tnjhwkf56p"},{"post_id":"ckcm4u6vw002t54tnsm0sct3c","tag_id":"ckcm4u6xz009s54tnj8cckoq3","_id":"ckcm4u6y1009y54tnrk9m8ast"},{"post_id":"ckcm4u6vw002t54tnsm0sct3c","tag_id":"ckcm4u6y0009v54tnucgikt7j","_id":"ckcm4u6y100a054tncglqcwjp"},{"post_id":"ckcm4u6vz002z54tnv8rfn3p4","tag_id":"ckcm4u6xv009b54tnmtsq6siq","_id":"ckcm4u6y200a354tn6douwekm"},{"post_id":"ckcm4u6vz002z54tnv8rfn3p4","tag_id":"ckcm4u6y1009z54tn8f5e5vmv","_id":"ckcm4u6y200a454tn80zg41bk"},{"post_id":"ckcm4u6vz002z54tnv8rfn3p4","tag_id":"ckcm4u6y100a154tneh58e3vz","_id":"ckcm4u6y300a654tn5hm2b4wb"},{"post_id":"ckcm4u6w0003454tnslkjkql4","tag_id":"ckcm4u6y200a254tnrrncpkwd","_id":"ckcm4u6y300a854tncqrom9ih"},{"post_id":"ckcm4u6w0003454tnslkjkql4","tag_id":"ckcm4u6y200a554tn72ezqlqw","_id":"ckcm4u6y300a954tnjmicst04"},{"post_id":"ckcm4u6w2003754tnag8cwvbx","tag_id":"ckcm4u6y300a754tnwovl64va","_id":"ckcm4u6y400ac54tnumz9zxyw"},{"post_id":"ckcm4u6w2003754tnag8cwvbx","tag_id":"ckcm4u6y300aa54tn6p7ydavn","_id":"ckcm4u6y400ad54tn6pfzf7hk"},{"post_id":"ckcm4u6w3003c54tn18yct1ap","tag_id":"ckcm4u6y300a754tnwovl64va","_id":"ckcm4u6y600ai54tnw3o21xwo"},{"post_id":"ckcm4u6w3003c54tn18yct1ap","tag_id":"ckcm4u6y300aa54tn6p7ydavn","_id":"ckcm4u6y600aj54tnvshiof9g"},{"post_id":"ckcm4u6w3003c54tn18yct1ap","tag_id":"ckcm4u6y500af54tn5adlkiq1","_id":"ckcm4u6y700al54tnweypylby"},{"post_id":"ckcm4u6w3003c54tn18yct1ap","tag_id":"ckcm4u6y500ag54tn7ixhcg8z","_id":"ckcm4u6y700am54tnnze5euda"},{"post_id":"ckcm4u6w5003f54tn9c5rnj2y","tag_id":"ckcm4u6y300a754tnwovl64va","_id":"ckcm4u6y800aq54tntkbyqiv3"},{"post_id":"ckcm4u6w5003f54tn9c5rnj2y","tag_id":"ckcm4u6y300aa54tn6p7ydavn","_id":"ckcm4u6y800ar54tnxrizj4jf"},{"post_id":"ckcm4u6w5003f54tn9c5rnj2y","tag_id":"ckcm4u6y700an54tnixiwhuws","_id":"ckcm4u6y900at54tno8ifpmwh"},{"post_id":"ckcm4u6w5003f54tn9c5rnj2y","tag_id":"ckcm4u6y800ao54tnf10u19or","_id":"ckcm4u6y900au54tn0fospj2c"},{"post_id":"ckcm4u6w6003i54tnt289bphs","tag_id":"ckcm4u6y300a754tnwovl64va","_id":"ckcm4u6ya00aw54tnuvmpijj4"},{"post_id":"ckcm4u6w6003i54tnt289bphs","tag_id":"ckcm4u6y300aa54tn6p7ydavn","_id":"ckcm4u6ya00ax54tn038ct71a"},{"post_id":"ckcm4u6w8003l54tnkytvd5m7","tag_id":"ckcm4u6xk008554tnbyu5zlel","_id":"ckcm4u6yb00b054tnrx83izun"},{"post_id":"ckcm4u6w8003l54tnkytvd5m7","tag_id":"ckcm4u6ya00ay54tn4ym3o0pk","_id":"ckcm4u6yb00b154tn2rhz81yk"},{"post_id":"ckcm4u6wa003n54tnqu5kedlx","tag_id":"ckcm4u6ya00az54tnwvimj7j2","_id":"ckcm4u6yc00b454tntjrbwpi7"},{"post_id":"ckcm4u6wa003n54tnqu5kedlx","tag_id":"ckcm4u6yb00b254tn11qk6lwj","_id":"ckcm4u6yc00b554tn00uo7cvw"},{"post_id":"ckcm4u6wb003s54tnkj7ejvl3","tag_id":"ckcm4u6ya00az54tnwvimj7j2","_id":"ckcm4u6yc00b754tn8y7x1evf"},{"post_id":"ckcm4u6wc003v54tnitmqu82i","tag_id":"ckcm4u6yc00b654tnvfy69avp","_id":"ckcm4u6yd00b954tnj9p360zz"},{"post_id":"ckcm4u6wg004054tnkne5aw6y","tag_id":"ckcm4u6yc00b854tncqwvbzdz","_id":"ckcm4u6yd00bc54tndhfaewa4"},{"post_id":"ckcm4u6wg004054tnkne5aw6y","tag_id":"ckcm4u6yd00ba54tnruosiw3r","_id":"ckcm4u6ye00bd54tnbiqzea1m"},{"post_id":"ckcm4u6wi004254tn7i8ldsl0","tag_id":"ckcm4u6yd00bb54tnckmsy2do","_id":"ckcm4u6ye00bg54tn4m66dses"},{"post_id":"ckcm4u6wi004254tn7i8ldsl0","tag_id":"ckcm4u6ye00be54tnun1273nk","_id":"ckcm4u6yf00bh54tnjl8hkk6r"},{"post_id":"ckcm4u6wj004654tnyrqs1rvu","tag_id":"ckcm4u6xj008154tnx3isjgng","_id":"ckcm4u6yf00bj54tnpph4jj7y"},{"post_id":"ckcm4u6wk004854tn1ooigbji","tag_id":"ckcm4u6yd00bb54tnckmsy2do","_id":"ckcm4u6yg00bm54tn0crf7672"},{"post_id":"ckcm4u6wk004854tn1ooigbji","tag_id":"ckcm4u6ye00be54tnun1273nk","_id":"ckcm4u6yg00bn54tnrefd18ng"},{"post_id":"ckcm4u6wl004c54tn2welyciv","tag_id":"ckcm4u6yg00bl54tn4osnv0tw","_id":"ckcm4u6yh00bq54tnyod2haxd"},{"post_id":"ckcm4u6wl004c54tn2welyciv","tag_id":"ckcm4u6yg00bo54tn05kunnva","_id":"ckcm4u6yh00br54tn5io9ssz4"},{"post_id":"ckcm4u6wm004d54tnnmmovtws","tag_id":"ckcm4u6xj008154tnx3isjgng","_id":"ckcm4u6yi00bt54tn3hc5ojh0"},{"post_id":"ckcm4u6wo004g54tnx65qxnq0","tag_id":"ckcm4u6yh00bs54tnzeylu74y","_id":"ckcm4u6yj00bw54tnxacbz0uc"},{"post_id":"ckcm4u6wo004g54tnx65qxnq0","tag_id":"ckcm4u6yi00bu54tncf7jz1g4","_id":"ckcm4u6yj00bx54tntynw7tse"},{"post_id":"ckcm4u6wr004n54tnpne39a9t","tag_id":"ckcm4u6yh00bs54tnzeylu74y","_id":"ckcm4u6yk00c154tn4mf80y8s"},{"post_id":"ckcm4u6wr004n54tnpne39a9t","tag_id":"ckcm4u6yj00by54tnrcj28jzx","_id":"ckcm4u6yk00c254tng9emdwlh"},{"post_id":"ckcm4u6wr004n54tnpne39a9t","tag_id":"ckcm4u6yj00bz54tn632gk7f5","_id":"ckcm4u6yl00c454tnhzogcnjk"},{"post_id":"ckcm4u6ws004q54tn2lme16m6","tag_id":"ckcm4u6yj00c054tnc5f9ngn9","_id":"ckcm4u6yl00c754tna48qvv8y"},{"post_id":"ckcm4u6ws004q54tn2lme16m6","tag_id":"ckcm4u6yk00c354tnxbu5dv0b","_id":"ckcm4u6yl00c854tng1fsqx7v"},{"post_id":"ckcm4u6ws004q54tn2lme16m6","tag_id":"ckcm4u6yl00c554tniw2vqvbb","_id":"ckcm4u6ym00ca54tnkfp3cnzk"},{"post_id":"ckcm4u6wu004u54tn4wzhdwa2","tag_id":"ckcm4u6yl00c654tn0jgbeqs4","_id":"ckcm4u6yn00cc54tnfu2hqksv"},{"post_id":"ckcm4u6wu004u54tn4wzhdwa2","tag_id":"ckcm4u6yk00c354tnxbu5dv0b","_id":"ckcm4u6yn00cd54tnkblwe29z"},{"post_id":"ckcm4u6wu004u54tn4wzhdwa2","tag_id":"ckcm4u6ym00cb54tntnx8ii2s","_id":"ckcm4u6yn00ce54tnwcm6e537"}],"Tag":[{"name":"算法","_id":"ckcm4u6uj000554tnqu5rlip5"},{"name":"练习","_id":"ckcm4u6um000a54tnm57cjzsy"},{"name":"分值","_id":"ckcm4u6up000f54tnocfp8evw"},{"name":"软件","_id":"ckcm4u6us000k54tn2fwn3if4"},{"name":"软件工程","_id":"ckcm4u6uz000s54tnatiiooa0"},{"name":"过程模型","_id":"ckcm4u6v3001154tnwvcm3noh"},{"name":"webpack","_id":"ckcm4u6v6001754tnztgu1pxn"},{"name":"vue","_id":"ckcm4u6v9001f54tnuqeujftn"},{"name":"指导实践","_id":"ckcm4u6vo002c54tnxw54mvxt"},{"name":"需求","_id":"ckcm4u6vx002v54tn9cv019rv"},{"name":"Windows","_id":"ckcm4u6w0003154tn1wqe90i6"},{"name":"工具盘","_id":"ckcm4u6w3003954tnbv5ckylm"},{"name":"镜像","_id":"ckcm4u6w6003h54tn064kuo1u"},{"name":"需求建模","_id":"ckcm4u6wa003q54tn399a01yt"},{"name":"场景","_id":"ckcm4u6wg003y54tnk0bah63b"},{"name":"信息","_id":"ckcm4u6wj004554tn8xx5bb1u"},{"name":"类","_id":"ckcm4u6wl004b54tnvvr0s6aj"},{"name":"敏捷开发","_id":"ckcm4u6wv004v54tnkoq75i4a"},{"name":"自动部署","_id":"ckcm4u6ww004y54tn3qebwjq4"},{"name":"虚拟机","_id":"ckcm4u6wx005354tnhgw67al0"},{"name":"JDK","_id":"ckcm4u6wy005754tndzuxltux"},{"name":"Mysql","_id":"ckcm4u6wz005a54tnyy0xe3ob"},{"name":"流程","_id":"ckcm4u6x1005i54tn6kgres36"},{"name":"行为","_id":"ckcm4u6x2005n54tnqicrexpm"},{"name":"模式","_id":"ckcm4u6x2005q54tnonzjhoqb"},{"name":"Web应用","_id":"ckcm4u6x3005t54tned6jmhm0"},{"name":"设计","_id":"ckcm4u6x4005w54tn52djkdbu"},{"name":"hexo","_id":"ckcm4u6x5006154tnzhe1go3l"},{"name":"next","_id":"ckcm4u6x6006654tnnk45jgel"},{"name":"分类","_id":"ckcm4u6x7006b54tnv25e3m0o"},{"name":"标签","_id":"ckcm4u6x7006f54tnay2pibrn"},{"name":"生成","_id":"ckcm4u6x9006k54tnc5g8nasl"},{"name":"本地图片","_id":"ckcm4u6xa006p54tn980llsen"},{"name":"体系结构","_id":"ckcm4u6xa006r54tn6behqqj9"},{"name":"CRM","_id":"ckcm4u6xb006u54tn8pgthviu"},{"name":"初始资料","_id":"ckcm4u6xc006x54tnydpmy5ba"},{"name":"小玩意","_id":"ckcm4u6xd007354tnpckxyov8"},{"name":"冒泡","_id":"ckcm4u6xd007454tnh9qkfm3c"},{"name":"排序","_id":"ckcm4u6xe007754tnbxdu4vax"},{"name":"插入","_id":"ckcm4u6xe007954tnsfp7qhja"},{"name":"SSM","_id":"ckcm4u6xf007d54tneqkmri3f"},{"name":"整合","_id":"ckcm4u6xg007g54tn99n7pihr"},{"name":"安装","_id":"ckcm4u6xg007h54tna8mm8qxm"},{"name":"配置","_id":"ckcm4u6xg007k54tn74lcs3xo"},{"name":"maven","_id":"ckcm4u6xg007l54tn6izwlteu"},{"name":"文件头","_id":"ckcm4u6xh007p54tnuch4iq13"},{"name":"版本","_id":"ckcm4u6xi007s54tn4g7dd0t1"},{"name":"shell","_id":"ckcm4u6xi007t54tnpxysz2sb"},{"name":"基础","_id":"ckcm4u6xj007w54tn00jp5f8t"},{"name":"gitlab","_id":"ckcm4u6xj007x54tnucqg2951"},{"name":"mysql","_id":"ckcm4u6xj008054tnnphg4pez"},{"name":"redis","_id":"ckcm4u6xj008154tnx3isjgng"},{"name":"nexus","_id":"ckcm4u6xk008254tnxbm5qmwa"},{"name":"jekins","_id":"ckcm4u6xk008354tnvrpsabq5"},{"name":"kubernetes","_id":"ckcm4u6xk008454tngxqkckve"},{"name":"git","_id":"ckcm4u6xk008554tnbyu5zlel"},{"name":"git flow","_id":"ckcm4u6xl008854tnas9u1fna"},{"name":"commit","_id":"ckcm4u6xp008o54tn6uuig0lb"},{"name":"图标","_id":"ckcm4u6xp008r54tnsb2wf0gy"},{"name":"ssh","_id":"ckcm4u6xq008u54tnpuiaezqq"},{"name":"MVVM","_id":"ckcm4u6xt009554tn4zw53tsy"},{"name":"vue base","_id":"ckcm4u6xu009854tn1uk6hhk5"},{"name":"css","_id":"ckcm4u6xv009b54tnmtsq6siq"},{"name":"过滤器","_id":"ckcm4u6xx009e54tnka36xb5g"},{"name":"计算属性","_id":"ckcm4u6xx009i54tnmb3vdtph"},{"name":"监听","_id":"ckcm4u6xy009k54tno9526lyn"},{"name":"方法","_id":"ckcm4u6xy009l54tnuqsmj2db"},{"name":"组件","_id":"ckcm4u6xy009m54tnj8l2lrw9"},{"name":"路由","_id":"ckcm4u6xz009p54tnr8qu5jij"},{"name":"webpack-dev-server","_id":"ckcm4u6xz009s54tnj8cckoq3"},{"name":"html-webpack-plugin","_id":"ckcm4u6y0009v54tnucgikt7j"},{"name":"less","_id":"ckcm4u6y1009z54tn8f5e5vmv"},{"name":"scss","_id":"ckcm4u6y100a154tneh58e3vz"},{"name":"$符号","_id":"ckcm4u6y200a254tnrrncpkwd"},{"name":"render","_id":"ckcm4u6y200a554tn72ezqlqw"},{"name":"工作流","_id":"ckcm4u6y300a754tnwovl64va"},{"name":"activiti","_id":"ckcm4u6y300aa54tn6p7ydavn"},{"name":"任务分配","_id":"ckcm4u6y500af54tn5adlkiq1"},{"name":"流程变量","_id":"ckcm4u6y500ag54tn7ixhcg8z"},{"name":"组任务","_id":"ckcm4u6y700an54tnixiwhuws"},{"name":"网关","_id":"ckcm4u6y800ao54tnf10u19or"},{"name":"ssh-key","_id":"ckcm4u6ya00ay54tn4ym3o0pk"},{"name":"json-server","_id":"ckcm4u6ya00az54tnwvimj7j2"},{"name":"Vue","_id":"ckcm4u6yb00b254tn11qk6lwj"},{"name":"Nginx","_id":"ckcm4u6yc00b654tnvfy69avp"},{"name":"反向代理","_id":"ckcm4u6yc00b854tncqwvbzdz"},{"name":"负载均衡","_id":"ckcm4u6yd00ba54tnruosiw3r"},{"name":"Mybatis","_id":"ckcm4u6yd00bb54tnckmsy2do"},{"name":"逆向工程","_id":"ckcm4u6ye00be54tnun1273nk"},{"name":"分布式案例","_id":"ckcm4u6yg00bl54tn4osnv0tw"},{"name":"Pagehelper","_id":"ckcm4u6yg00bo54tn05kunnva"},{"name":"ActiveMQ","_id":"ckcm4u6yh00bs54tnzeylu74y"},{"name":"JMS","_id":"ckcm4u6yi00bu54tncf7jz1g4"},{"name":"消息持久化","_id":"ckcm4u6yj00by54tnrcj28jzx"},{"name":"消息事务","_id":"ckcm4u6yj00bz54tn632gk7f5"},{"name":"ubuntu","_id":"ckcm4u6yj00c054tnc5f9ngn9"},{"name":"install","_id":"ckcm4u6yk00c354tnxbu5dv0b"},{"name":"oracle","_id":"ckcm4u6yl00c554tniw2vqvbb"},{"name":"ubuntu18.04","_id":"ckcm4u6yl00c654tn0jgbeqs4"},{"name":"VM","_id":"ckcm4u6ym00cb54tntnx8ii2s"}]}}